natural_command,bash_command
Look for any files that were modified 2-5 days ago,find -mtime +2 -mtime -5
Find all files with space in their names under current directory,find . -type f -name '* *'
find regular which case-insensitive name is foo in current directory,find . -iname foo -type f
Find all the files under /etc directory which are larger than 100k,find /etc -size +100k
Find all directories under current directory,find -type d
"search for the regular/normal file ""Dateiname"" in the entire file system","find / -type f -iname ""Dateiname"""
Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name,"find . -type d | sed -e 's/\.\///g' | awk '{print $1, $1}' | xargs chgrp"
Remove all files whose names start with spam-,find . -name 'spam-*' | xargs rm
Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\|#hyphenate' in their contents,find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\|#hyphenate' {} +
display all text files in current folder,"find . -name "".txt"""
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it",find /tmp/a1 -print0 | tar --null -T- -cvf dirall.tar
Find all files in the /home/ directory tree that are owned by bob,find /home -user bob
"Find ""file.xml"" under the current directory and change directory to its parent",cd `find . -name file.xml -exec dirname {} \;`
"Run 'git pull' and, if successful, 'git status' in every git repository in the current directory","find . -type d -name .git -exec sh -c ""cd \""{}\""/../ && pwd && git pull && git status"" \;"
display all directories in current folder excluding those that are present in .git folder,find . -iregex '.*/.git/.*' -prune -o -type d -name 'CVS'
Find the first file/directory under current directory and quit,find . ... -print -quit
"Find all files with the name ""MyProgram.c"" in the current directory and its sub-directories while ignoring the case of the file name.","find -iname ""MyCProgram.c"""
Search /usr/local recursively for directories whose names end with a number 0-9,find /usr/local -type d -name '*[0-9]'
"Set permissions to ug=rwx,o= for directories inside the ./default/files tree","find ./default/files -type d -exec chmod ug=rwx,o= '{}' \;"
"Set permissions of all directories under ""/opt/lampp/htdocs"" to 711",find /opt/lampp/htdocs -type d -exec chmod 711 {} \;
display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders,"find . \( -name skipdir1 -prune , -name skipdir2 -prune -o -name ""*.txt"" \) -print"
Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension,"find . -regextype sed -regex ""./test[0-9]\{2\}.txt"""
Find the password file between sub-directory level 2 and 4,find -mindepth 3 -maxdepth 5 -name passwd
"Search the current working directory tree for files whose names start with ""fileA_"" or ""fileB_""",find . -name 'fileA_*' -o -name 'fileB_*'
display all the html files in the current folder excluding search in the path ./foo,"find . -path ""./foo"" -prune -o -type f -name ""*.html"""
Get the number of regular files in the directory given as the bash script argument $1,find $1 -type f | wc -l
find the type & description of all the regular/normal files in the home folder,find /home -type f -print0 | xargs -0 file
display all directories in current folder,find . -type d -print0
"display a long listing of all the files in the current folder in sorted order, which are bigger than 10KB",find . -size +10k -exec ls -ls {} \+ | sort -nr
"Prints list of folders containing '.git', searching recursively from a current folder.",find . -name '.git' | xargs -n 1 dirname
find all the files ending with undo in the current folder and calculate the total size of these files,"find . -name ""*.undo"" -ls | awk '{total += $7} END {print total}'"
find the file with inode $inum under the current directory and delete it,find . -inum $inum -exec rm {} \;
Search for the wp-config.php file in /var/www and one level below,find /var/www/ -name wp-config.php -maxdepth 2
"find all the "".flac"" files in the current folder and convert them to mp3 with 128k bit rate","find -name ""*.flac"" -exec ffmpeg -i {} -acodec libmp3lame -ab 128k {}.mp3 \;"
Find all directories under ${1:-.} directory without descending into any sub-directories,find ${1:-.} -mindepth 1 -maxdepth 1 -type d
Find all the .mp3 files in the music folder recursively and pass them to the ls command,"find ./music -name ""*.mp3"" -print0 | xargs -0 ls"
Change the permissions of the current directory and all its subdirectories to 755.,find . -type d -exec chmod 755 {} \;
search the file myfile.txt in the current folder,find . -name myfile.txt -print
Search the current directory tree for executable regular files,find . -executable -type f
"Remove the ""^M"" characters from all *.ext files under /home directory","find /home -type f -name ""*.ext"" -exec sed -i -e ""s/\r$//g"" {} \;"
Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree,"find . -name ""*.txt"" -print0 |xargs -0 du -ch"
"Search the files residing in the current directory tree whose names contain ""bills"" for ""put""","find . -name '*bills*' -exec grep -H ""put"" {} \;"
find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory,find /media/New\ Volume/bhajans -maxdepth 1 -type d | xargs -0 mkdir -p
Find the total size of *.jpg files within the current directory tree,find . -type f -iname '*.jpg' -print0 | du -c --files0-from=-
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar,"find .|grep ""FooBar""|yargs -l 203 cp --after ~/foo/bar"
Find all files/directories under '/usr' directory tree that have not been modified in the last 356 days counting days from today,find /usr -mtime +356 -daystart
Move all files from the `sourceDir' directory tree to the `destDir' directory,find sourceDir -mindepth 1 -print0 | xargs -0 mv --target-directory=destDir
List all .gif files in the current directory tree,find . -name *.gif -exec ls {} \;
display ten files in the tmp directory,find /tmp  | head
find all files without 777 permision,find / -type f ! perm 777
"Search the /root directory recursively for files named ""FindCommandExamples.txt""",find /root -name FindCommandExamples.txt
Print the first 10 files or directories found in the /tmp directory tree by `find',find /tmp  | head
Find files that were modified in less than 1 minute ago,find / -mmin -1
Search for all files owned by user www-data that are not larger than 100kb,find -user www-data -not -size +100k
Find all files/directories case insensitively containing 'xt' in their names under '/etc' directory tree,find /etc -iregex '.*xt.*'
Print the list of .txt files under and below the current directory,find . -name '*.txt' -print0|xargs -0 -n 1 echo
search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder,find ./ -type f -exec sed -i '' 's#NEEDLE#REPLACEMENT#' *.php {} \;
display a long listing of all the regular/normal files in the current folder,find . -type f -ls
Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.,"find . -name ""a"" -type d | xargs rmdir"
List all files in the current directory tree that were last modified yesterday or later,find -newermt yesterday -ls
Remove all files on the system that have been changed within the last minute,find / -newerct '1 minute ago' -print | xargs rm
Search for regular files of the grooup 'users' in the file system,find /  -type f -group users
Delete all files with ' .o' extension in the entire filesystem,"find project / src / -name ""* .o"" -exec rm -f {} \;"
find all text files in user/directory/ which have been modified today and display the last line of these files,"find /user/directory/ -name ""*txt"" -mtime 0 -type f -printf '%p: ' -exec tail -1 {} \;"
find all the files in the current folder that have been accessed in today,find -atime 0
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar,"find . | grep ""FooBar"" | tr \\n \\0 | xargs -0 -I{} cp ""{}"" ~/foo/bar"
"Find all files/directories under current directory that match the case insensitive glob pattern {EA,FS}_*","find . -iname ""{EA,FS}_*"""
search for a word in all the files in the current directory (case insensitive search),find . -type f -exec grep 'needle' {} \;
Search /usr/bin for regular files that have been modified within the last 10 days,find /usr/bin -type f -mtime -10
Search the entire file hierarchy for files larger than 100 megabytes and delete them.,find / -size +100M -exec /bin/rm {} \;
"Remove all files with names like ""vmware-*.log"" from the current directory tree","find . -name ""vmware-*.log"" -exec rm '{}' \;"
Find all thumb.png files in the temps/ directory tree,"find temps/ -name ""thumb.png"""
List all regular files under current directory,find . -type f -print | xargs -n 1
"Search for files with ""sitesearch"" in their names and ""demo"" in their path names",find . -iname '*sitesearch*' | grep demo
Find all *.jpg files under current directory and print only unique names,find . -name \*.jpg -exec basename {} \; | uniq -u
"show all the files in the current folder which has the word ""ITM""",find . -name ‘*ITM*’
display the directory name along with the modified time for all the files /var,"find /var -maxdepth 2 -type d -exec stat  -c ""%n %y"" {} \;"
Find files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days and print them with null character appended to their paths,"find ""${DIR_TO_CLEAN?}"" -type f -mtime +${DAYS_TO_SAVE?} -print0"
"For each .def file under the current directory, create an empty .def.out file with current timestamp.",find . -name '*.def' | sed 's/\(.*\)/\1.out/' | xargs touch
Find all the regular files under current directory tree that have not been modified in the last 31 days and delete them,find . -type f -mtime +31 -print0 | xargs -0 -r rm -f
"find all the "".c"" files in the folder /home/david which have been modified in the last 48 hours",find /home/david -mtime -2 -name '*.c'
Look for files whose names begin with letters a-j,"find  / -name ""[a-j]*"" -print"
Find all files under /path/to/dir and change their permission to 644,find /path/to/dir -type f -exec chmod 644 {} +
List all files under and below the directory given as variable $ARCH1,find $ARCH1 -ls
Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days.,find . -atime +30 -print
Find all files newer than httpd.conf under and below the current directory,find . -newer httpd.conf
Find user daniel's files of type jpeg without `autumn' in the name,find . -user daniel -type f -name *.jpg ! -name autumn*
"Print the names and sizes of regular files residing in the ""dir"" directory tree","find dir -type f -printf ""f %s %p\n"""
Search the /etc/apache-perl directory tree for files newer than /etc/apache-perl/httpd.conf,find /etc/apache-perl -newer /etc/apache-perl/httpd.conf
Look in /home/dm and below for files with 'uniform' in their names,"find /home/dm -name ""*uniform*"""
"Search the current directory tree for regular files whose names end in "".shtml"" or "".css""","find -type f -regex "".*/.*\.\(shtml\|css\)"""
"Print line, word and byte count for each file recursively and also show the total counts",wc `find`
find all the files that have been modified in the last 1 day ago,find -mtime -1
Find all *.m4a files under /home/family/Music directory and convert them to ogg,find /home/family/Music -name '*.m4a' -print0 | xargs -0 -i ffmpeg -i {} -acodec libvorbis -aq 6 -vn -ac 2 {}.ogg
display all the text files in the current folder and discard all the errors.,"find -name ""*.txt"" 2>>/dev/null"
"Print the list of all regular files on the system using ""echo""",find / -type f -exec echo {} \;
Find files/directories named blah  under current directory,find ./ -iname blah
find all the text files in the file system and search only in the disk partition of the root.,"find / -mount -name ""*.txt"""
"search for the directory ""uploads"" in current folder and change the permission of the folder and all the files to 755",find . -type d -name 'uploads' -print0 | xargs -0 chmod -R 755
Find all directories under media/ directory and change their permission to 700,find media/ -type d -exec chmod 700 {} \;
Find files/directories named 'foo.bar' under './dir1' and './dir2' directory tree,find ./dir1 ./dir2 -name foo.bar -print
find all executable files in /home directory.,find  /home -type f -perm /a=x
Find command will display top 5 small files from curent directory . most probably you will get ZERO  bytes files .,find . -type f -exec ls -s {} \; sort -n |head -5
find all the files in current folder which have been updated in the last 60 minutes,find . -mmin -60
Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size.,find . -atime +7 -o -size +20480 -print
"Remove the regular files from the current directory that were last modified on November, 22","find -maxdepth 1 -type f -newermt ""Nov 22"" \! -newermt ""Nov 23"" -delete"
Find all *foo files/directories under current directory,find . -name '*foo'
Remove trailing whitespaces in .txt files from the current directory tree,find . -type f -name '*.txt' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
Print a summary of the command-line usage of find,find --help
find all files that do not have read permission to all,find . -type f ! -perm -444
Find all SUID files in entire file system,find / -perm +u=s
find all the text files in the current folder and display their Permissions and size along with their name,"find . -name ""*.txt"" -printf ""%M %f \t %s bytes \t%y\n"""
find all normal/regular files in the current directory,find . -type f -print
"Finds string with text ""string to be searched"" in any cased files like ""*.cs"" recursively in a current folder.","find ./ -type f -iname ""*.cs"" -print0 | xargs -0 grep ""content pattern"""
Find all the files called FindCommandExamples.txt of owner root,find / -user root -name FindCommandExamples.txt
Find files under /usr that are the same age or older than file `FirstFile',find /usr ! -newer /FirstFile -print
"Search the /home/sdt5z/tmp directory tree for files named ""accepted_hits.bam""","find /home/sdt5z/tmp -name ""accepted_hits.bam"""
Find all hidden files in the current directory,"find . -type f -name "".*"""
Find recursively the latest modified file in the current directory,"find . -type f | sed 's/.*/""&""/' | xargs ls -E | awk '{ print $6,"" "",$7,"" "",$9 }' | sort | tail -1"
"Copy all "".xml"" files in the current directory tree to ""/new/parent/dir"" preserving the directory hierarchy",find . -name \*.xml -print0 | cpio -pamvd0 /new/parent/dir
find all jpg files in current folder,"find . -type f -name ""*.JPG"""
display all regular/normal files in the current folder ending with the word ummy,find -type f -name *ummy
"display the base name of all the "".NEF"" files in the current folder","find . -name ""*.NEF"" -exec basename \{\} .NEF \;"
"Search the current directory recursively for files containing ""needle text""","find . -type f -print0 | xargs -0 grep -I ""needle text"""
"Change string ""searc"" to ""replace"" in all files in directory hierarchy",find . -type f -exec sed -i 's/searc/replace/g' {} \;
find all the files in the current folder that have been modified exactly 24*3 hours ago,find ./ -mtime 3
Search the current directory tree for hidden files,find .*
display all the regular files in the current folder that are bigger than 10KB,find . -type f -size +10k
change the group of all the files in the folder /u/netinst/ to staff,find /u/netinst -print | xargs chgrp staff
"Find all files called ""INPUT.txt"" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak",find . -type f -name INPUT.txt -print0 | xargs -0 -I {}  sed -i.bak '/^#/d' {}
"Remove the .jpg files from the current directory whose names match regular expression "".+-[0-9]+x[0-9]+\.jpg""","find . -type f -regex "".+-[0-9]+x[0-9]+\.jpg"" -exec rm -rf {} \;"
"set alias ""ff"" for command ""find . -name $1""",alias ff=find . -name $1
Find all file which have more the 2 hard link,find .  -type f -links +2 -exec ls -lrt {} \;
Remove trailing whitespaces in TXT files from the current directory tree,"find . -iname '*.txt' -type f -exec sed -i '' 's/[[:space:]]\{1,\}$//' {} \+"
"Search for file names with ""bad"" characters in the current directory and delete the files.","find . -name '*[+{;""\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;"
"Find all files changed on the 29th of September, 2008, starting from the current directory",find . -type f -newerct 2008-09-29 ! -newerct 2008-09-30
"Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts",find . -name \*.java | tr '\n' '\0' | xargs -0 wc
search for the word LOG in all the files in the folder ~/jsmith,find ~jsmith -exec grep LOG '{}' /dev/null \; -print
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins,"find ./ -name ""*.dat"" -type f -cmin +60 -exec basename {} \;"
"Remove the .jpg files from the current directory whose names match regular expression "".+-[0-9]+x[0-9]+\.jpg""","find . -type f -regex "".+-[0-9]+x[0-9]+\.jpg"" | xargs rm"
display all the regular files in the current folder that are exactly 10KB,find . -type f -size 10k
find all read me files in a folder,find /usr/share/doc -name README
rename all the png files to jpg files in the current fodler,"find . -name ""*.png"" -print0 | sed 'p;s/\.png/\.jpg/' | xargs -0 -n2 mv"
"search for the word ""slrn"" in all the files in the folder $HOME/html/andrews-corner",find $HOME/html/andrews-corner -exec grep -q 'slrn' '{}' \; -print
Find and show all files in the current directory tree that are smaller than 500 kB,find . -size -500k
Convert *.au files to *.wav files using `sox',"find -type f -name '*.au' | awk '{printf ""sox %s %s\n"",$0,$0"".wav"" }' | bash"
"Prints $m latest modified files within the $d folder, using $f format for printing timestamp.","find ""$d"" -type f -printf ""%T@ :$f %p\n"" | sort -nr | cut -d: -f2- | head -n""$m"""
Find all files under $d directory  that are executable by owner and print only their names,find $d -maxdepth 1 -perm -100 -type f | sed 's#.*/##'
Find every JavaScript file in the wordpress directory tree,find wordpress -name '*js'
Filnd all files in root directory with 777 permission and change permision 644  with chmod commad .,find / -type f -perm 777 -print -exec chmod 644 {} \;
delete all the empty directories in the current folder,find . -type d -empty -exec rmdir {} \;
change permissions of all the script files in a directory,"find /home/john/script -name ""*.sh"" -type f -exec chmod 644 {} \;"
force remove all the directories with the name logs in the folder /var/www,find /var/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \;
"Find all files named ""file.ext"" in the current directory tree and print the path names of the directories they are in","find . -name ""file.ext"" -execdir pwd ';'"
Find one file or directory in the current directory whose name matches the pattern given as a variable $a,"find . -maxdepth 1 -name ""$a"" -print -quit"
find files in current directory that names are game,find . -name game
Rename all *.txt regular files in the current directory tree to *.abc,find . -type f -iname '*.txt' -print0 | xargs -0 rename .txt .abc
find the type of all the regular/normal files in the current folder,find . -type f | xargs file
find all txt files under the current folder except ./misc folder,find . -path ./misc -prune -o -name '*.txt' -print
Find files/directories named<filetype> under current directory which were accessed less than 5 days ago,"find -name ""<filetype>"" -atime -5"
Find all *.py  files/directories under dir directory ignoring .git path,find dir -not -path '.git' -iname '*.py'
Compress .log files in /var and below on an individual basis,find /var -iname \*.log -exec bzip {} \;
Return all of the .conf files in Pat's user folder and subdirectories,"find /home/pat -iname ""*.conf"""
find all CSS files that do something with your HTML ID #content,"find . -name ""*.css"" -exec grep -l ""#content"" {} \;"
search for files which are writable by both their owner and their group,find . -perm -220
display a list of all regular/normal files in the current folder,find . -type f -ls
"search for the regular/normal file ""myfile"" in the current folder excluding search in the paths of ""work"" and ""home"" sub directories",find .  \  -prune -o -name myfile -type f -print
Print your/dir if it's empty,find your/dir -prune -empty
Replaces any occurences of '*favicon.ico*' in any subfolder with file '/root/favicon.ico'.,find . | grep favicon\.ico | xargs -n 1 cp -f /root/favicon.ico
display all pdf files in the current folder,find . -name *.pdf
Find files that are 100k,find -size 100k
Find all empty files in the current directory and delete them,find . -type f -maxdepth 1 -empty -print0 | xargs -0 /bin/rm
"replace the word foo to bar in the current folder in all the regular/normal files containing the word ""baz"" in their name (does not update the file)","find . -type f -name ""*baz*"" -exec sed -i 's/foo/bar/g' {} +"
Find all files owned by group `group2',find / -group group2
List all files/directories under current directory,find . -print
"display all directories in the folder ""$ORIG_DIR""","find ""$ORIG_DIR"" -name ""*"" -type d"
search for a word in all the php files in the current folder and display the count of all matching lines.,find . -name \*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test' | wc -l
"Search all files in the current directory tree for ""SearchString"", ignoring .html files and skipping .svn directories",find . \ | xargs -d '\n' grep -Hd skip 'SearchString'
list all regular files which path is not dir1 or dir2,"find ! -path ""dir1"" ! -path ""dir2"" -type f"
Generate UUIDs for the files from the current directory tree,"find . -exec printf '%s\t' {} \; -exec uuidgen \; | awk -F '\t' '{ sub; print $2, $1 }' | sort -k2"
change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file,find -gid 1000 -exec chown -h :username {} \;
Find all hidden files under /tmp,"find /tmp -type f -name "".*"""
Remove all *.tmp files from the /tmp directory tree,"find /tmp -name ""*.tmp"" -print0 | xargs -0 rm"
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.,find . -name 'cache*' -depth -exec rm {} \;
find all the files in the home folder which have been modified after a file,find $HOME -newer ~joeuser/lastbatch.txt
"Search the *.pdf files from directory tree PDFs/ for text ""perry sound"", ignoring the case","find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext ""{}"" - | grep -i --with-filename --label=""{}"" --color ""perry sound""' \;"
"Create a symbolic link in the current directory for each file under the directories matching ""../[12][0-9][0-9]""",find ../[12][0-9][0-9][0-9] -type f -exec ln -s {} \;
Find all files/directories with permission $permissions under $directory directory tree,"find ""$directory"" -perm ""$permissions"""
Counts all files in a current folder and subfolders.,find -type f -printf '\n' | wc -l
Search the .java files from the current directory tree for TODO lines,"find . -name ""*.java"" -exec grep -i -n TODO {}  \;"
Recursively finds and compresses all files in a current folder.,find . -type f -exec bzip2 {} +
display all sqlite files in the current directory along with their timestamp,"find ./ -name ""*.sqlite"" -printf '%Tc %p\n'"
"Deletes folder like /tmp/*/* or deeper, older than +7 days if they don`t contain files or other folders.",find /tmp/*/* -mtime +7 -type d -exec rmdir {} \;
"Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string ""debug (""","find /srv/www/*/htdocs/system/application/ -name ""*.php"" -exec grep -H ""debug ("" {} +"
Search the entire file hierarchy for files ending in '.old' and delete them.,"find / -name ""*.old"" -exec /bin/rm {} \"
change the permission of all directories in current folder to 755.,find . -type d -exec chmod 755 {} \;
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT_LOCATION} to ${OUTPUT_LOCATION},find $INPUT_LOCATION -name '*.pdf.marker' | xargs -i bash -c 'mv ${0%.marker} $0 $1' {} $OUTPUT_LOCATION
List the files in the /etc directory tree containing text '128.200.34.',find /etc -type f -print | xargs grep -il '128\.200\.34\.'
Print a sorted list of the extensions of the regular files from the current directory tree with counts per extension,find . -type f | perl -ne 'print $1 if m/\.$/' | sort | uniq -c | sort -n
Find all catalina* files/directories under current directory,find -name 'catalina*'
Fix files to default permissions 644,find . -type f -exec chmod 644 {} \;
"search for ""flac"" files in current folder using regular expressions","find ./ -regex ""./cmn-.\.flac"""
Find files and directories owned by xuser1 and change their ownership to user2,find . -user xuser1 -exec chown -R user2 {} \;
Find files whose data was modified within the given days of the month,find ./ -daystart -mtime -10 -and -mtime +1
Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree,find -type f |  grep -P '\w+-\d+x\d+\.\w+$' | xargs rm
Find the empty directories and files under current directory,find -empty
"Create an empty file ""foo"" in each directory under the current directory containing a file named ""bar"".","find -name ""bar"" -execdir touch foo \;"
"Find all files/directories in entire file system that are owned by ""syslog"" user",find / -user syslog
Create a script to monitor system file changes and send an alert if any are detected.,"#!/bin/bash

changed_files=$(find / -xdev -mtime -1)
if [ -n ""$changed_files"" ]; then
    echo ""System file changes detected.""
    # Send alert here
fi"
Search for 'example' in all regular files from the current directory,find -maxdepth 1 -type f | xargs grep -F 'example'
Change the permissions of all regular files whose names end with .mp3 in the directory tree /var/ftp/mp3,find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \;
"Find files/directories under current directory matching the posix-egrep type regex "".+\.$"" in their names","find . -regextype posix-egrep -regex "".+\.$"""
search for files in the current folder using name patterns,find . -name '[mM][yY][fF][iI][lL][eE]*'
find all jar files in current folder and search for a file in all these jar's and display the jar names along with searched file,"find . -name ""*.jar"" -print -exec jar -tf {} \; | awk '{ifjar=$1;else ifarr[jar]=$1;}END{for{print i "" contains "" arr[i]}}'"
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . \( \( -path ""\.?.*"" -type d \) -o -path ""*normal*"" \) -prune -o \( -type f \) -print"
List all *.txt files/directories under current directory,"find . -name ""*.txt"" -print"
"Compress all files in the ""$FILE"" directory tree that were last modified 30 days ago and have not already been compressed with gzip",find $FILE -type f -not -name '*.gz' -mtime 30 -exec gzip {} \;
Print content of all files found regarding seach options '[whatever]',find [whatever] -print0 | xargs -0 cat
display a list of all java or jsp files in the current folders,find . \( -name '*jsp' -o -name '*java' \) -type f -ls
Search the entire file hierarchy for files ending with '~' and print all matches except for those with '/media' in their pathnames.,"find / -name ""*~"" | grep -v ""/media"""
Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case.  Print the name of the file where a match is found.,"find . -type f -name ""*.java"" -exec grep -il string {} \;"
search for a word in all the files in the current directory,find . -exec grep chrome {} \;
Search the current directory tree for regular files changed on the 10th of September,find ./ -type f -ls |grep '10 Sep'
Find all your text files,"find . -name ""*.txt"" -print"
Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename,find . -exec env f={} somecommand \;
Search for all files in the /home directory tree that have the same inode number,find /home -xdev -inum 2655341
Find out if there are any files on the system owned by user `account',find / -path /proc -prune -o -user account -ls
Remove sess_* files that were modified more than 2 days ago,find sess_* -mtime +2 -exec rm {} \;
Find all files matching pattern '.#*' in the current directory tree,find -iname '.#*'
Remove all files containing 'sample'  in their names under '/home/user/Series' directory tree,"/usr/bin/find /home/user/Series/ -iname ""*sample*"" -exec rm {} \;"
Search for 'class Pool' in all *.java  files under current directory,find -iname '*.java'|xargs grep 'class Pool'
"Search the current directory tree for regular files that contain ""string""",find . -type f -print0 | xargs -0 grep string
Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories,find $1 -perm -u+w -exec chmod g+w {} \;
find all the files that have been modified today,find . -type f -mtime 0
"find all the files ending with "".coffee"" in the current folder and search for the first occurence of the word ""re"" in each line",find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \;
Search /var for files matching regular expression '.*/tmp/.*[0-9]*.file',find /var -regex '.*/tmp/.*[0-9]*.file'
search  character special files called ' backup '  from  /usr directory downwards and print them .,find /usr -type c -name backup -print
Find all *.jpg files and copy them to /,find / -type f -name *.jpg  -exec cp {} . \;
Show find's version,find --version
Find the file whose inode number is 1316256,find . -inum 1316256
display all symbolic links in current folder,"find . -lname ""*"""
List all .svn files/directories under current directory,find . -name .svn -exec ls {} \;
Display the sizes and filepaths of all files/directories with '.undo' extension under current directory tree,find -name *.undo -print0 | du -hc --files0-from=-
Find all the files in file system which are accessed 50 days back,find / -atime 50
Recursively removes all folders named '.svn' in a current folder.,find . -type d -name .svn -print0|xargs -0 rm -rf
search for all Scala files under the current directory that contain the string null,"find . -type f -name ""*.scala"" -exec grep -B5 -A10 'null' {} \;"
create a tar file of all the songs on my system that have been modified in the last 180 days,find . -name -type f '*.mp3' -mtime -180 -print0 | xargs -0 tar rvf music.tar
Find recursively regular files in the current directory tree,find -type f -print0
"Recursively rename all files under /your/target/path replacing 'special' with 'regular' - all file/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.",find /your/target/path/ -type f -exec rename 's/special/regular/' '{}' \;
display the count of all directories in a folder excluding hidden files,find /path/to/directory -type d \! -name . -prune -exec printf x \; | wc -c
"Execute find with ""$@"" arguments","exec /usr/bin/find ""$@"""
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE_SUBDIR.*\.\./.*authors',find /usr/ports/ -name Makefile -exec grep '^MASTER_SITE_SUBDIR.*\.\./.*authors' '{}' '+' | wc -l
find all the regular/normal files in the current direcoty which have not been accessed in the last 30 days.,find . -type f -atime +30 -print
"display all the files in the file system which do not belong to the user ""wnj"" and which are modified before the file ""ttt""",find / \! \ -print
Delete all .svn directories under current directory,find . -type d -name .svn -print0|xargs -0 rm -rf
search for the regular/normal file firefox or thunderbird or seamonkey in the entire file system excluding search in the directories share and those starting with 10_Recommended and discard all the errors,find / \ -prune -o -type f \ -print 2>/dev/null
Search for 'mystring' in all *.txt (case insensitive) files under current directory,find . -iname *.txt -exec egrep mystring \{\} \;
Find all regular files under '/home/john/scripts' directory tree excluding files with '.ksh' extension,"find /home/john/scripts -type f -not -name ""*.ksh"" -print"
find all the html files in the current folder and delete a line,"find ./ -type f -name '*.html' | xargs sed -i '1,/sblmtitle/d'"
Find & replace broken symbolic links,find -L . -type l -delete -exec ln -s new_target {} \;
Find all regular files in the current directory tree that have been modified within the last 10 minutes,find . –type f -mmin -10
Find all filenames ending with .c in the current directory tree,"find -name ""*.c"""
Compress all directories found in $LOGDIR wherein a file's data has been modified within the last 24 hours,find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
Search /var/tmp for files larger than 30 MB modified 31 days ago,find /tmp /var/tmp -size +30M -mtime 31 -ls
find all the symbolic links in the current folder and check the file type and display the output of those files which are broken,find ./ -type l -exec file {} \; |grep broken
Remove all *~ files under dir,find dir -name \*~ | xargs echo rm | ksh -s
"Remove all directories called ""test"" from the current directory tree","find -path ""*/test"" -type d -delete"
"Execute zcat on every file matching ""*20120805.gz"" in the current directory and subdirectories",find . -name *20120805.gz -exec zcat {} \;
"Create tar archive ""foo.tar"" and copy all files from directory tree /tmp/a1 to it",find /tmp/a1 | xargs tar cvf foo.tar
Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership,find . -depth -print | cpio -o -O /target/directory
Find all files named 'aaa.txt' under current directory tree and display their contents,cat `find . -name aaa.txt`
Update timestamps of all files and directories under directory /path/to/dir.,find /path/to/dir -print0 | xargs -0 touch
display all the php files in the current folder which do not have the permission 644,"find . -type f -name ""*.php"" ! -perm 644"
find all the files that were modified two days ago,find . -daystart -ctime 1 -type f
Give all directories in the /path/to/base/dir tree read and execute privileges,find /path/to/base/dir -type d -print0 | xargs -0 chmod 755
display all the php files in the entire file system,"find / -name ""*.php"""
"find all  files that match ""[a-f0-9\-]{36}\.jpg"" of grep","find . * | grep -P ""[a-f0-9\-]{36}\.jpg"""
Find the total size of *.jpg files within the current directory tree,"find . -iname ""*.jpg"" -ls |perl -lane '$t += $F[6]; print $t/1024/1024/1024 . "" GB""'"
Find all pdf files under /dir/containing/unsigned with null character as the delimiter,find /dir/containing/unsigned -name '*.pdf' -print0
Search the home directory tree for files modified less than 7 days ago,find $HOME -mtime -7
"search for all the files in current folder which start with ""file2015-0"" and move them to frst 400 fiiles  to another folder","find . -name ""file2015-0*"" | head -400 | xargs -I filename mv  filename"
"Remove sequence like '\xEF\xBB\xBF' from first string of every '*.js' file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.",find . -iname *.js -type f -exec sed 's/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
"find files under the current directory called ""foo"" or ""bar""",find . \
"Find all files/directories in entire file system that have  ""write"" bit set for either the owner, the group, or others",find / -perm /222
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -print | xargs /bin/rm
Delete everything in the current directory,find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf
Find all your text files,"find . -name ""*.txt"" -print"
find all the normal/regular files in current folder and delete all the files which are not present in /some/dir,find . -type f -print0 | grep -Fxvz -f < | xargs -0 echo rm
Find all files on the system that have been modified in the last 10 minutes,find / -mmin -10
Find all directories whose status were changed $FTIME days ago,find . -type d -ctime $FTIME
"Find all files in ""/home/"" which contain ""string1"", ""string2"" or the host name in its filename","find /home/ -type f -regextype posix-extended -regex "".*(string1|string2|$(hostname)).*"""
Find recursively the latest modified file in the current directory,"find . -type f -print0 | xargs -0 stat -f ""%m %N"" | sort -n | tail -1 | cut -f2- -d"" """
find al the files that are modified exactly 2 days ago,find -daystart -mtime 2
Find all *.txt files/directories under current directory and execute process for each of them,find . -name \*.txt -exec process {} \;
Get the grandparent directory of each found 'pattern' file in $SEARCH_PATH,"find ""$SEARCH_PATH"" -name 'pattern' | rev | cut -d'/' -f3- | rev"
"Find directory ""/some/dir"" if it is empty",find /some/dir/ -maxdepth 0 -empty
Find all files under $1 not matching the regex '.*/\..*' and execute hashmove on each of them with the file path as its argument,find $1 -type f -not -regex '.*/\..*' -exec $0 hashmove '{}' \;
"Search for all files with either ""sitesearch"" or ""demo"" in their path names",find . -ipath '*sitesearch*' -ipath '*demo*'
"find all the files in the file system which have the permission 777 and with the name ""dateiname""","find / -perm 777 -iname ""Dateiname"""
Find all files/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago,"find . -name ""R*VER"" -mtime +1"
Find all *.so files under current directory and search for mysymbol in their symbol tables,"find . -type f -name ""*.so"" -exec sh -c ""echo {} && readelf -s {} | grep mysymbol"" \;"
Remove all non-hidden files in the current directory tree,"find -name ""*"" | xargs rm -f"
"Search the current directory tree for files whose name is "".note"", case insensitive",find -type d -exec find {} -maxdepth 1 \! -type d -iname '.note' \;
"Change permissions to u=rw,g=r,o= for all files inside the current directory tree","find . -type f -exec chmod u=rw,g=r,o= '{}' \;"
search for al cpp files in current folder and display distinct parent directory of these files in sorted order,"find . -name ""*.cpp"" | while read f; do dirname ""$f"" ; done | sort -u"
search for a word in all the files in the current directory,find . -type f -exec grep 'needle' {} \;
List all directories and subdirectories,find . -type d
"display all the regular files in the folder ""$"" which are modified in the last $*24 hours and excluding hidden files","find ${FOLDER} -type f ! -name \"".*\"" -mtime -${RETENTION}"
search for the word foo in all the js files in the current folder,"find . -name ""*.js"" -exec grep -iH foo {} \;"
find all the files in the current folder which have a set uid set,find . -perm -4000 -print
Count line numbers on files and record each count along with individual file name.,find /home/my_dir -name '*.txt' | xargs grep -c ^.*
Find all the *.txt files in the current directory older than 48 hours,find . -maxdepth 1 -name '*.txt' -mtime +2
Calculate the SHA1 sum for the contents of the regular files in the path/to/folder directory tree,find path/to/folder -type f -print0 | xargs -0 sha1sum | sha1sum
"Execute the file utility for each file found under /etc or below that contains ""test"" in its pathname",find /etc -print0 | grep -azZ test | xargs -0 file
Find all files on the system whose names are 'drush',find / -name drush
Find broken symlinks in current directory,find . -type l -xtype l
return every file that does not have bar somewhere in its full pathname,find . ! -path '*bar*' -print
display all the files in the file system which belong to the user with the id 1005,find / -uid 1005
Remove all empty files in /tmp/ and below,find /tmp -type f -empty -print | xargs rm -f
"Find symbolic links in /usr/lib and /usr/lib64 to files whose pathnames contain ""libstdc++""","find  /usr/lib/ /usr/lib64/ -lname ""*libstdc++*"""
"display a long listing of all images with the name ""articles"" in the current folder","find . -iname ""Articles.jpg"" -exec ls -l {} \;"
Find files/directories under current directory that matches 'projects/insanewebproject' in their paths,find -ipath 'projects/insanewebproject'
Find all 50MB files,find / -size 50M
"Search for all files in the current directory recursively whose names end with ""Linkin Park""","find . -name ""*Linkin Park"""
Find files and directories that are at least seven levels of nesting in the directory /usr/src,find /usr/src -name CVS -prune -o -mindepth 7 -print
Delete all files/directories taken by the glob pattern * except the ones with the name 'b',find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf {} \;
Find and replace xxx with yyy in whole directory tree,find . -type f -exec perl -pi -e 's|xxx|yyy|g' {} ;
"Append "".txt"" to all filenames in the current directory tree",find -type f | xargs -I {} mv {} {}.txt
find all the directory's from root which have the sticky bit on and display their details. Do not display any errors on the standard output.,find / -type d  -perm -1000  -exec ls -ld {} \; 2> /dev/null
find all the files in the entire file system whose size is between 50Mb to 100MB,find / -size +50M -size -100M
Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' that were modified within the last day (day counted from today),find /tmp/test/* -daystart -mtime -1
change the permission of all the regular/normal files in the current folder from 777 to 755,find . -type f -perm 777 -exec chmod 755 {} \;
list any files modified since /bin/sh was last modified,find . -newer /bin/sh
"find all the regular/normal files ending with "".mod"" in a folder and pass them as input to remodup command","find $DIR -name ""*.mod"" -type f -exec bash -c 'remodup ""$1""' - {} \;"
Find all .gif files in the /var/www directory tree that are between 5 kB and 10 kB in size,find /var/www -name *.gif -size +5k -size -10k
Display the count of regular files for which the owner has read and execute permission under 'home/magie/d2' directory tree,find home/magie/d2 -type f -perm -u+rx | wc -l
find all the files in the current folder that have been modified in the last 7 days,find -mtime -7 -daystart
Find files/directories that is under group 'root' or have no group and set their group to 'apache',find /var/www -group root -o -nogroup -print0 | xargs -0 chown :apache
Search for files that are at least 1.1GB,find / -size +1.1G
Find all or single file called FindCommandExamples.txt under / directory of owner root,find / -user root -name FindCommandExamples.txt
Find all *company* files/directories under /root/of/where/files/are directory,find /root/of/where/files/are -name *company*
display all the php files in the current folder which do not have the permission 644,"find . -type f -name ""*.php"" ! -perm 644"
Find <fileName> files/directories under current directory,"find -name ""<fileName>"""
Find directories in /proc and show only those that doesn't match the regex '/proc/[0-9]*($|/)',find /proc -type d | egrep -v '/proc/[0-9]*($|/)' | less
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play,"find /tmp/ -ctime -1 -name ""x*"" -exec mv '{}' ~/play/"
Find all regular files that reside in the current directory tree and were last modified more than 5 days ago,find . -type f -mtime +5
"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename "".svn""",find . -iname .svn -exec rm -rf {} \;
find all regex  '\./[a-f0-9\-]\{36\}\.jpg' files,find . -regex '\./[a-f0-9\-]\{36\}\.jpg'
Compress all files under current directory tree with gzip,find . -type f -print0 | xargs -0r gzip
Find all the files under /home directory with name tecmint.txt,find /home -name tecmint.txt
Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html',"find /home/u20806/public_html -maxdepth 1 -mmin +25 -type f -name ""*.txt"" -delete"
find  files which full path name is foo/bar under foo directory and print,find foo -path /tmp/foo/bar -print
"display all the C, CPP, Header files in the kat folder",find kat -type f \
change the permission of all the normal/regular files to 644 in the current folder,find -type f -exec chmod 644 {} \;
Get the total size of all files under dir1 directory,"find dir1 ! -type d -printf ""%s\n"" | awk '{sum += $1} END{printf ""%f\n"", sum}'"
display all regular/normal files in temp folder and display the filename along with file size,"find tmp -type f -printf ""f %s %p\n"""
Search the current directory tree for files modified less than 5 days ago,find . -mtime -5
"display all the regular/normal files in the folder /path/ which have not been modified today ( from day start ie, 00:00 )",find /path/ -type f -daystart -mtime +0
"Find files in the current directory excluding CVS, SVN, GIT repository files and all binary files.","find . -not \( -name .svn -prune -o -name .git -prune -o -name CVS -prune \) -type f -print0 | xargs -0 file -n | grep -v binary | cut -d "":"" -f1"
Search the current directory tree for files AAA and BBB,find . \( -name AAA -o -name BBB \) -print
find directory names starts with 'bar',find . -path './bar*' -print
Count files in the current path by modification month,find . -maxdepth 1 -type f -printf '%TY-%Tm\n' | sort | uniq -c
"find all the files in the folder ""myfiles"" which have been modified exactly 48 hours back.",find /myfiles -mtime 2
Find all files with '.txt' (case insensitive) extension under $dir directory non-recursively and sort them numerically,"find ""$dir"" -maxdepth 1 -type f -iname '*.txt' | sort -n"
"find all the "".flac"" files in the current folder and convert them to mp3 with 160k bit rate","find . -name ""*.flac"" -exec ffmpeg -i {} -ab 160k -map_metadata 0 -id3v2_version 3 {}.mp3 \;"
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output,find /tmp -type f -perm -002 | sed '1s/^/Found world write permissions:\n/'
search in current directory downwards all files whose size is less then 10 bytes,find .  -size -10c -print
Change permissions to 700 for files and directories deeper than the current directory,find . -mindepth 2 | xargs chmod 700
Find all broken symlinks under current directory,find -L . -type l
Find all files/directories named 'FindCommandExamples.txt' under '/root' directory tree,find /root -name FindCommandExamples.txt
Find the top 5 big files,find . -type f -exec ls -s {} \; | sort -n -r | head -5
Find the unique owners of all the files in the /bin directory,find /bin -type f -follow | xargs    ls -al | awk ' NF==9 { print $3 }'|sort -u
display all the regular/normal files in the current folder which are modified after a file,"find . -type f -newer ""$FILE"""
locate large files (> 100 MB) in /home/ for 'cleaning',find /home -type f -size +100M -delete
"Replace all occurrences of ""foo_fn"" with ""bar_fn"" in the files named ""foo_fn"" from the current directory tree",find . -name foo_fn exec sed -i s/foo_fn/bar_fn/g '{}' \;
"Set permissions of all files under ""/opt/lampp/htdocs"" to 644",find /opt/lampp/htdocs -type f -exec chmod 644 {} \;
find all the core files in the entire file system and  delete them,find / -name core -exec rm -f {} \;
display all files in current folder excluding text files,"find . ! -name ""*.txt"""
find all files in the current folder which have not been accessed in the last 30 days in the current folder,find . -atime +30 -print
Returns unsuccessful exit code on each found file like '*tests*' within current directory.,find . -name '*tests*' -print -exec false \;
"display all the files in the current folder excluding search in the paths containing the folder having the word ""mmm""",find . ! -path *mmm*
Remove all vmware-*.log files under current directory ensuring white space safety in filename,find . -name vmware-*.log -print0 | xargs -0 rm
Removes only lowest level subfolders from current directory tree .,find . -type d | xargs rmdir
Print out the contents of all *.txt files in the home directory,find ~/ -name '*.txt' -exec cat {} ;
"Find all files modified less than 5 minutes ago, and page interactively through the output.",find -cmin -5 | less -R
"Find regular files under / that contain ""stringtofind""",find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \;
Find all .mp3 files starting from the current directory,find . -type f -iname *.mp3
List all available commands in Mac OS,echo $PATH | tr ':' '\n' | xargs -I {} find {} -maxdepth 1 -type f -perm '++x'
List all *.txt files/directories under /etc,"find /etc -name ""*.txt"" | xargs -I {} ls -l {}"
List all files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 | xargs -r ls -ld
Find all files/directories under current directory and print only 2nd field from output delimited by '/',"find . | awk -F""/"" '{ print $2 }'"
display all files in the current folder which are not empty,find . ! -size 0k
Get the sizes (and total size) of all files under dir2 directory,find dir2 ! -type d |xargs wc -c
Find a file/directory named modules under current directory and exit with the number of files/directories named 'modules'  found in this path,find . -name modules -exec sh -c 'exit $' \;
"Find all filenames ending with .c in the current directory tree, case insensitive","find -iname ""*.c"""
Search the current directory tree for symbolic links to files matching pattern '*test*',find . -lname '*test*'
Get the list of regular files in the current directory,"find . -mindepth 1 -maxdepth 1 -type f -print0 | xargs -0 -I {} echo ""{}"""
Find all files/directories in all paths expanded by the glob pattern *,find *
print all files in the current directory and all subdirectories,find .
"search for the directory starting with ""ora10"" in the entire file system","find / -type d -name ""ora10*"""
Find all files under and below /dir that were accessed less than 60 minutes ago,find /dir -amin -60
Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end,find ./ -type f -newer /tmp/date.start ! -newer /tmp/date.end -exec rm {} \;
display all text files in the folder /tmp/1 excluding those which do not have spaces in their names,find /tmp/1 -iname '*.txt' -not -iname '[0-9A-Za-z]*.txt'
"Find directories in the current directory recursively that are not ""executable"" by all",find -type d ! -perm -111
Find all *.c files on the system and feed the output to wc,find / -name *.c | wc
List all files in /var/www and below that have changed in the last 10 minutes,"find /var/www -cmin -10 -printf ""%c %pn"""
Removes all empty folders under path '/foo/bar' and the path itself.,find /foo/bar -type d -depth -exec rmdir -p {} +
Perform syntax check on all PHP files in the current directory tree,find . -name \*.php -type f -exec php -l {} \;
Find all btree*.c files under current directory,find . -type f -name 'btree*.c'
display the contents of all the text files in the current directory,find . -name  '*.txt' -exec cat {} \;
Search the /path directory tree for files missing g+w and o+w bits,find /path ! -perm /022
"List all files and directories in the /home directory tree whose names are ""Trash""",find /home -name Trash -exec ls -al {} \;
Find all files under current directory and show their file information,find . -type f -print0 | xargs -0 file
Search the home directory tree for files modified less than 7 days ago,find $HOME -mtime -7
Find all regular files newer than '/tmp/$$' (where $$ expands to current process id) under '/tmefndr/oravl01' directory tree,find /tmefndr/oravl01 -type f -newer /tmp/$$
"display all file in the folder /dir/to/search except "".c"" files","find /dir/to/search/ \! -name ""*.c"" print"
"Search the current directory for files whose names start with ""messages."" ignoring SVN, GIT, and .anythingElseIwannaIgnore files",find . -type f -print0 | xargs -0 egrep messages. | grep -Ev '.svn|.git|.anythingElseIwannaIgnore'
"Find files ending in ""config""",find .  -path '*/*config'
Create a script that monitors system SSL certificate expiration dates and alerts if any certificates are expiring soon.,"#!/bin/bash

while true; do
    find /etc/ssl/certs -type f -exec openssl x509 -enddate -noout -in {} + | grep -v 'notAfter' | awk '{print $1, $2, $4}' | while read -r line; do
        end_date=$(date -d""$(echo $line | awk '{print $2, $3, $4}')"" +'%s')
        current_date=$(date +'%s')
        days_left=$(( (end_date - current_date) / 86400 ))
        if (( $days_left <= 30 )); then
            echo ""$line Expires in $days_left days""
        fi
    done
    sleep 86400

done"
Find all files/directories named 'query' (case insensitive) under current directory,"find -iname ""query"""
Find all files/directories under current directory tree,find | xargs
Find all files/directories under current directory tree that belong to user 'john',find . -user john
find all the configuration files which have been accessed in the last 30 minutes.,find /etc/sysconfig -amin -30
"split all files in directory ""/dev/shm/split/"" into pieces per 1000 lines",find /dev/shm/split/ -type f -exec split -l 1000 {} {} \;
List the z* links in the /usr/bin directory with inode information and the file to which it points to,"find /usr/bin -type  l  -name ""z*"" -ls"
"Remove all files and directories called ""test"" from the current directory tree","find . -name test -exec rm -R ""{}"" \;"
Locate all *.mov files in the current directory tree,find . -name '*.mov'
Test if a file named 'file' in the current directory is more than 1 hour old,find file -prune -cmin +60 -print | grep -q .
find all the files which are of size 0 bytes.,find . -type f -empty
"find all the regular/normal files ending with "".mod"" in a folder and send them as input to the remodup command","find $DIR -name ""*.mod"" -type f -exec remodup {} \;"
Look for SGID files and directories,find / -perm /g=s
find files (under root file system /) that were accessed within the last 24 hours,find / -atime -1
"find all the files that have been modified in the last 7 days,",find . -mtime -7 -print
"search for all the files with the name ""dummy"" in the current folder  and discard all the errors.",find / -type f -name dummy 2>/dev/null
Find all SUID set files,find / -perm /u=s
search for files which are writable by both their owner and their group,"find . -perm -g+w,u+w"
"Search the home directory for filenames starting with ""xx"" except for ""xxx"" files",find ~ -name 'xx*' -and -not -name 'xxx'
Search the current directory tree for all .java files that were last modified at least 7 days ago,find . -name '*.java' -mtime +7 -print
search for a string in gzip'd files,"find . -type f -name ""*.gz"" -exec zgrep 'GET /foo' {} \;"
List all IPV4 addresses found in all files under /etc directory,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n'  | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
"Copy the current directory tree to ""newdirpathname"" preserving directory hierarchy",find ./ -depth -print | cpio -pvd newdirpathname
search for all the regular/normal files ending with sdw or sdc or sdd in the current folder and save the output to list_1 file,find . -type f | egrep '$' > list_1
display all the html files in the folder /var/www,"find /var/www -type f -name ""*.html"""
Search for 'keyword' in all javascript files under current directory tree excluding all paths that includes the directory 'node_modules',"find ./ -not -path ""*/node_modules/*"" -name ""*.js"" | xargs grep keyword"
"Calculate the md5sum of all the files with name ""MyCProgram.c"", ignoring case","find -iname ""MyCProgram.c"" -exec md5sum {} \;"
Search for all files with the same inode number 41525360,find . -follow -inum 41525360
Recursively finds all '*.png' files older than 50 days in a current folder and removes them.,"find . -name ""*.png"" -mtime +50 -exec rm {} \;"
Find all files under current directory and show their file information,find . -type f -print0 | xargs -0 file
Find all files under /path and below writable by `group' or `other',"find /path -perm /g+w,o+w"
Print the list of files with a specific extension sorted by size.,"#!/bin/bash

directory=""/path/to/your/directory""
extension="".txt""

find ""$directory"" -type f -name ""*$extension"" -exec du -h {} + | sort -hr"
Find all files/directories with '.o' extension under '/lib/modules' directory tree,find /lib/modules -name '*.o'
"Find all files in directory tree ""dirname""",find dirname -exec echo found {} \;
find all the files in the folder Musica and display them in a single line null separated,find Música/* | egrep -Z \/\\. | xargs -0 echo
List all symlinks under current directory and search for targetfile.txt in this list,find . -type l | xargs -I % ls -l % | grep targetfile.txt
display all the tex files in the current folder,find . -name \*.tex
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths,"find ""$STORAGEFOLDER"" -name .todo -printf '%h\n'"
Find all files named 'foo' under your home directory and list them with confirmation prompt,find ~ -type f -name 'foo*' -ok ls -l '{}' ';'
display all the normal/regular files in the current folder and do not go beyond 3 levels,find . -maxdepth 3 -type f
Find all directories that have been modified in the last seven days.,find . -mtime -7 -type d
Set 644 permission to all regular files under current directory,find . -type f -print0 | xargs -0 chmod 644
get all files in a current directory modified in the last 7 days,find . -mtime -7 -print0 | xargs -0 tar -cjf /foo/archive.tar.bz2
"print all files in the file system excluding those ending with "".c""","find / \! -name ""*.c"" -print"
Find *.java files in the current directory and replace foo with bar in those files,"find . -name ""*.java"" -exec sed -i '' s/foo/bar/g \;"
display long listing of all the text files in the current folder,"find . -name ""*.txt"" -exec ls -la {} \;"
Remove all files with a txt extension under current directory,"find . -type f -name ""*.txt"" -print|xargs rm"
Replace all spaces with underscores in directory paths under current directory.,"find -name ""* *"" -type d | rename 's/ /_/g'"
find .bmp or .txt files,find /home/user/Desktop -name '*.bmp' -o -name '*.txt'
search for swap files (.swp files) in temp folder and remove them,find /tmp -name '*.swp' -exec rm {} \;
Find all directories named 'octave' under current directory tree,"find . -name ""octave"" -type d"
Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/,find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \; | xargs rm
"Copy the directory hierarchy of the current directory to ""destdir""",find . -type d | cpio -pdvm destdir
Search the .java files from the /Applications/ directory tree for TODO lines,"find /Applications/ -name ""*.java"" -exec grep -i TODO {} \;"
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QMAKESPEC',find /usr/ports/ -name Makefile\* -exec grep -l QMAKESPEC '{}' '+' | wc -l
display all the files in the current folder,find . -print
Find all files/directories named orm.properties in entire file system,"sudo find / -name ""orm.properties"""
"Replace ""foo"" with ""bar"" in all files in the current directory tree",find . | xargs sed -i ‘s/foo/bar/g’
Remove sess_* files that were modified more than 2 days ago,find sess_* -mtime +2 -exec rm {} \;
create a md5sum for all the instances of the file MyCProgram.c in current folder,"find -iname ""MyCProgram.c"" -exec md5sum {} \;"
Search the /tmp/ directory recursively for regular files,find /tmp -type f
Print the size for every *.ogg file found under the home directory,find $HOME -name '*.ogg' -type f -exec du -h '{}' \;
Delete all *.zip files under current directory that are older than 2 days,"find . -name ""*.zip"" -mtime +2 -print0 | xargs -0 -I {} rm {}"
Execute the file utility for each file found under /etc and below,find /etc -print0 | xargs -0 file
find all the directories in current folder and do not search in sub directories,find . -maxdepth 1 -type d -print0
Find all *.java files under current directory containing the string 'String',"find . -name ""*.java"" -exec grep ""String"" {} \+"
"Find all regular files under and below /home/admin/public_html/, and change their permissions to 644",find . /home/admin/public_html/ -type f -exec chmod 644 {} \;
"display the content of the files in the file system with the name ""lilo.conf"" and save the output to the file lilo.txt",find / -type f -name lilo.conf 2>/dev/null -exec cat {} \; >lilo.txt
"Search the system for files named ""findcommandexamples.txt"", ignoring the case",find  / -iname findcommandexamples.txt
Search for 'It took' in all $srch1* (case insensitive) files under current directory,"find . -iname ""$srch1*"" -exec grep ""It took"" {} \; -print"
"search for a word in all the files with the extension ""ch"" in the current folder",find -name '*.[ch]' | xargs grep -E 'expr'
display the change owner command for all the regular files in the current folder.,find . -type f -exec echo chown username {} \;
find all the regular/normal files in the /path folder and delete them,find /path -type f -delete
Find all files that have been modified in the last seven days.,find . -mtime -7 -type f
"find the file with the name ""esxcfg-firewall"" in the current folder",find -print | grep esxcfg-firewall
long list al the files in the current directory which have all the permissions,find . -perm 777 -type f -exec ls -l {} \;
"Search all the regular files from the current directory tree for ""search string""","find . -type f -print -exec grep --color=auto --no-messages -nH ""search string"" ""{}"" \;"
find all the files in the current folder and display adding quotations to each file and replace spaces with new line,"find $PWD | sed -e 's/^/""/g' -e 's/$/""/g' | tr '\n' ' '"
Search for 'mystring' in all *.txt  files under current directory,find . -iname *.txt -exec egrep mystring \{\} \;
Find all files/directories under current directory tree that are newer than backup.tar.gz by modification time,find . -newer  backup.tar.gz
Find all the *.txt files in the current directory older than 48 hours,find . -maxdepth 1 -name '*.txt' -mtime +2
"find all the files in current folder ending with ""ini"" and search for a word in all these files",find . -name *.ini -exec grep -w PROJECT_A {} \; -print | grep ini
Count all directories under current directory,find . -type d -exec ls -dlrt {} \; | wc --lines
Delete files containing whitespaces,"find . -name ""* *"" -exec rm -f {} \;"
Find all symbolic links starting from the current directory and list them,find . -type l -ls
display all the statistics of the files in the current folder and discard the errors.,find . -type f -exec stat {} + > /dev/null
"recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number",find /data/bin/test -type d -mtime +10 -name '[0-9]*' -print | xargs rm -rf ;
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir,find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir
check if myfile has 0644 permissions,find myfile -perm 0644 -print
Look for files with the name 'search' under current directory,"find . -name ""search"""
"Find files in the current directory whose names begin with ""file"" and remove them",find . -name file* -maxdepth 1 -exec rm {} \;
display all the text files in the home folder,"find /home -iname ""*.txt"""
Find all *.rb files/directories under current directory,"find . -name ""*.rb"""
Find all files/directories under current directory that match the case insensitive regex .*/\(EA\|FS\)_.*,find . -iregex '.*/\(EA\|FS\)_.*'
"Find all files named ""filename""","find -name ""filename"""
Find not-executable files under /home/www,find /home/www/ ! -executable
create a tar.gz compress file with all the jpg files in the entire file system,find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz
Find all files/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~/Library directory tree,"find ~/Library/ -iname ""com.apple.syncedpreferences.plist"""
Search for 'mystring' in all *.txt files under current directory,find . -name '*.txt' | xargs egrep mystring
display a long listing of all the normal/regular files in the current folder and do not search in the sub folders,find . -maxdepth 1 -type f -exec ls -l {} \; | less
"display all the C files or Python files in the folder ""euler""","find euler/ -iname ""*.c*"" -exec echo {} \; -or -iname ""*.py"" -exec echo {} \;"
display the files along with the size of all the files in the current which are bigger than 100MB,find . -size +100M -exec ls -s {} \;
display all the files in the usr folder which have been modified after Feburary 1st,"find /usr -newermt ""Feb 1"""
Serach for all the files starting with grep in man pages,find /usr/share/man/ -regex grep.*
Find all files under var/ directory and change their permission to 600,find var/ -type f -exec chmod 600 {} \;
Locate all *.csv regular files under the current directory tree,"find . -type f -name ""*.csv"""
display all the files in the home folder that have been modified in the last 24 hours,find $HOME -mtime -1
find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt,"find /    \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , ( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)"
Count the number of unique 3 to 6 character file extensions are in the current directory tree,"find . -type f -name ""*.*"" | grep -o -E ""\.[^\.]+$"" | grep -o -E ""[[:alpha:]]{3,6}"" | awk '{print tolower($0)}' | sort | uniq -c | sort -rn"
Find all .gz archives in the current directory tree and check if they are valid,"find ""*.gz"" -exec gunzip -vt ""{}"" +"
Rename file extension '.andnav' to '.tile' for all files/directories under current directory tree,"find . -name ""*.andnav"" | rename ""s/\.andnav$/.tile/"""
"List all files with name ""someFile"" and their modification time under the current directory sorted by oldest modified to newest modified","find . -name ""someFile"" -printf ""%p:%T@\n"" | sort -t : -k2"
Find and copy all log files in the current directory tree to /tmp/log-files,find . -name \*.log -print0 | xargs -I{} -0 cp -v {} /tmp/log-files
find directory which case-insensitive name is foo in current directory.,find . -iname foo -type d
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8,find sort_test -type f | env -i LC_COLLATE=en_US.UTF-8 sort
find all the files in the current folder which have execute permission,find . -executable
"Search for files greater than 20MB in the entire file system, display the path and file size and discard error reporting of the find command","find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null | awk '{ print $NF "": "" $5 }'"
Process all files matching pattern 'file??' and residing in the xargstest/ directory tree with script `myscript.sh',find xargstest/ -name 'file??' | xargs myscript.sh
"start from current directory, skip the directory src/emacs and all files and directories under it, and print the names of the other files found",find . -wholename './src/emacs' -prune -o -print
"find files having the extension ""bam"" in current directory","find . -name ""*.bam"""
find all the files in the current folder and display adding quotations to each file and replace spaces with new line,"find $PWD | sed 's/^/""/g' | sed 's/$/""/g' | tr '\n' '"
Search  in current directory downwards all files which  have not been accessed since last 7 days,find . -atime +7 -print
Search the current directory tree for .VER files,"find . -name ""*.VER"""
Search for the pattern 'search string' in all the files in the ''/tmp folder and display the matched lines along with the file names,find /tmp -type f -exec grep 'search string' '{}' /dev/null \+
Find all *.csv files under /foot/bar/ and move them to some_dir,find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir
Search for 'mystring' in all *.txt files under current directory,"find . -name ""*.txt"" -print0 | xargs -0 egrep mystring"
Find all files/directories owned by user 'joebob' under '/some/directory' directory tree,find /some/directory -user joebob -print
Find all directories under $1/.hg and set their SGID bit,"find ""$1""/.hg -type d -print0 | xargs chmod g+s"
Exclude directory from find . command,find -iname example.com | grep -v beta
Find files/directories greater than 10MB in your home directory,find ~ -size +10M
Find all directories under 'test' directory tree that match the regex '.*/course[0-9.]*' in their paths,find test -type d -regex '.*/course[0-9.]*'
Delete all .bam files in the current directory tree,"find . -name ""*.bam"" | xargs rm"
"search for all the log files in the folder ""/var/log"" and create a tar ball and compress it to bz2.",find /var/log -name '*.log' | tar cv --files-from=- | bzip2 > log.tar.bz2
"Find all files called ""INPUT.txt"" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak",find . -type f -name INPUT.txt -print0 | xargs -0 sed -i.bak '/^#/d'
display all the files in the current folder which do not belong to any group,find . -nogroup
Delete all files in the /TBD directory that were modified more than 1 day ago,find /TBD/* -mtime +1 -exec rm -rf {} \;
"find all the cpp, java, header files in the current directory",find . -name *.cpp -o -name *.h -o -name *.java
"Find all files and directories containing ""disc"" in their names",find . -name *disc*
Print concatenated content of all files ending with '.foo' under the current folder,cat `find . -name '*.foo' -print`
Search the /myfiles directory tree for regular files with read and write permissions set for `others',find /myfiles -type f -perm -o+rw
prints the names of all files in the directory tree rooted in /usr/src whose name ends with ‘.c’ and that are larger than 100 Kilobytes.,find /usr/src -name '*.c' -size +100k -print
Recursively finds all '*.png' files older than 50 days in a current folder and removes them.,"find . -name ""*.png"" -mtime +50 -exec rm {} \;"
Remove all empty sub-directories under current directory,find . -depth  -type d  -empty -exec rmdir {} \;
display all the tex files in the current folder,"find . -name ""*.tex"""
Remove all empty directories under the current directory and below,find ./ -type d -size 0c -print | xargs rmdir
Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories,"find . -type d -exec chmod ug=rwx,o= {} \;"
"Deletes folder like /tmp/*/* or deeper, older than +7 days if they don`t contain files or other folders.",find /tmp/*/* -mtime +7 -type d -exec rmdir {} \;
Count total number of lines in all *txt files  in current directory,wc -l `find . -type f -name '*.txt' `
"search in the current folder for all the regular/normal file with the name ""test""",find . -type f -name test
"Search for ""pattern"" in all the .c files in the current directory tree","find . -name ""*.c"" | xargs grep pattern"
Find files with name `aaa.txt' under the current directory,find . -name aaa.txt
"Unzip every "".gz"" file in the current directory tree","find . -name ""*.gz"" | xargs gunzip"
"Search the current directory tree for regular files lacking read permissions for user, group, or others",find . -type f ! -perm -444
List *.pl directories in the current directory tree,"find . -name ""*.pl"" -exec ls -ld {} \;"
Search for hidden files non-recursively,find . -name '.?*' -prune
List all files/directories under current directory,find .
Delete all .svn files/directories under current directory,find . -name .svn -delete
"Calculate the md5 sum of every "".py"" file in directory tree ""/path""","find /path -type f -name ""*.py"" -exec md5sum ""{}"" +;"
"Search for 'stuff' in all *,txt files under current directory","find . -name ""*.txt"" -print0 | xargs -0 egrep 'stuff'"
Remove all files in the ~/backups/mydatabasename directory recursively that were last modified more than 30 days ago,find ~/backups/mydatabasename/* -mtime +30 -exec rm {} \;
Change the encoding of all *.java files in a directory and subdirectories from cp1252 to utf-8,"find . -type f  -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 ""$1"" > converted && mv converted ""$1""' -- {} \;"
"find all the files in the file system which belong to the user ""pat"" and with the name ""dateiname""","find / -user pat -iname ""Dateiname"""
"Find ""file.xml"" under the current directory and change directory to its parent",cd `find . -name file.xml -exec dirname {} \;`
List all regular files in the current directory tree,find . -type f | xargs ls -l
Delete all regular files that have not been modified in the last 31 days under '/path/to/junk/files' directory tree,find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \;
Find all files/directories under '/var/tmp' directory tree that belong to a user with user id 1000,find /var/tmp -uid 1000
find files in /usr directory which are modified after February 1 of the current year,"find /usr -newermt ""Feb 1"""
Find the top 25 files according to their size in the current directory and its subdirectories,find . -type f -exec ls -al {} \; | sort -nr -k5 | head -n 25
"search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file",find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp /dev/null {}
Search the /usr/local/doc directory tree for .texi files,find /usr/local/doc -name '*.texi'
Find files/directories with inode number '212042' under '/var' directory tree without traversing other devices/partitions,find -x /var -inum 212042
Print the list of the subdirectories of the current directory,"find . -mindepth 1 -maxdepth 1 -type d -printf ""%P\n"""
Rename all .jpg files to .jpeg under the current directory and below,find  | rename 's/\.jpg$/.jpeg/'
"Find every file under the directory /usr ending in "".stat"".",find /usr -name *stat
Print the list of 1st level subdirectories in /fss/fin,"find /fss/fin -d 1 -type d -name ""*"" -print"
display all the text files in current folder,"find . -name ""*.txt"" -printf ""%f\n"""
find all js files under the build direcotry except build/external directory.,find build -not \( -path build/external -prune \) -name \*.js
Create a script to find and replace a string in all files in a directory.,"#!/bin/bash

find . -type f -exec sed -i 's/search_string/replace_string/g' {} +
echo ""String replaced in all files."""
Archive the directory structure under backup directory into directory-structure.tar,find backup/ -type d | xargs tar cf directory-structure.tar --no-recursion
Find all files/directories with 644 permission in entire file system,find / -perm 644
Remove trailing white spaces from all files under current directory ignoring .git and .svn directories,"find . -not \ -type f -exec sed -i ""s/[[:space:]]*$//g"" ""{}"" \;"
"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","find $1 -path /proc -prune -o -name ""$2"" -print -exec grep -Hn ""$3"" {} \;"
display all the files in current folder which have been changed in the last 24 hours,find . -ctime -1 -print
"find "".flac"" files in current folder using regular expressions","find ./ -regex ""./cmn-.\.flac"""
Print sed commands that would replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree,find /myprojects -type f -name '*.cpp' -print0 |    xargs -0 echo sed -i 's/previousword/newword/g'
"Search the current directory recursively for regular files with extensions sdw, sdc, sdd and save the search result as ""list_1""",find . -type f | egrep '$' > list_1
"display all scala files in the directory ""src/main""","find . -type f -regex "".*src/main.*\.scala$"""
Search in current directory downwards all files whose size is 10 bytes ( Characters ) .,find . -size 10c -print
"Find all files named ""something"" in the current folder and below and run them through the ls -l command in a one batch.",find . -name something | xargs -0 ls
Find all directories under current directory and change their permission to 644,find -type d -print0|xargs -0 chmod 644
"Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found",find /var/log/crashes -name app-\*\.log -mmin -5 -print | head -n 1
Delete all .bam files in the current directory tree,"find . -name ""*.bam"" | xargs rm"
"Find the directories whose pathnames contain ""New Parts"" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views","find -mindepth 3 -maxdepth 3 -type d | grep ""New Parts"" | tr '\012' '\000' | xargs -0 ln -s -t /cygdrive/c/Views"
Find all files in ~/clang+llvm-3.3/bin/ and print 'basename /file/path' for each file,find ~/clang+llvm-3.3/bin/ -type f -exec echo basename {} \;
"Change every directory under ""/var/www/html/"" to have permissions 775",sudo  find /var/www/html/ -type d -exec chmod 775 {} \;
Find and delete empty directories within a directory and its subdirectories.,"#!/bin/bash

find /path/to/directory -type d -empty -delete"
display a long listing of all the directories in the current folder,find . -type d -exec ls -algd {} \;
Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter,"find ""$source_dir"" -type f -regex "".*\.\(avi\|wmv\|flv\|mp4\)"" -print0"
find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.),find ~/ -daystart -type f -mtime 1
Find all 0644 permission files/directories under current directory tree and show only the first 10 of them,find . -perm 0644 | head
Find *log files/directories within a maximum of 3 levels of directories,"find / -maxdepth 3  -name ""*log"""
find all the directories in current folder which start with test,"find . -type d -name ""test*"""
"find all the files ending with ""clj"" in the current folder and search for a pattern",find . -name *.clj | xargs grep -r resources
List and sort all leaf directories  under current directory,"find . -type d | sort | awk '$0 !~ last ""/"" {print last} {last=$0} END {print last}'"
Finds and deletes all empty folders .,find ./ -type d -exec rmdir --ignore-fail-on-non-empty {} 2>/dev/null \;
List all .jpg files in the home directory tree,"find . -name ""*.jpg"" -exec ls {} \;"
Search for all files modified in the last 24 hours and copy them to a backup directory.,"#!/bin/bash

find /path/to/source -type f -mtime -1 -exec cp -t /path/to/backup {} +"
Locate all passwd files on the system,find / -name passwd
"Find all files and directories in the current directory tree with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -iname ""*linkin park*"" -exec cp -r {} /Users/tommye/Desktop/LP \;"
Find all files in /home/user/ that were created or changed 10 minutes ago,find /home/user/ -cmin 10 -print
Print the path names of all .png files in the /home/kibab directory tree,find /home/kibab -name '*.png' -exec echo '{}' ';'
get all the files that have been modified within the last 30 days,find . -mtime -30 -print
Find all files and directories with permissions 664,find . -perm 664
Find files/directories named 'foo' in the current partition of the root filesystem,find -x / -name foo
"find all the files ending with ""mkv"" in current folder","find -name ""*.mkv"""
change the permissions of all the normal files in a directory,find /path/to/dir/ -type f -print0 | xargs -0 chmod 644
find all the java script files in a folder and display them in a sorted order based on their type and save the output to a file,"cat `find src/js -type f -name ""*.js"" -print0 | xargs -0 stat -f ""%z  %N"" | sort -n | sed -e ""s|[0-9]*\ \ ||""` > public/js/myCleverScript.js"
dispaly a long listig of all the files in the home folder which are bigger than 100KB and discard any errors,find /home -size +100000 -ls 2>/dev/null
find directories  that have been modified in the last seven days,find . -mtime -7 -type d
searches through the root filesystem  for the file named Chapter1.,find / -name Chapter1 -type f
"Search for the regex ""\$wp_version ="" in all the regular files that end with '/wp-includes/version.php'  in their paths in directories/files taken from the glob pattern '/home/*//public_html/' and show the matched lines along with the file names","find /home/*/public_html/ -type f -iwholename ""*/wp-includes/version.php"" -exec grep -H ""\$wp_version ="" {} \;"
"Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files","find . -not \ -type f -print0 | xargs -0 file -In | grep -v binary | cut -d "":"" -f1 | xargs -0 sed -i '' -E ""s/[[:space:]]*$//"""
display all regular/normal files in temp folder and display the filename along with file size,"find tmp -type f -printf ""f %s %p\n"""
find all the php/javascript files in current folder using regular expressions,find . -regex '.+\.\'
Search for directory foo ignoring case,find . -iname foo -type d
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents,find /data/SpoolIn -name job.history | xargs grep -l FAIL | wc -l
List all files/directories under /myfiles directory,find /myfiles -exec ls -l {} ;
"search in the entire file system for the files firefox, thunderbird, seamonkey and display all the files expect those having the words ""10_Recommended"" or ""repo""",sudo find /  -type f 2>/dev/null|grep -v ''
Find all files in the `sourceDir' directory tree,find sourceDir -mindepth 1
Find all regular files matching the name pattern '*.?htm*' under '/srv/www' and '/var/html' directory tree,"find /srv/www /var/html -name ""*.?htm*"" -type f"
"Find files whose pathnames end in ""f""",find .  -path '*f'
Find all files under $YOUR_DIR,find $YOUR_DIR -type f
display all the files in the current folder which have been modified in the last 2 days,find . -mtime -2
Find *.jpg screenshots that are bigger than 500k,find ~/Images/Screenshots -size +500k -iname '*.jpg'
Find all files called wp-config.php in the /var/www directory and below,find /var/www/ -name wp-config.php
find all the text files in the folder /home/calvin and do not search beyond 2 levels,find /home/calvin/ -maxdepth 2  -name “*.txt”
Find files on the system created during the last 50 days,find / -ctime -50
List all regular files in the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f -exec ls -l {} +
Find all symlinks in the /myfiles directory tree,find /myfiles -type l
"find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format",find -mmin -60 -exec ls -l {} \;
find all the directories in the current folder that are empty,find -type d -empty
"generates a list of all files beneath the current directory whose filename DOES NOT end in .html, so it matches files like *.txt, *.jpg, and so on.","find . -type f -not -name ""*.html"""
Delete all files throughout the entire filesystem that are no longer owned by a valid user.,find / -nouser | xargs -0 rm
Find all *company*  files/directories under /basedir with null character as the delimiter,find /basedir/ -iname '*company*' -print0
Find all files/directories that are bigger than 100 bytes under '/home/apache' directory tree,find /home/apache -size 100c -print
"find all the files in the folder ""/usr/app/etl/01/OTH/log/tra"" which have been modified  in the last 240 hours  excluding hidden files and those with the name ""/usr/app/etl/01/CLE/par/files_to_skip.par""","find /usr/app/etl/01/OTH/log/tra -type f ! -name "".*"" -mtime -10 | egrep -vf /usr/app/etl/01/CLE/par/files_to_skip.par"
Find all files in the current directory tree whose path names match pattern './sr*sc',find . -path './sr*sc'
"print all filenames of files under current dir containing 'foo', case-insensitive",find . -type f -exec grep -il 'foo' {} \;
Find all files/directories named 'top'  in the entire filesystem,find / -iname top
display all normal/regular files in a folder,find /home/the_peasant -type f
find all the javascript files in current folder using regular expressions,find . -regex '.+\.js'
Print all files that exceed 1000 blocks and were modified at least a month ago,find / -size +1000 -mtime +30 -exec ls -l {} \;
"display all the files in the current folder excluding those that are present in the path ""./etc""","find . ! -wholename ""./etc*"""
List all files/directories under /data1/Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago,find /data1/Marcel -size +1024  \ -ls -exec file {} \;
find all the files in the home folder which are less than 42 Bytes,find / -size 42
find all the files in the file system which have been accessed in the last 1 day,find / -atime -1
Find all files/directories named 'fprintf.c' under '/usr/src' directory tree,find /usr/src -name fprintf.c
Count the number of regular files in directory tree ${DIRECTORY} that contain a vowel in their names,find ${DIRECTORY} -type f -print | sed -e 's@^.*/@@' | grep '[aeiouyAEIOUY]' | wc -l
Execute script /tmp/echoargs on all files from the /tmp/foo directory tree,find /tmp/foo -exec /tmp/echoargs {} \;
search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var.,"var=""$(find . -name 'gen*.bt2')"""
"Search the files from the current directory tree for ""foo""",find . -exec grep -l foo {} +
"this will recursively grep all the files, compressed or uncompressed.2 If you want to grep only the compressed files then find + zgrep would be a better option.",find /path/to/dir -name '*.gz' -exec zgrep -- 'pattern' {} +
Find all regular files that reside in the current directory tree and were last modified more than 4 days ago,find . -type f -mtime +4
Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents,"find . -name ""*.pdf"" -print | grep -v ""^\./pdfs/"""
search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the /root/work directory,find /root/ -path '/root/work' -prune -o -name myfile -type f -print
Delete all directories under '.cache/chromium/Default/Cache' directory tree that are at least 1 level deep and are bigger than 100 MB in size,find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -delete
Force delete all the regular/normal files in the current folder and do not search in the sub folders,find . -maxdepth 1 -type f -exec rm -f {} \;
Find all files that are set group ID to 10,find . -group 10 -perm -2000 -print
Compute the mean average of the word count of *.txt files in the home directory,find ~/ -name '*.txt' -print0 | xargs -0 wc -w | awk 'END { print $1/ }'
Find all directories under current directory and change their permission to 644,find -type d -print0|xargs -0 chmod 644
"Find all regular files under current directory tree, prepend '#' at the beginning of the lines that contain 'abc' in those files and modify them in-place",find . -type f -exec sed -i ‘s/.*abc.*/#&/’ {} \;
Find files in the current directory tree whose permissions are 775,find .  -perm 775
Find all empty directories under a certain path,find /tmp -type d -empty
Find all files/directories under current directory tree whose names start with 'some_text_2014.08.19',find . -name 'some_text_2014.08.19*'
delete all the trace files  from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours,find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7 -exec rm {} \;
Set permissions for all direcotries under /var/www to 755,find /var/www -type d -print0 | xargs -0 chmod 755
Find executable files,find . -perm -100 -print
find all files in the file system whose size is exactly 2KB,find / -size 2048c
"Print the list of all regular files on the system using ""echo""",find / -type f -exec echo {} \;
"display all the users in the current folder that belong to the group ""sunk""",find . -type f -group sunk
"Find all *.c files under and below the current directory that contain ""hogehoge""",find . -name \*.c | xargs grep hogehoge
Find files/directories named 'sar' under directory trees whose path starts with '/u' or '/b' or '/s' or '/o',find `ls -d /[ubso]*` -name sar
find Texinfo source files in /usr/local/doc,find foo -path foo/bar -print
Find all files/directories named 'top' in the entire filesystem,find / -name top
"Create symbolic links in the current directory for all files excluding ""CONFIGFILE"" located under ""/your/project"" directory tree",find /your/project -type f ! -name 'CONFIGFILE' -exec ln -s \{\} ./ \;
Search the entire file hierarchy for files ending in '.old' and delete them.,"find / -name ""*.old"" -exec /bin/rm {} \"
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry',find /usr/ports/ -name pkg-plist\* -exec grep dirrmtry '{}' '+' | wc -l
find all regular files which have been modified in the last 48 hours in home folder,find ~ -type f -mtime -2
move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link,find . -follow -iname '*.htm' -print0 | xargs -i -0 mv '{}' ~/webhome
Find all *.jpg files on the system,find / -name *.jpg 2>/dev/null
display all the files in the entire file system,"find / -name ""*"" — print"
Print the list of files in the current directory tree skipping SVN files,find . -name .svn -a -type d -prune -o -print
"Find all files/directories in entire file system that are owned by ""shadow"" group",find / -group shadow
"find all the files in the current directory and search for the word ""pw0"" in them.","find . -exec grep -i ""pw0"" {} \;"
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -delete
"Remove everything in the current directory except files matching regular expression ""exclude these""","find . -maxdepth 1 | grep -v ""exclude these"" | xargs rm -r"
Set permissions to 600 for regular files under var/,find var/ -type f -exec chmod 600 {} \;
Search the directory tree /tmp for regular files using zero delimiter for output,find /tmp -type f -print0
Find all *.m4a files under /home/family/Music directory and convert them to ogg,"find /home/family/Music -name '*.m4a' -exec ffmpeg -i ""{}"" -acodec libvorbis -aq 6 -vn -ac 2 ""{}.ogg"" \;"
Find every file/directory under the directory /home owned by the user joe,find /home -user joe
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories,find $1 -perm -u+x -exec chmod g+x {} \;
Delete all files/directories named 'sample' (case insensitive) under '/home/user/Series/' directory tree as super user,sudo find /home/user/Series/ -iname sample -print0 | sudo xargs -0 rm -r
"set alias ""logspace"" for command ""find /apps/ /opt/ -type f -size +100M -exec ls -lh {} \; | awk '{print $5, $9 }'""","alias logspace=""find /apps/ /opt/ -type f -size +100M -exec ls -lh {} \; | awk '{print $5, $9 }'"""
Search every directory except the subdirectory excluded_path for a regular file 'myfile',find / -path excluded_path -prune -o -type f -name myfile -print
change owner and group  of all files and directory into current directory to user and group apache,"find . -maxdepth 1 -not -name ""."" -print0 | xargs --null chown -R apache:apache"
"display all the files only in the path ""./sr*sc""","find . -path ""./sr*sc"""
find all files beneath the current directory that begin with the letters 'Foo' and delete them.,"find . -type f -name ""Foo*"" -exec rm {} \;"
Get a list of all hidden files from the current directory tree,find . -type f -name '.*'
Count the number of lines in every regular .rb file in the current directory tree,"find . -name ""*.rb"" -type f -exec wc -l \{\} \;"
Find all 777 permission directories and use chmod command to set permissions to 755,find / -type d -perm 777 -print -exec chmod 755 {} \;
search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday,"find /nas/projects/mgmt/scripts/perl -mtime 1 -daystart -iname ""*.pl"""
Just find directories and skip file names,"find  / -type d -name ""apt"" -ls"
"find all the regular/normal files in the current folder which belong to the group ""flossblog""",find . -group flossblog -type f
Find all *.tex regular files under current directory,"find . -type f -name ""*.tex"""
find all files under the /etc directory and display IP address patterns in them,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n' \ | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
list the first line in every text file under the users home directory into report.txt,find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
Find user daniel's files of type jpeg without `autumn' in the name,find . -user daniel -type f -name *.jpg ! -name autumn*
"display all the configuration files in ""/etc"" folder along with their last access and modified timestamps","find /etc -name ""*.conf"" -printf ""%f accessed %AF %Ar, modified %TF %Tr\n"""
"Find files named ""needle"" ignoring the case","find . -iname ""needle"""
"Create a copy of the current working directory structure in the usr/project directory,",find . -type d -print|sed 's@^@/usr/project/@'|xargs mkdir -p
Print pathnames of all files in the current directory and below skipping files under SCCS directories,find . -print -name SCCS -prune
Find all files under /path and calculate their md5sum,find /path -type f -print0 | xargs -0 md5sum
"Search for directories that contain the phrase ""foo"" but do not end in "".bar""",find . -name '*foo*' ! -name '*.bar' -type d -print
"Find all files, folders, symlinks, etc in the current directory recursively",find .
Search /usr/bin for regular files that have been modified within the last 10 days,find /usr/bin -type f -mtime -10
Display a long listing of the oldest file under '/hom/backups' directory tree,"find /home/backups -printf ""%T@ %p\n"" | sort -n | head -1 | cut -d"" "" -f2- | xargs ls -al"
Generate UUIDs for the files from the current directory tree,"find . -printf ""%P\0"" | sort -z | while IFS= read -d '' -r f; do echo ""$ $f""; done"
"display all files in current folder ending with ""~"" or ""#"" using regular expression","find -regex ""^.*~$\|^.*#$"""
find all directories named build under the current directory,find . -type d -name build
"delete all the trace files ("".trc"") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours",find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7 -exec rm {} \;
Search for files whose size is between 100 kilobytes and 500 kilobytes,find . -size +100k -a -size -500k
Recursively find the latest modified file in the current directory,find . -type f -print0|xargs -0 ls -drt|tail -n 1
delete all files in the home directory which ahve the name core in them,find ~/ -name 'core*' -exec rm {} \;
Find all files/directories under /usr/tom which matches the extended regex '*.pl| *.pm'  in their names,find /usr/tom | egrep '*.pl| *.pm'
display all files in current directory discard any errors and save the output to a file,find . 2>&1 | grep -v 'permission denied' > files_and_folders
Find all *fink* files/directories in entire file system,"find / -name ""*fink*"" -print"
find all the symbolic links in the current folder and follow to the original file,find -L . -type l
Check if a specific file exists and has been accessed in the last 7 days.,"#!/bin/bash

file=""/path/to/file""

if [ -e ""$file"" ] && [ $(find ""$file"" -atime -7 | wc -l) -gt 0 ]; then
    echo ""$file has been accessed in the last 7 days""
else
    echo ""$file does not exist or has not been accessed in the last 7 days""
fi"
"Find recursively the files named ""file"" in the current directory ignoring the .git subdirectory",find . -path ./.git  -prune -o -name file  -print
Find all files/directories named 'photo?.jpg' under current directory tree,find . -name photo\?.jpg
find all the links in the root folder which point to nothing  and display them.,find / -type l -print | perl -nle '-e || print';
List all files in maximum 2 levels down the current directory,find . -maxdepth 2  -type f -print0 | xargs -0 -n1 ls -l
search  in root  ( / ) directory downwards all files which have less than 2 links.,find / -links -2 -print
Move all files from the `sourceDir' directory to the `destDir' directory,find sourceDir -mindepth 1 -maxdepth 1 -exec mv --target-directory=destDir '{}' +
Assign the alias rm1g to a find command that removes any .tar file larger than a gigabyte.,"alias rm1g=""find / -type f -name *.tar -size +1G -exec rm -i {} \;"""
search for a specific word in all files beginning with a specific word in the current directory,"find . -name ""file_*"" -follow -type f -print0 | xargs -0 zcat | agrep -dEOE 'grep'"
create a soft link of the files in the folder /media/movies which have been modified in the last 30 days,find /media/Movies -type f -mtime -30 -exec ln -s {} /media/Movies/New/ \;
Search for .zip files that are larger than 100M found anywhere in the file system and delete those files.,find / -type f -name *.zip -size +100M -exec rm -i {} \;
List files larger than 10MB under /var/log /tmp that haven't changed in a month,find /tmp /var/tmp -size +30M -mtime 31 -print0 | xargs -0 ls -l
Find all files in the /var/tmp directory tree with uid=1000,find /var/tmp -uid 1000
Find recursively the latest modified file in the current directory,"find . -type f | sed 's/.*/""&""/' | xargs ls -E | awk '{ print $6,"" "",$7 }' | sort | tail -1"
Find all files under ./lib/app and sort them,find ./lib/app -type f | sort
Search for all *.ogg  files in the $HOME directory that have an access time of greater than 30 days,find $HOME -iname '*.ogg' -atime +30
Find files in the current directory tree that have one link,find . -links 1
"find all the "".flac"" files in the current folder and create a sub shell and convert these to mp3 with 128k bit rate","find -name ""*.flac"" -exec bash -c 'ffmpeg -i ""{}"" -y -acodec libmp3lame -ab 128k ""${0/.flac}.mp3""' {} \;"
"Search all regular files in the current directory tree for ""example""",find -type f -print0 | xargs -r0 grep -F 'example'
find files changed in the last 1 day,find . -mtime -1 -type f
Execute /usr/bin/find with $* arguments,/usr/bin/find $*
Find all directories under /path/to/base/dir and change their permission to 755,find /path/to/base/dir -type d -exec chmod 755 {} +
Remove empty directories from directory tree /srv/abc,find /srv/abc/ -type d -empty -exec rmdir {} \;
"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and other for those directories","find . -type d -exec chmod u=rwx,g=rx,o=rx {} \;"
Find files in the current directory and below that are less than 500 kB in size,find . -size -500k -print
"Calculate the md5 sum of all the file metadata in the current directory tree excluding "".svn""",find . -name '.svn' -prune -o -type f -printf '%m%c%p' | md5sum
find the oldest normal file in the current directory and display with its timestamp,"find ! -type d -printf ""%T@ %p\n"" | sort -n | head -n1"
Find all the files that end with the extension “.java” in the current directoy tree,"find . -name ""*.java"""
Search in the current directory and all sub-directories except ./D for the file named hi.dat,find -path ./D -prune -o -name hi.dat -print
find all the file which name (name can contains space) end with c or h and content contain 'thing',find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing
"Find files starting with the word ""file"" in the current directory tree, ignoring the case","find . -iname ""file*"""
display all directories in current folder,find . -type d -print0
"Search the current directory, except the subdirectory tree "".svn"", for files whose name is ""foo.cpp""",find . -name 'foo.cpp' '!' -path '.svn'
Remove all files under /myfiles that were accessed more than 30 days ago,find /myfiles -atime +30 -exec rm {} \;
"Find all files whose names do not begin with ""zsh"" on ext3 file systems",find / -fstype ext3 -name zsh*
search for text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search) and display their contents,"find /home/you -iname ""*.txt"" -mtime -60 -exec cat {} \;"
"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename "".svn""",find . -iname .svn -exec rm -rf {} \;
Locate files that reside in the /u/bill directory tree and were last accessed between 2 and 6 minutes ago,find /u/bill -amin +2 -amin -6
Find *.java files in the current directory with GNU find and replace foo with bar in those files,"find . -name ""*.java"" -exec sed -i s/foo/bar/g \;"
"Search the current directory tree for regular files whose names begin with ""orapw""","find . -name ""orapw*"" -type f"
find all the directories in the current folder and change to these directories and run a command,"find . -type d -exec sh -c 'cd -P -- ""{}"" && pwd -P' \;"
find all the configuration or text files in current directory,"find . -type f \( -name ""*.conf"" -or -name ""*.txt"" \) -print"
find regular file named foo.txt under root / directory.,find / -name foo.txt -type f -print
Find all .zip files starting from the current directory which are owned by user tommye,"find . -type f -user tommye -iname ""*.zip"""
Find all *.p[lm] files/directories under current directory,find -name '*.p[lm]'
Find files/directories that are newer than 'foo.txt' under current directory tree,find -newer foo.txt
Search the current directory recursively for files whose size is between 10 and 50 MB,find . -size +10M -size -50M -print
find all the normal/regular files in the current directory and search for the word mail and display the file names,find . -type f -exec grep -il mail
display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files,"find -exec grep -q fuddel {} "";"" -exec grep -q fiddel {} "";"" -ls"
search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to /path/tonew/dir,find . -type f -iname ‘HSTD*’ -daystart -mtime 1 -exec cp {} /path/to new/dir/ \;
display the contents of all java script files in a folder and save the output to a file,"find src/js -type f -name ""*.js"" -exec cat {} >> ${jsbuild}$@ \;"
Find all files which  begin with 'a' or 'b' from current directory downwards and print them.,find . -name [ab]* -print
Find files/directories under /tmp smaller than 100 bytes,find /tmp -size -100c
find all the symbolic links in the current folder that are broken,find . -xtype l
"Search /usr, /home, /tmp for *.jar files","find /usr /home  /tmp -name ""*.jar"""
find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them,find . -type f -mtime 2 -mtime -3 -daystart -exec ls -l {} \;
find files with the extension .conf in the /etc directory,find /etc -name '*.conf'
Find all 777 permission directories under current directory and  set permissions to 755,find . -type d -perm 777 -print -exec chmod 755 {} \;
Search the current directory tree for files that are less than 50kb,find . -size -50k
Find the password file between sub-directory level 2 and 4.,find -mindepth 3 -maxdepth 5 -name passw
display all empty files(files with sisze 0 bytes) in home folder,find ~ -empty
"display all the files in the home folder which begin with ""arrow"" and end with ""xbm""",find ~ -name 'arrow*.xbm'
Remove all core dump files from user's home directory,find ~/ -name 'core*' -exec rm {} \;
Find all directories under '.cache/chromium/Default/Cache' that are bigger than 100 MB in size excluding single letter directory names,find .cache/chromium/Default/Cache/ -type d -print0 | du -h | grep '[0-9]\{3\}M' | cut -f2 | grep -v '^.$'
find all the files that have been modified today(from the strart of the day),find . -type f -daystart -mtime 0
change the group of all the files in the folder /u/netinst/ to staff,find /u/netinst -print | xargs chgrp staff
Find how many directories are in a path (counts current directory),find . -type d -exec basename {} \; | wc -l
"find all regex  "".*/[a-f0-9\-]\{36\}\.jpg"" files","find . -regextype sed -regex "".*/[a-f0-9\-]\{36\}\.jpg"""
Find all regular files under and below /home/user/demo/,find /home/user/demo -type f -print
remove all the DS_Store files in the current directory,find . -name .DS_Store -exec rm {} \;
Find all directories under var/ directory and change their permission to 700,find var/ -type d -exec chmod 700 {} \;
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*',find data/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar
"Print the file content of command ""[whatever]""",cat `find [whatever]`
"display a long list of all the directories which have files ending with "".todo""","find ""$STORAGEFOLDER"" -name .todo -printf '%h\n' | xargs ls -l"
find all regular/normal files which have execute permission in current folder and copy them to another folder,cp `find -perm -111 -type f` /usr/local/bin
Get a recursive file list of directory $dir,find $dir -type f
Replace all spaces with underscores in directory names under current directory.,"find /tmp/ -depth -name ""* *"" -execdir rename 's/ /_/g' ""{}"" \;"
display all the files in the entire file system which have set uid bit set.,find / -perm -u+s -print
find all the files  in the folder /opt which have been changed in the last 120 minutes,find /opt -cmin -120
"find all files in and under the current directory that have read, write and execute permissions set for all users.",find . -perm 777 -print
Find all .gz archives in the current directory tree and check if they are valid,find . -name '*.gz' | xargs gunzip -vt
find all the header files in /usr/include which have been modified in the last 400 days,"find /usr/include -type f -mtime -400 -name ""*.h"""
List all non-hidden files in ~/junk,"find ~/junk   -name ""*"" -exec ls -l {} \;"
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.",find -maxdepth 1 -type f -printf '%f\000'
Find only permission field & file name from long listing with find command .,"find -type f -iname ""*.txt"" -exec ls -lrt {} \;|awk -F' ' '{print $1  $9}'"
display all the files in the current directory and do not search in the sub directories,find . -maxdepth 0 -print
Change permissions of all directories from the current directory tree to 644,find . -type d -exec chmod 755 {} +
Print a sorted list of the extensions of the regular files from the current directory tree,find . -type f | grep -o -E '\.[^\.]+$' | sort -u
"Search for occurrences of string ""main("" in the .c files from the current directory tree","find . -type f -name ""*.c"" -print -exec grep -s ""main("" {} \;"
Find files using file-name,"find -iname ""MyCProgram.c"""
display the help of find command,find --help
"Find all files in the current directory tree whose names are ""file_name"", except for those with pathnames matching pattern ""./dirt to be Excluded/*""","find ./ -iname file_name ! -path ""./dirt to be Excluded/*"""
find all the files in the current folder which have been accessed in the last 60 minutes,find . -amin -60
Find and replace a specific text pattern in all files within a directory and its subdirectories recursively.,"#!/bin/bash

search_dir=""/path/to/directory""
old_pattern=""pattern_to_replace""
new_pattern=""replacement_pattern""

find ""$search_dir"" -type f -exec sed -i 's/$old_pattern/$new_pattern/g' {} +"
Prints first found folder that contains 'ssh' file and has 'bin' in path.,dirname `find / -name ssh | grep bin | head -1`
remove all the files in the current folder which have not been modified in the last 10 days,find . -mtime +10 | xargs rm
"find all the JSON files in the directory ""PROD/140725_D0"" and send them as input to the python script ""/tmp/test.py""","find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py ""$f""; done' \;"
list all files under $dir directory except path $dir/prune_me directory,"find ""$dir"" -path ""$dir/prune_me"" -prune -o -exec bash -c 'echo ""$0""'  {} \;"
"List all .c and .h files in the current directory tree that contain ""thing""",find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing
find all the normal/regular files in the current folder which have been modified in the last day and display a long listing of them,find . -type f -mtime -1 -daystart -exec ls -l {} \;
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive  of all the files found,"tar -cvf file.tar `find var/log/ -iname ""anaconda.*""`"
Print your/dir if it's empty,"find ""your/dir"" -prune -empty"
Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ensuring white space safety,"find /mnt/zip -name ""*prefs copy"" -print0 | xargs    -0 -p /bin/rm"
"Find all regular files with '.jpg' (case insensitive) extension, sort them by name, print the output  and also save the list to file 'file_list.txt'","find . -type f|grep -i ""\.jpg$"" |sort| tee file_list.txt"
"start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found",find . -wholename './src/emacs' -prune -print -o -print
"Find all file.ext files/directories under current directory with ""FooBar"" in their paths and copy them into the current directory","find . -name ""file.ext""| grep ""FooBar"" | xargs -i cp -p ""{}"" ."
"replace the word foo to bar in the current folder in all the regular/normal files containing the word ""baz"" in their name","find . -type f -name ""*baz*"" -exec sed -i 's/foo/bar/g' {} +"
Delete orphan vim undo files under current directory,"find . -type f -iname '*.un~' | while read UNDOFILE ; do FILE=$( echo ""$UNDOFILE"" | sed -r -e 's/.un~$//' -e 's&/\.&/\1&' ) ; [[ -e ""$FILE"" ]] || rm ""$UNDOFILE"" ; done"
find all the files that have been modified today,find /tmp/test/* -mtime +0
"delete all the "".bak"" or swap files in kat folder","find kat -type f \( -name ""*~"" -p -name ""*.bak"" \) -delete"
Copy all *.mp3 files under the current directory to /tmp/MusicFiles/,"find . -type f -name ""*.mp3"" -exec cp {} /tmp/MusicFiles \;"
Find all files whose names begin with 'Makefile' at the /usr/ports directory tree's level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them.,"find /usr/ports/ -name Makefile\* -mindepth 3 -maxdepth 3 -exec egrep ""NOPORTDOCS|NOPORTEXAMPLES"" '{}' '+' | wc -l"
List every directory under current directory with their child executable files,"find `pwd` -perm 111 -type f | sort -r | xargs -n1 -I{} sh -c ""dirname {};basename {}"" | awk '/^\// {dir=$0 ; if  {print;lastdir=dir}} !/^\// {print}'"
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""",find . -name '*.*' -exec grep 'SearchString' {} /dev/null \;
Find all directories under 'test' directory tree whose paths match the regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$',find test -type d -regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$'
Find all mysong.ogg files/directories under your home directory,find $HOME -name 'mysong.ogg'
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,find . -name foo.mp4 -printf '%h\n'
Find all *company* (case-insensitive) files/directories under /basedir with null character as the delimiter,find /basedir/ -iname '*company*' -print0
find all the text files in current folder and force delete them,"find . -name ""*.txt"" | xargs rm -rf"
"Find all regular files with '.jpg'  extension, sort them by name, print the output  and also save the list to file 'file_list.txt'","find . -type f|grep -i ""\.jpg$"" |sort| tee file_list.txt"
Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory,find . -type f -exec grep -n -i STRING_TO_SEARCH_FOR /dev/null {} \;
Get the total size of all files under dir1 directory,"find dir1 ! -type d -printf ""%s\n"" | awk '{sum += $1} END{print sum}'"
Find all files under current directory and change their permission to 400,find . -type f -exec chmod 400 {} \;
Execute script do1.sh on each regular file from the /etc directory tree,find /etc -type f |  xargs --max-lines=1  -r --max-procs=20  ./do1.sh
find all files in the file system which are modified after the file /tmp/checkpoint,find / -newer /tmp/checkpoint
Archive the directory structure under .. directory into dirstructure.tar,find .. -type d -print0 | xargs -0 tar cf dirstructure.tar --no-recursion
Search for the regex '->get(\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames,find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\|#hyphenate' {} +
find  files which full path name is foo/bar under foo directory and print,find foo -path foo/bar -print
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" -exec rm {} \;"
Delete all files under and below the current directory,find -mindepth 1 -delete
"Find all files under current directory matching the pattern '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' in their names","find -name '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' -type f"
Change permission to 755 for all directories under $d directory tree,"find ""$d/"" -type d -print0 | xargs -0 chmod 755"
Convert all *.ps files under $STARTDIR directory to *.pdf files,find $STARTDIR -name '*.ps' -print | sed -e 's/.ps$//' | xargs -l -i  ps2pdf '{}.ps' '{}.pdf'
Exclude directory from find . command,find build -not \( -path build/external -prune \) -name \*.js
Find files with 002 permission in entire file system,find / -type f -perm -002
delete all the files in the current folder which do not belong to any user,find . -nouser | xargs rm
Finds file 'Subscription.java' and changes to containing folder.,cd `find . -name Subscription.java | xargs dirname`
search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end,find /data/images -type f -newer /tmp/start -not -newer /tmp/end
"Apply script rename.sh to all files from the current directory tree whose names match regular expression ""xxx-xxx_[a-zA-Z]+_[0-9]+_[0-9]+\.jpg$""","find . -regex ""xxx-xxx_[a-zA-Z]+_[0-9]+_[0-9]+\.jpg$"" -exec ./rename.sh ""{}"" "";"""
"Find all files in the current directory tree whose size is greater than 1MB, and move them to the ""files"" folder with confirmation",find . -size +1M -ok mv {} files \+
Find empty files/directories under test directory,find test -empty
display all the files in the folder /home which do not belong to the group test,find /home -not -group test
"display all the hidden directories in the directory ""/dir/to/search/""",find /dir/to/search -path '*/.*' -print
Delete all files/directories taken by the glob pattern * except the ones with the name 'b',find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf {} \;
Exclude directory from find . command,"find ! -path ""dir1"" -iname ""*.mp3"""
Search the current directory recursively for regular files last accessed less than 2 days ago,find . type -f -atime -2
"Search regular files from the /path/to/dir directory tree for lines that contain ""_START"" and are enclosed in lines ""@GROUP"" and ""@END_GROUP""","find /path/to/dir -type f -exec sed '/@GROUP/,/@END_GROUP/!d' {} + | grep '_START'"
Remove all *.txt files under the given directory modified more than 5 minutes ago,"find /home/u20806/public_html -maxdepth 1 -mmin +5 -type f -name ""*.txt"" -delete"
search for all the file sin the current folder which are bigger than 10KB and display them smallest file,find . -size +10k -exec ls -lS {} \+ | head -1
Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/copy.' directory,"find /home/mine -iname ""*.png"" -execdir cp {} /home/mine/pngcoppies/copy{} \;"
List only the non-hidden empty files only in the current directory.,"find . -maxdepth 1 -empty -not -name "".*"""
Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff',"find . -okdir diff {} /some/other/path/{} "";"""
"search for regular/normal file with the name ""myfile"" in the entire file system",find / -name myfile -type f -print
Print all file/directory names with white space safety under the /proc directory,find /proc -print0 | xargs -0
find all the directories in the current folder,find -type d
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under the current directory and below ignoring SVN files",find . \( ! -regex '.*/\..*' \) -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
find files which have all permissions to all the users in the current directory,find . -type f -perm 0777 -print
List files and directories recursively,find . -print | xargs ls -gilds
Find files/directories under current directory and print them as null terminated strings.,find -print0
"display all the regular/normal files in the current folder excluding the files ""bbb"" and ""yyy""",find . \( -name bbb -o -name yyy \) -prune -o -type f -print
Search the current directory recursively for text files containing at least one character,find -type f -exec grep -Iq . {} \; -and -print
Find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/.,find /etc/ -mtime -30 | xargs -0 cp /a/path
Find all directories under media/ directory and change their permission to 700,find media/ -type d -exec chmod 700 {} \;
"Find all directories named ""0"" in the current directory tree and create a single tar archive of their RS* subdirectories","find . -type d -name ""0"" -execdir tar -cvf ~/home/directoryForTransfer/filename.tar RS* \;"
display all jpg files in the current folder,"find -iname ""*.jpg"""
Search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems.,find / -fstype ext3 -name zsh*
Search for the files that are owned by user rooter or by user www-data,find -user root -o -user www-data
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QMAKESPEC',find /usr/ports/ -name Makefile\* -exec grep -l QMAKESPEC '{}' '+' | wc -l
Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes,find /your/dir -type f -size +5M -exec du -h '{}' + | sort -hr
Search for 'It took' in all $srch1*  files under current directory and run the sed script 'N;s/\n/\2 \1/' on the output and redirect the final output to temp1 file,"find . -iname ""$srch1*"" -exec grep ""It took"" {} \; -print |sed -r 'N;s/\n/\2 \1/' > temp1"
"display the contents of all the files in the current folder which have the name ""dummy"" and discard all the errors while searching and save the output to the file tesst.txt",find / -type f -name dummy 2>/dev/null -exec cat {} \; >tesst.txt
Execute script 'truncate.sh' on all files in the /path/to/files directory tree,find /path/to/files -exec truncate.sh {} \;
"find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.",find . -mtime 4 -daystart -exec cp -a {} /home/devnet/fileshare\$ on\ X.X.X.X/RECOVER/ \;
Find all files/directories under '/usr/share/doc' directory tree that contain 'readme'  at the beginning of their names,find /usr/share/doc -iname readme\*
check if myfile has 0644 permissions,find myfile -perm 0644 -print
List all regular files in and below the home directory that have been modified in the last 90 minutes,find ~ -type f -mmin -90 | xargs ls -l
Find all symbolic links containing 'vim' in their names uder '/usr/bin' directory tree,find /usr/bin -name '*vim*' -type l
"Find all *conf* files recursively under current directory, search for any lines matching the string 'matching_text' in those files and redirect the output to matching_text.conf.list",find . -name *conf* -exec grep -Hni 'matching_text' {} \; > matching_text.conf.list
find all of the executable files on your computer,find / -executable
Check if a specific file exists and has been modified in the last 24 hours.,"#!/bin/bash

file=""/path/to/file""

if [ -e ""$file"" ] && [ $(find ""$file"" -mtime -1 | wc -l) -gt 0 ]; then
    echo ""$file has been modified in the last 24 hours""
else
    echo ""$file does not exist or has not been modified in the last 24 hours""
fi"
"Print the paths of all files in the current directory tree that contain ""abc"" replacing ""abc"" with ""xyz""",find . |xargs grep abc | sed 's/abc/xyz/g'
Find files/directories named 'foo.bar' in the root filesystem partition,find / -name foo.bar -print -xdev
Find recursively the latest modified file in the current directory,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" "" | sed 's/.*/""&""/' | xargs ls -l"
Remove all empty regular files under the current directory and below,find ./ -type f -empty -print0 | xargs -0 rm
Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them,"find ""$DIR"" -type f \! -newer ""$a"" \! -samefile ""$a"" -exec rm {} +"
List all files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 | xargs -r ls -l
"Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts",find . -name \*.java | tr '\n' '\0' | xargs -0 wc
replace the word apple with orange in all the files in the current folder,find ./ -exec sed -i 's/apple/orange/g' {} \;
Convert multiple *.jpg files from JPEG to PDF format,find /path/to/files -iname '*.jpg' -exec mogrify -format pdf {} +
"Search the regular files from directory tree 'folder_name' for ""your_text""",find folder_name -type f -exec grep your_text  {} \;
Find files/directories in entire file system that were modified a day ago,find / -mtime 1
Count the number of characters in the list of regular files from the current directory tree,find . -type f | xargs | wc -c
display all the text files in the current folder except readme files,"find . -type f -name ""*.txt"" ! -name README.txt -print"
Find regular non-hidden files containing `some text' in their names with hidden directories optimization,find . -type d -path '*/\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print
"Search the current directory recursively for regular files, skipping hidden files in the current directory",find * -type f -print
find all the jpg files in current folder and sort them,"find . -type f|grep -i ""\.jpg$"" |sort"
Print a listing of the /usr/local/etc/rc.d directory tree,find /usr/local/etc/rc.d -type f | awk -F/ '{print $NF}'
"find all files under the current directory that end in ""foo"" and, using xargs, execute somecommand once for each filename found",find . -name '*.foo' -print0 | xargs -0 -n 1 somecommand
List all hidden files under present working directory and redirect the list to all-hidden-files.txt,"find `pwd` -iname "".*"" -type f > all-hidden-files.txt"
Look for files with wide open permissions,find . -type f  -perm 777 -exec ls -l {} \;
Find regular files modified within the last ten minutes under /etc,find /etc -type f -mmin -10
"Change permissions to u=rwx,g=rx,o= for all directories inside the current directory tree","find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;"
"Find all regular files with permissions 777 under and below /home/user/demo/, and change their permissions to 755",find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \;
List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject',find . -type f -print0 | xargs -0 grep -il '^Subject:.*unique subject'
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar,find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar
"Find ""*prefs copy"" files in the /mnt/zip directory tree and remove them with prompting","find /mnt/zip -name ""*prefs copy"" -print0 | xargs -p rm"
display long listing of all the text files in the current folder and then execute the script myScript.sh by passing the output of previous exec as input,"find . -name ""*.txt"" -exec ls -la {} \; -exec ./myScript.sh {} \;"
"display all the regular files in the current folder excluding those that are present in the path ""git""","find . -path ""*.git"" -prune -o -type f -print"
"Find all leaf directories that include only one occurrence of ""modules""",find -regex '.*/modules\(/.*\|$\)' \! -regex '.*/modules/.*/modules\(/.*\|$\)' -type d -links 2
"Search three folders named foo, bar, and baz for all ""*.rb"" files","find foo bar baz -name ""*.rb"""
"find the file ""fluidpoint"" in the file system and discard all the errors",find / -name fluidpoint 2> /dev/null
find  files which full path name is /tmpfoo/bar under /tmp/foo directory and print,find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
Remove all *.log files from the current directory tree,find ./ -name '*.log' -print0 | xargs -0 rm
"Find all *.txt files under the current directory whose names are not ""File.txt""",find . -maxdepth 1 -type f -regex '.*\.txt' -not -name File.txt
Find all files/directories with '.err' extension under '/home/username' directory tree,"find /home/username/ -name ""*.err"""
Delete all directories under '.cache/chromium/Default/Cache/' directory tree that are bigger than 100MB and are at least 1 level deep,find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -exec rm -rf {} \;
search for the word error in all the xml files in the current folder,"find . -name ""*.xml"" -exec grep ""ERROR"" /dev/null '{}' \+"
List recursively all files and directories in /var/www,find /var/www
Find all files/directories owned by user 'michel' under current directory,find -user michel
Find all the files which are greater than 50MB but less than 100MB in size,find / -size +50M -size -100M
Find all files/directories under current directory tree that have modified in the last 2 days and contain 'blah'  in their names,find . -iname '*blah*' \ -mtime -2
"Search the current directory tree for .rb files ignoring the ""./vendor"" subdirectory","find . -name '*.rb' ! -wholename ""./vendor/*"" -print"
Create a bzip2 archive of all .log files from the /var/log directory tree,find /var/log -name '*.log' | tar cv --files-from=- | bzip2 > log.tar.bz2
Search for all .mp3 files in the /mnt/usb directory tree,"find /mnt/usb -name  ""*.mp3"" -print"
Find all files/directories named 'top' in the entire filesystem,find / -name top
"create symbolic links in current directory to all files located in directory ""/original"" and have filename extension "".processname""",find /original -name '*.processme' -exec echo ln -s '{}' . \;
Find all build* directories under current directory and reverse sort them,"find . -type d -name ""build*"" | sort -r"
Find files/directories under current directory and print them,find . -print0 | xargs    -0 echo
"Prints $m latest modified files within the $d folder, using $f format for printing timestamp.","find ""$d"" -type f -printf ""%T@ :$f %p\n"" | sort -nr | cut -d: -f2- | head -n""$m"""
Find all files/directories named 'pattern' under current directory tree,"find . -name ""pattern"" -print"
replace the word foo to bar in all the regular/normal files in the current folder (does not update the file),find . -type f -exec sed -i 's/foo/bar/g' {} +
display list of all the regular/normal files in the home folder which are exactly 6579 bytes,find /home/ -type f -size 6579c -exec ls {} \;
Count the number of .gz files in the current directory tree,"find -name ""*.gz"" | wc -l"
find all the text files present in the current directory excluding the search in certain paths.,"find . -type f -name ""*.txt"" ! -path ""./Movies/*"" ! -path ""./Downloads/*"" ! -path ""./Music/*"""
Find all regular files with 400 permission under '/data' directory tree,find /data -type f -perm 400 -print
Find all files newer than httpd.conf under and below the current directory,find . -newer httpd.conf
Find *.html files in the current directory tree that were modified 7 days ago,"find . -mtime 7 -name ""*.html"" -print"
find all files in the folder /etc which have been modified after /tmp/foo,find /etc -newer /tmp/foo
display all directories in current folder and do not search in sub directories,find . -maxdepth 1 -mindepth 1 -type d
Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter,find /mnt/naspath \! \(-name .snapshot -prune\) -type f -mtime 0 -print0
"display all files in current folder excluding those that have the word ""git"" in their name and display files that have git in their path names",find . ! -name '*git*' | grep git
Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes,"find /etc -name ""*.conf"" -mmin -30"
Find all *.txt file (case insensitive) in the entire system and copy them to /tmp/txt,find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
Remove all vmware-*.log files under current directory,find . -name vmware-*.log | xargs rm
Find which ruby files under current directory contain the string 'jump',find . -name '*.rb' -exec grep -H jump {} \;
"Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x","find . -type d -exec chmod u=rwx,g=rx,o=x {} \;"
Find all files in the home directory tree that are owned by another user and change their ownership to the current user,"find ~ ! -user $USER -exec sudo chown ${USER}:""{}"" \;"
"display all directories in the folder ""PROD"" and do not search in the sub directories",find /PROD -maxdepth 1 -type d
Search for 'mystring' in all *.txt files under current directory,"find . -name ""*.txt"" -print0 | xargs -0 egrep mystring"
Find all files/directories named 'text' under current directory,"find -name ""text"""
Remove all *.mp3 files in tmp directory but not in it's subdirectories,find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs    rm
Find all files excluding *.gz files in the current directory tree and compress them with gzip,"find . -type f ! -name '*.gz' -exec gzip ""{}"" \;"
Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago,find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &
display all the files in the current folder,find .
"Print the list of regular files from the current directory that were last modified on November, 22","find . -maxdepth 1 -type f -newermt ""Nov 22"" \! -newermt ""Nov 23"" -exec echo {} +"
Find writable files in the current directory tree,find . -writable
Find all symbolic links under '/some/directory' driectory tree,find /some/directory -type l -print
"find all the files in the file system which belong to the user ""pat"" and with the name ""dateiname""","find / -user pat -iname ""Dateiname"""
Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory,"find /etc -print0 -name ""*.txt"" | xargs -I {} -0 mv {} {}.bak"
Make all regular files in the current directory tree world-readable,find . -type f -print0 | xargs -0 chmod go+r
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format,"find -type f -name ""*.htm"" | sed 's@^./@@g;s@/@-@g' | awk -F'-' '{print $1 ""-"" $2 ""-"" $3 ""-"" substr($4, 5, 2) ""-"" $5}'"
Find all status.c files in the current directory tree and show stat's information on them,"find . -name status.c -exec stat --format ""%A %s %x %n"" {} \;"
find all the files in the home folder which are less than 42 Bytes,find / -size 42
Find directories modified within the last 7 days,find . -mtime -7 -type d
search for text files in the current folder which have write access to others,"find . -type f \( -iname ""*.txt"" -and -perm -o=w \)"
find all the text files in current folder and change the extension of these files and move them to another folder,"find . -name ""*.txt"" | parallel 'ext=""{/}"" ; mv -- {} foo/{/.}.bar.${ext##*.}'"
find all js files under the build direcotry except build/external directory.,find build -not \ -name \*.js
delete all the broken symbolic links from the folder /usr/ports/packages,find -L /usr/ports/packages -type l -exec rm -- {} +
List files greater than 1024KB under /path/to/directory and print the time and size on stdout,"find /path/to/directory -type f -size +1024k -exec ls -lh {} \; | awk '{ print $8 "": "" $5 }'"
"Search the current directory tree for files whose name is "".note"", case insensitive",find -type d -exec find {} -maxdepth 1 \! -type d -iname '.note' \;
"search for the word ""put"" in all the files in the current folder which have the word ""bills"" in their name and display the matched line along with the filename.","find . -name '*bills*' -exec grep -H ""put"" {} \;"
"Search the directories matching pattern ""/path/to/some/dir/*[0-9]"" for level 1 subdirectories",find /path/to/some/dir/*[0-9] -type d -maxdepth 1
find all regular files  then display the number of occurrences of banana without lines not proper end,"find . -type f -print0| xargs -0 grep -c banana| grep -v "":0$"""
display all text files in the current folder,"find . -type f -name ""*.txt"""
find all hidden files in the current folder which have been modified after profile file,"find . -type f -name "".*"" -newer .cshrc -print"
Find the largest 10 files (regular files) under current directory,find . -type f -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}
search for php files  in current directory and search for a word in all these files,"find -name '*.php' -exec grep -iq ""fincken"" {} \; -exec grep -iq ""TODO"" {} \; -print"
"Find all "".gz"" files in directory tree ""files/"" and use a count and the filename as arguments to ""...""","find files/ -name ""*.gz"" | nl -n rz | sed -e 's/\t/\n/' | xargs --max-args 2 ..."
find all the foo.txt files in the current folder and move them to another directory,"find . -name ""foo.txt"" | awk '{ print ""mv ""$0"" ~/bar/"" | ""sh"" }'"
Find all empty folders in the current directory and below,find . -type d -empty
"Find symbolic links in /usr/lib and /usr/lib64 to files whose pathnames contain ""libstdc++""","find  /usr/lib/ /usr/lib64/ -lname ""*libstdc++*"""
"Remove all files with names like ""vmware-*.log"" from the current directory tree",find . -name vmware-*.log | xargs rm
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago,find . -maxdepth 1 -cmin +60 -name file
Find all files/directories under /var/www/some/subset and change their owner and group to www-data,sudo find /var/www/some/subset -print0 | xargs -0 chown www-data:www-data
delete all the empty file in the file system after user confirmation,find / -size 0 -ok rm { } \;
"Find all regular files residing in the current directory tree and search them for string ""/bin/ksh""",find . -type f -print | xargs grep -i 'bin/ksh'
Find all files/directories under current directory that were accessed less than 1 day ago,find . -atime -1 -print
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find /path/to/dir/ -type f -name ""file-pattern"" -print0 | xargs -I {} -0 grep -l ""foo"" ""{}"""
Find all *blue* files/directories under /myfiles,find /myfiles -name '*blue*'
Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$' in their names with locale set to default C locale,LC_ALL=C find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
Find all *.txt files/directories under current directory and execute process once with all of them as arguments,find . -name \*.txt -exec process {} +
find all the html files which are modified in the last 7 days,"find . -mtime -7 -name ""*.html"""
find files in home directory that accessed more than 100 days ago,find ~ -atime 100
"Print all unique directory paths under ""dir1"" compared to ""dir2""",comm -23 <(find dir1 -type d | sed 's/dir1/\//'| sort) <(find dir2 -type d | sed 's/dir2/\//'| sort) | sed 's/^\//dir1/'
Find and the 5 largest regular files in the Downloads folder of tecmint's home directory and output the file sizes in bytes.,"find /home/tecmint/Downloads/ -type f -printf ""%s %p\n"" | sort -rn | head -n 5"
Search for all files with same inode NUM,find . -inum NUM
display all the directories in the folder /var and do not go beyond 2 levels during search,find /var -maxdepth 2 -type d;
Print a sorted list of all .jpg files in the current directory and below,find -name '*.jpg' | sort -n
find all files in the entire file system whose size is more than 100MB,find / -size +100M
Display a long listing of all the regular files under current directory tree that are newer than ‘Apr 18 23:59:59 EDT 2013’ and older than ‘Apr 20 00:00:00 EDT 2013’ by modification time,find . -type f -newermt ‘Apr 18 23:59:59 EDT 2013’ ! -newermt ‘Apr 20 00:00:00 EDT 2013’ -exec ls -l ‘{}’ \;
compresses all the files in the current folder with default depth,find . -depth -print | cpio -dump /backup
"Search the system for directories named ""needle""","find / -type d -name ""needle"""
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755,find . -type f -perm 777 -exec chmod 755 {} \;
Find all the files in entire file system  which are accessed 50 days back,find / -atime 50
Find files with group write permission and remove the permission,find . -perm -20 -print | xargs chmod g-w
Find all the SGID bit files whose permissions set to 644,find / -perm 2644
Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree,find /tmp -type f -name '*' -mtime +7 -print0 | xargs -0 rm -f
display all the soft links in a  folder which are not broken,find -L /target ! -type l
"Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444",find . \ -print|xargs chmod 444
"Findx all files having text ""texthere"" recursively in a current folder, and prints only file names with matching strings.","find -type f -exec grep -l ""texthere"" {} +"
Find all *.mpg  files under current directory and run an ffmpeg command on each of them,"find . -name ""*.mpg"" -type f -print0 | xargs -0 -I {} -n 1 -P 4 ffmpeg -i {} {}.mp4"
Add read permission for 'other' for all files/directories named 'rc.conf' under current directory tree,"find . -name ""rc.conf"" -exec chmod o+r '{}' \;"
Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video,find ~ -type f -exec file -i {} + | grep video
Find all xx* files/directories excluding 'xxx' files/directories under your home directory,find ~ -name 'xx*' -and -not -name 'xxx'
find all files in current folder which are bigger than 270MB and less than 300MB,find . -size +270M -size -300M
display all the files in the folder a,find a
display the contents of all the regular files in the current folder and save the output to out.txt,find . -type f -print0 | xargs -0 cat > out.txt
"find all c, cpp files in current folder",find -regex '.*\.\(c\|cpp\)'
Find all *.tex regular files in maximum 2 levels down the current directory,"find . -type f -maxdepth 2 -name ""*.tex"""
find all the regular/normal files in the /path folder and delete them,find /path -type f -exec rm '{}' \;
"Create a symbolic link in directory ""new"" for each file in ""original"" directory tree",find original -type f -exec ln -s {} new/{} \;
list all the drectories present in the current directory and do not search in the sub directories.,find -maxdepth 1 -type d
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f -exec ls -l {} \;
"change the group to ""new_group"" and permissions to 770 for all the files in the current folder, $0 is the input to the sub shell i.e, the name of the file","find . -name ""*"" -exec sh -c 'chgrp -v new_group ""$0"" ; chmod -v 770 ""$0""' {} \;"
display all the regular/normal files in the current folder that are not accessed in the last 10 minutes,find . -type f -amin +10
List all files under the current working directory last modified less than a day ago,find `pwd` -mtime -1 -type f -print
"Find all TXT files in the current directory and copy them to directory ""$HOME/newdir""","find ""$HOME"" -name '*.txt' -type f -print0 | xargs -0 cp -ut ""$HOME/newdir"""
display a long listing of all the xls or csv files in the entire file system,find / -type f \ -exec ls -l {} \;
display the amount of disk space used by all the log files in the folder /usr/local/apache/logs/,"find /usr/local/apache/logs/ -type f -name ""*_log""|xargs du -csh"
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QTDIR',find /usr/ports/ -name Makefile\* -exec grep -l QTDIR '{}' '+' | wc -l
Remove all vmware-*.log files under current directory,find . -name vmware-*.log -delete
Find files on the system that are bigger than 20 megabytes,"find / -type f -size +20M -exec ls -lh {} \; | awk '{ print $NF "": "" $5 }'"
List all files in the current directory tree including those that may contain spaces in their names,"find . -print0 | xargs -0 -l -i echo ""{}"";"
Search for all jpg images on the system and archive them,find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz
search for all the c files in the current folder,find . -name \*.c -print
Find directories with permissions 777 and change them to 755 recursively,find /home -type d -perm 777 -print -exec chmod 755 {} \;
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.,"find . -name ""FILE-TO-FIND"" -exec rm -rf {} \;"
Change the user and group of all files and directories under /var/www to www-data:www-data,find /var/www -print0 | xargs -0 chown www-data:www-data
Find all the files whose name is FindCommandExamples.txt in the current working directory,find /root -name FindCommandExamples.txt
Sort all directory names matching folder_* and go to the last one.,"cd $(find . -maxdepth 1 -type d -name ""folder_*"" | sort -t_ -k2 -n -r | head -1)"
Execute the `convert' command for every .jpg file in the current directory,find . -maxdepth 1 -name *.jpg -print -exec convert
Print the sizes and names of all TXT files from the current directory tree,"find . -iname ""*.txt"" -exec du -b {} +"
"Find all *.css files under $DIR and print the lines matching the regex '\.ExampleClass.{/,/}' from those files","find ${DIR} -type f -name ""*.css"" -exec sed -n '/\.ExampleClass.{/,/}/p' \{\} \+"
Find all .mp3 files with more then 10MB and delete them from root directory .,find /  -type f -name *.mp3 -size +10M -exec rm  {} \;
find all the files in the current folder which have been modified in the 10 minutes ago,find -mmin +15 -mmin -25
Save the list of all .py files under and below the current directory to output.txt,"find . -name ""*.py"" -type f > output.txt"
find all files in the current directory whose size is 24 or 25 bytes.,find . -size -26c -size +23c -print
Change the permission to 0755 for all directories under current directory,find . -type d -exec chmod 0755 {} \;
"search for files that are readable for everybody, have at least on write bit set but are not executable for anybody",find . -perm -444 -perm /222 ! -perm /111
Change the permissions of all regular files whose names end with .mp3 in the directory tree /var/ftp/mp3,find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \;
"change the permissions of all the files ending with ""fits"" in the folder ""/store/01"" and save the output file names to a log file","find /store/01 -name ""*.fits"" -exec chmod -x+r {} \; -exec ls -l {} \; | tee ALL_FILES.LOG"
find all class files or sh script files  in the current folder,find . -type f \
display all the files  in the current folder which have colon in their name,"find . -name ""*:*"""
find all the php files in current folder and search for multiple patterns in these files,"find -name '*.php' -exec grep -li ""fincken"" {} + | xargs grep -l ""TODO"""
display all the empty files in current folder,find . -empty
display the contents of all the regular files in the current folder and save the output to out.txt,cat `find . -type f` > out.txt
Find all directories named 'local' in entire file system,find / -name local -type d
display a long list of all the files that are bigger than 10KB in current folder,find . -size +10k -exec ls -l {} \;
Find all regular files named 'whatever' under current directory tree excluding all paths that contain any hidden directory,"find . \ -type f -name ""whatever"""
"change owner of the files into directory ""/mydir"" with "".txt"" extension to user root","find /mydir -type f -name ""*.txt"" -print0 | xargs -0 chown root $(mktemp)"
check the type of files in the folder /usr/bin,find /usr/bin | xargs file
Search the entire file system for any file that is writable by other.,find / – perm -0002
Archive the directory structure under current directory into /somewhereelse/whatever-dirsonly.tar,find . -type d |xargs tar rf /somewhereelse/whatever-dirsonly.tar --no-recursion
List and see contents of all abc.def files under the directories /ghi and /jkl,find /ghi /jkl -type f -name abc.def 2> /dev/null -exec ls {} \; -exec cat {} \;
search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it.,find ~/junk  -name 'cart[4-6]' -exec rm {}  \;
display all the files in the current folder which have been modified in the last 24 hours,find . -mtime -1 -print
"find all the ogg files in the current directory which have the word ""monfichier"" in their name",find -name *monfichier*.ogg
"Copy file header.shtml to directories dir1, dir2, dir3, and dir4",find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
"Search *.x files from the current directory tree for string ""fred""",find . -name ‘*.x’ -print0 | xargs -0 grep fred
"Find all C source code files from the current directory tree that contain ""keyword"" in their pathnames, ignoring the case",find . -type f \ |grep -i “keyword”
find all files in the home folder which have been modified between 72 and 96 hours before,find ~ -mtime 2 -mtime -4 -daystart
Print all filenames under /proc and below,find /proc -exec ls '{}' \;
Find regular files named core under /tmp and delete them,find /tmp -name core -type f -print | xargs /bin/rm -f
change the permission of all the regular/normal files in the current folder from 777 to 755,find . -type f -perm 777 -exec chmod 755 {} \;
Remove all empty regular files under the current directory and below,find ./ -type f -empty -print0 | xargs -0 rm
"Recursively finds all ""*.pas"" and ""*.dfm"" files and prints strings with ""searchtext"" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number.","find . -type f \ -print0 | xargs --null grep --with-filename --line-number --no-messages --color --ignore-case ""searchtext"""
find all the normal/regular files in the current folder which have been modified in the last day and display a long listing of them,find . -type f -mtime -1 -daystart -exec ls -l {} \;
"Create tar archive ""dirall.tar"" and copy all files from directory tree /tmp/a1 to it",find /tmp/a1 -exec tar -rvf dirall.tar {} \;
find all instances of a specific file in the current directory and discard all the errors.,"find . -name ""openssl"" 2>/dev/null"
List files larger than 10MB in the /var directory recursively,find /var/ -size +10M -ls
List all files under current directory with their sizes and paths,find . -type f -printf '%s %p\n'
Find all files/directories under current directory and print them,find . -print0 | xargs -I{} -0 echo {}
"Find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755",find /var/www/html -type d -perm 777 -print -exec chmod 755 {} \;
Print how many files are inside each directory under the current one,find */ | cut -d/ -f1 | uniq -c
Find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter,"find ""$source_dir"" -name ""*.$input_file_type"" -print0"
Search for the case insensitive regex expanded by $2 in all files named $1  under current directory,find . -name $1 -type f -exec grep -i $2 '{}' \;
Run svn checkout in every directory named 'needed_dir' under repository_dir/$f,find repository_dir/$f -type d -name needed_dir | xargs -r svn checkout
Find files/directories writable by group and others under the /path directory,"find /path -perm -g+w,o+w"
find all the files in the filesystem which do not belong to any group,find / -nogroup -print
List the directory paths of all file.ext files under present working directory,"find `pwd` -name ""file.ext"" -exec dirname {} \;"
Find largest file in linux with find command,"find . -type f -printf ""%s\t%p\n"" | sort -n | tail -1"
Identify CMS version/releases accross all your PHPBB installations,"find /var/www/vhosts/*/httpdocs/ -type f -wholename *includes/constants.php -exec grep -H ""PHPBB_VERSION"" {} \;"
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=C,find sort_test/ -type f | env -i LC_COLLATE=C sort
display all files in current folder in sorted order of depth,"find folder1/ -type f -printf ""%d\t%p\n"" | sort -n | sed -e ""s|[0-9]*\t||"""
Find command will display top 10 Big files from current directory .,find . -type f -exec ls -s {} \; |sort -n -r |head
Find .jpg files owned by user daniel in the current directory and its sub-directories.,find . -user daniel -type f -name *.jpg
Find all directories under ~/code excluding hidden directories and their subdirectories and replace all newlines with : in the output then remove the last :,find ~/code -type d | sed '/\/\\./d' | tr '\n' ':' | sed 's/:$//'
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""",find . -name whatever -print | xargs grep whatever
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern",find /data/SpoolIn -name job.history | xargs grep -o -m 1 -h 'FAIL\|ABOR' | sort | uniq -c
Find the first file/directory under current directory and quit,"find . ... -exec sh -c 'printf ""%s\n"" ""$1""; kill ""$PPID""' sh {} \;"
"search for all the "".c"" files in the folder ""/home/david"" which have been modified in the last 10 minutes",find /home/david -mmin -10 -name '*.c'
find all the files in the current folder which have the name net or comm in them,find . -regex '.*\.*'
find for a filename with multiple patterns in the current folder,"find . -name ""photo*.jpg"""
"Find files/directories with exactly read,write and execute permission for all  under /path",find /path -perm ugo+rwx
Remove all *.log files from the current directory tree,find ./ -name '*.log' | xargs rm
Search everywhere for directories named `root',find / -type d -name root
find all text files in current folder and delete all the files that have the word foo in their name,"find . -name "".txt"" | grep ""foo"" | xargs rm"
search for the regular/normal files iceweasel or thunderbird in the entire file system and exclude search in the paths /export and directories having the word Recommeded in their name,find / \ -prune -o \   \ -print 2>/dev/null
"display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word ""kt"" followed by a digit",find . -path './kt[0-9] '
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -type f -mmin -60 | xargs -r ls -l
Concatenate all .txt files residing in the current directory tree,"find . -name '*.txt' -not -name ""all.txt"" | xargs cat > all.txt"
Search for 'Attached: Yes' in all regular files under '/proc/scsi' directory tree matching the path '/proc/scsi/usb-storage' and show only the matched filenames,find /proc/scsi/ -path '/proc/scsi/usb-storage*' -type f | xargs grep -l 'Attached: Yes'
Find all the *.pl files  beneath the current directory.,"find . -name ""*.pl"""
find all the files in the file system which have been modified in the last 60 minutes,find / -mmin -60
move all the files in the current folder  to temp folder and search atleast in one subfolder,"find . -mindepth 1 -print0|xargs -0 -I, mv , /tmp"
"Remove all files in and below the current directory whose names begin with ""not""",find . -name not\* | tr \\n \\0 | xargs -0 rm
Recursively finds all '*.pdf' files in a current folder and removes them without prompting.,find . -name '*.pdf' -exec rm -f {} \;
List all *.java files/directories under /home/bluher with their full paths,find /home/bluher -name \*.java
display all the directories in the folder master-,find master -type d | sort
List all *.png files/directories under /home/kibab directory,find /home/kibab -name '*.png' -exec echo '{}' ';'
"Search for ""#define"" in all files in the current directory, excluding backup files *~, *.orig, *.bak","find . -maxdepth 1 ! -regex '.*~$' ! -regex '.*\.orig$' \     ! -regex '.*\.bak$' -exec grep --color ""#define"" {} +"
display a long listing of the files in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f -exec ls -l {} +
display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems,find / -nouser \( -fstype jfs -o -fstype jfs2 \) -ls
Find the passwd file under root and one level down.,find -maxdepth 2 -name passwd
find all regular files  then display the number of occurrences of banana without lines not proper end,"find . -type f -print0| xargs -0 grep -c banana| grep -v "":0$"""
"find files in the users home directory and for each one, ask the user to confirm to delete the file.",find $HOME/. -name *.txt -ok rm {} \;
Find all directories on the system whose size is greater than 50k,find / -type d -size +50k
"delete all the files ending with ""~"" in current folder","find . -name ""*~"" -print | xargs rm"
Find all directories under current directory and set their permission to 775,find -type d exec chmod 775 {} +
Show manual page of find utility,man find
"Find all files/directories with '.xml' extension that start with 'log4j' in their names under '/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/' directory tree, search for files that contain the string 'CONSOLE' in their contents, then search for the string 'ASYNC' in the matched files and display the matched lines along with their filenames","find ""/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/"" -iname ""log4j*.xml"" | xargs -I % grep -ilr ""CONSOLE"" ""%"" | xargs -I % grep -H ""ASYNC"" %"
display all the regular/normal files in the current folder that are not accessed in the last 10 minutes,find . -type f -amin +10
Search the file system for regular files whose names are shorter than 25 characters,"find / -type f|egrep ""/[^/]{0,24}$"""
Make a playlist out of all the mp3 and ogg files in the home directory,find ~ -type f \ > mynewplaylist.m3u
recursively convert all symlinks under the current working folder to its regular file,"find . -type l | while read f; do /bin/cp -rf --remove-destination -f $(find . -name $) ""${f}"";done;"
Show the list of files that are not owned by user wnj or are not newer than file `ttt',find / \! \( -newer ttt -user wnj \) -print
Find all files that are set user ID to root,find . -user root -perm -4000 -print
"display all the configuration files in ""/etc"" folder along with their last access and modified timestamps","find /etc -name ""*.conf"" -printf ""%f accessed %AF %Ar, modified %TF %Tr\n"""
Print your/dir if it's an empty directory,find your/dir -prune -empty -type d
"start from current directory, skip the directory src/emacs and all files and directories under it, and print the names of the other files found",find . -wholename './src/emacs' -prune -o -print
Print the current directory,find -mindepth 0 -maxdepth 0
"display all files in the file system which are bigger than 50MB and having size ""filename"" in them","find / -size +50M -iname ""filename"""
Find all files/directories named 'foo' in the entire filesystem,find / -name foo
Find all *.rb (regular) files under current directory and count their line numbers,"find . -name ""*.rb"" -type f -exec wc -l \{\} \;"
Search for non-empty files,find . ! -size 0k
display the contents of all the files in the current folder which start with test ( case insensitive search ),find . -iname '*test*' -exec cat {} \;
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iname ""*linkin park*"""
"Create archive ""backup1.tar"" of all subdirectories of the current directory","find . -mindepth 1 -maxdepth 1 -type d | awk 'BEGIN {FS=""./""}; {print $2}' | xargs -d '\n' tar czf backup1.tar"
Find regular files whose names end in .JPG,"find . -type f -name ""*.JPG"""
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,find . -name foo.mp4 | sed 's|/[^/]*$||'
Find all files/directories named 'document' in the entire filesystem,find / -name document -print
Find files that have a modification time of a day ago,find / -mtime 1
find all '*.c' files under $HOME directory which context contains sprintf,find $HOME -name '*.c' -print | xargs grep -l sprintf
display a long listing of all fles in current folder which have been modified in the last 60 minutes,find . -mmin -60 -ls
"List all files/directories under current directory matching the posix-egrep type regex "".+\.$"" in their names","find . -regextype posix-egrep -regex "".+\.$"" -print0 | xargs -0 -n 1 ls"
"Rename the *.so files in the current directory tree prepending their names with ""lib""","find . -name ""*.so"" -printf ""mv '%h/%f' '%h/lib%f'\n"" | bash"
Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree,"find /mnt/zip -name ""*prefs copy"" -print | xargs rm"
Print the largest 20 files under current directory,find . -type f -printf '%k %p\n' |sort -n |tail -n 20
Show directory sizes in KB and sort to give the largest at the end,du -sk $(find . -type d) | sort -n -k 1
Find deb packages in the current directory recursively,"find . -type f -and -iname ""*.deb"""
"Search the files from the current directory tree for ""foo""",find . -exec grep -l foo {} \;
Prints total number of lines of all *.php files in a current folder and subfolders.,"cat `find . -name ""*.php""` | wc -l"
find all the files  in the folder /opt which have been changed in the last 120 minutes,find /opt -cmin -120
List all regular files in the current directory tree,find . -type f -exec ls -l '{}' \;
Search everywhere for hidden file `.profile',find / -name .profile
long list al the files in the current directory which have only read permission to the group,find . -perm 040 -type f -exec ls -l {} \;
"Find all regular files that were modified more than 60 days ago under '/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps","find /path-to-directory -type f -mtime +60 -printf ""%T@ %p\n"" | sort"
Compress files excluding *.Z files,"find . \! -name ""*.Z"" -exec compress -f {} \;"
Search the current directory tree for directories that can be opened by noone,find -type d ! -perm -111
list all .c or .sh regular files.,find . -type f \
"Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor",find . | grep -E -v '\.png$|\.class$' | vim -
Print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/*,find /path/to/directory/* -maxdepth 0 -type d
Find all regular files with '.txt' extension excluding 'README.txt' files under current directory tree,"find . -type f -name ""*.txt"" ! -name README.txt -print"
"find all "".flac"" files starting with ""cmn-"" and search for files having CJK characters using unicodes",find . -name 'cmn-*\.flac' -print | grep -P './cmn-[\x4e00-\x9fa5]\.flac'
display all files in the current folder expect text files,"find . -name ""*.txt"" -prune -o -print"
Find all the files whose permissions are 777,find . -type f -perm 0777 -print
Find file `foo.bar' and delete it,"find /home -name foo.bar -type f -exec rm -f ""{}"" ';'"
Find recursively the latest modified file in the current directory,"find . -type f | sed 's/.*/""&""/' | xargs ls -E | awk '{ print $6,"" "",$7 }' | sort | tail -1"
Remove all files that were older than 3 days,find . -type f -mtime +3 –exec rm –f {} \;
"Counts total number of all '*.py' files beginning from root folder, and shows 'tqdm' progress bar.",find / -name '*.py' -exec cat \{} \; | tqdm --unit loc --unit_scale True | wc -l
Search for files/directories with the case insensitive pattern anaconda* in /var/log,find /var/log/ -iname anaconda*
Search for regular expression 'expr' in all .c and .h files from the current directory tree,find -name '*.[ch]' | xargs grep -E 'expr'
"Find all files/directories in entire file system that have  ""write"" bit set for either the owner, the group, or others","find / -perm /u+w,g+w,o+w"
List every directory under current directory with their child executable files,find . -type d -print -exec bash -c 'find {} -type f -depth 1 -perm +0111 | sort -r' \;
"find all files in and under the current directory that have read, write and execute permissions set for all users.",find . -perm 777 -print
"Search all files in the current directory tree, except *.html and *.svn*, for ""SearchString""",find . ! -name '*.html' ! -name '*.svn*' -exec grep 'SearchString' {} /dev/null \;
"Find all files whose names end with ""~"" in the /home/peter directory tree, following symlinks, and delete them",find -L /home/peter -name *~ -exec rm '{}' \;
display all the text files in the current folder,find -name “*.txt”
Find recursively regular files in the current directory tree,find . -type f -print
Find all files under Mainfolder directory and redirect the output to outputfle,find Mainfolder -type f > outputfile
Find all files under /path and below writable by `group' and `other',"find /path -perm -g+w,o+w"
"search for the ip ""192.168.1.5"" in all the files in /etc folder","find /etc/ -iname ""*"" | xargs grep '192.168.1.5'"
Recursively prints .txt files in current directory,find $ -name \*.txt -print
Search directory tree $DIR for *.txt files,"find $DIR -name ""*.txt"""
display all the header files  and cpp files in the current folder,find \ -print
search for files which are writable by either their owner or their group,find . -perm /220
List all *fink* files/directories in entire file system,find / \( -type f -or -type d \) -name \*fink\* -ls
display all the statistics of the files in the current folder and discard the errors,find . -type f -exec stat {} \; > /dev/null
"Recursively copy all directories in ""/path/to/source"" to ""/path/to/dest/"" preserving directory hierarchy",find /path/to/source -type d | cpio -pd /path/to/dest/
search for a word in all the php files in the current folder and display the matching lines. PLus at the end takes multilple files as input,find . -name \*.php -type f -exec grep -Hn '$test' {} \+
search for text files in the folders /home/hobbes/ /home/calvin/,find /home/hobbes/ /home/calvin/ -name “*.txt”
"change the permissions of all the files ending with ""fits"" in the folder ""/store/01""","find /store/01 -name ""*.fits"" -exec chmod -x+r {} \; \"
Copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure,find . -type f -not -path '*/exlude-path/*' -exec cp --parents '{}' '/destination/' \;
Delete all .svn files/directories under current directory,find . -name .svn | xargs rm -fr
search for files having python in filename,find / -iname '*python*'
Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory,find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -ls
find all regular/normal files in current folder and display the filename and size,"find $/* -type f -exec stat -c ""f%15s %n"" {} +"
"Find all files under current directory whose file type description contains ""image"", display only path to each file.",find . -type f -exec file {} \; | grep -o -P '^.+: \w+ image'
perform a case insensitive search,"find  / -type d -iname ""apt"" -ls"
search for dbmsspool.sql file in the current folder,find . -print|grep ?i dbmspool.sql
Find all regular files under current directory,find . -type f
Search the /path directory tree for files lacking the group writable bit,find /path ! -perm /g+w
Set permissions to 600 for regular files under media/,find media/ -type f -exec chmod 600 {} \;
Find recursively all Emacs backup files in the current directory and remove them,find . -name '*~' | xargs rm
"display all symbolic links in the folder ""myfiles""",find /myfiles -type l
Find all Executable files,find / -perm /a=x
find all jar files in current folder and search for a file in all these jar's,"find . -name ""*.jar"" -exec jar -tf {} \;|grep  ""message_track.properties"""
"Print the UID of the owner, GID of the group, the permission bits and the path into /tmp/dir1.txt for all files/directories under /path/to/dir1","find /path/to/dir1 -printf ""%U %G %m %p\n"" > /tmp/dir1.txt"
Hunting down files with at least one banana,"find . -type f -print0| xargs -0 grep -c banana| grep -v "":0$"""
display a long listing of all the regular/normal files in the current folder along with their md5sum,"find . -type f -exec sh -c 'printf ""%s %s \n"" ""$"" ""$""' '' '{}' '{}' \; | awk '{$8=""""; print $0}'"
search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order,find . -name '*.cpp' | sed -e 's/\/[^/]*$//' | sort | uniq
Find and display contents of somefile.cf in a Weblogic domain directory,find $ 2> /dev/null -exec ls {} \; -exec cat {} \;
Save the list of all regular files accessed less than 10 days ago as `March.files',find / -type f -atime -10 > March.files
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them,find ${userdir}/${i}/incoming -mtime +2 -type f -exec rm {} \;
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tc %p\n',find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tc %p\n'
"Find files whose pathnames contain ""string"" and print these pathnames replacing 'search string' with 'new string'",find . |xargs grep search string | sed 's/search string/new string/g'
"Replace the first occurrence of ""foo"" with ""bar"" on every line in .txt files from the current directory tree",find . -type f -name '*.txt' | xargs --replace=FILE sed --in-place 's/foo/baz/' FILE
"Set the group to ""username"" for all files with GID=1000 in the current directory tree",find -gid 1000 -exec chown -h :username {} \;
Find all files whose filename does not end with *.html.,"find . -type f -not -name ""*.html"""
Non-recursively finds all '*.pdf' files in a current folder and removes them.,"find . -maxdepth 1 -name ""*.pdf"" -print0 | xargs -0 rm"
Find all *.txt and *.json files,find . -type f \
"search for ""message.txt"" in the folder .cache/bower and display its contents","find .cache/bower/ -name ""message.txt"" | xargs cat"
Find links to any file that happens to be named `foo.txt',find . -lname \*foo.txt
Find all files on the system whose names are 'autoload.php',find / -name autoload.php
"display all the files  in the current folder excluding those which are present in ""./src/emacs"" folder",find  .  -path  './src/emacs'  -prune  -o -print
Replace 'company' with 'newcompany' in all files under current directory and keep backups with .bakup extension,find -type f -print0 | xargs -0 sed -i .bakup 's/company/newcompany/g'
"Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output",find . -type f -exec grep California {} \; -print | wc -l
search for a word in all the .C files in the current directory,"find . -name ""*.c"" -exec grep -ir ""keyword"" {} "";"""
Find all hidden files starting from the directory given as variable $FOLDER,"find $FOLDER -name "".*"""
Find all regular files under current directory (no subdirectories) and replace every occurrences of 'toreplace' with 'replace' in those files,find . -maxdepth 1 -type f -print0 | xargs -0 sed -i 's/toreplace/replaced/g'
find all the files that have been modified in the last 2 days,find . -type f -daystart -mtime -2
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f -ls
Removes all empty folders under current folder.,find . -type d -exec rmdir {}\;
Create a script to find the largest file in a directory.,"#!/bin/bash

find . -type f -printf '%s %p
' | sort -nr | head -n 1"
search for all html files in current folder folder and create a zip file of all these files,"find . -type f -name ""*.html"" | zip -j all-html-files -@"
"Search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files",find /srv/${x} -mindepth 1 -type f -not -amin -10080 -exec rm {} \;
Find symbolic links under /etc/,find /etc -type l
Display file status for all regular files in the current directory tree suppressing error messages,find . -type f -exec stat {} \; > /dev/null
find all the files in the current directory which start with t and have been modified between one hour  and 12 hours  ago.,"find . -mmin -720 -mmin +60 -type f -name ""t*"" -exec ls -l '{}' \;"
search for a word in all the normal/regular files in the current folder,"find . -type f | xargs grep ""text"""
Find all files/directories named 'foo.bar' under './dir1' and './dir2' directory trees,find ./dir1 ./dir2 -name foo.bar -print
Find all 777 permission files/directories under current directory tree,find -perm 777
"Find files that end in "".gz"" and execute ""awk -F, '$1 ~ /F$/'"" on their unzipped contents","find . -maxdepth 1 -name \*.gz -print0 | xargs -0 zcat | awk -F, '$1 ~ /F$/'"
show all the regular files in current folder,find . -type f -print0
"Replace ""foo"" with ""bar"" in all PHP files in the current directory tree","find . -name ""*.php"" -exec sed -i 's/foo/bar/g' {} \;"
find all the database files in the folder /var/named,find /var/named -type f -name *.db
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","find ""$searchpath"" -name ""$filepat.[ch]"" -exec grep --color -aHn ""$greppattern"" {} \;"
Find all *.txt files/directories under current directory and execute the python script myscript.py with all their paths as arguments to the script,"find . -name ""*.txt"" -exec python myscript.py {} +"
display all the files in the current folder which have been modified in the last 24 hours,find . -mtime -1
"Find all directories matching pattern ""*log*"" in the current directory tree and print the last 2 lines of their 'ls' listing","find . -type d -name ""*log*"" | xargs -I {} sh -c ""echo {};ls -la {} | tail -2"""
Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago,find . -mmin -60 -mmin +5
"Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command","find -maxdepth 1 -name '*.sql' -exec cat '{}' \; | sed -e 's/ , );/1,1);/g' | mysql -D ootp"
display all the directories in the current folder and create a skeleton of make directory commands with all these folders,find -type d|sed -r '/^.$/{s:.:#!/bin/bash:};{s/^\./mkdir -p &/}'
find  files which  full path name is /tmp/foo/bar under foo directory and print,find foo -path /tmp/foo/bar -print
Find all files/directories under current directory that were accessed less than 1 day ago,find . -atime -1 -print
find all the files in the entire file system whose size is greater than 20MB,find / -type f -size +20000k
copy the file header.shtml to those dirs,find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
"find all the png files in current folder which are present in the pattern list file ""search.txt""",find . -name '*.png' | grep -f <(sed s/^/[0-9]_[0-9]_[0-9]_/ search.txt)
run ls command on files found,"find . -name ""*.pl"" -exec ls -ld {} \;"
Set permissions for files in `foldername' to 777,"find foldername -exec chmod a+rwx {} "";"""
Find all php files in current directory and delete lines matching the regex '<\?php \/\*\*\/eval(base64_decode(.*));.*\?>' in those files,"find . \( -name ""*.php"" \) -exec grep -Hn ""<\?php /\*\*/eval(base64_decode(.*));.*\?>"" {} \; -exec sed -i '/<\?php \/\*\*\/eval(base64_decode(.*));.*\?>/d' {} \;"
"find all the files ending with "".sh"" in the folder /dir excluding those wth the names foo and bar.","find /dir \( -name foo -prune \) -o \( -name bar -prune \) -o -name ""*.sh"" -print"
Find the file whose inode number is 1316256,find . -inum 1316256
Find all files/directories named 'articles.jpg' under 'images' directory tree,"find images -name ""articles.jpg"""
"find all the ""passwd"" files in the entire file system",find / -iname passwd
Look for any files that have not been modified in the last two days,find -mtime +2
Find only files under /etc with the size of 100k-150k,find /etc -size +100k -size -150k
Search the current directory tree for all image files,"find . -type f -regex "".*\.\(jpg\|jpeg\|gif\|png\|JPG\|JPEG\|GIF\|PNG\)"""
"Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command","find . -maxdepth 1 -name '*.sql' -exec ""sed -e 's/ , );/1,1);/g' '{}' | /usr/bin/mysql -D ootp"" \;"
"start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found","find . -wholename './src/emacs' -prune , -print"
find all the files in current directory of size exactly 6MB.,find . -size 6M
Finds file 'Subscription.java' and changes to containing folder.,cd $(find . -name Subscription.java | xargs dirname)
Create an archive named newArch from the contents of ./test directory,"find ./test -printf ""././%f\n""| cpio -o -F newArch"
"Find all regular files under $FOLDER directory tree that start with '"".' and end with '""' in their names and were modified in less than $RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $SKIP_FILE","find ${FOLDER} -type f ! -name \"".*\"" -mtime -${RETENTION} | egrep -vf ${SKIP_FILE}"
List all directories of the $topdir directory tree that contain a Makefile and at least one .py file,"find ""$topdir"" -name '*.py' -printf '%h\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\n' | sort -u"
Select everything selected by * without descending into any directories,find * -maxdepth 0
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today,find -maxdepth 1 -type f -daystart -mtime -1
Delete all files  named 'core' under current directory,"find . -name ""core"" -exec rm -f {} \;"
Find root's files in the current directory tree,find ./ -user root
"Search the XML files from directories /res/values-en-rUS and /res/xml for string ""hovering_msg""","find /res/values-en-rUS /res/xml -iname '*.xml' | while read file; do grep -i ""hovering_msg"" ""$file""; done"
Delete all empty directories in minimum 1 level down the directory 'directory',find directory -mindepth 1 -type d -empty -delete
Find files owned by no group,find / -nogroup
find all the normal/regular files in current directory and display file names with new line as delimiter,find . -type f -exec printf '%.0sbla\n' {} +
Find all *.txt files under / and print their sizes and paths,find / -name '*.txt' -exec du -hc {} \;
find all the files in the current folder which have not been modified in the last 90 days and force delete them,find . -mtime +90 -type f -exec rm -f {} \;
"Search for file ""file"" between level 2 and 3 of the directory tree",find -mindepth 2 -maxdepth 3 -name file
Search the /mnt/raid/upload directory tree for files that have not been modified within the last 5 days,find /mnt/raid/upload -mtime +5 -print
List all the .c files under the current directory and below in a 3 column format,"find . -name ""*.c"" | xargs -n3"
Truncate all non-empty regular files under the current directory,find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp /dev/null {}
find  js file which name is not  'glob-for-excluded-dir'  under current directory.,find . -name '*.js' -\! -name 'glob-for-excluded-dir' -prune
Find all files under $d directory (no sub-directories) that are executable by owner and print only their names,find $d -maxdepth 1 -perm -100 -type f | sed 's#.*/##'
Find recursively the latest modified file in the current directory,find . -type f -print0 | xargs -0 ls -ltr | tail -n 1
"list complete path name to process associated with pid ""$1""",find /proc/$1/exe -printf '%l\n'
"Find all files/directories under mnt/naspath that were modified in last 24 hours, calculate the total size and redirect the result to /tmp/size.log file",find /mnt/naspath -mtime 0 -print0 | du --files0-from=- -hc | tail -n1 >> /tmp/size.log
find all regular files in current directory and replace the word searc to replace in them.,find . -type f -exec sed -i 's/searc/replace/g' {} \;
Find files in the /var/log folder which were modified between 60 minutes and 10 minutes ago,find /var/log/ -mmin -60 -mmin +10
"Search directory foo for files containing ""/tmp/foo/bar"" in their full names",find foo -path /tmp/foo/bar -print
Find all *.xml.bz2 files under current directory,"find . | grep "".xml.bz2$"""
"Search the current directory tree for files and directories whose names do not end in ""exe"" and ""dll""",find . | grep -v '(dll|exe)$'
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories,"find . -maxdepth 1 -name ""*.jpg"" -size -50k | xargs rm -f"
"Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size",find / \( -name '*.txt' -o -name '*.doc' -o -size +5M \)
Search the current directory for PHP files,"find . -type f -name ""*.php"""
"find all the html, javascript and text files in the current folder","find . -type f -name ""*.htm*"" -o -name ""*.js*"" -o -name ""*.txt"""
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.,"find . -type f -name "".*"" -newer .cshrc -print"
find all the empty directories in current folder and delete them,find ./ -empty -type d -delete
Perform a default Plesk configuration,find /var/www/vhosts/*/httpdocs -type f -iwholename “*/wp-includes/version.php” -exec grep -H “\$wp_version =” {} \;
"finds all directories named CVS, and deletes them and their contents.",find . -type d -name CVS -exec rm -r {} \;
Find all files/directories under current directory and run <script> for each of them,find -exec <script> {}\;
Convert all markdown files on the system to html,"find / -name ""*.md"" -type f -exec sh -c 'markdown ""${0}"" > ""${0%.md}.html""' {} \;"
"Delete all empty directories in the ""test"" directory tree",find test -depth -type d -empty -delete
Find all TXT files that belong to user root,"find / -user root -iname ""*.txt"""
"find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names",find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'
Find all directories under /path/to/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension,find /path/to/dir -mindepth 1 -maxdepth 1 -type d -execdir sudo tar -zcpvf {}.tar.gz {} \;
"Removes resursively all files and folders named "".DS_Store"".","find . -name "".DS_Store"" -print0 | xargs -0 rm -rf"
Find all directories under ~/code without descending into hidden directories and print them appended with :,find ~/code -name '.*' -prune -o -type d -printf ':%p'
Identify files that do not have a listing in the /etc/passwd or /etc/group file,find / -nouser -o  -nogroup
Search the current directory tree for regular files last changed more than 14 days ago,find -type f -ctime +14
"List the MD5 digest of all files under ""teste1"" and ""teste2"" sorted alphabetically",find teste1 teste2 -type f -exec md5 -r {} \; | sort
display all the files in the current folder along with the modification time and display file names of the last 10 modified files,"find . -type f -printf '%T@ %p\n' | sort -n | tail -10 | cut -f2- -d"" """
Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place,"find . -type f -maxdepth 1 -exec sed -i ""s/$P_FROM/$P_TO/g"" {} \;"
Delete all files under $INTRANETDESTINATION/weekly directory tree that were modified more than 32 days ago,find $INTRANETDESTINATION/weekly -mtime +32 -exec rm {} \;
"Find files named ""ppp.conf"" in the /etc directory tree",find /etc -name ppp.conf
"Find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!'","find . -name ""*.rb"" -type f | xargs -I {} echo Hello, {} !"
display all the files in the home folder which are smaller than 500 bytes,find ~ -size -500b
Show directory sizes in KB and sort to give the largest at the end,find . -type d -exec du -sk {} \; |  sort -n -k 1
keep only read access to all the files in a directory.,find /path/to/dir ! -perm 0644 -exec chmod 0644 {} \;
display all the files in current directory with each file name displayed twice in the same row,find . | sed 's/.*/& &/'
"Find all files/directories under mnt/naspath without descending into .snapshot directory, calculate the total size and redirect the result to /tmp/size.log file",find /mnt/naspath -mtime 0  -name .snapshot -prune -o \ | du --files0-from=- -hc | tail -n1 >> /tmp/size.log
Find all directories under current directory and change their permission to 755,find . -type d -exec chmod 755 {} \;
Remove all *.bak files under current directory,find . -type f -name \*.bak -print0 | xargs -0 rm -v
"Find all files whose names end with ""~"" in the /home/peter directory tree, following symlinks, and delete them",find -L /home/peter -name *~ -exec rm '{}' +
Delete all .pyc files in the current directory tree,"find . -name ""*.pyc"" | xargs -0 rm -rf"
"Find all `doc.txt' files in the current directory tree printing ""found"" for each of them","find ./ -name doc.txt -printf ""found\n"""
"Find all files under current directory, calculate their md5sum and print the output to MD5SUMS",find . -type f -exec md5sum {} \; > MD5SUMS
Find all files which belong to user lal and change their ownership to ravi,find / -user lal -exec chown ravi {} \;
"change the permission of all the normal/regular files from 777 to 755 in the folder ""/home/user/demo""",find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \;
Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding *.log files/directories,find /home/baumerf/public_html/ -mmin -60 -not -name \*.log
Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days,"find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -printf ""\t- It seems that %p wasn't modified during last 30 day\n"""
"Copy the current directory tree to '/path/to/destination/dir' preserving permissions, timestamp and ownership",find . | cpio -pdumv /path/to/destination/dir
"Find all files, folders, symlinks, etc in the current directory recursively",find .
Find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths,"find /home/feeds/data -type f -not -path ""*def/incoming*"" -not -path ""*456/incoming*"""
Removes all empty folders that ends with any-cased '*.bak' under '/Users/' path.,find /Users -type d -iname '*.bak' -print0 | xargs -0 rmdir
Print the contents of all file* files under current directory,"perl -ple '' `find . -name ""file*""`"
"Find all C source code files from the current directory tree that contain ""keyword"" in their pathnames, ignoring the case",find . -type f \( -iname “*.c” \) |grep -i “keyword”
"Copy all files and directories under the current directory into ""../new"" preserving relative paths",find -print0 | sort -z | cpio -pdv0 ../new
Print your/dir if it's an empty directory,find your/dir -prune -empty -type d
move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link,find . -follow -iname '*.htm' -print0 | xargs -i -0 mv '{}' ~/webhome
"start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found","find . -wholename './src/emacs' -prune , -print"
"Find all files in the current directory tree whose names are ""file_name"", except for those with pathnames matching pattern ""./dirt to be Excluded/*""","find ./ -iname file_name ! -path ""./dirt to be Excluded/*"""
Find all 400 permission files under /data directory,find /data -type f -perm 400
display all the text files in a folder,find $1 -type f -name '*'$n'.txt'
Find files on the system whose names begin with either x or X,"find / -name ""[Xx]*"""
"Search the current directory tree for files named ""somename"", case insensitive",find -iname 'somename'
Find all .core files on the system starting from / and delete them,"find / -name ""*.core"" -print -exec rm {} \;"
Print a sorted list of the extensions of the regular files from the current directory tree,"find . -type f -name ""*.*"" | awk -F. '{print $NF}' | sort -u"
Send Output From Find The Find Command To A File,find / -name *.mp3 -fprint nameoffiletoprintto
returns a list of  files create time is 1 minute ago under the root directory.,find / -newerct '1 minute ago' -print
Replace spaces with underscores in the names of all files and directories in the current directory tree,"find . -depth -name '* *'  | while IFS= read -r f ; do mv -i ""$f"" ""$/$"" ; done"
find all the files in the home folder that belong to a specific user,find /home -user <usernmae> -print
"display all the "".c"" files in the current directory",find . -name \*.c -print
"find all file name in curent directory ,  -exec will file all file output  awk used here for print only file name .",find .  -type f  -exec ls -lrt {} \; |awk -F' ' '{print $9}'
"search for text files in the directory ""/home/user1"" and copy them to the directory /home/backup",find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents
Find all files/directories in the paths expanded by the glob pattern '.*',find .*
Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them,find . -name SCCS -prune -o -print
search for al cpp files in current folder and display unique parent directory of these files in sorted order,"find . -name ""*.cpp"" -exec dirname {} \; | sort -u"
search for the file foo.txt in the current folder and open it in vi editor,find -name foo.txt -execdir vim '{}' ';'
Counts total line number of all *.php file in a current folder and subfolders.,cat `/gnuwin32/bin/find.exe . -name *.php` | wc -l
Search for 'example' in all regular files under current directory tree and also print the filenames,"find . -type f -exec grep ""example"" '{}' \; -print"
display all the empty files in the current folder,find . -empty
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under /home/www and below",find /home/www/ -type f -exec sed -i 's/subdomainA\.example.com/subdomainB.example.com/g' {} +
Search the entire file hierarchy for files ending in '.old' and delete them.,"find / -name ""*.old"" -delete"
Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set,find /path/to/dir ! -perm 0644 -exec chmod 0644 {} \;
display all the files in the current folder,find .
Find all .js files in the $d directory tree whose pathnames do not contain whitespaces,"find $d -name '*.js' | grep -v "" """
Exclude directory from find . command,find . -name '*.js' | grep -v excludeddir
Print the list of files changed within the last minute,find / -newerct '1 minute ago' -print
Search for 'string-to-find' in all files under current directory tree matching the regex 'filename-regex.\*\.html' in their paths and show the matched lines along with the filenames,find . -regex filename-regex.\*\.html -exec grep -H string-to-find {} \;
"Find all *.rb  files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!'","find . -name ""*.rb"" -type f | xargs -I {} echo Hello, {} !"
List all *.c files in entire file system,"find / \! -name ""*.c"" -print"
Assign the alias rm5g to a find command that removes any .tar file larger than 5 gigabytes.,"alias rm5g=""find / -type f -name *.tar -size +5G -exec rm -i {} \;"""
Search for 'mystring' in all *.txt files under current directory,"find . -name ""*.txt"" -exec egrep mystring {} \;"
find all the files that have been changed exactly 24 hours ago,find . -ctime 1 -type f
"Search the .log files in the current directory tree for string ""The SAS System""","find `pwd` -name ""*.log"" -exec grep ""The SAS System"" {} \;"
List all *.txt files/directories under /etc,"find /etc -name ""*.txt"" -exec ls -l {} \;"
display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories,"find . -maxdepth 1 -name ""*.jpg"" -size -50k | xargs echo rm -f"
Find all .txt files in the current directory tree on a BSD system and edit them with `vim',"find . -name ""*.txt"" | xargs -o vim"
Measure the disk space taken up by all *.txt files in directory trees folder1 and folder2,find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1
Print a detailed list of all regular files from the current directory tree,find . -type f -ls
Search directory tree `foo' for files named `Headers',find foo -name Headers
Compress every file in the current directory tree with gzip and keep file extensions the same,find folder -type f -exec gzip -9 {} \; -exec mv {}.gz {} \;
List all files/directories under $dir_name with size $sizeFile and print them according to the format string  '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n',find $dir_name -size $sizeFile -printf '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n'
Find files/directories that belong to user 'ian' under '/tmp' directory tree,find /tmp -user ian
"remove all the files with the name ""Trash"" in the folder /home",find /home -name Trash -exec rm {} \;
Find all files under current directory that match the case insensitive regex .\|./.git and replace  the text matching the case insensitive regex expanded by $1 with $upper2 in these files,"find . -type f \! -iregex '.\|./.git' -exec perl -i'' -pe ""s/$1/$upper2/gi"" {} +"
"Find all files and directories in the current directory tree with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -iname ""*linkin park*"" -exec cp -r {} /Users/tommye/Desktop/LP \;"
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar,"find . -name '*FoooBar*' | sed 's/.*/""&""/' | xargs cp ~/foo/bar"
Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]',find /dev/sd*[a-z] -printf . | wc -c
"search for the file ""file_name"" in the folder /path",find /path -name file_name
Prints total number of lines of all *.c files in a current folder and subfolders.,"find . -name '*.c' -print0 |xargs -0 wc -l|grep -v total|awk '{ sum += $1; } END { print ""SUM: "" sum; }'"
"find all the directories with the name ""some-dir"" in the current folder and move them to another folder and do not search in subfolders","find ./ -maxdepth 1 -name ""some-dir"" -type d -print0 | xargs -0r mv -t x/"
Scan every file in /etc for IPV4 addresses.,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
Search the src/ directory recursively for .c and .h files,find src/ -name '*.[ch]'
"Set permissions to ug=rwx,o= for directories under the $d directory tree","find $d -type d -exec chmod ug=rwx,o= '{}' \;"
Find the 5 largest regular files in the current directory and below.,find -type f -exec du -Sh {} + | sort -rh | head -n 5
search for a directory in a folder taking name as argument and assign the first instance of it to a variable,DIR='find $HOME -type d -name $1 | head 1'
Delete all files in the TBD directory that were modified more than 1 day ago,find /TBD/* -mtime +1 | xargs rm -rf
"Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries","find -type f -printf ""%s %p\n"" | sort -nr | head -n 4 | cut -d ' ' -f 2"
search for all the mp3 files in the current folder and change the character encoding of them to  EUR-KR,"$ find . -name ""*mp3"" -print0 | xargs -0 mid3iconv -e EUR-KR -d"
"Find all files named ""foo_bar"" in the current directory recursively",find -name foo_bar
find all the files in the current folder which have the name net or comm in them,find . -regex '.*\(net\|comm\).*'
Find and show all files in the current directory tree that are exactly 2000 kB,find . -size 2000k
display all files in the current folder which do not match the regular expression,"find . -not -regex "".*test.*"""
Show the list of user wnj's files that are newer than file `ttt',find / -newer ttt -user wnj -print
Delete all files in directory $DIR that have not been accessed in at least 5 days,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
"Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.",find . -iname foo
"Remove all regular files from the current directory tree whose names do not end with ""txt""",find . -type f -not -name '*txt' -print0 | xargs -0 rm --
Remove trailing spaces from all files under current directory ignoring directories wtih *.git*  in their paths,find . -type f -not -iwholename '*.git*' -print0 | xargs -0 perl -pi -e 's/ +$//'
Find files/directories under '/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time,find /dir -newer yesterday.ref -a \! -newer today.ref -print
Find all empty directories under /tmp,find /tmp -type d -empty
Find all *foo files/directories under current directory,find . name *foo
"find all the files in the entire file system which belong to the user ""roger""",find / -user roger -print
find all log files larger then 100MB  in /home directory and delete them .,find /home -type f -name *.log -size +100M -exec rm -f {} \;
Find all files/directories under 'A' directory tree excluding the paths containing the directory 'a',"find A \! -path ""A/a/*"""
find the top 25 files in the current directory and its subdirectories,find . -type f -exec ls -al {} \; | sort -nr -k5 | head -n 25
Find all files recursively starting from / that have been modified in the past 30 minutes and list them,find / -mmin -30 -ls
Find the passwd file under root and two levels down,find / -maxdepth 3 -name passwd
"search for a file ""file"" in current folder and if the file is found quit !",find -name file -quit
Find all files/directories that belong to the group 'accts' under '/apps' directory tree,find /apps -group accts -print
display all regular files in current folder which have spaces in their name,"find -type f -name ""* *"""
"Create symbolic links in the current directory for all files excluding ""CONFIGFILE"" located in ""/your/project""","find /your/project -maxdepth 1 ! -name ""CONFIGFILE"" -exec ln -s \{\} ./ \;"
Search for all zero-byte files and move them to the /tmp/zerobyte folder,find test -type f  -size 0 -exec mv {} /tmp/zerobyte \;
Search directory tree $DIR for *.txt files,"find $DIR -name ""*.txt"""
Find grub.conf files in entire file system,find / -name grub.conf
display long listing of first 10 directories in the current folder,find . -type d -ls | head
Search the current directory tree for executable files and searchable directories,find -executable
find all the files in the home folder which have been modified after a file,find $HOME -newer ~joeuser/lastbatch.txt
"Copies all files with ""FooBar"" in the path under the current directory to the '~/foo/bar' directory.",find . | grep FooBar | xargs -I{} cp {} ~/foo/bar
"Search the current directory tree for all files matching either pattern ""*.rb"" or pattern ""*.py""","find . -name ""*.rb"" -or -name ""*.py"""
Find all files under current directory and count the output line number,find . -type f | wc -l
Print '-okdir is an action so an implicit -print is not applied' for each file/directory found by the name 'file' under current directory tree,find -name file -okdir echo '-okdir is an action so an implicit -print is not applied' \;
"Print the paths of all files in the current directory tree that contain ""abc"" replacing ""abc"" with ""xyz""",find . |xargs grep abc | sed 's/abc/xyz/g'
Delete all files with '.old' extension under current directory tree,find . -name “*.old” -exec rm {} \;
Find all files named 'new' under current directory tree and display their contents,find . -name new -print -exec cat {} +
"Rename recursively all files in the current directory tree that are called ""article.xml"" to ""001_article.xml""","find . -name ""article.xml"" -exec rename 's/article/001_article/;' '{}' \;"
find all the files in the current folder that have not been modified in the last 24*3 hours,find ./ -mtime +3
Find all files/directories with inode number 16187430 and move them to 'new-test-file-name',find -inum 16187430 -exec mv {} new-test-file-name \
Find all directories under current directory whose names are 33 characters long,"find . -type d -name ""?????????????????????????????????"""
Locate files whose status was changed less than 1 day ago,find . -ctime -1 -print
Search for non-empty files,find . ! -size 0k
find all files in the current directory and sub-directories that were modified after the /etc/passwd file was modified,find -newer /etc/passwd
Find all directories under maximum 1 level down the current directory and set their permission to 700,find . -mindepth 1 -type d | xargs chmod 700
Find all hidden regular files under /tmp and below,"find /tmp -type f -name "".*"""
List all empty files in the current directory tree,find . -empty -exec ls {} \;
display all the files in the current folder which have been modified in one hour ago,"find .  -newermt ""1 hour ago"""
Search directory lpi104-6 for files with inode number 1988884,find lpi104-6 -inum 1988884
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f -ls
"Search the regular files of the current directory tree for string ""whatever""",find . -type f -exec grep -H whatever {} \;
Find all regular files with 755 permission under current directory tree and change their permission to 644,find . -type f -perm 755 -exec chmod 644 {} \;
Find all orm.* files/directories under current directory,"find . -name ""orm.*"""
display a long listing of all the directories in current directory,find . -type d -ls
"Find all files/directories with '.mp4' extension and all regular files with '.flv' extension, sort them according to their names and display the first 500 of them","find /storage -name ""*.mp4"" -o -name ""*.flv"" -type f | sort | head -n500"
Go into the first directory whose name contains 1670,cd `find . -maxdepth 1 -type d | grep 1670`
Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests*' folders and prints total count as well.,"find . -name ""*.php"" -not -path ""./tests*"" | xargs wc -l"
Find all files in your home directory and below that are exactly 100M.,find ~ -size 100M
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output,find /tmp -type f -perm -002 | sed '1s/^/Found world write permissions:\n/'
find all the files ending with jpg in current folder and display their count,"find ./ -type f -regex "".*\.[Jj][Pp][gG]$"" | wc -l"
"list in long format all files from / whose filename ends in ""jbd"", not descending into directories that are not readable while searching.",find / \! -readable -prune -o -name '*.jbd' -ls
Get the total sizes of all files under current directory,find . -type f -printf '%p %s\n' | awk '{ sum+=$2}; END { print sum}'
"delete all the normal files in the current directory whcih have the word ""gui"" in their content.",find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
get all the files that are exactly 30 days old,find . -mtime 30 -print
Find the largest 10 directories under current directory,find . -type d -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}
"Search the current directory and its sub-directories for any file that has ""bsd"" somewhere in its name.","find . -name ""*bsd*"" -print"
find all normal/regular files in the current directory,find . -type f -print
"Search for all files with either ""sitesearch"" or ""demo"" in their path names",find . -ipath '*sitesearch*' -ipath '*demo*'
display all the directories in the folder /path/to/dest except tmp and cache directories,find /path/to/dest -type d \( ! -name tmp \) -o \( ! -name cache \) -print
"Find all ""G*.html"" files modified more than 7 days ago in the current directory tree and pass them as arguments to script /path/to/script_7zipi","find . -mtime +7 -name ""G*.html"" -execdir  /path/to/script_7zipi {} +"
"display the base name(name without extension) of all the "".flac"" files in the current folder","find . -name ""*.flac"" -exec basename \{\} .flac \;"
Remove all .txt files from the /full/path/dir directory tree,find /full/path/dir -name '*.txt' -print0 | xargs -0 rm
Print all files and directories in the `.' directory tree skipping SCCS directories,find . -name SCCS -prune -o -print
"Search the files from the current directory tree for text ""documentclass""",find . -type f -print0 | xargs -0 grep -H 'documentclass'
Delete all files under root whose status were changed more than 30 minutes ago,find root -type -f -cmin +30 -delete
Copies all files under the current directory but ones with '*/not-from-here/*' in path to the '/dest/' directory.,find . -type f -not -iname '*/not-from-here/*' -exec cp '{}' '/dest/{}' ';'
Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories,find $1 -perm -u+r -exec chmod g+r {} \;
remove all the log files which have not been modified in the last 5 days,find /logs -type f -mtime +5 -exec rm {} \;
find all normal/regular files in current folder and display the total lines in them,find . -type f -print0 | xargs -0 wc -l
Find all .zip files in the current directory tree,find . -depth -name *.zip
List all *.txt files under current directory that match 'foo=' in their file information,"find . -name ""*.txt"" -type f -print | xargs file | grep ""foo="" | cut -d: -f1"
Recursively removes all files and folders named '.svn' in a current folder.,find . -name .svn |xargs rm -rf
Find all files under current directory and append a null character at the end of each of their paths,find -type f -print0
"find all the files in the file system that start with ""win"" and searched only in the mounted file systems",find / -mount -name 'win*'
Find all the files in file system which are modified 50 days back,find / -mtime 50
find all the files in the current folder which have not been modified in the last 90 days and force delete them,find . -mtime +90 -type f -exec rm -f {} \;
Search the current directory tree for files whose names begin with 'my',find . -name 'my*'
display the count of all normal/regular files in current directory,find . -type f | wc -l
find all the files in the file system which have been modified in the last 10 minutes,find / -mmin -10
Print the number of regular files found in the current directory tree,find . -type f | wc -l
"Find files whose pathnames end in ""config""",find .  -path '*/*config'
display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder,find . -xdev -printf ‘%s %p\n’ |sort -nr|head -20
find all files that do not have read permission to all,find . -type f ! -perm -444
Find files/directories under current directory without descending into it,find -prune
"Search the files under and below /directory/containing/files for ""text to search""","find /directory/containing/files -type f -print0 | xargs -0 grep ""text to search"""
Return the files that are newer than file `myfile',find / -newer myfile
"Find files ending in ""*macs""",find -name '*macs'
find all files that have been used more than two days since their status was last changed,find -used +2
Find all files under current directory and print them appending a null character at the end of each file paths,find . -type f -print0
List root's regular files with permissions 4000,find / -type f -user root -perm -4000 -exec ls -l {} \;
Search the current user's home directory and below for all .png files and copy those files in the directory imagesdir.,find ~/ -name *.png -exec cp {} imagesdir \;
"Find all regular files under $DIR directory tree with "".$TYPE"" extension  where $TYPE expands in the current shell","find $DIR -type f -iname ""*.$TYPE"""
display the name and size of all the regular/normal files  in the var/log folder which are bigger than 100MB,"find /var/log -type f -size +100000k -exec ls -lh {} \; | awk '{ print $9 "": "" $5 }'"
Display file status for all regular files in the current directory tree,find . -type f -exec stat {} + > /dev/null
Find all files/directories whose names start with 'readme'  under '/usr/share/doc' directory tree,find /usr/share/doc -iname readme\*
"look for the largest 200 files over 1,000,000 bytes in the filesystem mounted at ""/usr/pcapps""",find /usr/pcapps/ -mount -type f -size +1000000c | perl -lpe ' s{ }{\\ }g ' | xargs ls -l | sort +4nr | head -200
Find all symlinks under current directory,find ./ -type l
"display all the files in the file system excluding all the "".c"" files","find / \! -name ""*.c"" -print"
"find all directories in the current directory which have the name foo and do not have the extension ""bar""",find . -name '*foo*' ! -name '*.bar' -type d -print
Search the current directory tree for regular .mkv files,"find . -type f -name ""*.mkv"""
"Search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits",find . -perm -664
find all the files that have been changed today,find . -ctime 0 -type f
"remove all the permissions for others to all the files in the current folder which have  read,write,execute access to users,group and others.",find * -perm 777 -exec chmod 770 {} \;
find all the core files in the temp folder and force delete them,find /tmp -name core -type f -print | xargs /bin/rm -f
Find all *.ogg files under the home directory ignoring the case,find $HOME -iname '*.ogg'
Get the directory with least access time under current directory,"find . -type d -printf ""%A@ %p\n"" | sort -n | tail -n 1 | cut -d "" "" -f 2-"
Remove regular files changed more than 15 days ago from the /tmp directory tree,find /tmp/ -ctime +15 -type f -exec rm {} \;
Find all files on the system that have been modified in the last 10 minutes,find / -mmin -10
"Find all files matching pattern '.#*' in the current directory tree and execute ""foobar"" for each of them with the file name as an argument","find . -iname '.#*' -print | while read -r i; do foobar ""$i""; done"
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them,find . -mtime +180 -exec du -sh {} \;
sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp ),"find / -type f -printf ""\n%AD %AT %p"" | head -n 11 | sort -k1.8n -k1.1nr -k1"
"Return the list of files named ""filename"" that are 50 megabytes or larger","find / -size +50M -iname ""filename"""
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found,cd $(find . -name Subscription.java -printf '%h\n')
Apply script 'script.ksh' to all files matching pattern 'image\*.jpg' under the directory tree 'dir',find dir -name image\*.jpg -exec /bin/ksh script.ksh {} \;
Create script filesPermissions.sh that restores the original permissions of the regular files in the current directory tree,"find . -type f |xargs ls -la| awk '{print ""chmod ""$1"" ""$NF}'>./filesPermissions.sh"
Print a list of all duplicate case insensitive filenames in the current directory tree,find . -type f | awk -F/ '{print $NF}' | sort -f | uniq -i -d
Find all files named 'foo' under current directory tree without descending into directories named 'foo',find . -name foo -type d -prune -o -name foo -print
Change permissions to 644 for all files in the current directory tree,find . -type f | xargs chmod -v 644
Find all regular files under current directory tree that were accessed $FTIME days ago,find . -type f -atime $FTIME
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*,find . -mtime 0 -not \
Find all .sh files in the current directory tree and remove them,"find . -name ""*.sh"" -exec rm -rf '{}' \"
Remove all *.mp3 files in tmp directory but not in it's subdirectories,rm `find tmp -maxdepth 1 -name '*.mp3'`
Count all the lines of all '*.c' files in current directory recursively,"find . -name ""*.c"" -print0 | xargs -0 cat | wc -l"
"search for directories in the folder ""test"" which end have 5 digits as their name",find ./test -type d -name '[0-9][0-9][0-9][0-9][0-9]'
Remove all empty regular files under the current directory and below,find ./ -type f -size 0c -print | xargs rm
List all *.jpg files/directories in entire file system,"find / -name ""*.jpg"" -print"
Find all *.txt files/directories under your home directory,find ~/ -name '*.txt'
"display the number of lines in all the "".c"" files in the current folder","find . -name ""*.c"" -exec wc -l {} \;"
"Search the .VER files from the current directory tree for string ""Test_Version='","find . -name ""*.VER"" -exec grep 'Test_Version=' '{}' ';' -print;"
"list files in the directory ""$directory"" with permissions ""$permissions""","find ""$directory"" -perm ""$permissions"""
"Delete all the files found in the current directory tree whose names begin with ""heapdump""",find . -name heapdump* -exec rm {} \ ;
"Recursively removes all files and folders named '.svn' in a current folder, handling content of removed folder before folder inself.",find . -depth -name .svn -exec rm -fr {} \;
Print the list of all files with 777 permissions owned by a specific user within a directory.,"#!/bin/bash

user=""username""

find /path/to/your/directory -perm 777 -user ""$user"""
Find all the files/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26,find ./ -newermt 2014-08-25 ! -newermt 2014-08-26 -print
"Search for the case insensitive pattern 'search for me' in all files with '.p', '.w' and '.i' extension under current directory tree without descending into '.svn' and 'pdv' directories",find . \( \ -type d -prune \) -o \
find all regular/normal files in the current folder,find -type f
List all .jpg files in the home directory tree in a fast way,"find . -name ""*.jpg"" -exec ls {} +"
"Unzip every "".gz"" file in the current directory tree",find . -name '*.gz' -exec gunzip '{}' \;
Show directory sizes in KB and sort to give the largest at the end,find . -type d -exec du -sk {} \; |  sort -n -k 1
find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.,find $HOME -type f -atime +30 -size 100k
"Look for ""testfile.txt"" in the ""/"" directory and 1 level below",find / -maxdepth 2 -name testfile.txt
"search for pattern matched files in the current folder and subfolders exclude ""excluded path""","find ./ -type f -name ""pattern"" ! -path ""excluded path"" ! -path ""excluded path"""
Find all regular files named 'Waldo' under 'Books' directory tree that is located in user's home directory,find ~/Books -type f -name Waldo
Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files,"find $1 -path /proc -prune -o -name ""$2"" -print -exec grep -Hn ""$3"" {} \;"
"Find all directories in maximum 1 level down the $front_element directory, sort them according to modification time and list them excluding the $front_element path from the list","find ""$front_element"" -maxdepth 1 -type d -not -path ""$front_element"" -printf '%T@ %p\n' | sort | awk '{print $2}'"
List all files that are between 10000 and 32000 bytes in size,find . -size +10000c -size -32000c -print
Append *.java files from the current directory tree to tar archive `myfile.tar',"find . -type f -name ""*.java"" | xargs tar rvf myfile.tar"
"Find all files with the SUID bit set, starting from /",find / -perm -u+s
"Search for ""whatever"" in all files under /dir directory ensuring white space safety in filenames",find /dir -type f -print0 | xargs -0i cat {} | grep whatever
find all the files in the present directory which have the group staff and check if is a symbolic link and display it.,find `pwd` -group staff -exec find {} -type l -print ;
"display list of all the hidden regular/normal files in the directory ""/dir/to/search/""","find /dir/to/search/ -type f -iname "".*"" -ls"
search for all tar.gz compress files  in the current folder,find -name *.tar.gz
find all the files in the home folder that have not been modified in the last one year,find $HOME -mtime +365
"Count the number of lines in all "".php"" files in the current directory tree using bash for Windows",cat `/gnuwin32/bin/find.exe . -name *.php` | wc -l
Find all regular files with '.r' and '.c' in their names under current directory tree,find ./ -type f \( -name '*.r*' -o -name '*.c*' \) -print
Find all *.swp files/directories under current directory and print the list to a file named 'rm',"find . -name ""*.swp"" > rm"
Find all files/directores under /etc and run the file command on each of them,find /etc -print0 | xargs -0 file
"search in all the regular/normal files of the current folder for the word ""word"" and display the matched file name","find . -type f -exec grep -l ""word"" {} +"
Fix files to default permissions 755,find . -type d -exec chmod 755 {} \;
find all the files in the current folder ending with cpp or hpp or chpp and save the output to the file cscope.files.,"find ./ -name ""*.[ch]pp"" -print > cscope.files"
Archive all files/directories under data/ into archive.tar,find data/ -print0 | tar -T - --null --create -f archive.tar
Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video,find ~ -type f -exec file -i {} + | grep video
find all the backup files in the current folder and delete them,find . -type f -name “FILE-TO-FIND” -delete;
"display the number of lines in all the "".c"" files in the current folder","find . -name ""*.c"" -exec wc -l {} \;"
update the permission of all the php files in current directory and save the output to a file,find . -name '*.php' -exec chmod 755 {} \; | tee logfile.txt
Delete all files with inode number 804180,find -inum 804180 -exec rm {} \
"Find recursively regular files in the directory given as the script's command line argument #1, skipping hidden files and directories","find ""$1"" -path ""*/.*"" -prune -o \"
"Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic",find arch etc lib module usr xpic -type f | xargs chmod -x
Find all files larger than 100M and delete them,find / -size +100M -exec rm -rf {} \;
Find all files owned by the user daniel in the current directory and below.,find . -user daniel
find all the directories in the entire file system whose size is greater than 50KB,find / -type d -size +50k
Search for files in your home directory which have been modified in the last twenty-four hours,find $HOME  -mtime 0
Find files modified within the past 24 hours,find . -mtime 0
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file1.tar) of the last block of files sent to xargs,find var/log/ -iname anaconda.* | xargs tar -cvf file1.tar
Find all regular files recursively in the current directory,find . -type f
display all the jpg files in the current folder and do not search in sub directories,find . -maxdepth 1 -mindepth 1 -iname '*.jpg' -type f
"Search the current directory tree for files whose names do not end in ""1"" and ""2""","find . -type f ! -name ""*1"" ! -name ""*2"" -print"
Delete all files in the /myDir directory tree that were last modfied 7 days ago,find /myDir -mindepth 1 -mtime 7 -exec rm -rf {} \;
"search for the file ""job.history"" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern",find /data/SpoolIn -name job.history | xargs grep -o -m 1 -h 'FAIL\|ABOR' | sort | uniq -c
display the filenames which do not have begin with dot,find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\n'
Find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory,find $HOME -iname '*.ogg' -o -iname '*.mp3'
"Locate file ""file1""",find -name file1
Find all .tmp files under and below the /tmp/ directory and remove them,"find /tmp -name ""*.tmp""| xargs rm"
Find all files/directories under current directory tree whose names start with '(test)' followed by two digits and end with '.txt' extension,"find . -regex "".*/(test)[0-9][0-9]\.txt"""
Recursively removes all empty folders under current folder.,find . -depth -type d -empty -exec rmdir {} \;
"Recursively search for all files with names ending with ""_test.rb"", renaming them to end with ""_spec.rb"".","find . -name ""*_test.rb"" | xargs rename s/_test/_spec/"
Copy all *.txt files from the current directory tree to /tmp,"find . -name '*.txt' | while read line; do echo ""Copying '$line' to /tmp""; cp -- ""$line"" /tmp; done"
"Recursively prints all files in a current folders, and searches ""stringYouWannaFind"" in file content ignoring case differences, and preceding found string with its number in file.","find ./ -type f -print -exec grep -n -i ""stringYouWannaFind"" {} \;"
list all files in /home/bozo/projects directory tree that were modified exactly one day ago.,find /home/bozo/projects -mtime 1
"Find recursively the files named ""file"" in the current directory ignoring the .git subdirectory",find . -path ./.git  -prune -o -name file  -print
Remove files that are less than 1MB in size under current directory,find . -size -1M -exec rm {} \;
Search for 'mystring' in all *.txt files under current directory,find . -name *.txt | xargs egrep mystring
all the files that end with .mp3 and end with .jpg,find . -name '*.mp3' -name '*.jpg' -print
"Search three folders named foo, bar, and baz for all ""*.rb"" files","find foo bar baz -name ""*.rb"""
find files which do not have all permissions to all the users in the current directory,find . -type f ! -perm 777 | head
View manual page of the find command,man find
delete all the empty files in the current directory only if they are ok and the user has the permission to delete them,find . -empty -ok rm {}\;
Search  in current directory downwards all files whose owner is aa1 or whose name is myfile .,find . \( -user aa1 -o -name myfile \) -print
List all files in the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 |xargs ls -l
"Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n' | sort | uniq | tr -d '\n'
List all files under current directory that are greater than 10000000x512 bytes in size,find . -type f -size +10000000 -print|xargs ls -ld|more
"Find all files starting from / whose names end with "".rpm"" and change their permissions to 755",find / -name *.rpm -exec chmod 755 '{}' \;
Open all files named 'filename' with 'nano' editor in the entire filesystem,find / -name filename -exec nano '{}' \;
Change permissions to 644 for *.html files under /usr/local,"find /usr/local -name ""*.html"" -type f -exec chmod 644 {} \;"
Perform a default cPanel configuration,find /home/*/public_html/ -type f -iwholename “*/wp-includes/version.php” -exec grep -H “\$wp_version =” {} \;
Change permissions to 600 for all regular .rb files in the current directory tree,"find . -name ""*.rb"" -type f -exec chmod 600 {} \;"
find all the files in the /usr folder that have been modified after the file /usr/FirstFile.,find /usr -newer /usr/FirstFile -print
"find all the files in the /usr folder which have modification date less than or equal to the file ""/FirstFile""",find /usr ! -newer /FirstFile -print
Delete all matches to the regex '^.*iframe bla bla bla.*$' in all the php files under current directory tree and modify the files in-place,find ./ -type f -name \*.php -exec sed -i ’s/^.*iframe bla bla bla.*$//g’ {} \;
find all the html files in the current folder which have not been modified in the last 7 days,"find . -mtime +7 -name ""*.html"" -print"
"Find all files changed on the 29th of September, 2008, starting from the current directory",find . -type f -newerct 2008-09-29 ! -newerct 2008-09-30
"display all the files in the file system which belong to the user ""wnj"" and which are modified after the file ""ttt""",find / -newer ttt -user wnj -print
"Recursively add "".jpg"" to all files without an extension in the directory tree ""/path""","find /path -type f -not -name ""*.*"" -exec mv ""{}"" ""{}"".jpg \;"
search for all the files excluding directories ending with old or sccs or core or orig in the project folder and append the output to the file exclude,"find . -type f -print | \ egrep  '/,|%$|~$|\.old$|SCCS|/core$|\.o$|\.orig$' >>Exclude"
Find all empty folders in the current directory and below,find . -type d -empty
"Counts lines in each *.cpp, *.c, *.h file.","wc -l `find . -type f \( -name ""*.cpp"" -o -name ""*.c"" -o -name ""*.h"" \) -print`"
"Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it.",find /usr -type d -name 'My Files' -exec rsync -avR '{}' /iscsi \;  -exec rm -rf '{}'\;
Find all files under current directory that were modified more than 7 days ago and delete them,find . -type f -mtime +7 -print0 | xargs    -0 rm
Find smallest file in the current directory with find commad,"find . -type f -printf ""%s\t%p\n"" | sort -n |head -1"
Remove all .tmp files in and below /tmp,"find /tmp -name ""*.tmp"" -print0 | xargs -0 rm"
find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension,"find . -iregex ""./[^/]+\.dat"" -type f -cmin +60 -exec basename {} \;"
List files under current directory according to their size in descending order,find . -type f -exec ls -s {} \; | sort -n -r
Save a list of all the files/directories under current directory tree to a file named 'foo',find . -fprint foo
"Search the current directory tree for files and directories whose names do not end in "".exe"" and "".dll""",find . ! \
Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files,find /home/my_dir -name '*.txt' | xargs grep -c ^.*
change the permission of all php files in current folder. Plus symbol at the end is used to give multiple files as input to the chmod command,"find . -name ""*.php"" -exec chmod 755 {} +"
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE_SUBDIR.*\.\./.*authors',find /usr/ports/ -name Makefile -exec grep '^MASTER_SITE_SUBDIR.*\.\./.*authors' '{}' '+' | wc -l
Serach in current directory downwards all files which  have not been modified since last 7 days,find .  -mtime +7 -print
"Find regular files named ""expression -or expression"" under and below /dir/to/search/",find /dir/to/search/ -type f -name 'expression -or expression' -print
Find all directories named essbase under /fss/fin,"find /fss/fin -type d -name  ""essbase"" -print"
find all the files that have been modified in the last 2 day,find -daystart -mitime -1
Find all directories under mydir,find mydir -type d
Find all files/directories that start with 'readme'  in their names under '/usr/share/doc' directory tree,find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'
Find files/directories that have no owner or group under /path,find /path -nouser -or -nogroup
find all the files in the entire filesystem which belong to the group root and display the ten files.,find / -group root | head
Find all the files which are changed in last 1 hour,find / -cmin -60
"change the group to ""new_group"" and permissions to 770 for all the files in the current folder","find . -name ""*"" \"
"Find ""*prefs copy"" files in the /mnt/zip directory tree and remove them with prompting","find /mnt/zip -name ""*prefs copy"" -print0 | xargs -p rm"
Find files/directories under current directory and force xargs to print them one by one,find . | xargs -n 1 echo
"Find all files named ""file.ext"" in the current directory tree and print the path names of the directories they are in",find `pwd` -name file.ext |xargs -l1 dirname
Search for files/directories with the case insensitive pattern anaconda.* in /var/log,find /var/log/ -iname anaconda.*
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8,find sort_test/ -type f | env -i LC_COLLATE=en_US.utf8 sort
Find files/directories named 'articles.jpg' under current directory tree and change their permission to 644,"find . -name ""articles.jpg"" -exec chmod 644 {} \;"
View the man page of find,man find
"Compress and display the gzipped filenames of every file on the system that is greater than 100000 bytes and ends in "".log""","sudo find / -xdev -type f -size +100000 -name ""*.log"" -exec gzip -v {} \; 2>&1 | awk '{print $6}'"
compare each C header file in or below the current directory with the file /tmp/master,find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'
Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git',"find . -not -path ""*git*"" -not -name '*git*' |grep git"
find all the files in the current folder and display adding quotations to each file,"find . -exec echo -n '""{}"" ' \;"
List all *.txt files/directories under /etc,"find /etc -name ""*.txt"" | xargs ls -l"
list regular file which file name end with 'cache' 'xml' or 'html' in current directory,"find . -type f \( -name ""*cache"" -o -name ""*xml"" -o -name ""*html"" \)"
"Print the number of entries (files, directories, symlinks, etc.) in the subdirectories of the current directory, stopping search at any device mount points.","sudo find . -xdev -type f | cut -d ""/"" -f 2 | sort | uniq -c | sort -n"
Print all filenames under /proc and below,find /proc -print0 | xargs -0
"find all .pm, .pl files in /users/tom and search for a pattern in these files and display the matched file names",find /usr/tom | egrep '*.pl| *.pm' | xargs cat | grep <PATTERN>
display all the files in the file system which are changed a minute ago,find / -newerct '1 minute ago' -print
change permissions of files older than 30 days,find /path/to/directory -type f -mtime +30 -exec chmod 644 {} +
Search the current directory tree for symbolic links to files matching pattern '*/test*',find -P . -lname '*/test*'
search for all the files in the current folder which have spaces and force delete them,"find . -name ""filename including space"" -print0 | xargs -0 rm -rdf"
Show manual page for the find utility,man find
Search the current directory tree for an html file having the text 'Web sites' in it,"find . -type f -iname \*.html -exec grep -s ""Web sites"" {} \;"
find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps,"find ""/path/to/pdfs/"" -type f -name ""$1*.pdf"" -exec stat -f ""%10Dm %SN"" {}\;  | sort -k1,1n -k2,2"
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them suppressing error messages,"find MyApp.app -name Headers -type d -exec rm -rf ""{}"" \; 2>/dev/null"
Find all files/directories under current directory and print them twice in each line,"find | xargs -i sh -c ""echo {} {}"""
"Remove trailing white spaces from all *.rb, *.html, *.js, *.coffee, *.css, *.scss, *.erb, *.yml, *.ru files under current directory","find . \( -name *.rb -or -name *.html -or -name *.js -or -name *.coffee -or -name *.css -or -name *.scss -or -name *.erb -or -name *.yml -or -name *.ru \) -print0 | xargs -0 sed -i '' -E ""s/[[:space:]]*$//"""
Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours.,find . -mtime -1 -prin
find all the files that have been modified in the last 2 days,find . -type f -daystart -mtime -2
"Search for all files in the current directory recursively whose names contain ""linkin"", ignoring the case",find . -iname *linkin*
"Copy all files below the current directory whose names contain ""FooBar"" to directory foo/bar/ in user's home directory.",find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar
Search the /var/www/ tree for files owned by root or unknown group and change their group to 'apache',find /var/www -group root -o -nogroup -print0 | xargs -0 chown :apache
Print the names of all hidden regular files from the current directory,find . -maxdepth 1 -type f -name '.*' -exec basename {} \;
List files in the current directory tree which have permissions rwx for user and rw for group and others,find . -perm 766 -exec ls -l {} \;
"Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones",find ~/code -type d -name '[^\.]*' | tr '\n' ':' | sed 's/:$//'
Search the current directory tree for executable files,find . -type f -executable -print
"find the file ""httpd.log"" in the folder /home/web-server/",find /home/web-server/ -type f -name httpd.log
display all the files in the current folder which have been modified in the last 24 hours,find . -mtime -1
"Remove all directories called ""test"" from the current directory tree","find -path ""*/test"" -type d -delete"
"exclude vendor and app/cache dir, and search name which suffixed with php","find . -name *.php -or -path ""./vendor"" -prune -or -path ""./app/cache"" -prune"
Print the largest 20 files under current directory,find . -type f -printf '%s %p\n' | sort -rn | head -20
display the number of lines in all the files in the current folder,find . -exec wc -l {} \;
Find all files/directories under /var/www/some/subset and change their owner and group to www-data,sudo find /var/www/some/subset -print0 | xargs -0 chown www-data:www-data
Delete all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents,find /path/to/input/ -type f -exec grep -qiF spammer@spammy.com \{\} \; -delete
Search for all files with a specific extension and move them to another directory.,"#!/bin/bash

find /path/to/directory -type f -name '*.ext' -exec mv {} /path/to/destination/ \;"
Remove all libEGL* files from the current directory tree,find . -name libEGL* | xargs rm -f
Find all Executable files in the file system,find / -perm /a=x
"display all normal/regular files in the folder ""$ORIG_DIR""","find ""$ORIG_DIR"" -name ""*"" -type f"
Find all files with name ending with .txt and display only the filenames without full paths,"find ./ -name ""*.txt"" | rev | cut -d '/' -f1 | rev"
display all files in the folder bar only in the path /foo/bar/myfile,find bar -path /foo/bar/myfile -print
copy all the mp3 files from current folder to another folder,find . -name '*.mp3' -exec cp -a {} /path/to/copy/stuff/to \;
Find all files in the home directory tree that are owned by another user and change their ownership to the current user,"find ~ ! -user $USER -exec sudo chown ${USER}:""{}"" \;"
Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them,"find . -type f -name ""FindCommandExamples.txt"" -exec rm -f {} \;"
Find all files/directories under current directory and print them,find . -print0 | xargs -I{} -0 echo {}
"Search the current directory tree for symbolic links named ""link1""",find . -type l -name link1
Find all files/directories under current directory,find ./
"Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.",find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &
Find files that don’t have 644 permissions,find / -type f ! -perm 644
find all files that have been used more than two days since their status was last changed,find -used +2
Find all files that have either a .php or a .js extension,find -regextype posix-egrep -regex '.*(php|js)$'
Delete all files beneath the current directory that begin with the letters 'Foo'.,"find . -type f -name ""Foo*"" -exec rm {} \;"
Set file permission to 664 and directory permission to 775 for all files and directories under htdocs,find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +
"Find all files under ${searchpath} that match the regex '""${string1}"".*""${string2}"".*""${string3}""' (${string1} ... won't be expanded) in their contents","find `echo ""${searchpath}""` -type f -print0 | xargs -0 grep -l -E '""${string1}"".*""${string2}"".*""${string3}""'"
Search the current directory tree for regular files whose names match pattern $x,find . -type f -name $x
search for all the regular files in the current folder and display the contents,find . -type f -exec cat {} \;
Find all test.txt files/directories under current directory,find . -name test.txt
"Set permissions to ug=rw,o= for files inside the ./default/files tree","find ./default/files -type f -exec chmod ug=rw,o= '{}' \;"
Set permissions for all regular files under /var/www to 755,find /var/www -type f -print0 | xargs -0 chmod 644
"Find all files matching shell pattern ""foo/bar"" in the foo directory tree",find foo -path foo/bar -print
Count all the lines of code in the current directory recursively.,find ./ -type f -exec wc -l {}  \; | cut -d' ' -f1 | paste -sd+ | bc
Find all PHP files under current directory that contain only one line,"find -name '*.php' -exec bash -c '[[ ""$"" -eq 1 ]] && echo ""$0""' '{}' ';'"
"Copies all files with ""FooBar"" in the path under the current directory to the '~/foo/bar' directory.",find . | grep FooBar | xargs -I{} cp {} ~/foo/bar
"search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file ""files.secure"".",find / \( -perm 2000 -o -perm 4000 \) -print | diff - files.secure
Find all files and directories starting from the current directory,find .
find all the foo.txt files in the current folder and move them to another directory,"find . -name ""foo.txt"" | awk '{ print ""mv ""$0"" ~/bar/"" | ""sh"" }'"
"Rename all ""thumbs"" directories to ""thumb"" in the current directory tree","find . -type d -exec rename 's/^thumbs$/thumb/' {} "";"""
"find all files in the current folder that end with "",txt""","find . -name ""*,txt"""
Archive all *.1 files/directories to each filename.tgz files and remove the original source,find *.1  -exec tar czf '{}.tgz' '{}' --remove-files \;
"Find all files in the current directory tree whose size is greater than 1MB, and move them to the ""files"" folder",find . -size +1M -exec mv {} files \+
Find all *.rb files/directories under current directory,find . -name *.rb
Count the number of .java files in all folders rooted in the current folder,"find . -name ""*.java"" | wc -l"
"Find and uncompress all files in the current directory tree ending in "".csv.gz""",find . -name '*.csv.gz' -print0 | xargs -0 -n1 gzip -d
Find all SGID set files in the file system,find / -perm /g=s
"find all the files in the entire file system which belong to the user ""roger""",find / -user roger -print
remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names,"find -name ""*.txt"" -print0 | xargs -0 rm"
find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits.,"find . — name ""[a‑z][a‑z][0—9][0—9].txt"" — print"
"search for the pattern ""tgt/etc/file1"" in the files tgt/etc/file2, tgt/etc/file3",find . -type f -name \* | grep tgt/etc/file1 tgt/etc/file2 tgt/etc/file3
"Search the regular files of the current directory tree for string ""stringYouWannaFind"", ignoring the case","find ./ -type f -print -exec grep -n -i ""stringYouWannaFind"" {} \;"
Count all directories under current directory,find . -type d -exec ls -dlrt {} \; | wc --lines
Find all * * regular files under current directory,"find .  -type f -name ""* *"""
Find all files on the system whose names are 'drush',find / -name drush
"List the files in the /etc directory tree containing text ""old1.old2.co.com""",find /etc -type f -print | xargs grep -il old1\.old2\.co\.com
"Search the /Path directory tree for files matching pattern ""file_name*""","find /Path -name ""file_name*"""
To match only hidden dot directories,"find /nas01/backups/home/user/ -type d -name "".*"" -print0 -exec ls -lrt {} \;"
List all directories of the $topdir directory tree that contain a Makefile and at least one .py file,"find ""$topdir"" -name '*.py' -printf '%h\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\n' | sort -u"
Prints long listing of a last modified file in a current folder.,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" "" | sed 's/.*/""&""/' | xargs ls -l"
find all files in the file system which have been accessed in the last 24 hours,find / -atime 0
create a tar.gz compress file with all the jpg files in the entire file system,find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz
Print local files without descending non-local directories,find . ! -local -prune -o -print
Find all files in current directory and execute multiple commands for each file,find . -type f \
find all files with the first letter “e” or “f” and last one x in /usr/bin directory:,find /usr/bin -name [ef]*x
Search the current directory tree for regular files changed less than 1 day ago,find . -type f -ctime -1
Find all files under current directory and print only the filenames,"find . -type f -printf ""%f\n"""
"Search the current directory tree for regular files whose names end in "".shtml"" or "".css""","find -type f -regex "".*/.*\.\"""
Find all executable files under current directory and show a few lines of output from the beginning,find . -perm /a=x | head
Find recursively all empty directories in the current directory,find . -type d -empty
Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\|#hyphenate' in their contents,find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\|#hyphenate' {} +
Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago,find /usr -mmin 5
"Create an empty index.html in each directory under the current one, updating timestamps of already existing index.html files.",find . -type d -exec touch {}/index.html \;
display a long list of all the files that are bigger than 10KB in current folder and save the output to the file myLogTxt.text,find . -size +10k -type f -maxdepth 1 -exec ls -lh {} \; > myLogFile.txt
Get the total sizes of all files under current directory,find . -type f -printf '%p %s\n'  | awk '{sum+=$NF}END{print sum}'
Print content of each file under the current directory followed by that file name,find . -type f -exec cat {} \; -print
Display a long listing of all files/directories that are bigger than 10MB under '/var/' directory tree,find /var/ -size +10M -ls
Remove junk files modified more than 31 days ago recursively,find /path/to/junk/files -type f -mtime +31 -print0 | xargs -0 -r rm -f
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print their parent directory paths,find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90  | sed 's|/[^/]*$||'
Find files/directories named 'aaa.txt' under current directory tree,find . -name aaa.txt
List all files/directories under current directory by replacing all spaces with commas,"find . -ls | tr -s ' ' ,"
find all the files in the home folder that are modified day before yesterday,find $HOME -mtime -2 -mtime +1
"List all files from the current directory tree that were modified less than 60 minutes ago, omitting "".""",find . -mindepth 1 -mmin -60 | xargs -r ls -ld
Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username,find $dir -maxdepth 1 -type d -user $username -perm -100
Counts total lines in all *.php files.,"find . -type f -name '*.php' -exec bash -c 'wc -l ""$0""' {} \; | awk '{s+=$1} END {print s}'"
display a long listing of all regular/normal files in current directory which have been changed in the last 7 days and save the output to new.files,find ./ -type f -ctime -7 -exec ls {} \; > new.files
Create a tar archive of all regular files modified in the last 24 hours,tar cvf - `find . -mtime -1 -type f -print` > $archive.tar
Find all files/directories named 'photo?.jpg' under current directory tree,find . -name photo\?.jpg
"Search the current directory for *rc.conf files and grant ""other"" users read permission","find `pwd` -name ""*rc.conf""  -execdir /bin/chmod o+r {} \;"
Look for *.jpg files,find . -name “*.jpg”
Find all files/directories under  current directory and rename them by replacing all blank spaces with _ in their paths,"IFS=$'\n';for f in `find .`; do file=$; [ -e $f ] && [ ! -e $file ] && mv ""$f"" $file;done;unset IFS"
Print the list of files modified between two specific dates within a directory.,"#!/bin/bash

start_date=""YYYY-MM-DD""
end_date=""YYYY-MM-DD""

find /path/to/your/directory -type f -newermt ""$start_date"" ! -newermt ""$end_date"""
"Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.",find . -iname foo -type d
Find all regular files in the entire filesystem that belong to the group 'users',find /  -type f -group users
find the top 25 files in the current directory and its subdirectories,find . -type f -exec ls -al {} \; | sort -nr -k5 | head -n 25
display all the files in the file system which belong to the user with the id 1005,find / -uid 1005
"display all the "".sh"" files in the current folder",find -name *.sh
Get a sorted list of the longest line with line number for each file under current directory,"find . -iname '*.page' -exec awk '{if(length > L) { LINE=NR;L = length}} END {print L""|""FILENAME"":""LINE}' {} \; | sort"
"Recursively rename all files under /your/target/path replacing 'special' with 'regular' - all file/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.",find /your/target/path/ -type f -exec rename 's/special/regular/' '{}' \;
Change the permission to 0644 for all files under current directory,find . -type f -exec chmod 0644 {} +
"Remove all files whose names begin with ""heapdump"" and write their names to ""delete.txt""",find . -name heapdump* -exec rm '{}' \; -print >delete.txt
find all the files in the current folder which are modified after /bin/sh.,find . -newer /bin/sh
Compute the mean average of the word count of *.txt files smaller than 2000 words in the home directory,find ~/Journalism  -name '*.txt' -print0 | xargs -0 wc -w | awk '$1 < 2000 {v += $1; c++} END {print v/c}'
"Search for ""Stock"" in all *.java files from the current directory tree","find . -name ""*.java"" | xargs grep ""Stock"""
"Recursively add "".jpg"" to all files in the current directory tree",find . -type f -exec mv '{}' '{}'.jpg \;
Find all files under current directory tree named 'filename_regex' excluding '.svn' and '.pdv' directories and files then search for the case insensitive pattern 'your search string' in those files,"find . -name ""filename_regex""|grep -v '.svn' -v '.pdv'|xargs grep -i 'your search string'"
Set permissions to 2770 for all directories in the current directory tree,find . -type d -exec chmod 2770 {} +
"Find all python files under current directory tree, save the list to 'output.txt' and search for 'something' in those files",find . -name '*.py' | tee output.txt | xargs grep 'something'
"Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x).","find htdocs cgi-bin -name ""*.cgi"" -type f -exec chmod 755 {} \;"
Remove all *.doc files from the current directory tree,"find . -name '*.doc' -exec rm ""{}"" \;"
find all the files in the current folder which have been modified in the last 60 minutes,find . -mmin -60
"Change the owner of all files in the directory tree ""dir_to_start"" excluding file ""file_to_exclude"" to ""owner""","find dir_to_start -not -name ""file_to_exclude""  -print0 | xargs -0 chown owner"
Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago,find /directory/whatever -name '*.tar.gz' -mtime +$DAYS
Remove all files 'a.out' and *.o in the home directory tree that were accessed more than 7 days ago,find $HOME \( -name a.out -o -name '*.o' \) -atime +7 -exec rm {} \;
Find all directories under /path/to/dir  and archive them  into files with .tar.gz extension,find /path/to/dir -mindepth 1 -maxdepth 1 -type d -execdir sudo tar -zcpvf {}.tar.gz {} \;
"Compress all "".txt"" files in the current directory tree with gzip","find . -type f -name ""*.txt"" -exec gzip {} \;"
Find all 755 permission regular files under current directory tree,find . -type f -perm 755
Find files in the current directory tree whose size is greater than 24000 bytes,find . -size +24000c
"Find all files named ""MyCProgam.c"" (ignoring the case) and calculate each file's md5sum.","find -iname ""MyCProgram.c"" -exec md5sum {} \;"
Find all *shp* directories under current directory and move their contents to ../shp_all/,"mv $(find . -name ""*shp*"" -printf ""%h\n"" | uniq)/* ../shp_all/"
display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files,"find . -type f \( ! -iname "".*"" \) -mtime +500 -exec ls {} \;"
display a long listing of all the files in the current folder,find . — type f -exec ls -1 {} \;
Archive a file named '{}'  residing in current directory  into  '{}.tar.gz' and save it inside /var/www/,find /var/www/* -type d -print | tar -zcpvf {}.tar.gz -C /var/www/ --files-from - {} \;
List all files matching regular expression '*foo*' in a human-readable form,find . -name '*foo*' -exec ls -lah {} \;
"Set permissions of all directories under ""/opt/lampp/htdocs"" to 755",find /opt/lampp/htdocs -type d -exec chmod 755 {} \;
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""",find /mp3-collection -name 'Metallica*' -or -size +10000k
Find all files/directories with space in their names under current directory and rename them by replacing all spaces with _,"find . -depth -name ""* *"" -execdir rename ""s/ /_/g"" ""{}"" \;"
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them in MB,find ~/tmp -type f -mtime 0 -exec du -ks {} \; | cut -f1 | awk '{total=total+$1}END{print total/1024}'
List (in long list format with inode number) the file under the current directory that has the oldest modification time,find . -type f -ls | sort +7 | head -1
Find all files/directories that are newer than 'ttt' by modification time or owned by the user 'wnj' in the entire filesystem,find / \( -newer ttt -or -user wnj	\) -print
"display all the files in the current folder which are in the path ""./sr*sc""",find . -path './sr*sc'
"Find recursively all files in /path that end in ""txt"" and copy them to /tmp/","find /path -type f -name ""*txt"" -printf ""cp '%p' '/tmp/test_%f'\n"" | bash"
Find movies over a gigabyte in size,find ~/Movies/ -size +1024M
Search for files specifying the minimum depth of the search,find -mindepth num -name query
Delete all empty directories in minimum 2 levels down the root directory,find root -mindepth 2 -type d -empty -delete
display the file name and creation month of top 11 files in the entire file system,"find / -type f -printf ""\n%Ab %p"" | head -n 11"
Find all directories under /path/to/base/dir and change their permission to 755,find /path/to/base/dir -type d -print0 | xargs -0 chmod 755
find all the files that have been modified in the last 2 day,find -daystart -mitime -1
Print files created/modified in the last day,find /directory -newermt $ -type f -print
Find all files/directories in level $i down the current directory with all positional parameters appended with the find command,"find -mindepth $i -maxdepth $i ""$@"""
"Search the current directory tree for symbolic links named ""link1""",find . -type l -name link1
Find all Executable files,find / -perm /a=x
Find all regular files under  $somedir directory and print each of their paths after a string literal 'Found unexpected file ',"find ""$somedir"" -type f -exec echo Found unexpected file {} \;"
"Find all files/directories under '/usr/share/data' directory tree that match the posix extended regex "".*/20140624.*"" in their paths and save the list to '/home/user/txt-files/data-as-of-20140624.txt'","find /usr/share/data -regextype posix-extended -regex "".*/20140624.*"" -fprint /home/user/txt-files/data-as-of-20140624.txt"
Recursively removes all files like '*.r*' in current folder and removes folders with such files if they become empty.,"find ./ -type f -name '*.r*' -delete -printf ""%h\0"" | xargs -0 rmdir"
Find all *gz files under asia and emea directory,"find asia emea -type f -name ""*gz"""
Find all links pointing to /path/to/foo.txt,find . -lname /path/to/foo.txt
"find all files in the file system which belong to the group users and having the word ""filename"" in their name.","find / -group users -iname ""filename"""
"display files ending with "".ext"" in current folder excluding those that are present in the list list.txt",find -type f -name '*.ext' | grep -vFf list.txt
Find all SGID set files,find / -perm /g=s
Find all *conf* files recursively under current directory,find . -name *conf*
"Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in ""file1""","find lpi104-6 research/lpi104-6 -lname ""*file1"""
list all files under .performance_test directory except .performance_test/prune_me directory,"find "".performance_test"" -not -path "".performance_test/prune_me*"" -exec bash -c 'echo ""$0""' {} \;"
Find all directories under current directory tree that were modified $FTIME days ago,find . -type d -mtime $FTIME
find all the normal/regular files in the folder main-directory,find main-directory -type f
"Print line, word and byte counts for each .php files in current directory tree and also show the total counts",wc `find | grep .php$`
Find all files/directories named file in minimum 4 levels down the current directory,find -mindepth 4 -name file
Search the /path tree for all executables,find /path -perm /ugo+x
"Find all .rb and .yml files in the /some/path directory tree and replace ""some_phrase"" with ""replacement_phrase"" in them","find /some/path -name ""*rb"" -o -name ""*yml"" | xargs grep -sl ""some_phrase"" | xargs sed -i -e 's/some_phrase/replacement_phrase/g'"
find all files under the /etc directory and display IP address patterns in them,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n' \ | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
Find all files/directories under '/etc' directory tree that are greater than 5MB and print their sizes and names,find /etc -size +5M -exec ls -sh {} +
"Search the files from the current directory tree for ""chrome""",find . -exec grep chrome {} +
Find all hidden directories starting from the current directory,"find . -type d -name "".*"""
Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding *.log files/directories,find /home/baumerf/public_html/ -mmin -60 -not -name \*.log
Find the 5 largest regular files in the Downloads folder of tecmint's home directory.,find /home/tecmint/Downloads/ -type f -exec du -Sh {} + | sort -rh | head -n 5
find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories.,find /home/pankaj -maxdepth 1 -cmin -5 -type f
Find all files/directoires that were modified more than 3 days ago under $dir directory tree,find $dir -mtime +3
Show all files in /etc that are owned by root have been modified within the last minute,find /etc/ -user root -mtime 1
"Move all directories in the current directory tree that have been modified in the last day to ""/path/to/target-dir""",find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir
Find all files/directories under /path directory that were modified more than 30 minutes ago,find /path -mtime +30m
"Find all files under and below the current working directory with the word California in the file , and count the number of lines in the output",find . -type f -exec grep -i California {} \; -print | wc -l
find all the files in the current folder (handles files which contain newlines or only spaces in their names),"find . -print0 | xargs -0 -l -i echo ""{}"";"
"Removes all empty folders under path '/thepath', printing info message on each operation.",find /thepath -type d -empty -print0 | xargs -0 rmdir -v
Find all directories matching the regex '.texturedata' in their names under '/path/to/look/in/' directory tree,find /path/to/look/in/ -type d | grep .texturedata
find all directories in the current folder and do not search in sub directories,find . -type d -maxdepth 1
Search the home directory tree for video files,find ~ -type f -regex '.*\.\'
returns a list of  files modification newer than poop,find . -mnewer poop
"find all the "".JPG"" files in current folder and display their count",find ./ -name '*.JPG' -type f | wc -l
Remove all .txt files from the /full/path/dir directory tree,find /full/path/dir -name '*.txt' -print0 | xargs -0 rm
Print /some/dir/ if it's empty,find /some/dir/ -maxdepth 0 -empty
find all the perl files in /var/www ( case insensitive search ),"find /var/www/ -type f -iname ""*.pl"" -print"
"search for the pattern ""tgt/etc/file1"" in the files tgt/etc/file2, tgt/etc/file3",find . -type f -name \* | grep tgt/etc/file1 tgt/etc/file2 tgt/etc/file3
"Find all files named ""file.ext"" within the current folder and print the path where each one is located","find `pwd` -name ""file.ext"" -exec echo $ \;"
Find all the files whose name is tecmint.txt in the current directory,find . -name tecmint.txt
Exclude directory from find . command,find -iname example.com | grep -v beta
display all files in a folder,"find ""/proc/$pid/fd"""
Find movies over a gigabyte in size,find ~/Movies/ -size +1024M
find all the hidden files in the temp folder,"find /tmp -type f -name "".*"""
Find all files/directories named 'openssl' under current directory tree without printing 'Permission denied' error messages,"find . -name ""openssl"" | sed '/Permission denied/d;'"
"Remove all files with names like ""vmware-*.log"" from the current directory tree",find . -name vmware-*.log | xargs -i rm -rf {}
"Find all pdf files in current directory and grep with the regex expanded by ""$1"" in the converted text output and print the paths to the matching files","find . -name '*.pdf' -exec sh -c 'pdftotext ""{}"" - | grep --with-filename --label=""{}"" --color ""$1""' -- ""$1"" \;"
Remove trailing white spaces from all files under current directory ignoring .git and .svn directories,"find . -not \( -name .svn -prune -o -name .git -prune \) -type f -print0 | xargs -0 sed -i '' -E ""s/[[:space:]]*$//"""
Find all files on the system whose names are 'composer.json',find / -name composer.json
Find all regular files under ${path} without following symlinks,find ${path} -P -type f
"display a long listing of all the ""Trash"" files in the folder /home",find /home -name Trash -exec ls -al {} \;
Remove all *.mp3 files in tmp directory but not in it's subdirectories,find tmp -maxdepth 1 -name *.mp3 -print0 | xargs    -0 rm
"Recursively finds string with text ""foo"" in all files of a current folder.","find ./ -type f | xargs grep ""foo"""
Find files with 777 permissions and change them to 755,find / -type f -perm 0777 -print -exec chmod 755 {} \;
Find all symlinks in the /myfiles directory tree,find /myfiles -type l
List all .jpg files in the home directory tree,"find . -name ""*.jpg"" -print0 | xargs -0 ls"
delete all the log files in the current folder,find -name '*.log' -delete
Find the passwd file under the root directory and two levels down,find / -maxdepth 3 -name passwd
find all the files in the current folder which end with .o or with the name a.out and display them.,find .  -print
list the regular files in your home directory that were modified yesterday,find ~/ -daystart -type f -mtime 1
Non-recursively finds all '*.pdf' files in a current folder and removes them.,"find -maxdepth 1 -name '*.pdf' -exec rm ""{}"" \;"
Find all the .mp3 files in the music folder recursively and pass them to the ls command,"find ./music -name ""*.mp3"" -print0 | xargs -0 ls"
"Finds all files having text ""texthere"" recursively in a current folder, and precedes found string with string number in file and file name.","find -type f -exec grep -Hn ""texthere"" {} +"
Find all directories under foldername directory and set their permission to 755,"sudo find foldername -type d -exec chmod 755 {} "";"""
delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command,find /tmp/ -type f -mtime +1 -exec rm {} +
Find all $2 files in $1 path and search for the regex expanded by $3 in those files,"find $1 -name ""$2"" -exec grep -Hn ""$3"" {} \;"
"create symbolic links in directory ""/your/dest/dir/"" to all files located in ""/your/source/dir/"" and have filename extension ""txt.mrg""",find /your/source/dir/ -iname '*.txt.mrg' -exec ln -s '{}' /your/dest/dir/ \;
find the regular js files which path does not contains '*/test/*'  and name does not contains '*-min-*' or '*console*',"find . ! -path ""*/test/*"" -type f -name ""*.js"" ! -name ""*-min-*"" ! -name ""*console*"""
"Change the owner of all files in the directory tree ""dir_to_start"" excluding directory ""dir_to_exclude"" to ""owner""",find dir_to_start -name dir_to_exclude -prune -o -print0 | xargs -0 chown owner
"find all files and directories under the current directory and display the blocksize and the quoted filename, using the stat command","find . -type f -exec stat -c ""%s %N"" {} \;"
Remove empty directories,find -type d -exec rmdir --ignore-fail-on-non-empty {} + ;
Search for case insensitive pattern 'search for me' in all files that match the name pattern '*.[!r]*' under current directory tree,"find . -name ""*.[!r]*"" -exec grep -i -l ""search for me"" {} \;"
Find all files in the current directory tree that were last changed $minutes minutes ago,find . -cmin $minutes -print
"Find all files with the name ""MyProgram.c"" in the current directory and all of it's sub-directories.","find -name ""MyCProgram.c"""
Find all files under current directory that were modified less than 1 day ago,find -mtime -1
Report all C language source code files under the current directory,find . -name \*.c -print
Recursively removes all files and folders named '.svn' in a current folder.,find . -name .svn -exec rm -rf {} +
find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.,"find $1 \( -name ""*$2"" -o -name "".*$2"" \) -print"
display all the html files in the current folder that have been modified in the last 7*24 hours,"find . -mtime -7 -name ""*.html"" -print"
display the contents of all the files in the current folder which start with test,find . -iname '*test*' -exec cat {} \;
"Remove all directories called ""test"" from the current directory tree",find . -name test -type d -print0|xargs -0 rm -r --
"list all files under the current directory, writing the output to the file some_file, suppressing all error messages",find . 2>/dev/null > some_file
Find all files starting from the current directory which are smaller than 100MB,find . -size -100M
Find all files/directories that are not newer than Jul 01 by modification time,"find /file/path ! -newermt ""Jul 01"""
"Remove all files from the system whose path names contain ""GUI""",find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
Print 'This should print the filename twice if an implicit -print is applied: ' appended with file paths for all files named 'file' under current directory tree,find -name file -exec echo 'This should print the filename twice if an implicit -print is applied: ' {} +
"Copy all regular files whose names end in ""~"" from the /path directory tree to ~/backups/",find /path -type f -name '*~' -print0 | xargs -0 -I % cp -a % ~/backups
"find all the text files in  the current folder and do not search in somedir, bin directories","find . \ , \ -o \"
Find all files/directories under '/directory_path' directory tree that have been modified within the last day,find /directory_path -mtime -1 -print
"Find directory ""your/dir"" if it is empty",find your/dir -prune -empty
search for a pattern in all the python files in the current folder. and save the output to output.txt file,find . -name '*.py' -exec grep 'something' {} \; > output.txt
Find all files in current directory and search for 'searchName' in those files,"find ./ -name ""*"" | xargs grep ""searchName"""
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago,find . -maxdepth 1 -cmin +60 -name file
Find all php files under current directory and delete empty lines from the beginning in those files,"find ./ -name ""*.php"" -type f | xargs sed -i '/./,$!d' 2>&1"
Find all test2.h files under current directory,sudo find . -name test2.h
find all the backup files in the current folder and delete them,find . -type f -name “FILE-TO-FIND” -delete;
"Search the files residing in the current directory tree whose names contain ""bills"" for ""put""",find . -name '*bills*' -exec grep put {} \;
find the type of all the regular/normal files in the current folder,find . -type f -exec file {} \+;
"search for all pdf files in the folder ""/home/pdf"" which have been accessed in the last 60*24 hours","find /home/you -iname ""*.pdf"" -atime -60 -type -f"
Change permission to 755 of all files/directories under current directory tree that have 777 permission,find -perm 777 | xargs -I@ sudo chmod 755 '@'
recursively finds all files newer than a date,"find . -type f -newermt ""$(date '+%Y-%m-%d %H:%M:%S' -d @1494500000)"""
Find all the files which were modified more than 50 days but less than 100 days ago,find / -mtime +50 -mtime -100
find all the files in the current folder which are smaller than 9MB,find . -size -9k
Copy all regular files from the current directory tree to /tmp/,"find . -type f -exec sh -c 'cp ""$@"" /tmp' {} +"
remove all the core files in the temp file after user confirmation,find /tmp -name core -type f -print0 | xargs -0 /bin/rm -i
Find all files under and below /dir that were changed or created less than 60 minutes ago,find /dir -cmin -60
Locate all `readme.txt' files under the home directory,find ~ -name readme.txt
Find and remove the .rhosts file in the /home directory tree,find /home -name .rhosts -print0 | xargs -0 rm
Find all .less files in the current directory tree,find . -name *.less
Print the files under current directory twice per line,find . -type f -exec echo {} {} \;
Find all *.rb (regular) files under current directory ensuring white space safety and print at most two file names/paths per line,"find . -name ""*.rb"" -type f -print0 | xargs -0 -n 2 echo"
"Rename all ""thumbs"" directories to ""thumb"" in the current directory tree","find . -type d | awk -F'/' '{print NF, $0}' | sort -k 1 -n -r | awk '{print $2}' | sed 'p;s/\thumbs/\1thumb/' | xargs -n2 mv"
"Find all regular .abc files under and below /the/path and rename them prefixing their names with ""version_1""",find /the/path -type f -name '*.abc' -execdir rename 's/\.\/\.abc$/version1_$1.abc/' {} \;
Count files accessed more than a month ago,find . -atime +30 -exec ls \; | wc -l
Find all .sh files in the current directory tree and remove them,"find . -name ""*.sh"" -print0 | xargs -0 rm -rf"
Copy all regular files from the current directory tree to directory `TARGET',find . -type f -exec cp -t TARGET {} \+
Find all files that belong to group developer,find /home -group developer
"Remove all files from the current directory tree whose names do not match regular expression ""excluded files criteria""","find . | grep -v ""excluded files criteria"" | xargs rm"
"Search all files from the /tmp directory tree for the string ""search string""",find /tmp -type f -exec grep 'search string' '{}' /dev/null \+
Search the system for the regular file 'myfile' ignoring permission denied errors,find / -name myfile -type f -print 2> /dev/null
search for a cpp directory in current folder and display all its files,"find . -type d -name ""cpp"" -exec find {} -type f \;"
"Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other","find . -type d -name files -exec chmod ug+rwx,o-rwx {} \;"
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions,"find / -maxdepth 1 -xdev -type f -exec grep -i ""stringtofind"" -l {} \; -exec sed -i '/./d' {} \;"
Find files/directories that does not have write permssion for group or others,find /path ! -perm -022
"Find all directories under the current directory that is on the same filesystem, execute ""/tmp/count_em_$$"" with the directory as an argument, sort the result numerically from least value to greatest value",find . -mount -type d -print0 | xargs -0 -n1 /tmp/count_em_$$ | sort -n
Make all regular files in the current directory tree world-readable,find . -type f -print0 | xargs -0 chmod go+r
Find all 777 permission directories and use chmod command to set permissions to 755,find . -type d -perm 777 -print -exec chmod 755 {} \;
List all files in entire file system that belong to the user wnj or modified later than the ttt file,find / \ -print
Find *.html files in the current directory tree that were modified less than 7 days ago,"find . -mtime -7 -name ""*.html"" -print"
Look for directory `Cookbook',find -name Cookbook -type d
"Find all files in the current directory tree except .html, ignoring .svn directories",find . \ -prune -o -print0
List the unique file extensions of all files under the current directory,find . -type f | grep -o -E '\.[^\.]+$' | sort -u
find all text files in current folder and trim the extra spaces in all lines in these files,"find . -iname '*.txt' -type f -exec sed -i '' 's/[[:space:]]\{1,\}$//' {} \+"
"Find all duplicate "".jar"" files in the current directory tree","find . -type f -printf ""%f\n"" -name ""*.jar"" | sort -f | uniq -i -d"
Find all files/directories named 'test' under current directory tree,find . -name test
"find all the files which start with the name ""Metallica"" in the folder ""/mp3-collection"" and which are bigger than 10MB",find /mp3-collection -name 'Metallica*' -and -size +10000k
find all regular file and create jw-htmlfiles.tar,"find . -type f -name ""*html"" | xargs tar cvf jw-htmlfiles.tar -"
Search for files/directories which are writable by somebody,find . -perm /222
Find all files/directories named 'myfile' under your home directory,find ~ -name myfile
Find all files/directories that start with 'screen'  in their names under user's home directory tree and show them by paging through one screenful at a time,"find ~ -iname ""screen*"" | more"
"Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx","find . -perm a=rwx,g-w,o-w"
Count the number of directories under directory '/directory/' non-recursively,find /directory/ -maxdepth 1 -type d -print| wc -l
display all the files in the current folder which have been accessed in the last 60 minutes,find . -amin -60
Search /tmp/ for files smaller than 100 bytes,find /tmp -size -100c
"Find regular files under / that contain ""string"" and clear out their contents, including newlines",find / -maxdepth 1 -xdev -type f|xargs grep -l 'string'| xargs perl -pi -e 's/.*\n//g'
"Find all files named ""filename"" in the current directory tree, not descending into ""FOLDER1"" directories",find . '(' -name FOLDER1 -prune -o -name filename ')' -print
Print out all files with their paths that have identical content and the same filename in different cases,find * -type f  | xargs md5sum | sort | uniq -Dw32 | awk -F'[ /]' '{ print $NF }' | sort -f | uniq -Di
"find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces","find . -type f -name ""*.pl"" -print0"
Find regular files in the current directory tree that have executable bits set for the user and group but not for the other,"find -L . -type f -perm -u=x,g=x  \! -perm -o=x"
Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory,find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'
Find all xml files under current directory,find . -name '*.xml'
display all the c files and the header files in the path /some/dir and do not search in sub directories,find /some/dir -maxdepth 1 \( -name '*.c' -o -name '*.h' \) -print
"find all the files in the current directory with the name ""wagoneer"" which are in the current device.","find . -xdev -name ""wagoneer*"" -print"
Remove trailing whitespaces in .txt files from the current directory tree,find . -type f -name '*.txt' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
search files in the folder /home which have been modified after /tmp/after and before /tmp/before,find /home/ -type f -newer /tmp/after -not -newer /tmp/before
Remove all empty files in /tmp/ and below,find /tmp -type f -empty -print | xargs rm -f
Remove all *bak files under current directory with confirmation prompt,find . -name '*bak' -exec rm -i {} \;
"Find files ending in ""config""",find .  -path '*/*config'
"Find all files in ""/home/"" which contain ""string1"", ""string2"" or the host name in its filename","find /home/ -type f -regextype posix-extended -regex "".*(string1|string2|$).*"""
"Search all PDFs from the current directory tree for ""keyword"", ignoring the case",find . -iname '*.pdf' -exec pdfgrep -i keyword {} +
search for files having python in filename,find / -iname '*python*'
Find and delete all hard links in the /home directory to file1,find /home -xdev -samefile file1 -print0 | xargs -0 rm
Search for 'Text To Find' in all regular files under current directory tree and show the matched files and matched lines with line numbers,"find ./ -type f -exec grep -Hn ""Text To Find"" {} \;"
Find all files under current directory and show their file information,find . -type f | xargs file
"Find directory ""your/dir"" if it is empty",find your/dir -prune -empty -type d
Search the current directory tree for hidden files skipping .htaccess,find . -type f \
Run 'chmod 0644' on all files in the current directory tree,find . -type f -exec chmod 0644 {} \;
Find command will display top 10 Big files from current directory .,find . -type f -exec ls -s {} \; |sort -n -r |head
Find files that are writable by both the “other” and the group under the plsql directory,find plsql -type f  -perm -220 -exec ls -l {} \; 2>/dev/null
Find *.js UTF-8 files with BOM and correct them,find . -iname *.js -type f -exec sed 's/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QTDIR',find /usr/ports/ -name Makefile\* -exec grep -l QTDIR '{}' '+' | wc -l
Get the total sizes of all files under current directory,find path -type f -printf '%s\n' | awk '{sum += $1} END {print sum}'
find all files in the home folder that are modified in the last 24 hours,find $HOME -mtime -1
find all the files that have been modified exactly 2 days ago,find -mtime 2
List all files in entire file system owned by the user wnj and are newer than the file ttt,find / -newer ttt -user wnj -print
find all the text files present in the current directory excluding the search in certain paths.,"find . -type f -name ""*.txt"" ! -path ""./Movies/*"" ! -path ""./Downloads/*"" ! -path ""./Music/*"""
"Search regular files under ~/mail for string ""Linux""","find ~/mail -type f | xargs grep ""Linux"""
search for all the symbolic links in a folder and delete them,find /target/dir -type l ! -exec test -e {} \; -exec rm {} \;
find all the html files in the current folder,"find . -name ""*.html"""
Search for files only that end with .php and look for the string $test inside those files,find . -name \*.php -type f -exec grep -Hn '$test' {} \+
Find all regular files in /usr/bin modified less than within the last 10 days,find /usr/bin -type f -mtime -10
"change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name",find . -type d -print0 | xargs -0 chmod 2775
"search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file",find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp /dev/null {}
"find files in the current directory having name ""filename""","find -iname ""filename"""
Measure the disk space taken up by all TXT files in the current directory tree,"find . -iname ""*.txt"" -exec du -b {} + | awk '{total += $1} END {print total}'"
Find all files under current directory that match the case insensitive regex .\|./.git and replace the text matching the regex '$lower1'   with $lower2 in these files,find . -type f \! -iregex '.\|./.git' -exec perl -i -pe 's/$lower1/$lower2/g' {} \;
Find all directories at level 3 of directory tree $from_dir,find $from_dir -mindepth 3 -maxdepth 3 -type d
List all regular files under current directory ensuring white space safety,find . -type f -print0 | xargs -0 -n 1
display all the files having spaces in the current folder,"find . -name ""filename including space"" -print0"
"Remove the ""123_"" prefix from all filenames of .txt files in current directory.","find -name ""123*.txt"" -exec rename 's/^123_//' {} "";"""
modify the permissions of all the folders in a directory,find /path/to/dir -type d -exec chmod 755 {} \;
"Search the current directory tree for regular files whose names end in ""log""","find `pwd` -name ""*log"" -type f"
Find all files/directories with space in their names under current directory,find . -name '* *'
change the permissions of all the regular/normal files to 664 in the current folder,find . -type f -exec chmod 664 {} \;
find all the text files in the file system and search only in the disk partition of the root.,"find / -mount -name ""*.txt"""
Find all regular files newer than '/tmp/$$'  under '/tmefndr/oravl01' directory tree,find /tmefndr/oravl01 -type f -newer /tmp/$$
List the directory paths of all file.ext files under present working directory,"find . -name ""file.ext"" -execdir pwd ';'"
Delete all files under root whose status were changed more than 30 minutes ago,find root -type -f -cmin +30 -delete
find all the files that have been modified today,find . -type f -mtime 0
Find all .sh files in the current directory tree and remove them,"find . -name ""*.sh"" -exec rm -rf '{}' \"
search for the file test.txt in the folders /home and /opt,find /home /opt -name test.txt
display all the files in the current folder which have been modified in the last 24 hours excluding all directories,find . \ -o \
Print $d if $d is an empty directory,"find ""$d"" -prune -empty -type d"
Search for 'mystring' in all *.txt files under current directory,find . -name *.txt | xargs egrep mystring
Find all symbolic links in the current working directory that link to files outside the current working directory,"find . -type l -exec sh -c 'echo $ ""<-- {}""' \; | grep -v ""^$"""
Find all files under current directory that match the case insensitive regex .\|./.git and replace all occurrences of the regex $1  with $upper2  in these files,find . -type f \! -iregex '.\|./.git' -exec perl -i -pe 's/$1/$upper2/gi' {} \;
find all directories in the current directory,find . -type d
Create directory `junk' in the home directory,find ~ -type d -exec mkdir junk {} \; 2> /dev/null
Counts total lines in all *.php files in the current directory recursively,find . -name '*.php' -type f | xargs cat | wc -l
"Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",find ~/code -name '.*' -prune -o -type d -printf ':%p'
Find all directories in current directory without going into sub-directories,find . -type d -maxdepth 1
search for all the directories in the current folder and run the print command in the searched folder,"find . -type d -execdir sh -c 'printf ""%s/%s\n"" ""$PWD"" ""$0""' {} \;"
Construction with additional '-exec true' to be used if both commands need to run regardless of their success or failure.,"find . -name ""*.txt"" \( -exec echo {} \; -o -exec true \; \) -exec grep banana {} \;"
"List all files/directories under current directory matching the posix-egrep type regex "".+\.(c|cpp|h)$"" in their names excluding the files that contain 'generated' or 'deploy' in their paths",find . -regextype posix-egrep -regex '.+\.(c|cpp|h)$' -print0 | grep -vzZ generated | grep -vzZ deploy | xargs -0 ls -1Ld
"Set permissions of all files under ""/opt/lampp/htdocs"" to 644",find /opt/lampp/htdocs -type f -exec chmod 644 {} \;
find all the php files in current folder using regular expressions,find . -regex '.+\.php'
Recursively removes all empty folders under current folder.,find -depth -type d -empty -exec rmdir {} \;
List all regular files in the current directory tree,find . -type f | xargs ls -l
Find all .sh files in the current directory tree and remove them,"find . -name ""*.sh""| xargs rm -rf"
"Search all files called ""abc"" that reside in the current directory tree for string ""xyz""","find . -name ""abc"" -exec grep ""xyz"" {} \;"
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions,"find / -maxdepth 1 -xdev -type f -print -exec grep -i ""stringtofind"" -q {} \;"
find all the text files in the current folder and display their Permissions and size along with their name,"find . -name ""*.txt"" -printf ""%M %f \t %s bytes \t%y\n"""
search for all the files in a directory and give the first five characters of the file,find . -type f -exec bash -c 'echo ${1:0:5}' funcname {} \;
find all 'js' suffix files  exclue the path *exclude/this/dir*' under current dirctory,find . -name '*.js' -not -path '*exclude/this/dir*'
Find files with 002 permission in entire file system,find / -type f -perm -002
Search the current directory tree for files matching regular expression '.*myfile[0-9][0-9]?',find . -regex '.*myfile[0-9][0-9]?'
"search for all the regular/normal files with the name ""access.log"" in the folder /var/www which are bigger than 100MB",find /var/www -type f -name «access.log*» -size +100M
Change the ownership of all aluno1's files in the current directory and below to aluno2,find . -user aluno1 -exec chown aluno2 {}
Find regular files under '/somefolder' directory tree satisfying the options/conditions/operations provided in ${ARGS[@]} array with find command,find /somefolder -type f ''
Write out the entire directory hierarchy from the current directory,find .
Find and remove all .mp3 regular files under the current directory and below,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
find all the normal/regular files in current folder and search for a pattern,find . -type f -print0 | xargs -0 grep pattern
"Copy all files matching ""file_name.extension"" to ""/path/to/receiving/folder"" preserving directory hierarchy",find . -name 'file_name.extension' -print | cpio -pavd /path/to/receiving/folder
find a 'fool.scala' named regular file under /opt /usr /var those directories.,find /opt /usr /var -name foo.scala -type f
Find all files/directories that are owned by user 'eric' under current directory tree,find -user eric -print
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""",sudo find /var/www -nouser -exec chown root:apache {} \;
Print the list of top 10 largest files in a directory.,"#!/bin/bash

find /path/to/your/directory -type f -exec du -h {} + | sort -rh | head -n 10"
find files which modification time is  7 days ago,find . -mtime -7
Find all files that belong to group developer,find /home -group developer
dispaly all the empty regular/normal files in the current folder,find . -type f -empty
Find the directory with least modification time under current directory,find -type d -printf '%T+ %p\n' | sort | head -1
"Find files in the current directory excluding CVS, SVN, GIT repository files and all binary files.","find . -not \ -type f -print0 | xargs -0 file -n | grep -v binary | cut -d "":"" -f1"
Delete the files under the current working directory with inode numbers specified on standard input,"xargs -n 1 -I '{}' find ""$(pwd)"" -type f -inum '{}' -delete"
"Find all files in current directory that were modified less than 1 day ago, and create cpio archive in $backup_dir",find . -mtime -1 | cpio -oa 2>/dev/null |
"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","find $1 -name ""$2"" | grep -v '/proc' | xargs grep -Hn ""$3"" {} \;"
Locate files with user permissions rwx owned by my_user,find . -user my_user -perm -u+rwx
"search for a regular/normal file ""myfile"" in the entire file system excluding the folder in excluded_path",find / -path excluded_path -prune -o -type f -name myfile -print
list all zero-length files under the current directory,find . -empty -exec ls {} \;
"search for the file ""filename"" in the entire file system",find / -name filename
"list all the "".ksh"" files in the current directory","find . -ls -name ""*.ksh"""
Search the /myfiles directory tree for files that are 5 512 byte blocks in size,find /myfiles -size 5
"find all the files in the folder ""myfiles"" which have not been accessed in the last 30 days",find /myfiles -atime +30
Search the current directory recursively for regular files last accessed less than 2 days ago,find . type -f -atime -2
Search the system for a file by its content limiting the search to regular files smaller than 10KB,find / -type f -size -10k 2>/dev/null -print0 | xargs -0 egrep '\bsomeknowncontent\b'
change the permissions of all the directories in the current folder,find . -type d | xargs chmod 2775
"Search the system for directories named ""needle"" suppressing error messages","find / -type d -name ""needle"" 2>/dev/null"
search for text files in the current folder which do not have write access to others,find . -type f \
Find all files which  are accessed after modifying /etc/passwd files.,find -newer /etc/passwd
Delete all files named 'sample' (case insensitive) under '/home/user/Series' directory tree with superuser privilege,sudo find /home/user/Series/ -iname sample -exec rm {} \;
Find files in the current directory tree whose status was changed within the last 60 minutes,find . -cmin -60
Search for 'js' in all files under current directory that match 'some string' in their names,find . | grep 'some string' | grep js
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,"find ./ -name ""foo.mp4"" -printf ""%h\n"""
"find all files in the file system with the permissions 777 and having the word ""filename"" in their name.","find / -perm 777 -iname ""filename"""
"Recursively prints all files in a current folders, and searches ""stringYouWannaFind"" in file content ignoring case differences, and preceding found string with its number in file.","find ./ -type f -print -exec grep -n -i ""stringYouWannaFind"" {} \;"
Recursively removes all files like '*.xyz' in a current folder.,find . -name \*.xyz -exec rm {} \;
find all the directories in the current folder and create the same directory structure in a remote machine using ssh,"find -type d | ssh server-B 'xargs -I% mkdir -p ""/path/to/dir/%""'"
"find all files under ""/usr""",find /usr -print
Find all directories named essbase under /fss/fin,"find /fss/fin -type d -name  ""essbase"" -print"
"Print the list of all files in the current directory except for SVN, CVS, GIT, and binary files","find . -not \ -type f -print0 | xargs -0 file -n | grep -v binary | cut -d "":"" -f1"
Find files matching an exact set of permissions,find / -perm 644
Find all directories under ~/code and replace all newlines with : in the output then remove the last :,find ~/code -type d | tr '\n' ':' | sed 's/:$//'
"Search the *.cc files in the current directory tree for string ""xxx""","find . -name ""*.cc"" -print -exec grep ""xxx"" {} \;"
display all the configuration files in the etc folder,find /etc -name '*.conf'
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -type -f -mtime ""+$DAYS_TO_SAVE"" -exec rm {} \; -printf '.' | wc -c"
display all normal/regular files in current  folder,find . -type f
"Find files recursively with extension ""ext""","find . -name ""*.ext"""
Find all files that were last modified less than7 days ago under /home,find /home -mtime -7
Print the largest 20 files under current directory,find . -type f -printf '%k %p\n' |sort -n |tail -n 20
Find the number of regular files under and below directory /path/to/dir,find /path/to/dir -type f -exec printf %.sX {} + | wc -c
Delete all files/directories with inode number 117672808 under current directory tree,find -inum 117672808 -exec rm {} \;
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files and count the number of lines in the output,"find .  -type f -name ""CDC*"" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \ | wc -l"
display all the regular/normal files in current folder,find . -type f -print0
"display all the files in the folder ""/dev"" which belong to the user ""peter""","find /dev -user ""peter"" |more"
this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _,find . -type f -iname '*.mp3' -exec rename '/ /_/'  {} \;
"Search for ""1234567890"" in every gzip file modified between 8:00 and 9:00 on 2014-04-30",find . -newermt '2014-04-30 08:00:00' -not -newermt '2014-04-30 09:00:00' |xargs gunzip -c | grep 1234567890
"Find ""file.xml"" under the current directory and change directory to its parent",cd `find . -name file.xml -printf %h`
find all the regular/normal files in all the directories in the /some/dir and delete them,find /some/dir -type d -exec find {} -type f -delete \;
find all the files in the file system which have sticky bit enabled to the user,find / -perm -u+s
View manual page of the find command,man find
Print a sorted list of the extensions of the regular files from the current directory tree,find . -type f | grep -o -E '\.[^\.]+$' | sort -u
Move all the .c files from the current directory tree to temp/,"find . -name ""*.c"" -print0 | xargs -0 -n1  -I '{}' mv '{}' temp"
search for all the directories in a folder and limit the search to current folder and give them as input to the python script,find /stuff -type d -printf '%P\0' | xargs -0 script.py
display all the files in the current folder expect perl shell and python fiels,"find . -not -name ""*.pl"" -not -name ""*.sh"" -not -name ""*.py"""
View the man page of find,man find
Run an awk program on every TXT file found in the current directory tree,"find . -name ""*.txt"" -print -exec awk '{if{print;n++}}' {} \;"
Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/,"find . -name ""*.csv"" -exec diff {} /some/other/path/{} "";"" -print"
Create an archive named newArch from the contents of ./test directory,"find ./test -printf ""././%f\n""| cpio -o -F newArch"
Search the current directory tree for files and directories with permissions 775,find .  -perm 775 -print
find all files in the current folder which have only the write permission for the others,find . -perm -0002 -print
"Search current directory for any directory named ""config"" and go to first match found.","cd ""$(find . -name config -type d | sed 1q)"""
list all files under $dir directory except path $dir/prune_me directory,"find ""$dir"" -not \ -exec bash -c 'echo ""$0""' {} \;"
Find file `hosts',find /etc -name hosts
"Execute '/usr/bin/fbi -noverbose -a -t 4 -u `find -type f | egrep -i ""$""`' every 300 seconds and display without title","watch -n 300 -t '/usr/bin/fbi -noverbose -a -t 4 -u `find -type f | egrep -i ""$""`'"
"Recursively removes all files with name like ""myFile.*"" in 'file path' folder.","find <file path> -name ""myFile.*"" -exec rm -f {} ;"
display all the files in the home folder excluding directories which have been modified in the last 24 hours,find /home/ -mtime -1 \! -type d
Change permissions of all directories from the current directory tree to 644,find . -type d -exec chmod 755 {} +
Find all files that were modified later than ordinary_file in the current directory and its sub-directories.,find -newer ordinary_file
display all the directories in the current folder excluding those that are present in the .svn directory tree,find -type d -path '.svn' -prune -o -print
Count the number of symbolic links starting from /students,find /students -type l -print 2> /dev/null |wc -l
Find all *.py files under current directory and run 'perl script.pl' with the file paths as arguments,find . -name '*.py' | xargs perl script.pl
Search the directory tree /tmp for regular files using zero delimiter for output,find /tmp -type f -print0
Find all *.ogg and *.mp3  files/directories under your home directory,find $HOME -iname '*.ogg' -o -iname '*.mp3'
find all the directories in the current folder,find . -type d -print
"Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex "".*\.$FILES_TO_PROCES"" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline","find ""$DIRECTORY_TO_PROCESS"" -type f -iregex "".*\.$FILES_TO_PROCES"" ! -name ""$find_excludes"" -print0"
Search the /tmp/ directory recursively for regular files,find /tmp -type f
Find and remove zero bytes files from user's directories .,find /usr/* -size 0c -exec rm {} \;
find al the files that are modified exactly 2 days ago,find -daystart -mtime 2
delete all the empty files in the current directory only if they are ok and the user has the permission to delete them,find . -empty -ok rm {}\;
"search for files with the name ""temp"" in the /usr folder",find /usr -name temp -print
Count the number of .gz files in directory tree /home/user1/data1/2012/mainDir,find /home/user1/data1/2012/mainDir -name '*.gz' | wc -l
search for files which are writable by either their owner or their group,"find . -perm /u=w,g=w"
"Search the current directory tree for *cache, *xml, and *html files","find . -type f \( -name ""*cache"" -o -name ""*xml"" -o -name ""*html"" \)"
Find all directories under /myfiles directory,find /myfiles -type d
Print the directories that are taken by the glob pattern $SrvDir*,find $SrvDir* -maxdepth 0 -type d
Find all hidden files under /tmp,"find /tmp -type f -name "".*"""
Find all SGID files in entire file system,find / -perm +g=s
Print the list of the subdirectories of /path/to/dir,find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d
Find all .core files on the system starting from / and delete them,"find / -name ""*.core"" | xargs rm"
"Find all files named ""something"" in the current folder and below and run them through the ls -l command, one by one.",find . -name something -exec ls -l {} \;
Find all 777 permission directories and use chmod command to set permissions to 755,find / -type d -perm 777 -print -exec chmod 755 {} \;
Find and remove the file with inode number 782263 in the current directory tree,find . -inum 782263 -exec rm -i {} \;
Find all directories by the name `httpdocs' on the system,find / -type d -name httpdocs 2> /dev/null
find all foo.bar files in the entire file system and which are present in the same partition as root.,find / -name foo.bar -print -xdev
Find the top 5 biggest files,find . -type f -exec ls -s {} \; | sort -n -r | head -5
Print the list of file extensions in a directory.,"#!/bin/bash

directory=""/path/to/your/directory""

find ""$directory"" -type f | sed 's/.*\.//' | sort -u"
find all the cpp files in current folder,"find -name ""*.cpp"""
List all regular files under the current directory and below it,find . -type f -print0 | xargs -0 ls -l
display a long list of all the jpg files in the home folder,find ~ -iname '*.jpg' -exec ls {} \;
Find all regular .html files in the /var/www directory tree,"find /var/www -type f -name ""*.html"""
Perform a case insensitive search for *filename* files/directories under current directory tree,"find . -iname ""*filename*"""
"Search all files in the current directory tree, except *.html and *.svn*, for ""SearchString""",find . ! -name '*.html' ! -name '*.svn*' -exec grep 'SearchString' {} /dev/null \;
Generate a report of top 10 largest files in a directory and its subdirectories.,"#!/bin/bash

find /path/to/directory -type f -exec du -h {} + | sort -rh | head -n 10 > largest_files_report.txt"
"Count the number of lines in all "".php"" files in the current directory tree",find . -name '*.php' -type f | xargs cat | wc -l
"recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number","find /data/bin/test -type d -mtime +10 -name ""[0-9]*"" -exec rm -rf {} \;"
"Find all directories starting from YOUR_STARTING_DIRECTORY that contain the string ""99966"" in their names","find YOUR_STARTING_DIRECTORY -type d -name ""*99966*"" -print"
"find in the file system for the directories with the name ""httpdocs""",find / -type d -name 'httpdocs'
Find all *.old files and move them to directory oldfiles,"find . -name ""*.old"" -exec mv {} oldfiles \;"
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories,"find ""$1"" -perm -u+x -print0 | xargs chmod g+x"
Find all files/directories that contain 'packet' (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size,"find . -iregex "".*packet.*"" ! -type d -size +1500c"
find all files in the home folder which are modified in the last 2 days.,find ~ -type f -mtime -2
"Unzip every "".gz"" file in the current directory tree","find . -name ""*.gz"" | xargs gunzip"
display all the regular/normal files in the current folder which have been modified in the last 24 hours,find . -mtime 0 -type f
display all regular/normal files in the current folder with the name dummy,find -type f -name dummy
Search in the current directory and all sub-directories except ./D for the file named hi.dat.,find . \( -name D -prune \) -o -name hi.dat
Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours,find $LOGDIR -type d -mtime -1 -exec compress -r {} \;
search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.,find . -group staff -perm -2000 -print
"Remove the regular files from the current directory that were last modified on November, 22","find -maxdepth 1 -type f -newermt ""Nov 22"" \! -newermt ""Nov 23"" -delete"
"Search the current directory for files whose names start with ""messages."" ignoring SVN, GIT, and .anythingElseIwannaIgnore files",find -name 'messages.*' -exec grep -Iw uint {} + | grep -Ev '.svn|.git|.anythingElseIwannaIgnore'
Find recursively the latest modified file in the current directory,find . -type f -print0|xargs -0 ls -drt|tail -n 1
Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree,find /path/to/look/in/ -type d -name '.texturedata' -prune -print0 | xargs -0 chmod 000
find all files in the current directory excluding those that end with .js or have the words .min or console in their name,find . -type f \
"display all the files ending with "".user"" or beginning with ""admin"" or ending with "".user.gz"" in /var/adm/logs/morelogs/ and excluding  all regular files",find /var/adm/logs/morelogs/* -type f -prune \ -print
Find all files/directories excluding paths that match '.git' or '.gitignore',find -print0 | grep -vEzZ '(\.git|\.gitignore/)'
cope *.mp3 files to /tmp/MusicFiles,"find . -type f -name ""*.mp3"" -exec cp {} /tmp/MusicFiles \;"
"Copy all files in the current directory tree matching ""textToSearch"" to ""$destination_path""","find . -type f | xargs grep -l ""textToSearch"" | cpio -pV $destination_path"
Count and show the number of lines for each PHP files in the current directory tree,find . -name '*.php' | xargs wc -l
"search for a regular/normal file ""myfile"" in the entire file system excluding the folder in excluded_path",find / -path excluded_path -prune -o -type f -name myfile -print
"find all the jar files in the current folder and display all the "".class"" files or files ending with jar",find . -name “*.jar” -print -exec jar tvf {} \; |grep -E “jar$|.class”
search for the word foo in all the js files in the current folder,"grep -iH foo `find . -name ""*.js""`"
"Show the files or directories in the current directory whose names are not ""MyCProgram.c""","find -maxdepth 1 -not -iname ""MyCProgram.c"""
display all the text files in the home folder,"find /home -name ""*.txt"""
"Search the current directory tree for the files with extension ""trc"" and list them if they are more than three days old","find . -name ""*.trc"" -ctime +3 -exec ls -l {} \;"
Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games',"find /usr/local/games -name ""*xpilot*"""
search for all the regular files that have been changed in the last 48 hours and sync these to another folder,"find /my/source/directory -ctime -2 -type f -printf ""%P\n"" | xargs -IFILE rsync -avR /my/./source/directory/FILE /my/dest/directory/"
list all samba files in /var/l* directory,find  /var -path */l??/samba*
Find files/directories named 'foo' under current directory tree without descending into directories named 'foo',find . -name foo -type d -prune -o -name foo -print
change html files to mode 644,"find /usr/local -name ""*.html"" -type f -exec chmod 644 {} \;"
Remove with prompting all files that have not been accessed in over 100 days,find /mydir -atime +100 -ok rm {} \;
"remove all the files with the name ""Trash"" in the folder /home",find /home -name Trash -exec rm {} \;
Find all files/directories that start with 'test' in their names under current directory tree,find . -name 'test*'
Search for the regex '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' in all files under /etc,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
Copy all files in current directory that do not match */not-from-here/* in their names to /dest,find . -type f -not -iname '*/not-from-here/*' -exec cp '{}' '/dest/{}' ';'
Calculate and show md5 sums for every files under current directory tree,find . -type f -exec md5sum \{\} \;
List all files in the current directory tree that were modified 60 minutes ago,find -mmin 60
"Find all files and directories in the current directory with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP, preserving path hierarchy","find . -iname ""*linkin park*"" > temp;rsync -arhv --files-from=temp  /Users/tommye/Desktop/LP;rm temp"
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format,"find -type f -name ""*.htm"" | awk -F'[/]' 'BEGIN{OFS=""-""}{ gsub(/^\.\//,"""") ;print $1,$2, substr($4,3,2),substr($4,5,2),substr($4,8) }'"
Find links that point to nothing,find / -type l -print | perl -nle '-e || print';
Updates all packages with 'rpmfusion' in name.,find-repos-of-install | grep rpmfusion | xargs yum update
"Search the files under and below /directory/containing/files for ""pattern_to_search""",find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +
Rename all *.jpg files under current directory by appending parent directory name at the beginning of their names,"find . -iname '*.jpg' | while read fn; do name=$ ; dir=$ ; mv ""$fn"" ""$dir/$-$name"" ;done ./lib/bukovina/version.jpg ./lib/bukovina/bukovina-version.jpg"
force delete all the files in the current folder expect xml files,find . | grep -v xml | xargs rm -rf {}
Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games',"find /usr/local/games -name ""*xpilot*"""
Search for *pattern* in and below current directory,"find -name ""*pattern*"""
"Find all files in the current directory and below with extension .php and replace ""php"" with ""html"" in their names","find ./ -type f -name ""*.php""  | xargs -r rename ""s/php/html/"""
Find all files/directories under $dir directory,"find ""$dir"""
find all the files which have not been modified in the last 1 year and display the total disk usage of them  in GB,"find . -type f -mtime +356 -printf '%s\n'  | awk '{a+=$1;} END {printf ""%.1f GB\n"", a/2**30;}'"
Find all files/directories under current directory appending a null character at the end of each file name/path,find -print0
List all *.gif files found in the current directory tree,find . -name *.gif -exec ls {} \;
"Create symbolic links in current directory for all files located in ""dir"" directory and have filename extension ""jpg""","find dir -name '*.jpg' -exec ln -s ""{}"" \;"
check if there any files from the .git folder after excluding it using the prune command,find . -path ./.git -prune -o -print -a \ | grep '.git'
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*,find . -mtime 0 | grep -v '^\./en' | grep -v '^\./es' | grep -v .swp
find all files in the current folder with the permission 777 and modify the permissions as 755.,find . -type f -perm 777 -exec chmod 755 {} \;
find all files in the current folder which have not been changed in the last 48 hours,find ./ -daystart -ctime +2
Recursively delete all files/folders named '.svn' in a current folder.,find . -name .svn -delete
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time,"find / -type f -name ""*"" -newermt ""$newerthan"" ! -newermt ""$olderthan"" -ls"
Find all .gz archives in the current directory tree,find . -name '*.gz'
Find all files/directories under /myfiles that were accessed more than 30 days ago,find /myfiles -atime +30
"create symbolic links in directory ""/usr/local/symlinks "" to all files located in directiry ""incoming"" and that have been modified earlier then 5 days and owned by user ""nr""",find /incoming -mtime -5 -user nr -exec ln -s '{}' /usr/local/symlinks ';'
"Find files containing `blah' in their names modified less than 2 days ago, case insensitive",find . -iname '*blah*' -mtime -2
Find all index.* files/directories under current directory,find -name 'index.*'
List all regular files modified more than 61 days,find -type f -mtime 61 -exec ls -ltr {} \;
"Find all files whose name or type description includes ""text"", display only paths to files.",find . -exec file {} \; | grep text | cut -d: -f1
copy the file header.shtml to those dirs,find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
create a tar ball of all the jpg and png images in the current folder,find . \ -print -exec tar -rf images.tar {} \;
display all the files in the folder a,find a
Print the names of all files in /some/directory and its subdirectories recursively whose MIME type is video,find /some/directory -type f -exec file -N -i -- {} + | sed -n 's!: video/[^:]*$!!p'
finda all the hidden files excluding those having the extension htaccess,"find . -type f \( -iname "".*"" ! -iname "".htaccess"" \)"
Search for 'String' case insensitively in all files under current directory tree and show the matched lines with their filenames,"find . -name * -print0  | xargs -0 grep -iH ""String"""
find all directories with the name root in the entire file system.,find / -type d -name root
Find all fglrx-libGL* files under and below debian/fglrx/,find debian/fglrx/ -name 'fglrx-libGL*'
"Find the ""*.foo"" files in the current directory tree that are not under "".snapshot"" directories",find . -name .snapshot -prune -o -name '*.foo' -print
Find all files under /path and below writable by `group' and `other',find /path -perm -go+w
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*',"find data/ -name ""filepattern-*2009*"" | cpio -ov --format=ustar > 2009.tar"
find all the regular/normal files in the current directory and print them skip searching all the directories in the current folders.,find * -type f -print -o -type d -prune
"Remove the ""^M"" characters from all *.ext files under /home directory and save the results to new files with _new appended in their names","find /home -type f -name ""*.ext"" -print0 | while read -r -d ""$"" -r path; do awk '{ sub; print }' $path > $path""_new""; done"
find all the regular files in a folder which do not start with the word find and assign the output to a variable,"files = ""`find ""'""$dirs""'"" -type f |& grep -v '^find: '`"""
"remove all subdirectories named ""CVS"" under current dir",find . -type d -name CVS -exec rm -r {} \;
Find all files under /mountpoint and below which have hard links,find /mountpoint -type f -links +1
Give all directories in the /path/to/base/dir tree read and execute privileges,find /path/to/base/dir -type d -exec chmod 755 {} +
find all the regular/normal files in the current folder,find -type f
Find all files/directories under /myfiles following symlinks if needed,find -L /myfiles
Search the current directory recursively for regular files last changed 2 days ago,find . type -f -ctime 2
"Find files that are writable by the user, the group, or both",find . -perm +220  -exec ls -l {} \; 2> /dev/null
Find files readable only by the group,find . -perm g=r -type f -exec ls -l {} \;
find all the regular/normal files in a folder and assign the output to a variable,"files2 = ""`find ""'""$dirs""'"" -type f`"""
find al the tmp directories in the current directory and create a dump of it,find . -type d -name tmp -prune -o -print | cpio -dump /backup
find all files in current folder which are exactly 300MB,find . -size 300M
Find all files in the current directory tree and replace string $1 with string $2 in them,"find ./ -type f -exec sed -i ""s/$1/$2/"" {} \;"
search for a word in all the regular/normal files in the current folder and display the filename along with the matched text,find . -type f -exec grep -l linux {} \;
"Copy all files ending in "".a"" in directory trees matching ""folder*"" to ""/path/to/dest"" preserving directory hierarchy",find folder* -name '*.a' -print | cpio -pvd /path/to/dest
Print how many files are inside each directory under the current one,find */ | cut -d/ -f1 | uniq -c
Force the group stickiness for directories under /var/www,find /var/www -type d -print0 | xargs -0 chmod g+s
Run 'chmod 0755' on all directories in the current directory tree,find . -type d -exec chmod 0755 {} \;
Assign permissions 644 to files in the current directory tree,find . -type f -print0 | xargs -0 chmod 644
Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time,find . -name '*.[ch]' | xargs grep $1 | less
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place,find /myprojects -type f -name *.cpp -print0 | xargs -0 sed -i 's/previousword/newword/g'
List all *fink* files/directories under current directory,"find . -name ""*fink*"" |xargs ls -l"
Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories,find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n' | sort | uniq | tr -d '\n'
display all the files in the usr folder which have been modified after Feburary 1st,"find /usr -newermt ""Feb 1"""
Search for the regex ^catalina in the first line of each file under current directory,find -type f | xargs head -v -n 1 | grep -B 1 -A 1 -e '^catalina'
Find all *1234.56789* files/directories under current directory,find . -name '*1234.56789*'
"Find all subdirectories of the current directory and run comand ""cmd2"" for each of them",find -maxdepth 1 -type d | while read dir; do echo $dir; echo cmd2; done
Find all .java files  under current directory,find . -print | grep '\.java'
"find all the files in the current directory ending with "".i""","find . -name "".*\.i"""
search all the files in the current folder using regex,"find . -regex "".*/my.*p.$"""
display the change owner command for all the regular files in the current folder.,find . -type f -exec echo chown username {} \;
Find all files/directories with permission $permissions under $directory directory tree,"find ""$directory"" -perm ""$permissions"""
"Remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt","find . -type f ! -regex "".*/\"" -delete"
"Find and uncompress all files in the current directory tree ending in "".csv.gz""",find . -name '*.csv.gz' -exec gzip -d {} \;
Find all .txt files in the user's home directory and below.,find ~/ -name '*.txt'
Find text in whole directory tree,"find . -type f | xargs grep ""text"""
Find files created in the last minute; works on Mac OS X,find / -newerct '1 minute ago' -print
display all the files in the current folder along with the change time and display file names of the last 10 changed files,"find . -type f -printf ""%C@ %p\n"" | sort -rn | head -n 10"
"Search the ""test1"" directory recursively for regular files",find test1 -type f -print
find all the files in the file system whcih have been modified in the last 1 day,find / -mtime -1
search for a word in all the shell scripts in the current folder and display the matched files.,"find . -type f -name ""*.sh"" -exec grep -il landoflinux {} \;"
locate large files  in /home/ for 'cleaning',find /home -type f -size +100M -delete
Find files that were modified more than 7 days ago but less than 14 days ago and archive them,find . -type f -mtime +7 -mtime -14 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
"Remove files under /mnt/zip matching ""*prets copy"" with confirmation","find /mnt/zip -name ""*prefs copy"" -print0 | xargs -0 -p /bin/rm"
Find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command,"echo ""$queue"" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 $*"
List detailed information about all Jar files in the current directory tree,"find . -iname ""*.jar"" | xargs -n1 zipinfo"
"Search the current directory tree for files whose names contain ""TextForRename""","find ./ -name ""*TextForRename*"""
"Search for files ""file1"" or ""file9""",find . -name file1 -or -name file9
"search for files named ""WSFY321.c"" in a case-insensitive manner","find . -iname ""WSFY321.c"""
Find all files/directories named 'javac' under current directory,find . -name 'javac'
Hunting down files with at least one banana,"find . -type f -print0| xargs -0 grep -c banana| grep -v "":0$"""
"Find all files under current directory whose file type description contains ""image"", display only path to each file.",find . -type f -exec file {} \; | awk -F: '{ if  print $1}'
find all the files ending with jpg in current folder and display their count,find ./ -iname '*.jpg' -type f | wc -l
display all the files in current folder which have been changed in the last 2-6 days,find . -cmin +2 -cmin -6
Find all files/directories under /path/to/dir and set directory permission to 0755 and file permission to 0644,find /path/to/dir -type d -exec chmod 0755 '{}' \; -o -type f -exec chmod 0644 '{}' \;
Change the permission to 644 for all files under current directory,find . -type f | xargs chmod -v 644
Search the system for files and directories owned by user `admin',find / -user admin -print
"search for the file ""foo.txt"" in the entire file system",find / -name foo.txt
delete all the files in the current folder  which do not belong to any user,find / -nouser -exec rm {}\;
Find all directories that have been accessed $FTIME days ago under current directory tree,find . -type d -atime $FTIME
"Search regular files under ~/mail for string ""Linux""","find ~/mail -type f | xargs grep ""Linux"""
Find all files under directory tree /path/to/dir whose permissions are not 644,find /path/to/dir ! -perm 644
Find all PHP files under current directory that contain only one line,"find . -type f -name '*.php' -exec wc -l {} \; | egrep ""^\s*1\s"""
"display the base name(name without extension) of all the "".NEF"" files in the current folder","find . -name ""*.NEF"" -exec basename \{\} .NEF \;"
"Counts lines in each *.php file, sorted by number of lines, descending.",find . -name '*.php' -type f | xargs wc -l | sort -nr
"Change permissions of all files ending "".php"" under the current directory to 755 and print a count of modified files","find . -name ""*.php"" -exec chmod 755 {} + -printf '.' | wc -c"
display all the files in the current folder,"find . | awk '{ print ""FILE:"" $0 }'"
Find all files/directories under '/usr' directory tree that have not been modified in the last 356 days counting days from today,find /usr -mtime +356 -daystart
"Search /some/directory for files that are owned by the user ""joebob""",find /some/directory -user joebob -print
Find all directories named 'mydir' under 'local' and '/tmp' directory tree,find local /tmp -name mydir -type d -print
"Search all *.txt files under ~/documents for the word ""DOGS""",find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \; -print
Find every file under the directory /home owned by the user joe.,find /home -user joe
"display all files in the folder /usr/src excluding those ending with "",v""",find /usr/src ! \ '{}' \; -print
Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time,"find . -regex "".*\.\"" -type f -printf '%T+ %p\n' | sort | head -n 500"
Give all directories in the /path/to/base/dir tree read and execute privileges,find /path/to/base/dir -type d -exec chmod 755 {} +
remove all core dump files from user's home directory,find ~/ -name 'core*' -exec rm {} \;
Find all files starting from the current directory that contain '.java' in their pathnames,find . -print | grep '\.java'
"Find all files under ./lib/app and sort them, then print their contents to myFile","find ./lib/app -type f | sort | xargs awk 'ENDFILE {print """"} {print}' > myFile"
Find all files more than 700 megabytes,find / -size +700M
find all normal/regular files in current folder and display the total lines in them,find . -type f -print0 | xargs -0 wc -l
Copy all *.mp3 files under the current directory to /tmp/MusicFiles/,"find . -type f -name ""*.mp3"" -exec cp {} /tmp/MusicFiles \;"
Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end,"find /etc -maxdepth 1 -name ""*.conf"" | tail"
Find all files/directories named $something under current directory,"find -name ""$something"""
Find all files/directories named 'FindCommandExamples.txt' that belong to the user 'root' in the entire filesystem,find / -user root -name FindCommandExamples.txt
Search the current directory recursively for regular files last modified less than 2 days ago,find . type -f -mtime -2
"find all the regular/normal files in the folder /travelphotos which are bigger than 200KB and which do not have the word ""2015"" in their name","find /travelphotos -type f -size +200k -not -iname ""*2015*"""
Get the disk space used by all *.txt  files under /home/d directory,"find /home/d -type f -name ""*.txt"" -printf ""%s\n"" | awk '{s+=$0}END{print ""total: ""s"" bytes""}'"
"Search all files in the current directory tree whose names contain ""."" for ""SearchString""",find . -name '*.*' -exec grep 'SearchString' {} /dev/null \;
"remove all the "".core"" files in the file system","find / -name ""*.core"" | xargs rm"
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set",find / -noleaf -wholename '/proc' -prune -o -wholename '/sys' -prune -o -wholename '/dev' -prune -o -perm -2 ! -type l  ! -type s ! \( -type d -perm -1000 \) -print
Find all files in the /home/ directory tree that were last modified less than 7 days ago,find /home -mtime -7
display all the files in the home folder,find $HOME -print
display all mp3 files in the file system which have not been accessed in the last 24 hours,find / -name “*.mp3” -atime +01 -type f
archive all files in a current directory modified in the last 30 days,tar czvf mytarfile.tgz `find . -mtime -30`
Delete all .svn files/directories under current directory,find . -name .svn -exec rm -v {} \;
"find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled",find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
find all text files in current folder and display all files that have the alphabet a in their name,"find . -name "".txt"" | grep a"
Delete all files/directories with inode number 117672808 under current directory tree,find -inum 117672808 -exec rm {} \;
Search the current directory recursively for regular files modified 2 days ago,find . type -f -mtime 2
find all PDFs owned by user “seamstress”,find / -user seamstress -iname “*.pdf”
"Find recursively all regular files in the current directory whose names contain "".""",find . -type f -a -name '*.*'
Remove trailing whitespaces from all regular non-hidden files in the current directory tree,find . -type f -name '*' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
find all the text files in the current folder,find . -type f -name '*.txt' -print
Remove all directories in and below the current directory,find \! -name . -type d -print0 | xargs -0 rmdir
"find all the files ending with ""rb"" and display the first 10000 lines from these files.","find . -name ""*rb"" -print0 | xargs -0 head -10000"
Give the location of every hard link to file1 in the /home directory tree,find /home -xdev -samefile file1 | xargs ls -l
search all files in the current folder which match the regular expression,"find . -regex "".*/my.*p.$"" -a -not -regex "".*test.*"""
Create a script to delete all empty files in a directory.,"#!/bin/bash

dir=""/path/to/directory""
find ""$dir"" -type f -empty -delete
echo ""Empty files in the directory have been deleted."""
display the version of find,find --version
find all the files in the current directory which end with orig,find . -name '*.orig'  -exec echo {} \ ;
Recursively changes group ownership on every file in the ${WP_ROOT}/wp-content directory to ${WS_GROUP} group.,find ${WP_ROOT}/wp-content -exec chgrp ${WS_GROUP} {} \;
Search the directory given as variable $d for empty subdirectories,"find ""$d"" -mindepth 1 -prune -empty"
"Recursively removes all files and folders named '.svn' in a current folder, handling content of removed folder before folder inself.",find . -depth -name .svn -exec rm -fr {} \;
Find recursively all regular files in the current directory tree not ending in .dll or .exe,"find . -type f | grep -vP ""\.dll$|\.exe$"""
display all the files in the directory modules,find . -name modules
Find all files/directories named 'vimrc' in the entire filesystem,find / -name vimrc
display all the directories in the current folder excluding those that are present in the aa directory tree,find . -type d -name aa -prune
Find all files/directories named 'fprintf.c' under '/usr/src' directory tree,find /usr/src -name fprintf.c
find files which full path name like '*f' at current directory and print,find .  -path '*f'
Find all the files on the system that have been changed within the last hour,find / -cmin -60
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find . -type f -ctime -$2 -name ""mylog*.log"" | xargs bzip2"
find all the text files in the folder /tmp/1 and display only those files which have spaces in their names,"find ""/tmp/1/"" -iname ""*.txt"" | sed 's/[0-9A-Za-z]*\.txt//g"
find all files in the current folder which have not been modified today and whose file name is of length 1,find . -name \? -mtime +0
Find files/directories named 'somename.txt' under current directory tree,"find ./ -name ""somename.txt"""
Find all *.mp4 files under /working,find /working -type f -name '*.mp4'
Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days,"find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -execdir echo ""It seems that {} wasn't modified during last 30 days"" ';'"
Remove all regular files from the current directory tree that were modified a day ago,find . -type f -mtime 1 -exec rm {} +
"Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in "".log""","sudo find / -xdev -type f -size +100000 -name ""*.log"" -exec gzip -v {} \;"
Find all files under /somefolder matching the case insensitive regex '\\|\\|\' in their paths,find /somefolder -type f | grep -i '\\|\\|\'
Find all php files whose name is tecmint.php in a current working directory,find . -type f -name tecmint.php
display all the files in the home folder except text files,"find /home ! -name ""*.txt"""
"display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours",find /mydir1 /mydir2 -size +2000 -atime +30 -print
find all text files in user/directory/ and display the last line,"find /user/directory/* -name ""*txt"" -mtime 0   -type f -exec awk '{s=$0};END{print FILENAME, "": "",s}' {} \;"
Truncate all regular files under the current directory,"find . -type f -maxdepth 1 -print0 | xargs -0i sh -c ""cat /dev/null > \""{}\"""""
find all html files in the current directory which have size greater than 100 bytes and display their details and discard all the errors.,find . \  -name '*.html' \    -exec  ls -l {} \;  2> /dev/null
Search for files that are at least 100MB,find / -size +100M
Find every file under the directory /var/spool that was modified more than 60 days ago.,find /var/spool -mtime +60
"Remove all a.out, *.o, and core files under the current directory",find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago and redirect the ouput to /tmp.$$,find . -maxdepth 1 -cmin +60 -name file >/tmp.$$
"list in long format all files from / whose filename ends in ""jbd"", not descending into directories that are not readable while searching, and not descending into directories on other filesystems",find / -mount \! -readable -prune  -o  -path /dev -prune  -o  -name '*.jbd' -ls
Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time,"find ~ -iname ""screen*"" | more"
find all the hidden files in the temp folder,"find /tmp -type f -name "".*"""
search for perl files in the folder /users/tom,"find /users/tom -name ""*.pl"""
find files in root directory that names are game,find / -name game
display all files in current folder using regular expression,"find -regex ""$rx"""
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory,find var/log/ -iname anaconda.*
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar,"find .|grep ""FooBar""|xargs -I{} cp ""{}"" ~/foo/bar"
"Find all files in the current directory tree except .html, ignoring .svn directories",find . \( -type d -name '.svn' -o -type f -name '*.html' \) -prune -o -print0
Search the /storage/sdcard0/tencent/MicroMsg/ directory tree for JPG files,find  /storage/sdcard0/tencent/MicroMsg/ -type f  -iname '*.jpg' -print0
display long list of all the perl files in the current folder,"find . -name ""*.pl"" -ls"
Find all files in $dir directory without going into sub-directories and print only their names preceded by 3 spaces,"find ""$dir"" -maxdepth 1 -type f | sed 's#.*/#   #'"
"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename "".svn""",find . -iname .svn -print | xargs rm -rf
"find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces","find . -type f -name ""*.pl"" -print0"
"Search all regular files in the current directory tree for ""string""",find . -type f -exec grep string {} \;
Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename,find dir -type f -print0 | xargs -r0 sed -i 's/ *$//'
Give a long listing of all the  *.pl files (Perl files) beneath the current directory.,"find . -name ""*.pl"" -exec ls -ld {} \;"
"display the number of lines in all the "".c"" files in the current folder","find . -name ""*.c"" -print0 | xargs -0 wc -l"
Search for regular files of the user bluher in the file system,find / -type f -user bluher -exec ls -ls {}  \;
show all files in the current directory and all subdirectories,find . -print
"delete all the "".doc"" files in the current folder","find . -name '*.doc' -exec rm ""{}"" \;"
Find all directories in level 1 down the $queue directory,"echo ""$queue"" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 -type d"
delete all the trace files  which have not been been accessed in the last 30*24 hours,find /dirpath \ -exec rm {} \;
Search the given $directory for files with permissions stored in $permissions,"find ""$directory"" -perm ""$permissions"""
Find all of the character devices on the system,find / -type c
find all files and directories that have been modified in the last seven days,find . -mtime -7
find files in current folder using name patterns and sort the display the file names in the sorted order,"find . -name ""S1A*1S*SAFE"" | awk -F/ '{print $NF""/""$0}' | sort -t_ -k 5,5 | cut -d/ -f 2-"
Find all regular files with case insensitive pattern '*$1*' ($1 expands to first positional parameter and falls back to empty string when not given) under current directory tree and execute a command given by $2 (falls back to 'file' command when $2 is not given) with each of those files as arguments,"find . -type f -iname '*'""${1:-}""'*' -exec ${2:-file} {} \;"
"Remove the regular files from the current directory tree that were last modified on November, 21","find -type f -newermt ""Nov 21"" ! -newermt ""Nov 22"" -delete"
Copy all *.txt files from the current directory tree to /destination,"find . -name '*.txt' | while IFS= read -r FILE; do echo ""Copying $FILE..""; cp ""$FILE"" /destination; done"
Search the current directory tree for *.c and *.sh files,find . -type f \
"list all javascipts file which whole name does not contain ""directory""",find . -name '*.js' -and -not -path directory
Find all empty files under a certain path,find /tmp -type f -empty
Find all directories under current directory and set their permission to 775,find -type d | xargs chmod 775
"Find all .java files whose name contains ""Message""",find . -print | grep '.*Message.*\.java'
Find all MP3s in the /home directory tree,find /home -type f -name '*.mp3'
Print the byte count of all regular files found in the current directory tree,find . -type f | xargs | wc -c
List all empty files under the current directory,find . -maxdepth 1 -empty
Display a count of regular files in each directory at the current level.,find -P . -type f | rev | cut -d/ -f2- | rev | cut -d/ -f1-2 | cut -d/ -f2- | sort | uniq -c
Find all files under dir and calculate their md5sum and save the output to dir.md5,find dir -type f -print0 | xargs -0 md5sum > dir.md5
Search the current directory recursively for regular files last modified more than 2 days ago,find . type -f -mtime +2
find dirctory files which modification time is  7 days ago,find . -mtime -7 -type d
Find all the files/directories under '/usr/local' directory tree which have been modified within the last day,find /usr/local -mtime -1
"Copy the directory structure in ""src/"" to ""dest/"" with empty files",find src/ -type d -exec mkdir -p dest/{} \; -o -type f -exec touch dest/{} \;
Find all files/directories under current /export/home/someone directory and upload them to ftp://somehost/tmp/,find /export/home/someone -exec curl -u someone:password -vT {} ftp://somehost/tmp/
Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file,find . -name \*.sql -not -samefile $oldest_to_keep -not -newer $oldest_to_keep
Print a list of all *.code files from the current directory tree,find . -name *.code
Print and delete all directories named 'work' under '/usr/ports/' directory tree,find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
Find all regular files with 400 permission under '/data' directory tree,find /data -type f -perm 400 -print
Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files,find . -type d -path '*/\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print
Remove regular files in the current directory tree,find . -type f -print0 | xargs -0 -n1 echo rm | sh -x
List of directory & count of file in every directory,"find . -maxdepth 1 -type d | while read -r dir; do printf ""%s:\t"" ""$dir""; find ""$dir"" -type f | wc -l; done"
find files with the extension .conf in the /etc directory,find /etc -name '*.conf'
Find deb packages in the current directory recursively,"find . -type f -and -iname ""*.deb"""
Delete orphan vim undo files in the current directory tree,"find . -type f -iname '*.un~' | while read UNDOFILE ; do FILE=$( echo ""$UNDOFILE"" | sed -r -e 's/.un~$//' -e 's&/\.&/\1&' ) ; [[ -e ""$FILE"" ]] || rm ""$UNDOFILE"" ; done"
List all *.jpg files/directories in entire file system,"find / -name ""*.jpg"" -print"
"Search the current directory recursively for files containing ""needle text""","find . -type f -print0 | xargs -0 grep -IZl . | xargs -0 grep ""needle text"""
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'etc/rc.d/',find /usr/ports/ -name pkg-plist\* -exec grep -l etc/rc.d/ '{}' '+' | wc -l
"find all regular/normal files in the folder ""pathfolder"" and display the count of files, save all the errors to err.txt file",find pathfolder -type f  2> err.txt | wc -l
find all the files in current directory of size greater than 10MB and less than 20 MB.,find . -size +10M -size -20M
find directory names starts with 'bar',find . -path './bar*' -print
replace the word apple with orange in all the regular/normal files in the current folder,find ./ -type f -exec sed -i -e 's/apple/orange/g' {} \;
display all files in the current folder and do not search in the sub directories,find . -maxdepth 0
"Print the name of ""file1"" if this file is newer than ""file2""",find file1 -prune -newer file2
Find all files under $1 not matching the regex '.*/\..*' and execute hashmove on each of them with the file path as its argument,find $1 -type f -not -regex '.*/\..*' -exec $0 hashmove '{}' \;
display all the normal/regular files in the current folder and do not go beyond 3 levels,find . -maxdepth 3 -type f
Find all files/directories owned by the user 'bob' under '/home' directory tree,find /home -user bob
Find StringBuffer in all *.java files,"find . -type f -name ""*.java"" -exec grep -l StringBuffer {} \;"
"search for the word ""redeem reward"" in all the regular/normal files in the current folder",find . -type f -exec grep -i “redeem reward” {} \; -print
Search the current directory tree for regular files that were changed $FTIME days ago,find . -type f -ctime $FTIME
run ls command on *.pl files,"find . -name ""*.pl"" -exec ls -ld {} \;"
Find all files/directories that are owned by user 'dave' under current user's home directory tree,find ~ -user dave -print
find all the directories in the current folder excluding search in the sub directories and create these directories in another path,find . -maxdepth 1 -type d | xargs -I X mkdir '/new/directory/X'
find not case sensitive all directories that names are 'apt' and display details,"find  / -type d -iname ""apt"" -ls"
display long list of all the perl files in the current folder,"find . -name ""*.pl"" -ls"
display the number of lines in all the php files in the current folder,find -name '*php' | xargs cat | wc -l
change the owner and group of all the files in the folder  /usr/lpp/FINANCIALS,find /usr/lpp/FINANCIALS -print | xargs chown roger.staff
"Search /usr, /home, /tmp for *.jar files suppressing error messages","find /usr /home  /tmp -name ""*.jar"" 2>/dev/null"
Find all files that have the SUID bit set,find / -perm -u+s -print
find all the files in the current folder which do not have the read permission,find . -type f ! -perm -444
Find all *.rb  files under current directory,"find . -name ""*.rb"" -type f"
Find not-executable files under /home/www,find /home/www/ ! -executable
Find all files/directories under current directory following symlinks if needed,find -L
Find all *.rpm files/directories under current directory,find . -name '*.rpm'
"Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in "".log""","sudo find / -xdev -type f -size +100000 -name ""*.log"" -exec gzip -v {} \;"
Find *.c files under $HOME and search for the string 'sprintf' in those files,find $HOME -name '*.c' -print | xargs    grep -l sprintf
Find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/,"mv $(find $(find . -name ""*shp*"" -printf ""%h\n"" | uniq) -type f) ../shp_all/"
"display all the "".c"" files in the current folder excluding those that are present in all the sub directories","find . \( ! -name . -prune \) -name ""*.c"" -print"
search for the file test in the current folder,find . -name test
Find all files under $YOUR_DIR,find $YOUR_DIR -type f
Find all files in the /home/ directory tree that were last accessed more than 7 days ago,find /home -atime +7
"search for the file ""process.txt"" in the current folder",find . -iname 'process.txt' -print
"Search for files greater than 20MB in the entire file system, sort them according to size in descending order and display the path and file size","find / -type f -size +20000k -exec ls -lh {} \; 2> /dev/null | awk '{ print $NF "": "" $5 }' | sort -nrk 2,2"
Delete all regular files named 'FindCommandExamples.txt' under current directory tree,"find . -type f -name ""FindCommandExamples.txt"" -exec rm -f {} \;"
"search for ""message.txt"" in the folder .cache/bower and display its contents","find .cache/bower/ -name ""message.txt"" | xargs cat"
Recursively find the latest modified file in the current directory,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" """
Print a NULL-separated list of all hidden regular files from the home directory,find $HOME -maxdepth 1 -type f -name '.*' -print0
Save to report.txt the first line of every text file in the home directory,find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
return every file that does not have bar somewhere in its full pathname,find . ! -path '*bar*' -print
Update timestamps of all files  under current directory.,find . -exec touch {} \;
List files greater than 1024KB under /path/to/directory and print the time and size on stdout,"find /path/to/directory -type f -size +1024k -exec ls -lh {} \; | awk '{ print $8 "": "" $5 }'"
"search for ""specified string"" in all the php files in the current folder",find . -name “*.[php|PHP]” -print | xargs grep -HnT “specified string”
move files accessed more than one day ago to directory TMP,find . -atime +1 -type f -exec mv {} TMP \; # mv files older then 1 day to dir TMP
Find files in the current directory recursively that are not readable by all,find -type f ! -perm -444
Find *.java files under current directory and compress them to myfile.tar,"find . -type f -name ""*.java"" | xargs    tar rvf myfile.tar"
"Remove the ""^M"" characters from all *.ext files under /home directory","find /home -type f -name ""*.ext"" -exec sed -i -e ""s/\r$//g"" {} \;"
Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _,"find /tmp/ -depth -name ""* *"" -execdir rename 's/ /_/g' ""{}"" \;"
display all the files in the current folder for the files which have not been accessed in the last 24 hours,find . -type f -atime +1
List files smaller than 9kB residing in the current directory and below,find . -size -9k
display the count of all normal/regular files in current directory,find . -type f | wc -l
"Find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output",find . -iname *.page -exec ~/t.sh {} \; | sort
Find all files under /home/username/public_html/themes and set their permission to 640,find /home/username/public_html/themes -type f -exec chmod 640 {} +
Print a colon-separated list of all directories from the ~/code directory tree,find ~/code -type d | tr '\n' ':' | sed 's/:$//'
"display all the files in the file system excluding all the "".c"" files","find / \! -name ""*.c"" -print"
Find all regular files in the home directory tree that were modified in the last 24 hours,find ~ -type f -mtime 0
display all files in the folder bar only in the path /foo/bar/myfile (no output is generated),find bar -path /foo/bar/myfile -print
"Recursively prints all folders in a current folder that contain files like ""*.class"".","find . -name ""*.class"" -print0 | xargs -0 -n1 dirname | sort --unique"
Find all .mp3 files with more than 10MB and delete them,find / -type f -name *.mp3 -size +10M -exec rm {} \;
Find all files under current directory that are read less than 1 minute ago,find . -amin -1
Change the permission of all regular files under current directory tree to 644,find . -type f -exec chmod 644 {} \;
find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder,"find . -name ""*.txt"" -type f -daystart -mtime -4 -mtime +0|xargs -i cp {} /home/ozuma/tmp"
search for files in the current folder using name patterns,find . -name '[mM][yY][fF][iI][lL][eE]*'
"List all files/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in Y-m-d format and name filed,  then write the outptut to /tmp/files.txt","find . -type f -fprintf /tmp/files.txt ""%i,%b,%M,%n,%u,%g,%s,%CY-%Cm-%Cd %CT,%p\n"""
find all regular files under the /etc/sysconfig directory that were accessed in the last 30 minutes,find /etc/sysconfig -amin -30 -type f
List all files in entire file system that are not newer than the ttt file and do not belong to the user wnj,find / \! \ -print
"Copy all files and directories in ""/home/"" to ""/newhome"" preserving directory hierarchy and modification time",find /home/ -maxdepth 1 -print | sudo cpio -pamVd /newhome
Counts lines in each *.php file.,find . -name '*.php' -type f | xargs wc -l
"find regular files under the current directory, whose name ends in .mbox, piping the output to the GNU Parallel command that will rename each file to not have a file extension.",find . -type f -wholename \*.mbox -print0 | parallel -0 mv {} {.}
"Recursively removes all files named '.svn' in a current folder, and prints messages on each action.",find . -name .svn -exec rm -v {} \;
Search /path/to/your/directory for *.avi and *.flv files,find /path/to/your/directory -regex '.*\.\'
search all jpg images in current folder and rename them,"find . -type f -name ""*.jpg"" -print0 | xargs -0 rename ""s/Image_200x200_/img/"""
Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.,find PATH_TO_FOLDER -maxdepth 1 -type f -exec bzip2 -zk {} \;
display all regular/normal files in the folder /Users/david/Desktop/,find /Users/david/Desktop/-type f
Find all 'test' directories in the current directory tree,find -type d -a -name test
find all the files in the file system which have been modified in the last 30*24 hours,find / -mtime -30 -print
"Create symbolic links in current directory for all files located in ""dir"" directory and have filename extension ""jpg""","find dir -name '*.jpg' -exec ln -s ""{}"" \;"
find all files without 777 permision,find / -type f ! perm 777
find all directory list which have empty list in /tmp directory .,find /tmp -type d -empty
find file named foo.txt under current directory.,find . -name foo.txt
List all directories in maximum 1 level down the current directory,find . -maxdepth 1 -type d -exec ls -dlrt {} \;
"Print the list of files and directories of the current directory including "".""",find . \( -name . -o -prune \)
List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time,"find / -type f -name ""*"" -newermt ""$newerthan"" ! -newermt ""$olderthan"" -printf ""%T+\t%p\n"" | sort"
Search the system for files and directories owned by user `admin',find / -user admin -print
Find all files and directories and count them,find ./ | wc -l
find all files in the a direcotry which have been modified in exactly 1 day back,find /home/bozo/projects -mtime 1
"find all the files ending with ""clj"" in the current folder and search for a pattern",find . -name '*.clj' -exec grep -r resources {} \;
"Search /usr/src for filenames not ending in ""*,v""","find /usr/src ! \( -name '*,v' -o -name '.*,v' \) '{}' \; -print"
List all files/directories under current directory,find . -ls
Find all the files in entire file system which are greater than 50MB and less than 100MB.,find / -size +50M -size -100M
"Remove all .sh files in the current directory tree whose names begin with ""t""","find . -name ""t*.sh"" -exec rm -vf '{}' \;"
"Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex "".*\.$FILES_TO_PROCES"" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline","find ""$DIRECTORY_TO_PROCESS"" -type f -iregex "".*\.$FILES_TO_PROCES"" ! -name ""$find_excludes"" -print0"
"Copy all files in ""/mail"" to ""/home/username"" preserving the directory hierarchy and modification times",find /mail -type f | cpio -pvdmB /home/username
Find and delete all hard links in the /home directory tree to file1,find /home -xdev -samefile file1 | xargs rm
find all of the files that are readable,find / -readable
Convert *.doc files in the current directory tree to the .txt format,"find . -name '*.doc' | while read i; do antiword -i 1 ""${i}"" >""${i/doc/txt}""; done"
Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media,find / -path /media -prune -o -size +200000 -print
Find all regular files starting from / that have permissions 777,find / -type f -perm 0777
"Append "".txt"" to all filenames in the current directory tree",find -type f | xargs -I {} mv {} {}.txt
"Count the total number of lines in all ""*.gz"" files in the current directory tree after decompression",find . -type f -name '*.gz' | xargs zcat | wc -l
Find all regular files under current directory tree that contain 'some text' in their names excluding paths that contain dot files/directories,find . -not -path '*/\.*' -type f -name '*some text*'
"Find all *.css files under $DIR and print the lines matching the regex '\.ExampleClass.{/,/}' from those files","find ${DIR} -type f -name ""*.css"" -exec sed -n '/\.ExampleClass.{/,/}/p' \{\} \+"
search for text files in the folders /home/hobbes/ /home/calvin/ and discard all the errors,find /home/hobbes/ /home/calvin/ -name “*.txt” 2>/dev/null
"Recursively prints all folders in a current folder that contain files like ""*.class"".","find . -name ""*.class"" -print0 | xargs -0 -n1 dirname | sort --unique"
list all *.java files under the src directory,"find src -name ""*.java"""
Find all files/directories named 'Desktop' under current directory,find ./ -name Desktop
Find all regular files starting from level 3 of directory tree ~/container and move them one level up,"find ~/container  -mindepth 3 -type f | xargs -i bash -c 'mv ""{}"" $/..'"
Search the home directory tree for regular files modified yesterday,find ~ -daystart -type f -mtime 1
Find *.o files with permissions 664 in the current directory tree,find . -name *.o -perm 664 -print
"Replace all occurrences of ""StringA"" with ""StringB"" in the *.php and *.html files residing in the current directory tree",find . \ | xargs grep -l StringA | xargs sed -i -e 's/StringA/StringB/g'
Find all regular files in the current directory tree that match pattern 'btree*.c',find . -type f -name 'btree*.c'
list regular files under the current directory,find . -type f
Find all .jpg files in the current directory and below.,find . -name “*.jpg”
find all files in current folder and display the total lines in them,find . | xargs wc -l
"search for the word ""nameserver"" in all the configuration files of the /etc folder","find /etc/ -type f -name ""*.conf"" -print0 | xargs -I {} -0 grep ""nameserver"" ""{}"""
Find all php files in a directory,"find . -type f -name ""*.php"""
Find all files under current directory and set their permission to 775,find -type f | xargs chmod 775
find all the files (under root file system /) that were changed within the last 24 hours,find / -ctime -1
"Remove all directories called ""test"" from the current directory tree",find . -name test -type d -exec rm -r {} +
"The cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories.",find . | cpio -pdumv /path/to/destination/dirrectory
delete all the files in the current folder,find . -delete
List all the emptry files in thecurrent directory only.,find . -maxdepth 1 -empty
"Search for ""search term"" in a sorted list of all files under current directory","find . | awk '{FS = ""/"" ; print """", NF, $F}' | sort -n  | awk '{print $2}' | xargs grep -d skip ""search term"""
"Find all files/directories in entire file system that have  ""write"" bit set for either the owner, the group, or others",find / -perm /222
search all undo files in the current folder and calculate the total size of them,find -name '*.undo' -exec wc -c {} + | tail -n 1 | cut -d' ' -f 1
search for all the regular/normal files in the current folder and display only video/image files,find folder -type f -print0 | xargs -0 file --media-type | egrep 'image|video' | cut -f1 -d : | tr '\n' '\0'
"Delete all regular files that reside in directory $OUTPUTDIR and below, and were last modified more than 7 days ago",find $OUTPUTDIR -type f -mtime +7 -delete
List all *.txt files/directories under current directory,"find . -name ""*.txt"" -exec $SHELL -c 'echo ""$0""' {} \;"
Find all top level directories under /home that doesn't contain a file/directory named 'bin',"for d in /home/*/; do find ""$d"" -type d -name bin | grep -q . || echo ""$d""; done"
find all the files in the current folder which are bigger than 1MB,find . — size +1000k -print
Calculate the SHA1 sum for the contents of the regular files in the path/to/folder directory tree,find path/to/folder -type f -print0 | sort -z | xargs -0 cat | sha1sum
Search the given $directory for files with permissions stored in $permissions,"find ""$directory"" -perm ""$permissions"""
Finds file 'Subscription.java' and changes to containing folder.,cd `find . -name Subscription.java | xargs dirname`
Find all *.cgi files/directories under current directory and change their permission to 775,find . -name '*.cgi' -print0 | xargs -0 chmod 775
Find all files/directories named 'game' under current directory tree,find . -name game
display all the files in the current folder excluding the directory aa,find . -type d ! -name aa
move all files in the current folder another folder and do not move the files in the sub folder,"find . -name ""*"" -maxdepth 1 -exec sh -c 'mv ""$@"" ""$0""' /home/foo2/bulk2 {} +"
Find find symlinks pointing to /mnt/oldname* in the entire file system,find / -type l -lname '/mnt/oldname*'
Find all files that belong to group root,find / -group root
"Search the /home/user1 directory tree for files whose names end in "".bin""","find /home/user1 -name ""*.bin"""
"Search the .py files residing in the current directory tree for ""something""","find . -name ""*.py"" -type f -exec grep ""something"" {} \;"
find all hidden files in the current folder which have been modified after profile file,"find . -type f -name "".*"" -newer .cshrc -print"
Find files on the system modified more than 90 minutes ago,find / -mmin +90
"Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.","find /       \ , \"
Find files under current directory that are not newer than $date_time in regards of modification time,"find . -type f -not -newermt ""$date_time"""
"Save the list of all .py files under and below the current directory that contain ""something"" in their pathnames to output.txt",find . -name '*.py' | tee output.txt | xargs grep 'something'
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,cd /home/www && find . -type f -print0 | xargs -0 perl -i.bak -pe 's/subdomainA\.example\.com/subdomainB.example.com/g'
"find files in current folder ending with "".c"" or "".h"" or "".ch"" and search for a word in these files and enable color highlighting of the matched text","find . -name ""*.[ch]"" -exec grep --color -aHn ""e"" {} \;"
"Find files owned by the ""shadow"" group",find / -group shadow
Recursively removes all files and folders named '.svn' in a current folder.,find . -name .svn |xargs rm -rf
"Search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files",find /srv/${x} -mindepth 1 -type f -not -amin -10080 -exec rm {} \;
Find all files starting from the current directory which are larger than 100MB,find . -size +100M
Find all the files which are accessed in last 1 hour,find / -amin -60
Serach for all the files starting with grep in man pages,find /usr/share/man/ -regex grep.*
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago,find -maxdepth 1 -type f -mtime -1
find all the files in the current directory and display them,find . -exec echo {} ;
Save the list of directories modified a fortnight ago to `deploy.txt' removing the leading ./ from the file names,"find . -type d -mtime 14 -printf ""%P\n"" > deploy.txt"
use regex with find command,"find . -regextype sed -regex "".*/[a-f0-9\-]\{36\}\.jpg"""
"Remove all directories called ""test"" from the current directory tree","find -name ""test"" -type d -delete"
find all the word press configuration php files in the folder /var/www,find /var/www/ -name wp-config.php
Find all files in and below the home directory that have been modified in the last 90 minutes,find ~ -mmin -90
Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files,"find ${x} -type f -exec chmod ug=rw,o= '{}' \;"
Create a script to monitor system disk space usage and clean up temporary files when disk space exceeds a certain threshold.,"#!/bin/bash

threshold=""90""
disk_usage=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')
if [ ""$disk_usage"" -gt ""$threshold"" ]; then
    find /tmp -type f -delete
fi"
Delete all .svn files/directories under current directory,find . -name .svn -delete
"Calculate the md5 sum of the md5 sum of all the files sorted under ""$path""","find ""$path"" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"
search for all the text files in the folder /foo and delete them,"find /foo/ -name ""*.txt"" -exec rm -v {} \;"
display the sum of disk used by all the access.log files in /var/www folder,find /var/www/ -type f -name «access.log*» -exec du -k {} \;|awk '{s+=$1}END{print s}'
Find all regular files in the current director and set their permissions to '644'.,find ./ -type f -exec chmod 644 {} \;
find all the perl files in the current folder,"find . -type f -name ""*.pl"""
Delete all directories under <directory_name> that contain directories named 'test' and 'live',"find <directory_name> -type d -exec sh -c ""cd {} && [ -d live ] && [ -d test ] && cd ../ && echo \""Deleting {}\"" && rm -rvi {} "" {} \;"
"sort all the regular files in the ""$DiskName"" directory which have been modified in the last 3*24 hours and which are bigger than 5Kb based on their size and save the output to the ""$TMPFILE""","find $DiskName -type f -mtime -3 -size +5000 -exec ls -ld {} \; 2>/dev/null | sort -n -k 5.1,5 >> $TMPFILE"
"Show ls's detailed output for all files named ""something""",find . -name something -exec ls -l {} \;
List all regular files in the current directory tree,find . -type f -exec ls -l '{}' \;
"Search files ""file-containing-can't"" in the current directory tree for the string ""can't""","find . -name ""file-containing-can't"" -exec grep ""can't"" '{}' \; -print"
display the contents of all the text files in the current directory,find . -name  '*.txt' -exec cat {} \;
"Search the current directory tree for regular files owned by user ""www""",find -type f -user www
count lines of C or C++ or Obj-C code under the current directory,"find . \( -name ""*.c"" -or -name ""*.cpp"" -or -name ""*.h"" -or -name ""*.m"" \) -print0 | xargs -0 wc"
find all the symbolic links in the current folder,find /etc -type l -print
display all the directories in the current folder excluding those that are present in the .svn directory tree,find -type d -path '.svn' -prune -o -print
display all symbolic links in current folder,"find . -lname ""*"""
Find all directories under /home/username/public_html/sites/all/themes and set their permission to 750,find /home/username/public_html/sites/all/themes -type d -exec chmod 750 {} +
Remove junk files modified more than 31 days ago recursively,find /path/to/junk/files -type f -mtime +31 -print0 | xargs -0 -r rm -f
display all directories which have not been accessed in the last 24*3 hours,find -type d -and -atime +3
Find and copy all log files in the current directory tree to /tmp/log-files,find . -name \*.log -print0 | xargs -I{} -0 cp -v {} /tmp/log-files
display all the files having spaces in the current folder,"find . -name ""filename including space"""
Copy all regular files from the current directory tree to /tmp,"find . -type f -exec sh -c 'cp ""$@"" /tmp' {} +"
Print a colon-separated list of all directories from the $root directory tree,find $root -type d -printf '%p:'
find all the directories in the current folder that are empty(size 0 bytes),find -type d -empty
Serach in current directory downwards all files which  have not been modified since last 7 days,find .  -mtime +7 -print
Search the current directory tree for .VER files,"find . -name ""*.VER"""
"Search all .c files from the current directory tree for ""keyword"", ignoring the case","find . -name ""*.c"" -exec grep -i ""keyword"" {} "";"""
Find all *.txt files/directories under your home directory,"find ~ -name ""*.txt"" -print"
"find all files in the folder ""myfiles"" which are exactly 5 bytes",find /myfiles -size 5
"find all files in the current folder that end with "",txt""","find . -name ""*,txt"""
Print the list of the current directory's subdirectories,find . -maxdepth 1 -mindepth 1 -type d -printf '%f\n'
"Find files named ""blabla"" in the current directory tree and print the number of lines in each of them","find ./ -name ""blabla"" -exec wc -l {} ;"
"Force create a symbolc link named ""/usr/local/bin/fpt"" to ""/usr/local/bin/findpdftext""","sudo ln -s -f ""/usr/local/bin/findpdftext"" ""/usr/local/bin/fpt"""
Find all .txt files under the current directory and below,find -name \*.txt
"list files found under the current directory ending in ""txt"" or ending in ""html""",find . -name '*.txt' -o -name '*.html'
"find all the normal/regular files in the folder ""pathfolder"" excluding all hidden files and display the count",find pathfolder -maxdepth 1 -type f -not -path '*/\.*' | wc -l
display all the regular/normal files in the folder /path/ which have not been modified today,find /path/ -type f -daystart -mtime +0
Find all regular files with space in their names under current directory and rename them by replacing all spaces with _,"find -name ""* *"" -type f | rename 's/ /_/g'"
"Find all regular files in the ""$dir"" directory",find $dir -maxdepth 1 -type f
Display all symlinks and their targets in the current directory,"find -P .  -maxdepth 1 -type l -exec echo -n ""{} -> "" \; -exec readlink {} \;"
create a tar ball of all pdf files in current folder,find . -name *.pdf | xargs tar czvf /root/Desktop/evidence/pdf.tar
"display all the files in the home folder which begin with ""arrow"" and end with ""xbm""",find ~ -name 'arrow*.xbm'
Find all the .c files in the current directory tree that contain the string ‘stdlib.h’,find . -name ‘*.c’ | xargs egrep stdlib.h
search all the files in the current folder using name patterns,find . -name 'a(b*' -print
Delete all .svn files/directories under current directory,find . -name .svn -exec rm -rf '{}' \;
"Find all files under the current directory that are not the same file as ""/home/nez/file.txt""",find . -maxdepth 1 -not -samefile /home/nez/file.txt
Find all files starting from the current directory which are exactly 100MB in size,find . -size 100M
"Search for the regex ""\$wp_version ="" in all the regular files that end with '/wp-includes/version.php'  in their paths in directories/files taken from the glob pattern '/var/www/vhosts/*/httpdocs' and show the matched lines along with the file names","find /var/www/vhosts/*/httpdocs -type f -iwholename ""*/wp-includes/version.php"" -exec grep -H ""\$wp_version ="" {} \;"
Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them,find . -perm 0644 | head
Find all .txt files under the current directory and below,"find . -name ""*.txt"""
"search in the home folder for all the files with the name ""monfichier""",find /home/ -name monfichier
List all *.c files in entire file system,"find / \! -name ""*.c"" -print"
find all the swap files  in the current folder and delete them,"find . -name ""*~"" -delete"
List files in the current directory and below,find -ls
Delete files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -mtime +$DAYS_TO_SAVE | while read FILE; do rm ""$FILE""; done"
Find files/directories under current directory excluding the path ./src/emacs,find . -path ./src/emacs -prune -o -print
"Move all files matching patterns ""*.old"", "".old"", "".*.old"" from the current directory to directory ""../old/""",find . ! -name . -prune -name '*.old' -exec mv {} ../old/ \;
List all directories found in the current directory and below.,find . -type d
"Remove all files with names like ""vmware-*.log"" from the current directory tree",find . -name vmware-*.log | xargs -i rm -rf {}
Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way,find MyApp.app -name Headers -type d -prune -exec rm -rf {} +
"Search the current directory tree for files whose names end in ""rb"" or ""js"" and which contain string ""matchNameHere""","find . -regextype posix-ergep -regex "".*(rb|js)$"" -exec grep -l matchNameHere {} \;"
find all the text files in the current folder,"find . -name ""*.txt"" -print"
"Search the files from the current directory tree for ""chrome""",find . | xargs grep 'chrome' -ls
Perform a white space safe search for all files/directories under current directory,find . -print0 | xargs -0
find all the text files in the current folder,"find . — name ""*.txt"" — print"
"Search for the case insensitive pattern 'search for me' in all files with '.p', '.w' and '.i' extension under current directory tree without descending into '.svn' and 'pdv' directories","find . \( \( -name .svn -o -name pdv \) -type d -prune \) -o \( -name '*.[pwi]' -type f -exec grep -i -l ""search for me"" {} + \)"
"Findx all files having text ""texthere"" recursively in a current folder, and prints only file names with matching strings.","find -type f -exec grep -l ""texthere"" {} +"
Find all SGID set files in the file system,find / -perm /g=s
"same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command",find . -name core -ok rm {} \;
Find all regular files named 'Waldo' under ~/Books directory tree,find ~/Books -type f -name Waldo
Find all the files in the current directory with “linkin park” in their names,"find . -maxdepth 1 -iname ""*linkin park*"""
"find all normal/regular files in the entire file system having the word ""filename"" in their name.","find / -type f -iname ""filename"""
Find all files under /path and below executable by `group' or `other',find /path -perm /011
Find all regular files that reside in the current directory tree and were last modified more than 5 days ago,find . -type f -mtime +5
find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.,find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
Remove empty directories from the current directory tree,find . -depth -empty -type d -delete
Print a NULL-separated list of all hidden regular files from the home directory,find $HOME -maxdepth 1 -type f -name '.*' -print0
"Remove the files from the home directory tree that were last accessed more than 100 days ago, with confirmation",find ~/ -atime +100 -exec rm -i {} ;
Find files/directories containing 'test' in their names and display the directory contents before the directories themselves,"find -name ""*test*"" -depth"
Find all files/directories under current directory,find | xargs
find files in root directory that names are game,find / -name game
Remove all files containing 'sample'  in their names under '/home/user/Series' directory tree,find /home/user/Series/ -iname '*sample*' -exec rm {} \;
"display all scala files in the directory ""src/main""","find . -type f -regex "".*src/main.*\.scala$"""
Find all *.mov  files under current directory and list their paths with their names,"find . -iname ""*.mov"" -printf ""%p %f\n"""
"find all the files in the folder ./machbook and change the owner of them to the user with id ""184""",find ./machbook -exec chown 184 {} \;
Delete all *.zip files under current directory that are older than 2 days,"find . -name ""*.zip"" -mtime +2 orint0 | xargs -0 rm"
find files in /usr directory which are modified after February 1 of the current year,"find /usr -newermt ""Feb 1"""
Display the biggest file sizes only,find -type f -exec du -Sh {} + | sort -rh | head -n 5
Print the names and sizes of regular files residing in the current directory tree,"find $/* -type f -exec stat -c ""f%15s %n"" {} +"
Find empty files and directories,find . -empty
find all files in the current folder which have been modified in the last 24 hours,find . -mtime -1 -print
returns a list of  files modification newer than poop,find . -mnewer poop
display all hidden files in the current folder,"find . -type f -name "".*"""
find all the empty directories in the current folder and all its sub directories too,find . -depth -empty -type d
Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers,"find . \( -name ""*.php"" -o -name ""*.html"" \) -print0 | xargs -0 grep -Hin ""joomla"""
"Find directories in /home/vmail that match pathname ""*/*/Maildir/.LearnAsSpam/cur"", and move them to folder .Junk/cur","find /home/vmail/ -type d -path ""*/*/Maildir/.LearnAsSpam/cur"" -exec sh -c '' ';'"
"search for the word ""nameserver"" in all the configuration files of the /etc folder","find /etc/ -type f -name ""*.conf"" -print0 | xargs -I {} -0 grep ""nameserver"" ""{}"""
Find all files/directories under current directory and sort them,find | sort
Find all *.c files under /home,"find /home -name ""*.c"""
Find regular files with permissions less than 111,find -perm -111 -type f
Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning,find . -perm 0644 | head
Convert symlink to regular file,"find . -type l | while read f; do /bin/cp -rf --remove-destination -f $(find . -name $) ""${f}"";done;"
Find all files/directories in entire file system that are exactly 50 bytes,find / -size 50c
Find all files in the `sourceDir' directory,find sourceDir -mindepth 1 -maxdepth 1
Find files/directories under current directory that matches './projects/insanewebproject' in their paths and show the first one,find -ipath './projects/insanewebproject'| head -n1
display all the files in the current directory excluding those that are in the 'secret' directory,find . -name 'secret' -prune -o -print
Find files with SGID (2000) and SUID(4000) permssions set in the file system,find /  \( -perm -2000 -o -perm -4000 \) -ls
"search for all the files in current folder which start with ""file2015-0"" and move them to another folder","find . -name ""file2015-0*"" -exec mv {} .. \;"
Check if the directory tree whose name is given as variable $somedir contains no regular files,"find ""$somedir"" -type f -exec echo Found unexpected file {} \;"
Find all directories under $1/.hg and set their SGID bit,find $1/.hg -type d -exec chmod g+s {} \;
Find all files/directories under current directory tree that are newer than backup.tar.gz by modification time,find . -newer  backup.tar.gz
excute script makeallsizes with all '*.jpg' file under originals directory.,find originals -name '*.jpg' | xargs -1 makeallsizes
"Find directory ""your/dir"" if it is empty",find your/dir -prune -empty
Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name  in their names,"find ../../$name-module -print0 -name 'Name*' -type f | xargs -0 rename ""s/Name/$Name/"""
remove all the core files in the home folder,find /home -name core -exec rm {} \;
"Find files ending in ""f""",find .  -path '*f'
Delete all regular files under current directory,find . -type f -print0 | xargs -0 /bin/rm
"find all the ""jpg"" file in a folder.",find /win/C -iname *JPG
Set permissions for all direcotries under /var/www to 755,find /var/www -type d -print0 | xargs -0 chmod 755
Move all files from the `sourceDir' directory tree to the `destDir' directory,"find sourceDir -mindepth 1 -exec mv ""{}"" --target-directory=destDir \;"
Find all directories under maximum 1 level down the current directory and set their permission to 700,find . -mindepth 1 -type d | xargs chmod 700
"delete all the files in the current folder which end with "".bak"" or "".backup"" and which have not been accessed in the last 30 days",find . ( -name '*.bak' -o -name *.backup ) -type f -atime +30 -exec rm '{}' ;
"search for all the "".c"" files in the folder ""/home/david"" which have been modified in the last 10 minutes",find /home/david -mmin -10 -name '*.c'
display all files in the current folder expect text files,"find . -name ""*.txt"" -prune -o -print"
Find all files under /home/mywebsite/public_html/sites/all/modules and set their permission to 640,find /home/mywebsite/public_html/sites/all/modules -type f -exec chmod 640 {} +
Find files that are orphaned,find -nouser
Count total number of lines in all files below current directory.,find . -type f -exec wc -l {} \; | awk '{ SUM += $0} END { print SUM }'
Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests' folder and prints total count as well.,find . -name tests -prune -o -type f -name '*.php' | xargs wc -l
"find all the files in the folder ./machbook and change the owner of them to the user with id ""184""",find ./machbook -exec chown 184 {} \;
Find all files/directories under /proc and run ls command on each.,find /proc -exec ls '{}' \;
List all available commands in Mac OS,echo $PATH | tr ':' '\n' | xargs -I {} find {} -maxdepth 1 -type f -perm '++x'
find all regular/normal files which have cpp folder in their path,"find . -type f -path ""*/cpp/*"""
"find all jpg files in the folder which are in the path ""/201111/"" and sort them based on name","find */201111/* -name ""*.jpg"" | sort -t '_' -nk2"
"find all the regular files in the current folder which start with a ""some text""",find . -type f -name '*some text*'
display all the files in the current folder which do not belong to any group,find . -nogroup
Find files and directories modified in last 7 days,find . -mtime -7
Prints last modified file in a current folder.,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" """
Find out all *.sh owned by user vivek,"find / -user vivek -name ""*.sh"""
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f -exec ls -l {} \;
display all the files in current folder which are bigger than 10KB,find . -size +10k
"display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names","find /var/log -name ""*.log"" -print0"
find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files,find . -type f -iname '*.CR2' -print0 | xargs -0 -n 1 -P 8 -I {}
Search the /etc directory tree for files accessed within the last 24 hours,find /etc -atime -1
display all the files in the file system which belong to no group,find / -nogroup staff -print
Find all regular files starting from level 3 of directory tree ~/container and move them one level up,"find ~/container -mindepth 3 -type f -execdir mv ""{}"" ./.. \;"
Find directories named `doc' in /usr and below,find /usr \
"Delete files ""*doc copoy"" in directory tree /mnt/zip","find /mnt/zip -name ""*doc copy"" -execdir rm ""{}"" \;"
Recursively finds and compresses all files in a current folder.,find . -type f -exec bzip2 {} +
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\n',find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tm %p\n'
"find all the directories  with the name ""c"" in the current folder which are at least 3 levels deep and which are not present in the path ""/p/"".",find -mindepth 3 -type d ! -path '*/p/*' -name c -print
find all the text files in the current folder and display the results pagewise,"find . -name ""*.txt"" -print | less"
find all the files in the folder /home which are bigger than 10MB and smaller than 50 MB,find /home -size +10M -size -50M
"search for ""some_function"" in all the python files in the current directory",find . -name \*.py | xargs grep some_function
Find all files under current directory and print their md5 sums,find . -type f -printf '%f ' -exec openssl dgst -md5 {} \;
find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension,"find . -iregex ""./[^/]+\.dat"" -type f -cmin +60 -exec basename {} \;"
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find /path/to/dir -type f | xargs grep -l ""foo"""
"display all the files in the folder ""/home/mywebsite"" which have been changed in the last 7*24 horus",find /home/mywebsite -type f -ctime -7
find all files having certain word in its name in the current folder,"find . -name ""*bsd*"" -print"
Give all directories in the /path/to/base/dir tree read and execute privileges,find /path/to/base/dir -type d -print0 | xargs -0 chmod 755
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT_LOCATION} to ${OUTPUT_LOCATION},find $INPUT_LOCATION -name '*.pdf.marker' -exec bash -c 'mv ${0%.marker} $0 $1' {} $OUTPUT_LOCATION \;
Remove all .txt files from the /full/path/dir directory tree,find /full/path/dir -name '*.txt' -exec /bin/rm {} \;
List the directory paths of all *.ext (case insensitive) files under /path directory,"find /path -type f -iname ""*.ext"" -printf ""%h\n"""
change the permission of all the php files in the folder /var/www/ to 700,"find /var/www/ -type f -iname ""*.php"" -exec chmod 700 {} \;"
Find every vim undo file under current directory,find -type f -iname '*.un~'
Find all xml files under current directory and archive them to .bz2 archives,find -name \*.xml -print0 | xargs -0 -n 1 -P 3 bzip2
List all *.txt files/directories under /etc,"find /etc -name ""*.txt"" -ls"
"List all files under the current working directory with name "".htaccess""",find `pwd` -name .htaccess
Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size.,echo find . -atime +7 -o -size +`expr 10 \* 1024 \* 2` -print
"Find regular files under / that contain ""stringtofind""",find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \;
"display all the "".mov"" video files in the current folder in the format filename and folder path","find . -iname ""*.mov"" -printf ""%p %f\n"""
Print content of all files found regarding seach options '[whatever]',find [whatever] -print0 | xargs -0 cat
Delete all hidden files/directories under $some_directory including $some_directory,find $some_directory '.*' -delete
Find all regular files that reside in the current directory tree and were last modified more than 7 days ago,find . -type f -mtime +7
Delete all files under $DESTINATION directory tree that were modified more than 7 days ago,find $DESTINATION -mtime +7 -exec rm {} \;
Find all the files in file system which are changed in last 1 hour,find / -cmin -60
Recursively find the latest modified file in the current directory and print the modification time and filename,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" "" | sed 's/.*/""&""/' | xargs ls -l"
Find all files/directories named 'имя_файла' in the entire filesystem,"find / -name ""имя_файла"""
Print 'bla.txt' if at least one file with such name is present below the current directory.,"ls -alFt `find . -name ""bla.txt""` | rev | cut -d"" "" -f1 | rev | head -1"
returns a list of  files create time is 1 minute ago under the root directory.,find / -newerct '1 minute ago' -print
Find all regular files in minimum 1 level down the $dir directory,"find ""$dir"" -mindepth 1 -type f"
change the permissions of all the directories in the folder root_dir to 555,find root_dir -type d -exec chmod 555 {} \;
Search  in current directory downwards all files whose size is 10 blocks .,find .  -size 10 print
find all the mp3 files in the entire file system whose size is bigger than 10MB,find / -type f -name *.mp3 -size +10M -exec rm {} \;
Display the number of regular files under current directory tree,find . -type f -exec echo {} \; | wc -l
"Copy the directory structure in ""src/"" to ""dest/"" with empty files",find src/ -type d -exec mkdir -p dest/{} \; -o -type f -exec touch dest/{} \;
list all *.txt files in the user's home directory.,find ~/ -name '*.txt'
Find files/directories named 'TEST_3' under current directory tree,find -name TEST_3
Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths,"find . -name ""sample*"" | parallel --dry-run program {}-out {}"
Search the current directory recursively for .m4a files,find . -type f -iname *.m4a -print
Find all *.html files under current directory,find . -type f -name '*.html'
Find all .php files in the current directory tree,"find . -type f -name ""*.php"""
Locate OGG files under the home directory larger than 100 megabytes,find $HOME -iname '*.ogg' -size +100M
display the name of all directories in the current folder and do not search in sub directories,find . -type d -maxdepth 1 -mindepth 1 -exec basename {} \;
Find all files/directories under /non-existent/directory directory with ~/bin/find,~/bin/find /non-existent/directory -name '*.plist' -print
Copy directory structure from directory 'olddir' to 'newdir',"find olddir -type d -printf ""newdir/%P\0"" | xargs -0 mkdir -p"
list regular files ending in .mbox,find . -type f -wholename \*.mbox
"Force create a hard link in ""/usr/local/bin"" to ""findpdftext""","sudo ln -f ""findpdftext"" /usr/local/bin"
Find all files under /somefolder matching the pattern expanded by $FILE_PATTERN in thier names,find /somefolder -type f -name $FILE_PATTERN
List all *.png files/directories under /home/kibab directory,find /home/kibab -name '*.png' -exec echo '{}' ';'
find the count of all the charcters of the list of regular files present in the current folder,find . -type f | xargs | wc -c
Search the current directory tree for an html file having the text 'Web sites' in it,"find . -type f -iname \*.html -exec grep -s ""Web sites"" {} \;"
"List the current directory recursively ignoring the ""dir1"" subdirectory's content",find . -print -name dir -prune
Find files/directories not changed in two weeks under /dev/shm,find /dev/shm /tmp -type f -ctime +14
display all the files in the home folder which are smaller than 500 bytes,find $HOME -size -500b
Find all *.* directories under /home/feeds/data directory,find /home/feeds/data -type d \( -name 'def/incoming' -o -name '456/incoming' -o -name arkona \) -prune -o -name '*.*' -print
"exclude vendor and app/cache dir, and search name which suffixed with php","find . -name *.php -or -path ""./vendor"" -prune -or -path ""./app/cache"" -prune"
Search the current directory tree for regular files that were accessed $FTIME days ago,find . -type f -atime $FTIME
change the permissions of all the normal files in a directory,find /path/to/dir/ -type f -print0 | xargs -0 chmod 644
"Look in the current directory and below for all files whose names begin with either ""my"" or ""qu""","find . \( -name ""my*"" -o -name ""qu*"" \) -print"
Find all files under /home/username/public_html/sites/default/files and set their permission to 660,find /home/username/public_html/sites/default/files -type f -exec chmod 660 {} +
Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter,"find . -name ""*.$1"" -exec rm {} \;"
Find files in the current directory tree that have one link,find . -links 1
Remove empty directories from directory tree /srv/abc,find /srv/abc/ -type d -empty -exec rmdir {} \;
Print the list of files changed within the last minute,find / -newerct '1 minute ago' -print
Find and the 5 largest regular files in the Downloads folder of tecmint's home directory and output the file sizes in bytes.,"find /home/tecmint/Downloads/ -type f -printf ""%s %p\n"" | sort -rn | head -n 5"
Find the current directory and all its subdirectories.,find . -type d
check if the file pointed by the symbolic exists or not and display those which are broken,find . -type l -! -exec test -e {} \; -print
Find all files/directories under current directory that match the case insensitive regex .*/\_.*,find . -iregex '.*/\_.*'
List files larger than 9MB residing in the current directory and below,find . -size +9M
Find x* files/directories under current directory whose status was changed less than 1 day ago and move them to /tmp/other,"find . -name ""x*"" -print0 | strace xargs -0 -I '{}' mv '{}' /tmp/other"
Forcefully delete all files in the current directory that begin with spam-,find . -name 'spam-*' | xargs rm
Find files bigger than 20 megabytes in the home directory tree,find ~ -size +20M
Find all files under current directory excluding hidden files,find . -depth -path './.*' -prune -o -print
Find recursively all Python files in the current directory and search them for the word ‘import’,find . -name '*.py' | xargs grep 'import'
Archive the directory structure under backup directory into directory-structure.tar,find backup/ -type d -print0 | xargs -0 tar cf directory-structure.tar --no-recursion
Delete all hidden files/directories under $some_directory,"find ""$some_directory"" -name '.*' ! -name '.' ! -name '..' -delete"
"Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time","find . -type f -printf ""%C@ %p\n"" | sort -rn | head -n 10"
Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them,"find ""$DIR"" -type f -mtime +15 -exec rm {} \;"
Find files/directories under current directory and force xargs to print them one by one,find . | xargs -n 1 echo
List all files/directories under /data1/Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago,find /data1/Marcel -size +1024  \( -mtime +365 -o -atime +365 \) -ls -exec file {} \;
Find all directories in the /data1/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago,find /data1/realtime -mmin -60 -mmin +5 -type d
find file named foo.txt under root / directory.,find / -name foo.txt
Find all 1US* files/directories under current directory,find . -name '1US*'
Remove files under current directory with inode number $inum,find . -inum $inum -exec rm {} \;
Search the /path directory tree for files lacking the group writable bit,find /path ! -perm /020
Search the current directory recursively for files last modified within the past 24 hours ignoring paths ./es* and ./en*,find . -mtime 0 | grep -v '^\./en' | grep -v '^\./es'
"find files under the current directory ending in ""txt"" and list them, or ending in  ""html"" but do nothing.",find . -name '*.txt' -print -o -name '*.html'
Find all files/directories named 'Waldo' under 'Books' directory tree that is located in user's home directory,find ~/Books -name Waldo
"Count the *.html files residing in the /usr/src directory tree and containing string ""foo""","find /usr/src -name ""*.html"" -exec grep -l foo '{}' ';' | wc -l"
find all the html files in the current folder and replace the end of each line with a pattern,find ./ -type f -name '*.html' | xargs sed -i '$s/$/<\/description>/'
Find all files that are less than 50 bytes,find / -size -50c
Print the list of directories in a directory.,"#!/bin/bash

directory=""/path/to/your/directory""

find ""$directory"" -type d"
Find all files/directories in entire file system with 644 permission,find / -perm 644
Find all files/directories starting with 'onlyme' in their names under current directory tree in minimum 1 level deep,find . -mindepth 1 -name 'onlyme*'
Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory,find {} -name 'upvoter-*' -type f -or -type l -maxdepth 1 -perm +111
Prints line count of each file within current directory.,find . -type f -print0 | xargs -0L1 wc -l
find regular  file named foo.txt under root / directory.,find / -name foo.txt -type f
find all the files in current directory of size greater than 10MB and less than 20 MB.,find . -size +10M -size -20M
Find all files under current directory and replace the match of the regex '^.*/S' with 'S' in every line of the output,find . -type f -print | sed 's|^.*/S|S|'
find the type of all the regular/normal files in the current folder,find . -type f | xargs file
"Search the files from the current directory tree for ""chrome""",find . -exec grep chrome {} +
Rename all regular files under current directory tree with inode number 31467125 to 'new_name.html',find . -type f -inum 31467125 -exec mv {} new_name.html \;
Find all *.* directories under /home/feeds/data directory,find /home/feeds/data -type d \ -prune -o -name '*.*' -print
check find version,find --version
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago,find -daystart -mtime +0
Recursively removes all empty folders from the X folder.,find X -depth -type d -exec rmdir {} \;
find the count of text files that are present in the current working directory.,find . -maxdepth 1 -name \*.txt -print0 | grep -cz .
Find all the files/directories under '/var/adm' directory tree that have not been modified in the last 3 days,find /var/adm -mtime +3 -print
"Copy all files matching ""*failed.ipynb"" in the current directory tree to ""./fails"" preserving the directory hierarchy","find . -name ""*failed.ipynb"" | cpio -pd ./fails"
Search the home directory tree for all .txt files,find ~/ -name '*.txt'
Find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command,"echo ""$queue"" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 $*"
Find recursively all regular files in the current directory tree not ending in .dll or .exe,"find . -type f | grep -vP ""\.dll$|\.exe$"""
Find all files/directories under '/var/log' directory tree that bave been modified today (from the start of the day),find /var/log -daystart -mtime 0
Find all files/directories named 'game' under current directory tree,find . -name game
Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' recursively that have not been modified from the start of the day,find /tmp/test/* -daystart -mtime +0
Find all *.c files located under /home and below,"find /home -name ""*.c"""
Find the top 25 files according to their size in the current directory and its subdirectories,find . -type f -exec ls -al {} \; | sort -nr -k5 | head -n 25
Find UTF-8 files with BOM,find -type f -print0 | xargs -0 grep -l `printf '^\xef\xbb\xbf'` | sed 's/^/found BOM in: /'
"display all the files in the file system which belong to the user ""user1""",find / -user user1
"display all the regular/normal files in the current folder excluding the files ""bbb"" and ""yyy""",find . \ -prune -o -type f -print
Find all files/directories that do not contain 'photo' in their names under current directory tree,"find . ! -name ""*photo*"""
Find all empty directories recursively starting from the current one and delete them,find . -type d -empty -print0 | xargs -0 /bin/rmdir
Identify CMS version/releases accross all your Wordpress websites,"find /var/www/vhosts/*/httpdocs/ -type f -iwholename ""*/wp-includes/version.php"" -exec grep -H ""\$wp_version ="" {} \;"
Find all the files in the current directory recursively whose permissions are not 777,find . -type f ! -perm 777 | head
"Compress all "".txt"" files in the current directory tree with gzip","find . -type f -name ""*.txt"" -exec gzip {} \;"
display the version of find command,find -version
create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/BACKUP.LOG,find . -cpio /dev/fd0 -print | tee /tmp/BACKUP.LOG
Find a single file called tecmint.txt and remove it,"find . -type f -name ""tecmint.txt"" -exec rm -f {} \;"
"delete all instances of the file ""bad"" if its size is 0 bytes",find . -name bad -empty -delete
Find all regular files with '.r' and '.c' in their names under current directory tree,find ./ -type f \ -print
"find all files in current folder having the name pattern ""some_pattern"" and move them to the folder target_location (GNU VERSION)",find . -name some_pattern -print0 | xargs -0 -i mv {} target_location
Display all files in a folder,find /usr/X11/man/man5 -print
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them,"find MyApp.app -name Headers -type d -exec rm -rf ""{}"" \; || true"
search for a word in all the files in the current directory,find . -exec grep chrome {} \;
Search the current directory tree for filenames matching the pattern '[mM][yY][fF][iI][lL][eE]*',find . -name '[mM][yY][fF][iI][lL][eE]*'
Remove all .php files in the /var/www/ directory,find /var/www/*.php -type f -exec rm {} \;
Find all .php files starting from the root directory and ignoring /media,"find / -name ""*.php"" -print -o -path '/media' -prune"
Find all empty files starting from the current directory and delete them,find . -type f -empty -delete
Delete all files in the /myDir directory tree that were last modified 7 days ago,find /myDir -mtime 7 -exec rm -rf {} \;
Search everywhere for directories named `root',find / -type d -name root
"List all files in the ""test"" directory tree except those with '/invalid_dir/' in the pathnames",find test -print | grep -v '/invalid_dir/'
List all files in the current directory tree that were modified 60 minutes ago,find -mmin 60
display all the text files and hidden files in the home folder,"find ~ -name ""*.txt"" — print -o -name "".*"" — print"
Find every vim undo file in the current directory tree,find -type f -iname '*.un~'
"Search all *.c files from the current directory tree for ""hogehoge""",find . -name \*.c -print | xargs grep hogehoge
Find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir,find . -inum 211028 -exec mv {} newname.dir \;
find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions,find . -type f | sed -e 's#.*\$#\1#' | sort | uniq
"Search for files/directories that are readable for everybody, have at least one write bit set but are not executable for anybody",find . -perm -444 -perm /222 ! -perm /111
Md5sum the last 5 files in /directory1/directory2/,find /directory1/directory2/ -maxdepth 1 -type f | sort | tail -n 5 | xargs md5sum
Find all directories named $1 under $HOME directory tree and remove them,find $HOME -type d -name $1 -exec echo {} ';'  -exec rm -rf {} ';'
List the files from the current directory tree that contain lines approximately matching regular expression '^Subject:.*unique subject',find . -type f -print | xargs agrep -2 -il '^Subject:.*unique subject'
Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755,find . -iname '*.cgi' | xargs chmod 755
Display a long listing of all 0777 permission directories under current directory tree,find . -perm 0777 -type d -exec ls -l {} \;
Find all the files whose name is tecmint.txt,find . -name tecmint.txt
"display all scala files in the directory ""src/main""","find . -path ""*src/main*"" -type f -iname ""*\.scala*"""
display all the files having spaces in the current folder,"find . -name ""filename including space"""
"Find all TXT files in the current directory and copy them to directory ""$HOME/newdir""","find ""$HOME"" -name '*.txt' -type f -print0 | sort -zu | xargs -0 cp -t ""$HOME/newdir"""
"find all files not ending in "".html""","find . -type f -not -name ""*.html"""
"find all the files in the file system that start with ""win"" and searched only in the mounted file systems",find / -mount -name 'win*'
Find files under current directory that contains the string '/bin/ksh',find . -type f -exec grep -iH '/bin/ksh' {} \;
"Find all *.* files not within .git directory and run $SED_CMD -i ""s/$1/$2/g"" on each of them","find . -type f -name ""*.*"" -not -path ""*/.git/*"" -print0 | xargs -0 $SED_CMD -i ""s/$1/$2/g"""
"Replace all occurrence of ""toreplace"" with ""replaced"" in all files under /home/www",find . -maxdepth 1 -type f -print0 | xargs -0 sed -i 's/toreplace/replaced/g'
Find all files/directories under /myfiles following symlinks if needed,find -L /myfiles
"Find all files under current directory matching the pattern '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' in their names","find -name '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' -type f"
Find all SGID files in entire file system,find / -perm +g=s
List all files under current directory that are greater than 10000000x512 bytes in size,find . -type f -size +10000000 -print|xargs ls -ld|more
"Remove all files in and below the current directory whose names begin with ""not""",find . -name not\* -print0 | xargs -0 rm
"find all the files in the folder ~/Music which begin with ""Automatically Add""","find ~/Music/ -name ""Automatically Add*"""
"find all the files in the entire file system that have been modified exactly 7 days before which end with ""conf""","find / -name ""*conf"" -mtime 7"
Remove all files that were older than 3 days,find . -type f -mtime +3 –exec rm –f {} \;
"prune all the files in the current directory, only current directory (.) is the output",find . -prune
"Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths","find . -type f -printf '%T@ %p\n' | sort -n | tail -10 | cut -f2- -d"" """
List all files and directories residing in the current directory and below,find -print0 | xargs -0 ls
display all the configuration files in the etc folder,find /etc -name '*.conf'
Remove file with inode number 31246,find . -inum 31246 -exec rm [] ';'
display the number of lines in all the files in the current folder,find . -exec wc -l {} \;
List all regular files under the current directory and below it,find . -type f | xargs ls -l
"Execute ""your_script.sh"" passing all ""sqlite.db"" files from the current directory tree as arguments to it",find . -name 'sqlite.db' | xargs your_script.sh
List all leaf directories of the current directory tree,find -depth -type d |sed 'h; :b; $b; N; /^\\/.*\n\1$/ { g; bb }; $ {x; b}; P; D'
List files larger than 10MB under /var/log /tmp that haven't changed in a month,find /tmp /var/tmp -size +30M -mtime 31 -ls
"Search the ""test1"" directory recursively for regular files",find test1 -type f -print
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively,find . -maxdepth 1 -type d -exec chmod -R 700 {} \;
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2,find . -type d -regextype posix-egrep -regex '\./processor[[:digit:]]*/10\.(1|2)'
Find all files under /myfiles with 647 permission,find /myfiles -type f -perm -647
Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified less than 30 days ago,find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime -30
find all the files in the current folder which belong to the user root.,find . -user root -perm -4000 -print
display all the files in the current folder which are bigger than 100MB and save the output list to the file /root/big.txt,find \
"find all the "".sh"" files in the current folder",find -iname *.SH
Find all regular files under '/home/john/scripts' directory tree excluding files with '.ksh' extension,"find /home/john/scripts -type f -not -name ""*.ksh"" -print"
"Change the owner of all "".txt"" files in directory tree ""/mydir"" to ""root""","find /mydir -type f -name ""*.txt"" -execdir chown root {} ';'"
display all text files in a folder,"find $target -type f -iname ""*.txt"""
Find all files/directories named 'photo.jpg' under current directory tree,find -name photo.jpg
"Locate all ""copyright"" files under and below /usr/share/doc","find /usr/share/doc -name ""copyright"""
Delete all regular files under $DIR directory tree that have been modified before file $a,"find ""$DIR"" -type f \! -newer ""$a"" -exec rm {} +"
find all the php files in the current folder,find . -name “*.[php|PHP]” -print
"Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 10 * 1024 * 2 blocks in size, that is larger than 20480 blocks.",find . -atime +7 -o -size +`expr 10 \* 1024 \* 2` -print
display all empty files in home folder,find ~ -empty
"Find all files with the SUID bit set, starting from /",find / -perm -u+s
search for files which are writable by either their owner or their group,"find . -perm /u+w,g+w"
Find all *.data files under jcho directory,find jcho -name *.data
"Find files whose pathnames end in ""config""",find .  -path '*/*config'
display all the directories in the current folder which are atleast one level deep,find . -mindepth 1 -type d -print0
display a long listing of all the files in the current folder which have been modified in the last 24 hours,find . -mtime -1 | xargs ls -ld
"List all directories in current directory, works even if they have weird names or names starting with a dash.","find -maxdepth 1 -type d | awk -F""./"" '{print $2}'"
Find & Substitute Only 2nd Occurrence of a Word Using sed s//2 in all .txt files,"find . -type f -name ""*.txt"" -exec sed 's/Linux/Linux-Unix/2' thegeekstuff.txt"
"Delete all the files found in the current directory tree whose names begin with ""heapdump""",find . -name heapdump*|xargs rm
Find files with group write permission and remove the permission,find . -perm -20 -print | xargs chmod g-w
"Find all files in /home/kos and below whose names end in "".tmp""",find /home/kos -name *.tmp -print
"display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names and discard all the errors","find /var/log -name ""*.log"" -print0 2>/dev/null"
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"" |& xargs ls -lrt | awk '{print $9}'"
"find all the ""error_log"" files in the folder ""/home"" which are bigger than 5MB and force delete them","find /home -size +5000000b -name ""error_log"" -exec rm -rf {} \;"
"Find the total size of all the "".avi"" files in all the sub-folders below ""/mnt/iso""","find /mnt/iso -name *.avi -printf ""%s\n"" | paste -sd+ - | bc"
"Remove all ""CVS"" directories from the current directory tree, ignoring the case",find . -iname CVS -type d | xargs rm -rf
Convert all image.pdf files to image.png files under ./polkadots,find ./polkadots -name 'image.pdf' -exec convert -transparent white -fuzz 10% {} image.png \; -print
find regular files and directories that have been modified in the last seven days,find . -mtime -7 -type f
"Copy the directory hierarchy of the current directory to ""destdir""",find . -type d | cpio -pdvm destdir
"search for the host ""slc02oxm.us.oracle.com"" in all the xml files in the current folder and display the files which has the matched content",find -name “*.xml” -exec grep -l “slc02oxm.us.oracle.com” {} \;
Find all directories under current directory whose paths are 5 characters long,"find . -regextype posix-extended -type d -regex "".{5}"""
List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time,"find / -type f -name ""*"" -newermt ""$newerthan"" ! -newermt ""$olderthan"" -printf ""%T+\t%p\n"" | sort"
"find any files or directories called "".svn"" under the current directory and run a recursive delete (without prompting) command on each one.",find . -iname .svn -exec bash -c 'rm -rf {}' \;
"Recursively change the owner and group of all files in the current directory to ""apache""","find . -maxdepth 1 -not -name ""."" -print0 | xargs --null chown -R apache:apache"
Serach for all the files containing grep in man pages,find /usr/share/man/ -regex .*grep*
"Search all the .c and .h files in the current directory tree for ""expr""",find -name '*.[ch]' | xargs grep -E 'expr'
create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search,find . -maxdepth 2 -size +100000 -exec bzip2 {} \;
use regex with find command,find . -regextype posix-egrep -regex '\./[a-f0-9\-]{36}\.jpg'
"find all the regular/normal files in the folder ""myfiles"" which have the permission 647.",find /myfiles -type f -perm -647
Search the current directory tree for TXT files skipping hidden ones,"find . -type f \( -iname ""*.txt"" ! -iname "".*"" \)"
"display all the files ending with "".foo"" excluding those that are in the directory "".snapshot""",find . -name .snapshot -prune -o -name '*.foo' -print
Find all *.mp3 files in file system with more than 10MB and delete them using rm command,find / -type f -name *.mp3 -size +10M -exec rm {} \;
display all the files in the kat folder,"find kat -printf ""%f\n"""
Find all files/directories named 'date' under /usr,find /usr -name date
"Copy all files unconditionally and directories in directory tree ""myfiles"" to ""target-dir"" preserving directory hierarchy and modification time",find myfiles | cpio -pmud target-dir
Find all regular files or symlinks in the entire file system,find / -mount -depth \ -print
Find all files and directories that do not match the pattern given as the $controlchars variable,"find . ! -name ""$controlchars"""
Find all files owned by group `root' in the current directory tree and change their user to `temp',find . -group root -print | xargs chown temp
Find all directories in level 1 down the $queue directory,"echo ""$queue"" | xargs -I'{}' find {} -mindepth 1 -maxdepth 1 -type d"
find all the word press configuration php files in the folder /var/www and do not search beyond two levels,find /var/www/ -name wp-config.php -maxdepth 2
Find all files under and below the current working directory with the word California in the file,find . -type f -exec grep California {} \; -print
See what files are executable by the file's owner and group,find -type f -perm -110
Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago,find /home/backups -type f -iregex '.*\.t?gz$' -mtime +60 -exec rm {} \;
"Remove all regular files from the current directory tree whose names do not end with ""ignore1"" or ""ignore2""",find . -type f -not -name '*ignore1' -not -name '*ignore2' | xargs rm
Search /usr/local for subdirectories whose names end with a number 0-9,find /usr/local -maxdepth 1 -type d -name '*[0-9]'
Set permissions to 2770 for all directories in the current directory tree,find . -type d -exec chmod 2770 {} +
Find all files/directories containing 'farm' in their names under '/usr/share' directory tree,find /usr/share -name '*farm*'
modify the permissions of all the folders in a directory,find /path/to/dir -type d -exec chmod 755 {} \;
Find all *.csv files under /foo/bar and move them to some_dir,find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir
search for bash and rsync files in the entire file system excluding search in /usr folder and discard all the errors,find / -path /usr -prune -o \ -print 2>/dev/null
find all the regular/normal files in the /path folder and delete them,find /path -type f -delete
Find all files/directories under /home/bozo/projects directory that were modified 1 day ago,find /home/bozo/projects -mtime 1
Copy all files under director 'foo' whose name doesn't contain 'Music' to directory 'bar'.,find foo -type f ! -name '*Music*' -exec cp {} bar \;
"Find recursively all files whose names begin with ""foo""","find . -name ""foo*"""
Remove files that are less than 1MB in size under current directory,find . -type f -size -1M -exec rm {} +
Find all files on the system that are world writeable,find / -perm -0002
Find all files under directory tree /path/to/dir whose permissions are not 644,find /path/to/dir ! -perm 644
"Search for all files that end in "".conf""","find / -type f -name ""*.conf"""
search for all the rpm files in the file system which reside in the same partition as that of the root,"find / -xdev -name ""*.rpm"""
display all the files in the current folder that have been modified in the last 24 hours,find  -mtime -1
Find files/directories that does not have write permssion for group,find /path ! -perm /020
display all the files in the current folder,find . | xargs echo
Run command with all the file/directory path under whatever directory as arguments,find whatever -print0 | xargs -0 command
"Search for the string ""ERROR"" in all XML files in the current working directory tree","find . -name ""*.xml"" -exec grep ""ERROR"" /dev/null '{}' \+"
display all the .sh scripts and perl files in the current folder,"find . -type f \( -iname ""*.sh"" -or -iname ""*.pl"" \)"
Removes all empty folders with modification time more that 10 minutes ago from $homeDirData folder.,find $homeDirData -type d -mmin +10 -print0 | xargs -0 rmdir
Remove all *.swp files under current directory,"find . -name ""*.swp""|xargs rm"
"Find regular files matching pattern ""*oraenv*"" and excecute the ""file"" utility for each of them","find . -name ""*oraenv*"" -type f -exec file {} \;"
List first 20 files under current directory,find . -type f |xargs ls -lS |head -20
Unzip all *.zip files below the current directory,find -name '*.zip' | xargs -n 1 unzip
Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them,"find . -type f -iname '*'""$*""'*' -ls"
Find all files under media/ directory and change their permission to 600,find media/ -type f -exec chmod 600 {} \;
search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end,find /data/images -type f -newer /tmp/start -not -newer /tmp/end
"Find files in the current directory tree that match pattern ""*sub*""","find ./ -name ""*sub*"""
Find the 5 largest regular files in the current directory and below.,find -type f -exec du -Sh {} + | sort -rh | head -n 5
find directories under the $LOGDIR directory where there has been no modifications within the last 24 hours and compresses the files.,find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
"Set permissions of all directories under ""/opt/lampp/htdocs"" to 755",find /opt/lampp/htdocs -type d -exec chmod 755 {} \;
search all the files in the current folder excluding those that are present in the folder test and using regex,"find . -name test -prune -regex "".*/my.*p.$"""
"Search for files whose name is ""filename"" and whose permissions are 777","find / -perm 777 -iname ""filename"""
find all the text files in the current folder,find . -type f -name '*.txt' -print
Find all regular files named postgis-2.0.0 under your home directory,"find ~/ -type f -name ""postgis-2.0.0"""
List all files without descending into subdirectories,find * -type f -print -o -type d -prune
Find all files/directories named modules under current directory,find . -name modules
"Search the current directory recursively for MOV files, following symlinks","find . -iname ""*.mov"" -follow"
Search for the files that are owned by user rooter or by user www-data,find -user root -o -user www-data
Find all directories under /home that doesn't contain a file/directory named 'bin',find /home -type d ! -exec test -e '{}/bin' \; -print
"search for the files which contain the word start in their name excluding search in ./proc, ./sys, ./run folders",find . -path ./proc -prune -or -path ./sys -prune -or -path ./run -prune  -or -iname '*start*' -print
"display all the "".c"" files which have been modified in the last 10 minutes",find /home/david -amin -10 -name '*.c'
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""",find -type f -maxdepth 1 -name 'file*' -print0 | sort -z | xargs -0 bash script.sh
"Find files ending in ""f""",find .  -path '*f'
search for the file test2 in the current folder,find -name test2
"Find all 400 permission files under /data directory, print 'Modifying ' appended with file path for each of them and change their permission to 755",find /data -type f -perm 400 -exec echo Modifying {} \; -exec chmod 755 {} \;
Find files modified in the last 5 minutes starting from the current directory,find . -mmin -5
"Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission","find . -type f -exec chmod u+r-wx,g+rw-x,o-rwx {} \;"
Search for all non-hidden files,find . -name '*'
change the permission of all the regular files in the folder /home to 700,find /home -type f -perm 0777 -print -exec chmod 700 {} \;
find all the files in the folder /opt which have been modified exactly 20 days ago,find /opt -mtime 20
List all files without descending into subdirectories,find * -type f -print -o -type d -prune
Remove junk files modified more than 31 days ago recursively,find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \;
Find all or single file called tecmint.txt under the / directory of owner root,find / -user root -name tecmint.txt
Fint all *.txt files/directories under /mnt/msdos and without error reporting,"find /mnt/msdos  -name ""*.txt"" 2> /dev/null"
Search the 'tmp' directory for .mp3 files,find tmp -maxdepth 1 -name '*.mp3'
"Calculate the md5sum of all the files with name ""MyCProgram.c"", ignoring case","find -iname ""MyCProgram.c"" -exec md5sum {} \;"
Print the files under current directory twice per line,find . -type f -exec echo {} {} \;
Find all directories by the name `httpdocs' on the system,find / -type d -name httpdocs
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find . -name ""*.t1"" -exec rename 's/\.t1$/.t2/' '{}' \;"
Find all files/directories under 'my key phrase' directory,find 'my key phrase'
Find the top 5 big files,find . -type f -exec ls -s {} \; | sort -n -r | head -5
Print the list of all files except files named BBB,find . \! -name BBB -print
"Set the read bit for ""other"" on all *rc.conf files in the current directory tree","find . -name ""*rc.conf"" -exec chmod o+r '{}' \;"
find all files in the current directory that are less than 1 byte size,find . -size -1c -print
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3,"find / -iname ""*.mp3"" -type f -exec /bin/mv {} /mnt/mp3 \;"
"Change the owner of all files in the directory tree ""dir_to_start"" excluding directory ""dir_to_exclude"" to ""owner""",find dir_to_start -name dir_to_exclude -prune -o -print0 | xargs -0 chown owner
delete all the text files in the current folder,"find . -type f -name ""*.txt"" -delete"
search for all the log files in the folder /apps which have not been modified in the last 60 days and which are present in the same file system as that of /apps and delete them,"find /apps -xdev -name ""*.log"" -type f -mtime +60 | xargs rm"
"display all the files in the home folder which begin with ""arrow""",find ~ -name 'arrow*'
find all the zip files in the current folder and create a tar ball of these zip files,find . -type f -name '*.zip' -print0 | xargs -0 tar -xzf
show all the mp3 files in the folder /home,find /home -type f -name '*.mp3'
"Remove all files whose names end with ""~"" in the /home/peter directory tree",find /home/peter -name *~ -print0 |xargs -0 rm
Find recursively all empty directories in the current directory,find . -type d -empty
Add read and execute permission to every directory under the current directory,find . -type d -exec chmod +rx {} \;
Scan every file in /etc for IPV4 addresses while trying to elminate false positives.,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n' | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
Find all *.foo files under current directory and print their contents,find . -name '*.foo' -exec cat {} +
"Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument, then search for ExpectedResult in the output",find . -name *.so -print0 | xargs -0 myCommand | grep ExpectedResult
"Remove the ""^M"" characters from all *.ext files under /home directory","find /home -type f -name ""*.ext"" -exec sed -i -e 's/^M$//' {} \;"
list all the sqlite files in the current folder,"find ./ -name ""*.sqlite"" -ls"
"Print the file content of command ""[whatever]""",cat `find [whatever]`
"Prints lines count of each *.php file in a current folder and subfolders, and prints total count.",find . -name '*.php' -print0 | xargs -0 wc -l
Find all .sh files in or below the current directory and move them to folder ~/back.scripts,"find . -name ""*.sh"" -print0 | xargs -0 -I {} mv {} ~/back.scripts"
Find all files under path_to_dir,find path_to_dir -type f
Find files with the extension .conf in the /etc directory,find /etc -name '*.conf'
Find all files under current directory that match the case insensitive regex .\|./.git and replace  the text matching the regex expanded by $lower1 with $lower2 in these files,"find . -type f \! -iregex '.\|./.git' -exec perl -i'' -pe ""s/$lower1/$lower2/g"" {} +"
get the count of all the files that have been accessed in the last 30 days,find . -atime +30 -exec ls \; | wc -l
Show manual of the find utility,man find
Get a recursive file list of directory $dir,find $dir -type f
finda ll the files in the current folder that are modified today.,find ~ -type f -mtime 0 -ls
Find files/directories named 'document' in the entire filesystem and in the directory tree '/usr' even if it's in a different partition without traversing to other devices/partitions,find / /usr -xdev -name document -print
Find writable regular files in the current directory,find -type f -maxdepth 1 -writable
Find all files/directories under /proc and run ls command on each.,find /proc -exec ls '{}' \;
Counts lines in each of *.php files in a current folder and subfolders and prints total count.,find . -name '*.php' | awk '{gsub;print $0}' |xargs wc -l
Find all *.log files under path/,"find path/ -name ""*.log"""
"display all the files in the file system which belong to the user ""wnj"" or which are modified after the file ""ttt""",find / \ -print
Find files under current directory that are not newer than $date_time in regards of modification time,"find . -type f -not -newermt ""$date_time"""
display the directory name along with the modified time  for all the files /var,"find /var -maxdepth 2 -type d -printf ""%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\n"""
Finds more than 5 days old files in two directories  and compresses them.,find /home/folder1 /home/folder2 -type f -mtime +5 -exec compress {} \;
List first 5 files named 'something' that are found under current directory,find . -name something -print | head -n 5
Find all or single file called FindCommandExamples.txt under / directory of owner root,find / -user root -name FindCommandExamples.txt
delete all empty files in the current directory ( empty file = size 0 bytes ),find . -empty -exec rm '{}' \;
"Execute script /path/to/filecopy.sh passing all JPG files found under the ""$SOURCE"" directory and below as arguments","find ""$SOURCE"" -type f -iname '*.jpg' -exec /path/to/filecopy.sh {} +"
Find all files/directories under directory '.cache/chromium/Default/Cache/' which are bigger than 100MB and which are atleast 1 level deep and delete them,find .cache/chromium/Default/Cache/ -mindepth 1 -size +100M -delete
"Count the *.html files residing in the /usr/src directory tree and containing string ""foo""","find /usr/src -name ""*.html"" | xargs grep -l foo | wc -l"
"Print the list of files and directories of the current directory including "".""",find . \
display the number of lines in all the php files in the current folder,"1 down vote wc -cl `find . -name ""*.php"" -type f`"
Find files and directories whose owner is daniel,find . -user daniel
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find /the/path -depth -name ""*.abc"" -exec sh -c 'mv ""$1"" ""${1%.abc}.edefg""' _ {} \;"
"find the file ""filename.txt"" in the usr folder",find /usr -name filename.txt -print
Execute /usr/bin/find with $* arguments where current directory is the first argument,/usr/bin/find ./ $*
"Search for all files in the current directory recursively whose names contain ""linkin park"", ignoring the case","find . -iname ""*linkin park*"""
"Change permissions to u=rwx,g=rx,o= for all directories inside the current directory tree","find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;"
List only the non-hidden empty files only in the current directory.,"find . -maxdepth 1 -empty -not -name "".*"""
"search for the ip ""192.168.1.5"" in all the files in /etc folder","find /etc/ -iname ""*"" | xargs grep '192.168.1.5'"
Rename all *company* files/directories under current directory to *nemcompany* files/directories,"for f in `find -name '*company*'` ; do mv ""$f"" ""`echo $f | sed s/company/nemcompany/`"" ; done"
Find all *fink* files/directories in entire file system,find / \( -type f -or -type d \) -name \*fink\* -print
Print the list of non-hidden directories in the current directory,"find -type d -maxdepth 1 ! -name "".*"" -printf ""%f\n"""
find all png files in the current folder,find . -type f -name '*.png'
Print content of all files found regarding seach options '[whatever]',find [whatever] -exec cat {} +
Search the entire file hierarchy for files ending in '.old' and delete them.,"find / -name ""*.old"" -delete"
Find all *.m4a files under /home/family/Music directory,find  /home/family/Music -type f -name '*.m4a' -print0
Print a sorted list of regular files from directory tree /folder/of/stuff,find /folder/of/stuff -type f | sort
"Search the regular files from directory tree 'folder_name' for ""your_text""",find folder_name -type f -exec grep your_text  {} \;
search for all the perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified 8-10 days ago.,"find /nas/projects/mgmt/scripts/perl -mtime 8 -mtime -10 -daystart -iname ""*.pl"""
"search for regular files in the current folder which path is not  ""./.*"" and not ""./*/.*""","find ./ -type f -name ""*"" ! -path ""./.*"" ! -path ""./*/.*"""
ERROR - this is for DOS,"ping -n 1 %ip% | find ""TTL"""
Find '*prefs copy' files under /mnt/zip and delete them ensuring white space safety,"find /mnt/zip -name ""*prefs copy"" -print0 | xargs>    -0 rm"
"Get a detailed listing of all symbolic links in /usr/bin starting with ""z""","find /usr/bin  -type l  -name ""z*"" -exec ls  -l {} \;"
display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter,find . -name \? -mtime -1
Remove all *bak files under current directory with confirmation prompt,find . -name '*bak' -exec rm -i {} \;
Delete all in the current directory tree,find . -delete
"Print 'Empty dir' if $some_dir is empty, otherwise print 'Dir is NOT empty'","if find ""`echo ""$some_dir""`"" -maxdepth 0 -empty | read v; then echo ""Empty dir""; else ""Dir is NOT empty"" fi"
"Search the current directory tree for .log files containing the string ""The SAS System"" on the first line",find . -name '*.log'  -type f  -readable  ! -size 0 -exec sed -n '1{/The SAS System/q0};q1' {} \; -print
Find files on the system bigger than 50MB but smaller than 100MB,find / -type f -size +50M -size -100M
Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified more than 30 days ago,find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime +30 -print
Show file type information for all regular files under '/home' directory tree,find /home -type f -exec file {} \;
Compare the files in 'FOLDER1' and 'FOLDER2' and show which ones are indentical and which ones differ,"find FOLDER1 -type f -print0 | xargs -0 -I % find FOLDER2 -type f -exec diff -qs --from-file=""%"" '{}' \+"
find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB,find . -atime +7 -size +20480 -print
"Find all files matching pattern '.#*' in the current directory tree and execute ""foobar"" for each of them with the file name as an argument","find . -iname '.#*' -print0 | while read -r -d '' i; do foobar ""$i""; done"
"Find all *.log files under current directory that contain the string ""Exception""",find . -name '*.log' -mtime -2 -exec grep -Hc Exception {} \; | grep -v :0$
Find all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"""
"Find all *.log files under path/ that do not contain ""string that should not occur""","find path/ -name '*.log' -print0 | xargs -r0 -I {} bash -c 'grep -q ""string that should not occur"" ""{}"" || echo ""{}""'"
Find all files under /myfiles with read-write access for others,find /myfiles -type f -perm -o+rw
Search /path/to/your/directory for *.avi and *.flv files,find /path/to/your/directory -regex '.*\.\(avi\|flv\)'
Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name (will be expanded in the current shell) in their names,"find ../../$name-module -print0 -name 'Name*' -type f | xargs -0 rename ""s/Name/$Name/"""
Show the number of lines for each PHP file in the current directory tree,"find . -type f -name ""*.php"" -exec wc -l {} +;"
"Search the files from the current directory tree for text ""documentclass""",find . -type f -print0 | xargs -0 grep -H 'documentclass'
"display all file in the folder /dir/to/search except "".c"" files","find /dir/to/search/ -not -name ""*.c"" -print"
"search for regular files in the current folder which path is not  ""./.*"" and not ""./*/.*""","find ./ -type f -name ""*"" ! -path ""./.*"" ! -path ""./*/.*"""
Find all the files/directories in '/path/to/files' directory tree which have not been modified in the last 2 hours,"find ""/path/to/files"" -mmin +120"
"Copies all files under the current folder like ""file.ext"" with ""FooBar"" in the path to the root of the current folder, preserving mode, ownership and timestamp attributes.","find . -name ""file.ext""| grep ""FooBar"" | xargs -i cp -p ""{}"" ."
find all files in the current folder which are bigger than 10bytes,find . — size +10 -print
Search  in current directory downwards all files whose size is greater than 10 bytes .,find . -size +10c -print
"find all the text files in  the current folder and do not search in somedir, bin directories","find . -name somedir -prune , -name bin -prune -o -name ""*.txt"" -print"
Search for files greater than 20MB under your home directory,find ~ -size +20M
calculate the disk usage for all the files which have been modified in the last 24 hours in ~/tmp folder and display the file sizes,find ~/tmp -mtime 0 -exec du -ks {} \; | cut -f1
"find all files in the folder ""myfiles"" which have not been accessed in the last 30*24 hours",find /myfiles -atime +30
Print a listing of the /usr/local/etc/rc.d directory tree,find /usr/local/etc/rc.d -type f | awk -F/ '{print $NF}'
"Print ""$somedir is empty"" if $somedir is empty","find ""$somedir"" -maxdepth 0 -empty -exec echo {} is empty. \;"
Find and remove multiple files such as *.mp3 or *.txt,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
Find all files under ./lib/app and redirect their sorted list to myFile,find ./lib/app -type f | sort | tee myFile
Find all regular files under current directory tree that match the regex 'tgt/etc/*' in their paths,"find . -type f -name \* | grep ""tgt/etc/*"""
Find all *.txt files/directories under current directory terminating their names/paths with null character,find . -name '*.txt' -print0
Search the /var/www/ tree for files not owned by user `apache',find /var/www ! -user apache -print0 | xargs -0
Find all files/directories named 'query' under current directory tree,"find -name ""query"""
Print a list of JPG files residing in the current directory tree,find . -name “*.jpg”
"find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once","find / \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \  \( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)"
"Run checksums recursively from the current directory, and give back the filenames of all identical checksum results","find ./ -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's/^[0-9a-f]*\ *//;'"
Find all *-* files under current directory,find . -type f -name '*-*'
"Delete all "".DS_Store"" files/directories under test directory","find test -name "".DS_Store"" -delete"
Set 644 permission to all regular files under /path,find /path -type f -exec chmod 644 {} +;
"Copy all "".xml"" files in the current directory tree to ""/new/parent/dir"" preserving the directory hierarchy",find . -name \*.xml -print0 | cpio -pamvd0 /new/parent/dir
Recursively finds all '*.pdf' files and folders in a current folder and removes them without prompting.,"find . -name ""*.pdf"" -print0 | xargs -0 rm -rf"
"Search all files from the /tmp directory tree for the string ""search string""",find /tmp -type f -exec grep 'search string' '{}' /dev/null \+
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f | xargs ls -l
Find *.jpg screenshots that are bigger than 500k,find ~/Images/Screenshots -size +500k -iname '*.jpg'
Find files in the current directory and its sub-directories that begin with 'f'.,find . -name f* -print
Find all symbolic links under '/proc/$pid/fd' directory tree with name pattern '$save_path/sess_\*' and update their timestamps,"find ""/proc/$pid/fd"" -ignore_readdir_race -lname ""$save_path/sess_\*"" -exec touch -c {}"
find all the jpg files in the directory /ftp/dir which are bigger than 500KB,"find /ftp/dir/ -size +500k -iname ""*.jpg"""
Find files associated with an inode,find . -inum 968746 -print
Find all *.php  files and *.js files/directories  under /home/jul/here excluding /home/jul/here/exclude/* paths,"find /home/jul/here -type f -iname ""*.php"" ! -path ""/home/jul/here/exclude/*"" -o -iname ""*.js"" ! -path ""/home/jul/here/exclude/*"""
Print all files/directories with their sizes under $WHATEVER directory tree,"find $WHATEVER -printf ""%s %p\n"""
Prints total count of lines of all *.php files in a current folder and subfolders.,find . -name '*.php' -type f -exec cat -- {} + | wc -l
Find all directories in 1 level down the current directory,find . -mindepth 1 -maxdepth 1 -type d
"find the file ""MyCProgram.c"" in the current folder","find -iname ""MyCProgram.c"""
find all the file that have not been modified in the last 3 days,find ./ -daystart -mtime +3
find *.gif files under the currently directory and sub-directories and list them using the ls command,find . -name *.gif -exec ls {} \;
"display all the "".c"" files in the current folder excluding those that are present in all the sub directories","find . \ -name ""*.c"" -print"
display all files in the entire file system excluding those that are in the transfer directory,find / -name /transfer -prune -o -print
take all the files in the current folder and pass them as argument to a program,find . -exec program {} +
Convert *.au files to *.wav files using `sox',"find -type f -name '*.au' | awk '{printf ""%s %s\n"",$0,$0"".wav"" }' | xargs sox"
List all files and directories residing in the current directory and below,find | xargs ls
display all non empty directories in current folder,find . \! -empty -type d
"Search directory foo for files containing ""foo/bar"" in their full names",find foo -path foo/bar -print
"display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word ""kt"" followed by a digit",find . -path './kt[0-9] '
display all the tex files in the current folder,find . -name \*.tex
find all the directories in the home folder and make create the directory junk. If any errors  occur discard them.,find ~ -type d -exec mkdir junk {} \; 2> /dev/null
Find all .php files starting from the root directory /,"find / -name ""*.php"""
find all files in the folder /path/to/dir which have been modified between two dates,find /path/to/dir -newermt yyyy-mm-dd ! -newermt yyyy-mm-dd -ls
Find all files/directories under test directory,find test
Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths,"find /home/jul/here -type f -iname ""*.php"" ! -path ""/home/jul/here/exclude/*"" -o -iname ""*.js"" ! -path ""/home/jul/here/exclude/*"""
Find and remove multiple *.txt files,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
Find *.js UTF-8 files with BOM and correct them,find . -iname *.js -type f -exec sed 's/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
Count all the mp3 files in the music user's home and subdirs.,find ~music -type f -iname *.mp3 | wc -l
Find all files with 644 permission and change the permission to 664,find . -type f -perm 644 -exec chmod 664 {} \;
Find all files under current directory,find . -type f
Find all files/directories greater than 100MB and print their list along with their size in /root/big.txt file,find \( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)
display all files in the current folder which are not empty,find . ! -size 0k
Find one file or directory in the current directory whose name matches the pattern given as a variable $a,"find . -maxdepth 1 -name ""$a"" -print -quit"
"search for files that are readable for everybody, have at least on write bit set but are not executable for anybody",find . -perm -a+r -perm /a+w ! -perm /a+x
Find all files/directories under /myfiles that are 2560 bytes in size,find /myfiles -size 5
Serach  in root directory all files which  have more than 2 links.,find / -links +2 -print
"Use ""composer validate"" command on all composer.json files","find . -type f -name ""composer.json"" -exec composer validate {} \;"
"Search for files with ""demo"" in their names and ""sitesearch"" in their path names",find . -iname '*demo*' | grep -i sitesearch
Find files under current directory that are newer than $date_time in regards of modification time,"find . -type f -newermt ""$date_time"""
Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded,"find ""${searchpath}"" -type f -print0 | xargs -0 grep -l -E ""${string1}.*${string2}.*${string3}"""
Show all files that have not been accessed in the $HOME directory for 30 days or more,find $HOME -atime +30
Print the list of regular files in the current directory and all subdirectories,find . -type f
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents,find /data/SpoolIn -name job.history -exec grep -l FAIL {} \+ | wc -l
display all the regular/ normal files in a folder,find src/js -type f
Recursively find the latest modified file in the current directory,find . -type f -print0|xargs -0 ls -drt|tail -n 1
Remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago,find $backup_path/*.sql -mtime +5 -exec rm -f {} \;
Change permissions to 644 for all files in the current directory tree,find . -type f | xargs -I{} chmod -v 644 {}
Find all *.* files under current directory,find . -type f -a -name '*.*'
find all files in the current directory and sub-directories that were accessed after modifying /etc/hosts,find -anewer /etc/hosts
Print a sorted list of the subdirectories of ~/Music,find ~/Music/ -maxdepth 2 -mindepth 2 -type d | sort
Find all broken symlinks under /path/to/search directory,find /path/to/search -type l -xtype l
Find and remove multiple *.mp3 files,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
Remove all empty directories under the current directory and below,find ./ -type d -size 0c -print | xargs rmdir
List all the emptry files in thecurrent directory only.,find . -maxdepth 1 -empty
Search the root directory and its subdirectories for files risiding on NTFS or VFAT filesystems,find / -maxdepth 2 \ 2> /dev/null
Find all directories under /home/me/target_dir_1,find /home/me/target_dir_1 -type d
display all the jpg files in the current folder which belong to the user nobody,find . -name *.jpg -user nobody
Find all empty directories recursively starting from the current one and delete them,find . -type d -empty -print0 | xargs -0 /bin/rmdir
find all files in the current folder which start with pro,find . -name pro\*
Find and print detailed information about all regular files in your home directory and below that have only the group permission set,find . -perm g=r -type f -exec ls -l {} \;
"Execute script ""your_command_here"" passing all regular files from directory tree /target/path as arguments to it",find /target/path -type f -print0 | xargs -0 your_command_here
"Change permissions of all directories in the ~/dir_data directory tree in accordance with mode `a+xr,u+w'","find ~/dir_data -type d -exec chmod a+xr,u+w {} \;"
Search for the case insensitive regex expanded by $2 in all files named $1  under current directory,"find . -name ""$1"" -type f -exec grep -i ""$2"" '{}' \;"
Search the path given as the $absolute_dir_path variable for regular files,"find ""$absolute_dir_path"" -type f -print0"
display the number of lines in all the php files in the current folder,find -name '*php' | xargs cat | wc -l
Find all files in the /var/tmp directory tree with uid=1000,find /var/tmp -uid 1000
"Search the system for directories named ""needle""","find / -type d -name ""needle"""
Find all regular files with the group read permission set in your home directory and below and output detailed information about each file.,find . -perm -g=r -type f -exec ls -l {} \;
list all files in /home/bozo/projects directory tree that were modified exactly one day ago.,find /home/bozo/projects -mtime 1
"find the file with the name ""esxcfg-firewall"" in the current folder",find -print | grep esxcfg-firewall
Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.,find / -fstype ext3 -name zsh -ls
Find all files/directories under current directory and print them with newline as the delimiter,find -print | xargs -d'\n'
Find and delete all hard links in the /home directory to file1,find /home -xdev -samefile file1 -exec rm {} +
Search the current directory recursively for regular files last accessed 2 days ago,find . type -f -atime 2
find the file with inode $inum under the current directory and delete it,find . -inum $inum -exec rm {} \;
"remove all subdirectories named ""CVS"" under current dir",find . -type d -name CVS -exec rm -r {} \;
"Make a list of regular files from the current directory tree that have more than 1 link and view it with the ""less"" pager","find . -type f -noleaf -links +1 -printf ""%n %i %f\t%h\n"" | sort | less"
"list txt files older than 5 days or html files of any age, null separated",find . \( -name '*.txt'  -mtime +5 -o -name '*.html' \) -print0
Search the /home/test directory tree for directories and files called '.ssh',find /home/test -name '.ssh'
List all files in the current directory tree that were last modified more than 60 minutes ago,find -mmin +60
find all the files in the home folder which have been modified in the last 7 days,find $HOME -mtime -7
list all regular files which path is not dir1 or dir2,"find dir -not \( -path ""dir1"" -prune \) -not \( -path ""dir2"" -prune \) -type f"
search  in current directory downwards all files whose status has changed more then 7  days ago,find .  -ctime +7 -print
Truncate all regular files under the current directory,find . -type f -maxdepth 1 -exec sh -c 'cat /dev/null > {}' \;
"Remove all files with names like ""vmware-*.log"" from the current directory tree",find . -name vmware-*.log -print0 | xargs -0 rm
Find all hidden regular files starting from the current directory,"find . -type f -name "".*"""
Copy all files with name pattern $j.sh  under '/tmp/2' directory tree to $i directory,"find ""/tmp/2/"" -iname ""$j.sh"" -exec cp {} ""$i"" \;"
Find all *.err files under current directory that are larger than 5120 bytes in size,"find . -type f -size +10 -name ""*.err"""
Find only files under /etc with the size of 100k-150k,find /etc -size +100k -size -150k
Display the 5 largest files in the current directory and its sub-directories.,find . -type f -exec ls -s {} \; | sort -n -r | head -5
Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory,find /home -iname tecmint.txt
Find all files/directories under current directory tree,find | xargs
Search  all files & directoy from root directory which  are greater then 100M and delete them .,find /  -size +100M -exec rm -rf {} \;
"display all the files in the current folder which are in the path ""./sr*sc""",find . -path './sr*sc'
Delete all files under user's home directory tree that were accessed more than 365 days after their status was changed,find ~ -used +365 -ok rm '{}' ';'
Remove all CVS directories in the current directory tree,find . -type d -name CVS -exec rm -r {} \;
Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding error_log files/directories,find /home/baumerf/public_html/ -mmin -60 -not -name error_log
search for the directory with the name aa in the current folder,find . -type d -name aa
"search for the file, filename.txt in the current folder",find . -name filename.txt
Search directory tree $DIR for *.txt files,"find $DIR -name ""*.txt"" -print"
Recursively finds all folders in a current folder that contain files like '.git'.,find . -name '.git' | xargs dirname
"Replace the occurrences of ""HOGE"" with ""MOGA"" once per each line of the files from the current directory tree, keeping a backup copy of every touched file","find . -type f -print0 | xargs -0 sed -i.bak -e ""s/HOGE/MOGA/"""
display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems,find / -nogroup \ -ls
Delete all files/directories named test under maximum 2 level down the current directory,"find . -maxdepth 2 -name ""test"" -exec rm -rf {} \;"
Remove files that are less than 1MB in size under current directory,find . -type f -size -1M -exec rm {} +
display list of all the regular/normal files in the home folder which are exactly 6579 bytes,find /home/ -type f -size 6579c -exec ls {} \;
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.,"find . -name ""FILE-TO-FIND"" -exec rm -rf {} +"
Find all files under directory tree /path/to/dir whose permissions are not 644,find /path/to/dir ! -perm 0644
Find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern '/tmp/test/*',find /tmp/test/* -daystart -mtime +1
find all of the executable files on your computer,find / -executable
"Search the current directory recursively for .sh files whose names begin with ""new""","find . -name ""new*.sh"""
Create a script to find and delete all backup files older than a certain number of days.,"#!/bin/bash

find . -name '*.bak' -mtime +$1 -delete
echo ""Old backup files deleted."""
"Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx","find . -perm a=rwx,g-w,o-w"
Print all files in the current directory tree as a comma separated list,"find . -type f | paste -d, -s"
Find all files and directories under current directory without crossing over to other partitions,find . -xdev -print0
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,find /home/www/ -type f | xargs perl -pi -e 's/subdomainA\.example\.com/subdomainB.example.com/g'
Find .rm files in the /home/me/download/ directory tree and convert them to the MP3 format,"find /home/me/download/ -type f -name ""*.rm"" -exec ffmpeg -i \{} -sameq \{}.mp3 \; -exec rm \{} \;"
Find all files/directories starting with 'onlyme' in their names under current directory tree in minimum 1 level deep,find . -mindepth 1 -name 'onlyme*'
"Search the current directory tree for files named ""accepted_hits.bam""","find . -name ""accepted_hits.bam"""
Find and remove multiple files such as *.mp3 or *.txt under current directory,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
"Change all files in ""~"" which are owned by the group ""vboxusers"" to be owned by the user group ""kent""",find ~ -group vboxusers -exec chown kent:kent {} \;
unzip and search for a word in all the jar files in the current folder and display the matched file name,"find . -iname '*.jar' -printf ""unzip -c %p | grep -q '<stringWithOrWithoutSpacesToFind>' && echo %p\n"" | sh"
"Execute script ""your_command_here"" for each file from directory tree /target/path passing the filename as an argument to the script",find /target/path -type f -exec your_command_here \{\} \;
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths,"find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90 -printf ""%h\n"" | sort | uniq"
Find *.scm files recursively in the current directory,find . -name '*.scm'
Find all files under $musicdir directory,"find ""$musicdir"" -type f -print"
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" -exec rm {} +"
"Search the current directory recursively for *.txt files with lines that match regular expression ""^string""","find . -name ""*.txt"" -exec egrep -l '^string' {} \;"
print all files in the current directory and all subdirectories,find . -print
Recursively finds all '*.pdf' files in a current folder and removes them.,"find . -name ""*.pdf"" -exec rm {} \;"
Recursively finds all folders in a current folder that contain files like '.git'.,find . -name '.git' | xargs dirname
find all directories named build under the current directory,find . -type d -name build
"Copies all files like ""*foo*"" under the current directory to the '/your/dest' directory.","find . -name ""*foo*"" | sed -e ""s/'/\\\'/g"" -e 's/""/\\""/g' -e 's/ /\\ /g' | xargs cp /your/dest"
list the details of all the directories in the current folder,find . -type d -exec ls -ld {} \;
Find all .mp3 files starting from the current directory and delete them,find . -type f -iname *.mp3 -delete
"search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the ""work"" directory",find /root/ -name 'work' -prune -o -name myfile -type f -print
Count total number of lines in all files below current directory.,find . -type f -exec wc -l {} \; | awk '{ SUM += $0} END { print SUM }'
find all the links in the current folder and following it to the pointed path,find -L /target -type l
"Remove all files in and below the current directory whose names begin with ""not""",find . -name not\* | xargs -d '\n' rm
Remove all directories found in directory tree $LOGDIR that were modified more than 5 days ago,find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
Delete all files that were modified more than 60 days ago under '/path-to-directory' tree,find /path-to-directory -mtime +60 -exec rm -f {} \;
"search for all the jpg files in the folder ""/mnt/hda1/zdjecia/test1/"" and copy these files to the folder  /mnt/hda1/test/<same name as the found file>",find /mnt/hda1/zdjecia/test1/ -iname “*.jpg” -type f -exec cp {} -rv /mnt/hda1/test{} ‘;’
Print the list of files in directory /tmp/a1 recursively,find /tmp/a1
Find all files under 'dir' directory and print their md5 sums into file.txt,find dir -type f | xargs md5sum >> file.txt
Change permissions to 644 of multiple files with permissions 755,find . -perm 755 -exec chmod 644 {} \;
Rename file extension '.andnav' (case insensitive) to '.tile' for all files/directories under current directory tree,"find . -name ""*.andnav"" -exec rename -v 's/\.andnav$/\.tile/i' {} \;"
"Remove from the current directory tree all the regular files which have a dot in their names and contain string ""<img-name>-<width:integer>x<height:integer>.<file-ext> syntax""","find . -name ""*.*"" -type f -exec grep -l '<img-name>-<width:integer>x<height:integer>.<file-ext> syntax' {} \; | xargs rm -f"
display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30*24 hours,find / -size +1000 -mtime +30  -exec ls -l {} \;
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character","find . -regex "".*/my.*p.$"""
"display list of all the hidden directories in the directory ""/dir/to/search/""","find /dir/to/search/ -type d -iname "".*"" -ls"
"Find all files in the current directory tree whose names end with the suffix "".keep.$1"", where $1 is the first command line argument, and remove that suffix","find . -type f -name ""*.keep.$1"" -print0 | xargs -0 rename ""s/\.keep\.$1$//"""
Remove trailing white spaces from all *.py files under dir directory  and keep backups of the originals,find dir -not -path '.git' -iname '*.py' -print0 | xargs -0 sed --in-place=.bak 's/[[:space:]]*$//'.
search for word linux in all the regular/normal files in the folder mail.,"find ~/mail -type f | xargs grep ""Linux"""
Find all $tofind* files/directories under $parentdir,find $parentdir -name $tofind*
"Find all directories in the current one with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -maxdepth 1 -type d -iname ""*linkin park*"" -exec cp -r {} /Users/tommye/Desktop/LP \;"
find files which full path name is /tmp/foo/bar under /tmp/foo directory and print,find /tmp/foo -path /tmp/foo/bar -print
Find all empty directories in the current one and delete them,find . -type d -maxdepth 1 -empty -delete
search for all xml files in current folder and display them,"find . -name ""*.xml"" -exec echo {} \;"
Create a script to find and delete all empty directories in a directory.,"#!/bin/bash

find . -type d -empty -delete
echo ""Empty directories deleted."""
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir,find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
"Locate all files ""needle.txt""","find . -name ""needle.txt"""
find all files in the current folder which end with macs,find -name '*macs'
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find dir1 dir2 dir3 -type f -name ""*.java"" -exec grep -il 'foo' {} \;"
Remove files from the home directory tree that were last accessed more than 100 days ago,find ~ -atime +100 -delete
print all files in the directories except the ./src/emacs directory,find . -wholename './src/emacs' -prune -o -print
display the contents of all the files in the current folder which start with test (case insensitive search),find . -iname '*test*' -exec cat {} \;
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar,find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar
Search the /path directory tree for files having permissions 777,find /path -perm ugo+rwx
Print the first 10 files or directories found in the current directory tree by `find',find | head
display all normal/regular files in current folder in sorted order,find . -type f print0 | sort -r
Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory,"find /etc -print0 -name ""*.txt"" | xargs -I {} -0 mv {} {}.bak"
Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths,"find . -name ""sample*"" | xargs -i echo program {}-out {}"
Find all broken symlinks under /path/to/search directory,find /path/to/search -xtype l
Show the number of regular files in the current directory tree,find . -type f | wc -l
recursively look for files ending in either .py or .py.server,"find . -type f -regex "".*\.\(py\|py\.server\)"""
Print and recursively remove the alphabetically last directory in the current directory,find -mindepth 1 -maxdepth 1 -type d | cut -c 3- | sort -k1n | tail -n 1 | xargs -r echo rm -r
Search the /media/shared directory recursively for MP3 and OGG files,"find /media/shared \( -iname ""*.mp3"" -o -iname ""*.ogg"" \)"
update the permission of all the files in the folder /u/netinst to 500,find /u/netinst -print | xargs chmod 500
display all the files in current folder which have write permission to all the users,find . -perm /222
"Find all ""G*.html"" files modified more than 7 days ago in the current directory tree","find . -mtime +7 -name ""G*.html"""
Find all *.srt files under directory named 'working' and show the first one found,"find working -type f -name ""*.srt"" | head -1"
Find only number of hard link & name of files from long list,"find -type f -iname ""*.txt"" -exec ls -lrt {} \;|awk -F' ' '{print $1 $2  $9}'"
Find all files with '.conf' extension under '/etc' directory going into at most 2 level deep and show the last 10 of them,"find /etc -maxdepth 2 -name ""*.conf"" | tail"
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""",find . \ -o \
display all files in current folder excluding current folder (.),find . \! -name '.'
Find all httpd.conf files in entire file system,find / -name httpd.conf
"Unzip all "".gz"" files in the current directory tree to their respective directories","find . -name ""*.gz"" -execdir gunzip '{}' \;"
Get the disk space used by all *.txt  files/directories under current directory,"find . -name ""*.txt"" -print0 |xargs -0 du -ch | tail -n1"
find files which full path name is /tmp/foo/bar under foo directory and print,find /tmp/foo -path /tmp/foo/bar -print
find all the files that have been modified since the last time we checked,find /etc -newer /var/log/backup.timestamp -print
Find all files under and below /dir that were modified less than 60 minutes ago,find /dir -mmin -60
Save the list of files in the current directory hierarchy separting file names with zeroes,find . -print0 > mypipe
"Find all filenames ending with .c in the current directory tree, case insensitive","find -iname ""*.c"""
display the name of all directories in the current folder and do not search in sub directories,find . -type d -maxdepth 1 -exec basename {} \;
search normal files called ' banckup '  from /usr directory downward and print them.,find /usr -type f -name backup -print
"Unzip all files that match ""*.gz"" in the current directory and subdirectories to stdout and search for ""test""","find . -name ""*.gz"" -exec zcat ""{}"" + |grep ""test"""
"Find a file ""foo.bar"" without showing ""Permission Denied"" messages",find / -name foo.bar -print 2>/dev/null
"display all the regular files in the current folder excluding those that are present in the path ""git""","find . -path ""*.git*"" -prune -o -type f -print"
Find all read only files in  /home directory,find /home -type f -perm /u=r
Find all regular files named 'Chapter1' under current directory tree,find . -name Chapter1 -type f -print
search all the files in the current folder using regex excluding those that are present in the folder test,"find . -name test -prune -o -regex "".*/my.*p.$"""
Find files/directories named blah (case insensitive) under current directory,find ./ -iname blah
Remove all empty sub-directories under current directory,find . -depth  -type d  -empty -exec rmdir {} \;
"List regular files in current directory with read, write and execute permission for all users and also show the permissions",find . -type f  -perm a=rwx -exec ls -l {} \;
list all files under .performance_test directory except .performance_test/prune_me directory,"find "".performance_test"" -path "".performance_test/prune_me"" -prune -o -exec bash -c 'echo ""$0""' {} \;"
"Search the current directory tree for files whose names start with ""f""",find . -name f* -print
find all the files with the name september ( case insensitive ),find -iname september
Find all files/directories named 'Waldo' under 'Books' directory tree that is located in user's home directory,find ~/Books -name Waldo
find all the directories in the home folder do not search in sub directories,find /home -maxdepth 1 -type d
"Change permissions of all files ending "".php"" under the current directory to 755 and print a count of modified files","find . -name ""*.php"" -exec chmod 755 {} + -printf '.' | wc -c"
"Find all regular files in the current directory tree whose names are ""YourProgramName"", change to the directories they are in, and execute them with parameter ""YourParameterFile""",find . -type f -name YourProgramName -execdir ./YourProgramName YourParameterFile \;
change the group of all directories in the current folder,find . -type d -exec chgrp usergroup {} \;
"Search the ""test1"" directory recursively for regular files named ""textfile.txt""",find test1 -type f -name 'textfile.txt' -print
Print the names of all regular files in the current directory tree,find . -type f -exec echo {} \;
find all files which name contain 'foo' and path is not dir1 or dir2,"find ! -path ""dir1"" ! -path ""dir2"" -name ""*foo*"""
Find writable regular files in the current directory,find -type f -maxdepth 1 -writable
"search for all the files in the current folder which have the word ""-GHBAG-"" and display the move command for replacing the word ""GHBAG"" in the file names to ""stream-agg""",find . -name '*-GHBAG-*' -exec bash -c 'echo mv $0 ${0/GHBAG/stream-agg}' {} \;
show all the files  in current directory,find .
"Force create a symbolc link named ""/usr/local/bin/fpt"" to ""/usr/local/bin/findpdftext""","sudo ln -s -f ""/usr/local/bin/findpdftext"" ""/usr/local/bin/fpt"""
Find all Read Only files in entire file system and show a few lines of output from the beginning,find / -perm /u=r | head
Find all files/directories named 'query'  under current directory,"find -iname ""query"""
Print the full path of a file under the current working directory with inode number specified on standard input,"xargs -n 1 -I '{}' find ""$"" -type f -inum '{}' -print"
"search for files in the current folder which start with ""myfile"" ( case insensitive search )",find . -iname 'MyFile*'
Search everywhere for a file called `httpd.conf' that is newer than /etc/apache-perl/httpd.conf,find / -name httpd.conf -newer /etc/apache-perl/httpd.conf
"display all normal/regular files in the folder ""pathfolder""",find pathfolder -type f
Find all subdirectories of the current directory except hidden ones,"find -maxdepth 1 -type d ! -name "".*"""
"Search for a pattern ""can't"" in all the files with the name ""file-containing-can't"" in the current directory tree","find . -name ""file-containing-can't"" -exec grep ""can't"" '{}' \; -print"
find all the files in the current folder that are modified after the modification date of a file,find . -newer document -print
"display all files in the directory ""dir"" which have been changed in the last 60 minutes",find /dir -cmin -60
Find all $1 files/directories under current directory and enter into the parent directory of the first one found,cd $(find . -name $1 | xargs dirname)
"sort each file in the bills directory, leaving the output in that file name with .sorted appended",find bills -type f -execdir sort -o '{}.sorted' '{}' ';'
Find files under /usr that are newer than the first file `FirstFile',find /usr -newer /usr/FirstFile -print
Print the file names along with their sizes under current directory tree,"find . -type f -printf ""%f %s\n"""
Find and show all files in the current directory tree that are smaller than 500 kB,find . -size -500k
find files in home directory that names are game,find ~ -name game
"Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in "".log""","sudo find / -xdev -type f -size +100000 -name ""*.log"" -exec gzip {} \; -exec echo {} \;"
search for a word in all the files in the current directory,find . -exec grep chrome {} +
Delete all regular files named 'FindCommandExamples.txt' under current directory tree,"find . -type f -name ""FindCommandExamples.txt"" -exec rm -f {} \;"
Find and remove all .core files,"find / -name ""*.core"" -print -exec rm {} \;"
Find all files that belongs to user Tecmint under /home directory,find /home -user tecmint
find all the files in home folder which have been modified in the last 24 hours,find $HOME -mtime -1
Remove trailing white spaces from all *.rb files under current directory,find . -name '*.rb' | xargs -I{} sed -i '' 's/[[:space:]]*$//g' {}
Find files under /usr that are newer than the first file `FirstFile',find /usr -newer /usr/FirstFile -print
Find all SGID set files under current directory and show a few lines of output from the beginning,find . -perm /g+s | head
"Print a colon-separated list of all directories from the $root directory tree, except those matching pattern "".[a-z]*""","find ""$root"" -name "".[a-z]*"" -prune -o -type d -printf '%p:'"
"find all the files in the current folder and search for the word ""vps admin"" in them.","find . -exec grep -i ""vds admin"" {} \;"
Find all broken symlinks including cyclic links under /path/to/search directory,find /path/to/search -type l -exec test ! -e {} \; -print
Find all *.m4a files under /home/family/Music directory and convert them to ogg,"find /home/family/Music -name '*.m4a' -exec sh -c 'ffmpeg -i ""$0"" -acodec libvorbis -aq 6 -vn -ac 2 ""${0%.m4a}.ogg""' '{}' \;"
"Find all files matching the pattern ""${pattern}"" in their name and execute ${my_command} for each of them with the file path as argument","find ${directory} -name ""${pattern}"" -print0 | xargs -0 ${my_command}"
Copy all *.data files under /source_path to /target_path,find /source_path -name *.data -exec cp {} /target_path \;
search all undo files in the current folder and calculate the total size of them,find -name '*.undo' -exec wc -c {} + | tail -n 1
search for a specific word in all files beginning with a specific word in the current directory,find -name 'file_*' -follow -type f -exec zcat {} \; | agrep -dEOE 'grep'
display all the html files in the current folder that have been modified exactly 7*24 hours ago,"find . -mtime 7 -name ""*.html"" -print"
"find all the files in the current directory with the name ""wagoneer"" which are in the current device.","find . -xdev -name ""wagoneer*"" -print"
find all the java script files in a folder and save the list to a file,"find src/js -type f -name ""*.js"" > list.txt"
"find foo, Foo, FOo, FOO, etc., but only dirs",find . -iname foo -type d
Find all symbolic links under the current folder and below,find –L –xtype l
Archive all filepattern-*2009* files/directories under data/ into 2009.tar,find data/ -name 'filepattern-*2009*' -exec tar uf 2009.tar '{}' +
Find all files/directories that were modified after February 1st under '/usr' directory tree,"find /usr -newermt ""Feb 1"""
"Find all regular files in the ""aaa"" directory",find aaa/ -maxdepth 1 -type f
Find image files and move them to the pictures directory,find ~/Desktop -name “*.jpg” -o -name “*.gif” -o -name “*.png” -print0 | xargs -0 mv –target-directory ~/Pictures
find all gzip files in a folder,"find /home/foo -name ""*.gz"""
Find all files under and below /dir that were changed or created less than 60 minutes ago,find /dir -cmin -60
List all files under current directory with their paths and sizes,"find . -type f |xargs ls -lS |head -20 | awk '{print $9, $5}'"
Find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern '/tmp/test/*',find /tmp/test/* -daystart -mtime -0
Print a list of all regular files residing in the current directory,find . -maxdepth 1 -type f -print0
Find all files under current directory,find . -type f -print
search for a word in all c files in the current folder,find . -name '*.c' | xargs grep 'stdlib.h'
Delete all files that have not been accessed in the last 30 days,find . -type f -atime +30 -exec rm {} \;
"search for the file ""file"" in the current folder excluding those in the sub directory "".git""",find . -path ./.git  -prune -o -name file  -print
Find files and directories with group id 1003,find . -gid 1003
List all files under current directory that are greater than 10MB in size,find . -size +10M -exec ls -ld {} \;
"Print the contents of all "".py"" on the file system as input to ""tqdm --unit loc --unit_scale True | wc -l""",find / -name '*.py' -exec cat \{} \; | tqdm --unit loc --unit_scale True | wc -l
"display all the java, xml and action scripts  files in a directory",find dir1 -type f -a \
Search for files/directories which are writable by both their owner and their group,find . -perm -220
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory,find ${userdir}/${i}/incoming -mtime +2 -type f -ls
change the current working directory to /some/dir and display all normal/regular files,"cd ""/some/dir"" && find . -type f"
find all the directories in the current directory which dont have the execute permission.,find -type d ! -perm -111
"Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command","find -maxdepth 1 -name '*.sql' -print0 \; | xargs -0 sed -e 's/ , );/1,1);/g'  | mysql -D ootp"
Find all 777 permission files and use chmod command to set permissions to 644,find / -type f -perm 0777 -print -exec chmod 644 {} \;
Print 'huzzah' if /some/dir/ is empty,"find /some/dir/ -maxdepth 0 -empty -exec echo ""huzzah"" \;"
Search /etc for files modified within the last day,find /etc -type f -ctime -1
"Find all regular files in the current directory tree whose names end with "".DS_Store"" and delete them",find . -type f -name '*.DS_Store' -ls -delete
Find all files whose permission are 777,find / -type f -perm 777
"find all regular/normal files in the folder ""myfiles"" which have read and write permission to the other users",find /myfiles -type f -perm -o+rw
list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user,find / -path /proc -prune -o -perm -2 ! -type l -ls
"search for all the regular/normal files in the current folder which start with ""my""",find . -name 'my*' -type f
Find files/directories modified within the last day under /etc,find /etc -type f -ctime -1
Runs `file' on every file in or below the current directory.,find . -type f -exec file '{}' \;
Remove files from the file system that are owned by nobody,find / -nouser -exec rm {} \;
find all the files in the folder /home which are exactly of size 10MB,find /home -size 10M
Find all PHP files under current directory that contain only one line,find -name *.php -print | xargs -L1 awk 'NR>1{exit} END{if(NR==1) print FILENAME}'
search for a word in all the shell scripts in the current folder and display the matched files.,"find . -type f -name ""*.sh"" -exec grep -l landoflinux {} \;"
Search for the regex 'pattern_to_search' in all files under '/directory/containing/files' and show the matched lines as well as the file names,find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +
find all python files in current folder and test if there is a makefile in all these fodlers where these are present,find . -name '*.py' -exec bash -c 'test -f $/Makefile' -- {} \; -print
Set permissions to 755 for every subdirectory of the current directory,find  . -type d -mindepth 1 -print -exec chmod 755 {}/* \;
Find all 0644 permission files/directories under current directory tree and show only the first 10 of them,find . -perm 0644 | head
Make regular files from debian/fglrx-amdcccle/usr/lib/fglrx/bin/ executable for all,find debian/fglrx-amdcccle/usr/lib/fglrx/bin/ -type f | xargs chmod a+x
find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours ),find ./ -daystart -mtime -3
"display all the files in the current folder which are present in the path ""./src/emacs""",find . -path './src/emacs' -prune -o -print
"Find all files under current directory with their size and paths, reverse sort them numerically, then print the first 4 entries by removing all matches to the regex [0-9]+\s from each line of the output","find -type f -printf ""%s %p\n"" | sort -nr | head -n 4 | sed -r 's/[0-9]+\s//g'"
Find all *.txt files/directories under current directory,find -name \*.txt
search for all the directories starting with the word in the current folder and give them as input to the script fixmbox,find . -name 'm?' -type d -exec ./fixmbox {} +
Remove all files that are not newer than Jul 01 by modification time,"find /file/path ! -newermt ""Jul 01"" -type f -print0 | xargs -0 rm"
Find all Read Only files in entire file system and show a few lines of output from the beginning,find / -perm /u=r | head
Find all xml files under current directory,find . -name '*.xml'
Find all files/directories named 'test' under current directory tree,find . -name test
"delete all the trace files ("".trc"") which have not been been accessed in the last 30*24 hours",find /dirpath \( -name \*.trc -a -mtime +30 \) -exec rm {} \;
Find all directories under 'test' directory tree that match the regex '.*/course[0-9.]*' in their paths,find test -type d -regex '.*/course[0-9.]*'
Remove all .gz files in the current directory tree,"find . -name '*.gz' -type f -printf '""%p""\n' | xargs rm -f"
find all files in the home folder that are modified in the last 24 hours,find $HOME -mtime -1
"Search /usr/src for filenames not ending in ""*,v""",find /usr/src ! \ '{}' \; -print
Print the list of directories that are present in the /mnt/raid directory tree,find /mnt/raid -type d
"search for the directory ""config"" in the current folder and change directory to the first instance of the search",cd $(find . -name config -type d | sed 1q)
Find all .txt files in current  directory and rename with  .html .,"find  . -type f -name ""*.txt"" -exec mv {} `basename {} .html` .html \;"
Remove all regular files from the current directory tree that were modified between August 10th and August 17th,"find . -type f -newermt ""Aug 10"" ! -newermt ""Aug 17"" -exec rm {} \;"
Remove files erroneously named `-F',"find . -name ""-F"" -exec rm {} \;"
Search the /storage/sdcard0/tencent/MicroMsg/ directory tree for JPG files,find  /storage/sdcard0/tencent/MicroMsg/ -type f  -iname '*.jpg' -print0
Find all files owned by group `group2',find / -group group2
"Find all files matching ""abc*"" in the current directory and append ""\tok""",find . -name 'abc*' | sed 's/$/\tok/' | column -t
Find broken symlinks in current directory,find -L -type l
Find *.c and *.sh files,find . -type f \
Replace all ocurrences of '<title>' with 'sblmtitle\n<title>' in all the regular files with '.html' extension under current directory tree,find ./ -type f -name '*.html' | xargs sed -i 's/<title>/sblmtitle\n<title>/g'
Print all file/directory names without white space safety under the /proc directory,find /proc | xargs
"find all the "".jpg"" files in current folder and display their count",find ./ -name '*.jpg' -type f | wc -l
find all the files in the entire filesystem which belong to the user root and display the ten files.,find / -user root | head
Remove all \*~ files under dir,find dir -name \\*~ -exec rm {} +
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -execdir /bin/rm {} \+
Find all .gz archives in the current directory tree and check if they are valid,find . -name *.gz -exec gunzip '{}' \;
List recursively all files and directories in /var/www and pass the result to the `more' pager,find /var/www | more
Find all regular files that were modified $FTIME days ago under current directory tree,find . -type f -mtime $FTIME
Check if the $somedir directory is empty,"find ""$somedir"" -maxdepth 0 -empty -exec echo {} is empty. \;"
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3,"find / -iname ""*.mp3"" -type f -exec /bin/mv {} /mnt/mp3 \;"
"search for the directory ""mysql"" in the entire file system",find / -name mysql -type d
Find all files in the current directory tree whose names begin with '-',find . -name '[-]*'
Prints long listing of a last modified file in a current folder.,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" "" | sed 's/.*/""&""/' | xargs ls -l"
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find /path/to/dir -type f | xargs grep -l ""foo"""
find all the files in the file system which have been changed 1 minute ago.,find / -newerct '1	minute ago' -print
find all the files that have been modified today,find . -type f -daystart -mtime 0
List all files and directories residing in the current directory and below,find | xargs ls
Get only the latest version of the file 'filename' under current directory,find . -name 'filename' | xargs -r ls -tc | head -n1
"Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, ignoring binary files.","find / -type f -exec grep -l ""text-to-find-here"" {} \;"
Find all directories with space in their names under current directory and rename them by replacing all spaces with _,"find -name ""* *"" -type d | rename 's/ /_/g'"
display all the files in the current folder along with their timestamps and sort them and save them in the file1,find -printf '%p %T@\n' | sort > file1
"search for all the php files in the folder ""/home/mywebsite"" which have been changed in the last 30*24 hours","find /home/mywebsite -type f -name ""*.php"" -ctime -30"
delete all the empty in the current folder and all its sub directories,find . -depth -type d -empty -exec rmdir {} \;
find all files in the current folder and search for a word in them.,"find . -type f -exec grep ""applicationX"" {} \;"
"display all php,xml and phtml files in current folder",find . -name '*.php' -o -name '*.xml' -o -name '*.phtml'
Find regular files that have SUID or SGID set,find / -perm +6000 -type f
Find all files/directories under current directory and set their permission to 775,find . -type f -exec chmod 775 {} \;
Search for files/directories named 'fileName.txt' under current directory tree without traversing into './ignored_directory',find . -path ./ignored_directory -prune -o -name fileName.txt -print
"Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names",find -type f -name 'error.[0-9]*' -o -name 'access.[0-9]*' -o -name 'error_log.[0-9]*' -o -name 'access_log.[0-9]*' -o -name 'mod_jk.log.[0-9]*'
Find all files/directories that start with 'test' in their names under current directory tree,find . -name 'test*'
Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.,"find . -name ""*.rb"" -type f -print0 | xargs -0 wc -l"
Find all files in $dir directory without going into sub-directories and print only their names preceded by 3 spaces,"find ""$dir"" -maxdepth 1 -type f | sed 's#.*/#   #'"
"Decompresses each of ""*bz2"" files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields.","find . -name ""*.bz2"" -print0 | xargs -I{} -0 bzip2 -dc {} | cut -f, -d4"
"Execute ""utility"" for each file in the current directory tree passing the pathname as a command line argument",find . -exec utility \;
Print a list of all regular files residing in the current directory,find . -maxdepth 1 -type f -print0
display all regular/normal files in current folder,find . -type f
Search for files/directories which are writable by both their owner and their group,"find . -perm -g+w,u+w"
Print '-ok is an action so an implicit -print is not applied' with confirmation from the user for each file or directory found by the name 'file' under current directory tree,find -name file -ok echo '-ok is an action so an implicit -print is not applied' \;
search for all the files which have not been modified in the last 6 months  in current folder and display the total disk usage of them in MB,find ~/tmp -type f -mtime 0 -exec du -ks {} \; | cut -f1 | awk '{total=total+$1}END{print total/1024}'
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find /the/path -depth -name ""*.abc"" -exec rename 's/\.abc$/.edefg/' {} +"
display all the files in the home folder which are smaller than 500 bytes,find ~ -size -500b
Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories,"find ""$1"" -perm -u+w -print0 | xargs chmod g+w"
Find *.java files under current directory and compress them to myfile.tar  (unsafe),"find . -type f -name ""*.java"" | xargs    tar cvf myfile.tar"
delete all the files in the current folder which do not belong to any user,find . -nouser | xargs rm
"Find files named ""blabla"" in the current directory tree and print the number of lines in each of them","find ./ -name ""blabla"" -exec wc -l {} ;"
display all the directories in the folder /usr/share,find /usr/share -type d
change the permission of all php files in current folder,"find . -name ""*.php"" -print0 -fprint > | xargs -0 chmod 755"
find files in /tmp directory that named are core and deletes them,find /tmp -name core -type f -print | xargs /bin/rm -f
Find all files in $dir directory without going into sub-directories,"find ""$dir"" -maxdepth 1 -type f"
search all jpg files in current folder,"find . -type f -name ""*.jpg"""
"Find all *.cpp files in the current directory tree that contain ""sub"" in their names","find . -name ""*sub*.cpp"""
"Find files named ""AssemblyInfo.cs"" in the current directory and below, and run ""git diff"" on them","find . -name ""AssemblyInfo.cs"" -print0 | xargs -0 git diff --"
Find all the files which are accessed in last 1 hour,find / -amin -60
Recursively changes group ownership of everything within a current folder and having group 'X_GNAME' to 'Y_GNAME'.,find . -group X_GNAME -exec chgrp Y_GNAME {} +
Print file size with the file name,find . -name '*.ear' -exec du -h {} \;
Find recursively all regular files changed within the last 5 minutes starting from directory b,find b -type f -cmin -5
display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder,find . -name test -prune
Find all m? directories under current directory and run ./fixmbox with all of the directory paths as its arguments,find . -name 'm?' -type d -exec ./fixmbox {} +
display all file names in current folder,find . -printf '%p '
Count the number of lines in each .java file in the current directory tree,"find . -name ""*.java"" -exec wc -l {} \;"
change the group of all the files in the file system which belong to the group with the gid 999,find / -group 999 -exec chgrp NEWGROUP {} \;
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found,cd `find . -name Subscription.java | xargs dirname`
Find all directories under dir whose names are 33 characters long,find dir -name '?????????????????????????????????'
"find all the files ending with ""clj"" in the current folder and search for a pattern",find . -name *.clj | xargs grep -r resources
"Find all files in the current directory tree whose pathnames match pattern ""./sr*sc""","find . -path ""./sr*sc"""
Print the list of all files under the current directory and below,find .
Find and delete all hard links in the /home directory to file1,find /home -xdev -samefile file1 -print0 | xargs -0 rm
Find all files named `file1' starting from /,find / -name file1
Find all files/directories that are not newer than Jul 01 by modification time,"find /file/path ! -newermt ""Jul 01"""
display all the files in the current folder.,find .
"Remove the ""^M"" characters from all *.ext files under /home directory","find /home -type f -name ""*.ext"" -exec sed -i -e ""s/\x0D$//g"" {} \;"
Find all *.rb files/directories under current directory,find . -name '*.rb'
display all the details of empty files in current folder,find . -size 0 -printf '%M %n %u %g %s %Tb\n \b%Td %Tk:%TM %p\n'
find non-hidden files  that were are modified in the last 15 minutes.,find . -mmin -15 \
search for all the text files and display the long listing of these files from that directory,"find . -name ""*.txt"" -execdir ls -la {} "";"""
find all *.java files/directories under current directory,find . -name  \*.java
archive all the normal/regular files in the current directory which have been modified in the last 24 hours.,"find . -mtime -1 -type f -exec tar rvf ""$archive.tar"" '{}' \;"
Search the current directory recursively for regular files with the read permission set for everybody,find -type f ! -perm -444
"Get the number of ""use"" statements in all PHP files, ordered","find . -type f -name ""*.php"" -exec grep --with-filename -c ""^use "" {} \; | sort -t "":"" -k 2 -n -r"
"find all the files in current folder ending with ""ini"" and display all files which contain several patterns","find . -name *.ini -exec sh -c ""grep -q PROJECT_A {} && grep -q CONFIG_A {} && echo {}"" \;"
delete all the directories empty directories in the current folder,find . -type d -empty -delete
Show the list of directories in the /mnt/raid directory tree,find /mnt/raid -type d -print
Change permissions to 644 recursively only for files,find . -type f -exec chmod 644 {} \;
Find all 400 permission files under /data directory,find /data -type f -perm 400 -print
find the MyCProgram.c  under the current directory and run the md5sum command against it,"find -iname ""MyCProgram.c"" -exec md5sum {} \;"
Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 20MB in size,find $HOME -iname '*.ogg' -size +20M
Find all .js files in the current directory tree that do not contain a whitespace,find . -type f -name '*.js' \( -exec grep -q '[[:space:]]' {} \; -o -print \)
Find all *.pdf.marker files under ${INPUT_LOCATION} and move them to ${OUTPUT_LOCATION} also move any *.pdf files with the same name under current directory to ${OUTPUT_LOCATION},"find ${INPUT_LOCATION}/ -name ""*.pdf.marker"" | xargs -I file mv file $ ${OUTPUT_LOCATION}/."
explicitly list all files in the current directory,find . -print
delete all the regular files in the temp folder which have not been modified in the last 24 hours,find /tmp/ -type f -mtime +1 -exec rm {} \;
Find all *.rb  files under current directory and count their line numbers ensuring white space safety on file name/path.,"find . -name ""*.rb"" -type f -print0 | xargs -0 wc -l"
remove all the files in the current working directory which have a specifc inode number,find . -inum $inum -exec rm {} \;
Delete all empty directories under current directory,find -type d -empty
Create symlinks to all  /home/folder1/*.txt files and 'folder1_' directory with the same name in a target directory named '+',"find /home/folder1/*.txt -type f -exec ln -s {} ""folder1_"" +\;"
Find all directories name nasa in the current directory and below.,find . -name nasa -type d
Show the last 10 .conf files found by `find' in the /etc directory,"find /etc -maxdepth 1 -name ""*.conf"" | tail"
find file end with  '.txt' in current directory.,"find . -name ""*.txt"""
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f -exec ls -l {} \;
"Search the current directory tree for files containing ""bash"" in their names","find . -name ""*bash*"" | xargs"
Find files in the current directory tree of size between 700k and 1000k,find . \( -size +700k -and -size -1000k \)
"display all the regular files in current folder excluding all the directories and all the sub directories having ""normal"" in their name","find . \( \ -o -path ""*normal*"" \) -prune -o \ -print"
Print the names of all files and directories in the current directory tree,find . -print
Add '.avi' extension to all files/directories with '.mkv' extension under '/volume1/uploads' directory tree,"find /volume1/uploads -name ""*.mkv"" -exec mv \{\} \{\}.avi \;"
find all the normal/regular files in the current directory,find -type f
display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files,find . -type f \ -mtime +500 -exec ls {} \;
Search for the regex ... in the manual of the find command,man find | grep ...
"List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin",find . -name bin -prune -o -name src -prune -o -type f -print | xargs egrep -il '^From:.*unique sender'
List the directory paths of all file.ext files under present working directory,find `pwd` -name file.ext |xargs -l1 dirname
Delete all empty directories under root,find root -type -d -empty -delete
search for a shell script in the current folder and display the current folder path but search from the sub directories,find . -name onlyme.sh -execdir pwd \;
search for all regular/normal files in current folder and display all the files which contain 16 lines,find . -type f -print0 | xargs -0 grep -cH '' | awk -F: '$2==16'
Search the /path directory tree for files that do not have a valid user or group,find /path -nouser -or -nogroup
find files ending with .jpg,find . -name '*.jpg' -print ./bar/foo.jpg
"lists txt or html files older than 5 days, null separated",find . \( -name '*.txt' -o -name '*.html' \) -mtime +5 -print0
Find files/directories writable by group and others under the /path directory,find /path -perm -022
Remove all *.txt files in the home directory tree with confirmation,find $HOME/. -name *.txt -ok rm {} \;
"Remove all directories called ""test"" from the current directory tree","find -path ""*/test/*"" -delete"
find all the patch files in current folder and copy them to separate folder patches,find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches/
copy all the regular files in the current directory to the temporary diectory.,find . -type f -exec cp {} /tmp +
excute script makeallsizes with all '*.jpg' file under originals directory in 2 processes parallelly,find originals -name '*.jpg' | xargs -1 -P 2 makeallsizes
Count the number of files/directories with '.php' extension under current directory tree and change the permissions to 755,"find . -name ""*.php"" -exec chmod 755 {} \; -exec /bin/echo {} \; | wc -l"
display all instances  of the file tkConfig.sh in the folder /usr,find /usr -name tkConfig.sh
create backup of all the text files  present in the current folder,"find -name ""*.txt"" cp {} {}.bkup \;"
"Search .c and .h files in the current directory tree for ""expr""",find . -name '*.[ch]' | xargs grep -E 'expr'
"Find all directories under $FOLDER, take the first fields (dot  as the delimiter) from their timestamps and reverse sort them numerically","find ""$FOLDER"" -type d -printf ""%T@\n"" | cut -f 1 -d . | sort -nr"
Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes,find /your/dir -type f -size +5M -exec du -h '{}' + | sort -hr
Find all files with the SUID bit set beginning with the root directory,find / -perm -u+s
find all the files which have not been modified in the last 1 year and display the total disk usage of them  in GB,"find . -type f -mtime +356 -printf '%s\n'  | awk '{a+=$1;} END {printf ""%.1f GB\n"", a/2**30;}'"
"Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",find ~/code -name '.*' -prune -o -type d -printf ':%p'
find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1,find . -name \? -mtime -1
change the permission of all the rpm files in the entire file system to 755,find / -name *.rpm -exec chmod 755 '{}' \;
Update timestamps of all files in entire filesystem which are not newer than /tmp/timestamp,find / ! -newer /tmp/timestamp -exec touch {} \;
Search the /mnt/raid/upload directory tree for files that have not been modified within the last 5 days,find /mnt/raid/upload -mtime +5 -print
"Find .java files in the current directory tree that contain 'TODO', and print their names","find . -name ""*.java"" -exec grep -Hin TODO {} + | basename `cut -d "":"" -f 1`"
Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable,full_backup_dir=$(find . -depth \ -prune -o -mtime -1 -print)
delete all the files in the current folder which are bigger than 1KB,find . -size +1024 ?print|xargs -i rm \;
"Find files in the current directory tree whose pathnames contain ""sub""","find ./ | grep ""sub"""
"Replace ""foo"" with ""bar"" in all files in the current directory tree except hidden ones",find . -type f -not -name “.*” -print | xargs sed -i ‘s/foo/bar/g’
Search for 'Processed Files' in all $srch*  files under current directory run the sed script 'N;s/\n/\2 \1/' on the output,"find . -iname ""$srch*"" -exec grep ""Processed Files"" {} \; -print| sed -r 'N;s/\n/\2 \1/'"
Create a script to find and delete all empty files in a directory.,"#!/bin/bash

find . -type f -empty -delete
echo ""Empty files deleted."""
Find all directories in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique paths,find /var/www/html/zip/data -type d -mtime +90 | uniq
create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files,find . -name .snapshot -prune -o \ | cpio -pmd0 /dest-dir
"Search for all files named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.",find . -iname foo -type f
Find files that don’t have 644 permissions,find / -type f ! -perm 644
"Check all .txt files whose names may contain spaces whether they contain ""needle""","find . -type f -iname ""*.txt"" -print0 | xargs -0 grep ""needle"""
"display all the java, xml and action scripts (.as) files in a directory","find dir1 -type f -a \( -name ""*.java"" -o -name ""*.as"" -o -name ""*.xml"" \)"
Find all regular files under current directory tree that contain 'some text' in their names excluding paths that contain dot files/directories,find . -not -path '*/\.*' -type f -name '*some text*'
"Remove all files matching the pattern *[+{;""\\=?~<>&*|$ ]* under current directory","find . -name '*[+{;""\\=?~<>&*|$ ]*' -exec rm -f '{}' \;"
Find user daniel's files of type jpeg,find . -user daniel -type f -name *.jpg
Search the current directory tree for regular files omitting directory `omit-directory',find . -name omit-directory -prune -o -type f
find all the files that have been modified in the last 24 hours,find . -type f -mtime -1
Rename all *$lower1* files under current directory without descending into .git directory by replacing the first occurrence of $lower1 with $lower2 in their paths,"find . -name .git -prune -o type f -name ""*$lower1*"" -exec mmv ""*$lower1*"" ""#1$lower2#2"" {} +"
"Search all regular files in the /var/log directory tree for string ""19:26""",find /var/log/ -type f -exec grep -H ‘19:26′ {} \;
Remove files erroneously named `-F',"find . -name ""-F"" -exec rm {} \;"
"Recursively search current directory for all files with name ending with "".t1"", change this to .t2","find . -name ""*.t1"" -exec rename 's/\.t1$/.t2/' '{}' \;"
display all the files in the home folder excluding directories which have been modified in the last 24 hours,find /home/ -mtime -1 \! -type d
Find all regular files starting from level 3 of directory tree ~/container and move them one level up,"find ~/container  -mindepth 3 -type f | while read file; do mv ""$file"" ""$/..""; done"
Look for `regexp' in binary files,find .  -type f -print|xargs file|grep -i text|cut -fl -d:    | xargs grep regexp
display all the java script files in the current folder,"find . -name ""*.js"""
find all the png files in the current folder which are present in the pattern list search .txt,find . -name '*.png' | grep -f search.txt
Count the number of regular files with 755 permission under current directory tree,find . -type f -perm 755 | wc -l
Search for 'Processed Files' in all $srch* (case insensitive) files under current directory,"find . -iname ""$srch*"" -exec grep ""Processed Files"" {} \; -print"
find all the files in the entire file system that have been changed exactly  60 days  and display ten files,find / -cmin -60 | head
"FInd all .txt files from current directory , Redirecting errors to /dev/null","find . -name ""*.txt"" 2>>/dev/null"
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -print0 | xargs -0 /bin/rm
Delete all files in the $DIR directory that have not been accessed in 5 or more days.,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
Find all 664 permission files/drectories under current directory tree,find . -perm -664
search for a pattern in all the files in the current folder,find . | xargs grep <string-to-find>
Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename,find . -exec env f={} somecommand \;
Search the directory given as variable $d for empty subdirectories,"find ""$d"" -mindepth 1 -prune -empty"
Save the list of *.html files in the current directory tree to html_files.txt,"find . -type f -name ""*.html"" > html_files.txt"
display top 11 files along with the last access date for all the files in the file system,"find / -type f -printf ""\n%AD %AT %p"" | head -n 11"
Change the ownership of all aluno1's files in the current directory and below to aluno2,find . -user aluno1 -exec chown aluno2 {}
Recursively removes all files like '*.pyc' in a current folder.,"find . -name ""*.pyc""|xargs rm -rf"
Locate OGG files under the home directory larger than 100 megabytes,find $HOME -iname '*.ogg' -size +100M
displays all files in the current directory,find .
Print the names of all files and directories in the current directory tree,find .
"find all the files in the home folder which end with "".tex""",find ~ -iname '*.tex'
Remove all *.m4a files in the current directory and its subdirectories,"find . -type f -name '*.m4a' -exec bash -c 'rm ""$0""' '{}' \;"
Print the list of all files owned by a specific user within a directory.,"#!/bin/bash

user=""username""

find /path/to/your/directory -user ""$user"""
Search for 'example' in all regular files under current directory tree,"find . -type f -print | xargs grep ""example"""
"Search the current directory tree for regular files modified within the past 24 hours whose names do not end with "".DS_Store""",find . -mtime -1 ! -name '.DS_Store' -type f -printf '%f\n'
Look for *log files in directories at most three levels down the directory tree,"find / -maxdepth 3  -name ""*log"""
List all files in the current directory tree that were last modified yesterday or later,find -newermt yesterday -ls
Find all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"""
Search for 'pattern_to_search' in all regular files with '.txt' extension under '/directory/containing/files' and show the matched lines along with filenames,"find /directory/containing/files -type f -name ""*.txt"" -exec grep -H 'pattern_to_search' {} +"
find all files that do not have execute permission to all,find . -type d ! -perm -111
Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names,find -type d -a ! -name '.?*' -o ! -prune
Search the current directory tree for *bash* files printing them on a single line,"find . -name ""*bash*"" | xargs"
Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories,find $1 -perm -u+w -exec chmod g+w {} \;
Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file while sending anything printed to stderr to /dev/null.,find / -fstype ext3 -name zsh -ls 2> /dev/null
Search the home directory tree for regular files modified yesterday,find ~ -daystart -type f -mtime 1
Remove all broken symlinks from the /usr/ports/packages directory tree,find -L /usr/ports/packages -type l -delete
Find all regular files in the /path/to/base/dir tree,find /path/to/base/dir -type f
Find files owned by nonexistent users,find / -nouser -print
Remove all files whose names start with spam-,find . -name 'spam-*' | xargs rm
"list broken symbolic links under ""somedir""","find ""somedir"" -type l -print0 | xargs -r0 file | grep ""broken symbolic"" | sed -e 's/^\|: *broken symbolic.*$/""/g'"
Find all configration files in Home directory & Subtitute permanently in files,"find $HOME -name ""*.conf"" -exec sed -i 's/vermin/pony/g' {} \;"
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT_LOCATION} to ${OUTPUT_LOCATION},find ${INPUT_LOCATION} -name '*.pdf.marker' -exec sh -c 'mv $0 `dirname $0`/`basename $0 .marker` $1' {} ${OUTPUT_LOCATION} \;
"Locate all files in the current directory and below that have ""testfile"" in their names","find -name ""*testfile*"""
Append all *.mp3 files modified within the last 180 days to tar archive `music.tar',find . -name -type f '*.mp3' -mtime -180 -print0 | xargs -0 tar rvf music.tar
"Recursively counts non-blank, non-comment lines in all *.c files in a current folder.",find . -type f -name '*.c' -exec cat {} \; | sed '/^\s*#/d;/^\s*$/d;/^\s*\/\//d' | wc -l
"Print the list of files in the current directory tree with ""xx"" preceding and following each filename",find . -exec echo xx{}xx \;
find all headers file *.h in /nas/projects directory,"find /nas/projects -name ""*.h"""
Correct permissions for files in the web directory,find /your/webdir -type f | xargs chmod 644
Print out the contents of all *.txt files in the home directory,find ~ -name '*.txt' -print0 | xargs -0 cat
"Search the regular files from directory tree 'directory_name' for ""word"" and print the names of the matched files",find directory_name -type f -print0 | xargs -0 grep -li word
find all the php files in the current folder,find . -name \*.php
Unhide all hidden files in the current directory,"find . -maxdepth 1 -type f -name '\.*' | sed -e 's,^\./\.,,' | sort | xargs -iname mv .name name"
"Show the files or directories in the current directory whose names are not ""MyCProgram.c""","find -maxdepth 1 -not -iname ""MyCProgram.c"""
find all files in the current folder which start with pro,find . -name pro\*
find all the files in the entire file system that have been modified between 50 to 100 days and display ten files,find / -mtime +50 -mtime -100 | head
"display all the files in the current folder which end with "".bash""","find . -name ""*.bash"""
find all the files ending with undo in the current folder and calculate the total size of these files,"find . -name ""*.undo"" -ls | awk '{total += $7} END {print total}'"
display all the files in the current directory excluding those that are in the 'secret' directory,find . -name 'secret' -prune -o -print
Make an archive of .txt files from the dir/ directory tree,find dir/ -name '*.txt' | tar -c --files-from=- | bzip2 > dir_txt.tar.bz2
"display all file in the folder /dir/to/search except "".c"" files","find /dir/to/search/ -not -name ""*.c"" -print"
Find all directories under minimum 1 level down the  $GIVEN_DIR directory with null character as the delimiter,"find ""$GIVEN_DIR"" -type d -mindepth 1 -print0"
Exclude directory from find . command,find . -name '*.js' -and -not -path directory
"Search the current directory tree for files whose names end in ""rb"" or ""js""","find . -regextype posix-egrep -regex "".*(rb|js)$"""
List in detail the regular files from the /somelocation/log_output directory tree that were last changed more than 40 days ago,find /somelocation/log_output -type f -ctime +40 -exec ls -l {} \;
"find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar.",find ./ | grep -E 'foo|bar'
Find UTF-8 files with BOM,find . -type f -print0 | xargs -0 awk '/^\xEF\xBB\xBF/ {print FILENAME} {nextfile}'
dispaly a long listing of all the files in the current folder which have been modified in the last 14 days,find . -mtime -14 -ls
"Change every directory under ""/var/www/html/"" to have permissions 775",sudo  find /var/www/html/ -type d -exec chmod 775 {} \;
Find all the files in the current directory recursively whose permissions are 777,find . -type f -perm 0777 -print
"Search the current directory tree for regular files whose names end in "".shtml"" or "".css""","find . -type f \( -name ""*.shtml"" -or -name ""*.css"" \)"
Find all *.java files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,"find /home/www -name ""*.java"" -type f -print0 | xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'"
Find UTF-8 files with BOM,find . -type f -print0 | xargs -0 awk '/^\xEF\xBB\xBF/ {print FILENAME} {nextfile}'
Find files with name `aaa.txt' under the current directory,find . -name aaa.txt
Find all .java files starting from the current folder,"find . -name ""*.java"""
all the files that end with .mp3 and end with .jpg,find . -name '*.mp3' -name '*.jpg' -print
"search in all the regular/normal files of the current folder for the word ""word"" and display the matched file name","find . -type f -exec grep -l ""word"" {} +"
"find all the directories in the file system which begin with ""man""",find / -type d -name 'man*' -print
Count the number of files named `file1',find -name file1 | wc -l
Archive the entire file system into tarfile.tar.bz2,find / -print0 | tar -T- --null --no-recursive -cjf tarfile.tar.bz2
Measure the disk space taken up by all *.txt files in directory tree /home/d,"find /home/d -type f -name ""*.txt"" -printf ""%s\n"" | awk '{s+=$0}END{print ""total: ""s"" bytes""}'"
find all regular/normal files which have cpp folder in their path,"find . -type f -path ""*/cpp/*"""
find all the files in the home folder which have been modified in the last 7 days,find $HOME -mtime -7
Delete all the .c files present in the current directory and below,"find . -name ""*.c"" | xargs rm -f"
Find all *.cgi files/directories under current directory and change their permission to 755,find . -name '*.cgi' -print0 | xargs -0 chmod 755
find all the findme.txt files in the file system,find / -name findme.txt -type f -print
Run 'git pull' in every git repository in the current directory,"find . -name "".git"" -type d | sed 's/\/.git//' |  xargs -P10 -I{} git -C {} pull"
display all the files in the current folder,find ./
Create symlinks to all  /home/folder2/*.txt files with the same name in current directory,find /home/folder2/*.txt -type f -exec ln -s {} \;
search for all tar.gz compress files  in the current folder,find -name *.tar.gz
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*,find /path/to/directory/* -maxdepth 0 -type d -printf '%f\n'
Remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end,find ./ -type f -newer /tmp/date.start ! -newer /tmp/date.end -exec rm {} \;
Replace all occurrences of edx  with gurukul in all *.css  files under ./cms/djangoapps/contentstore/management/commands/tests directory,find ./cms/djangoapps/contentstore/management/commands/tests -iname *.css | xargs sed -i s/[Ee][Dd][Xx]/gurukul/g
Run an awk program on every TXT file found in the current directory tree,"find . -name '*txt' -print -exec awk 'BEGIN {nl=1 ;print FILENAME} $9 !="""" {if  { print $0 ; nl = nl + 1 }}' {}  \;"
search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder,find ./ -type f -exec sed -i '' 's#NEEDLE#REPLACEMENT#' *.php {} \;
Find all directories under /path/to/dir  and archive them  into files with .tar.gz extension,"find /path/to/dir -mindepth 1 -maxdepth 1 -type d -execdir sh -c 'd=${1##*/}; sudo tar -zcpvf ""$d"".tar.gz ""$d""' - {} \;"
display all the files in the folder /home which do not belong to the group test,find /home ! -group test
Count line numbers on files and record each count along with individual file name.,find /home/my_dir -name '*.txt' | xargs grep -c ^.*
"Search for the regex ""\$wp_version ="" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/var/www/vhosts/*/httpdocs' and show the matched lines along with the file names","find /var/www/vhosts/*/httpdocs -type f -iwholename ""*/wp-includes/version.php"" -exec grep -H ""\$wp_version ="" {} \;"
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under /home/www and below",find /home/www/ -type f|xargs perl -pi -e 's/subdomainA\.example\.com/subdomainB.example.com/g'
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions,find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \;
Find files/directories not changed in two weeks under /dev/shm,find /dev/shm /tmp -type f -ctime +14
Find all *.so files under $S directory and run doexe command with minimal invocation for those files,"find ""${S}"" -name '*.so*' -exec doexe '{}' +"
Find all regular files under current directory  and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,find . \ -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
find all the png files in the current folder which begin with the word image and do not search in the sub directories,find . -maxdepth 1 -type f -name 'image*png' `
display long listing of all the files in the root folder which are bigger than 3KB,find / -dev -size +3000 -exec ls -l {} ;
find all the configuration files which have been accessed in the last 30 minutes.,find /etc/sysconfig -amin -30
"Print out the contents of all files in the current directory tree that contain ""spaces"" in their names","find -name '*spaces*' | while read text; do cat ""$text""; done"
find all the files in the entire file system that have been changed exactly  60 days  and display ten files,find / -cmin -60 | head
"print all files in the file system excluding those ending with "".c""","find / \! -name ""*.c"" -print"
find all the files in the home folder that have been modified between 24 to 48 hours,find $HOME -mtime -2 -mtime +1
search for *.log files starting from /  and only in the current file system,"find / -xdev -name ""*.log"""
search for a word in all the php files in the current folder and display the count of all matching lines.,find . -name \*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test' | wc -l
create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files (files ending with  ~),find . -name .snapshot -prune -o \( \! -name *~ -print0 \) | cpio -pmd0 /dest-dir
List all files except for those in directory SCCS,find . -print -o -name SCCS -prune
Create a script to find the number of files modified in the last 7 days in a directory.,"#!/bin/bash

dir=""/path/to/directory""
find ""$dir"" -type f -mtime -7 | wc -l"
display all the html files in the current folder that have not been modified in the last 7*24 horus,"find . -mtime +7 -name ""*.html"" -print"
"display all the files in the current folder which are present in the path ""./src/emacs""",find . -path './src/emacs' -prune -o -print
Find all files/directories with '.txt' extension under '/home' directory tree that are greater than 100KB in size,"find /home -name ""*.txt"" -size +100k"
Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames,find . -name '*.txt' -exec grep 'sometext' '{}' \; -print
Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.,"find . -name ""a"" -type d | xargs rmdir"
Remove all vmware-*.log files/directories under current directory,find . -name vmware-*.log | xargs -i rm -rf {}
"Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field  of the first 4 entries","find -type f -printf ""%s %p\n"" | sort -nr | head -n 4 | cut -d ' ' -f 2"
"find all the files with the name ""datainame"" in the file system which are bigger than 50MB","find / -size +50M -iname ""Dateiname"""
Replace spaces in directory names with underscores for all directories in the current directory tree,"find -name ""* *"" -type d | rename 's/ /_/g'"
Move all regular files under current directory to ./newdir,find ./ -type f -print | xargs    -l56 -I {} mv -f {} ./newdir
Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer.  Print the name of the file where a match is found.,"find . -type f -name ""*.java"" -exec grep -l StringBuffer {} \;"
"Search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case","find . -iregex "".*packet.*"""
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way,find -d MyApp.app -name Headers -type d -exec rm -rf {} +
display all the files in the home folder which have not been modified in the last 365*24 hours,find $HOME -mtime +365
Find all level 1 subdirectories of the current directory,find . -maxdepth 1 -type d
Save a comma separated list of all directories under current directory tree to variable 'FOLDER',"FOLDERS=$(find . -type d -print0 | tr '\0' ',')"
Find all CSS files,"find . -name ""*.css"""
Find all directories in maximum 1 level down the current directory and remove the . entry from the output,find . -maxdepth 1 -type d | sed '/^\.$/d'
Remove all Thumbs.db files from the current directory tree,find . -name Thumbs.db -exec rm {} \;
"list all the "".ksh"" files in the current directory","find . -ls -name ""*.ksh"""
"Search the current directory tree for regular files that contain ""string""",find . -type f | xargs grep string
find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.,find $1 \ -print
Measure the disk space taken up by all *.txt files in the current directory tree,"find . -name ""*.txt"" -print0 |xargs -0 du -ch"
display all the files in the home folder which have read permission to the user,find /home -perm /u=r
Search the current directory for all files with no 'read' privilege for 'others',find . -maxdepth 1 ! -perm  -o=r
Find links to any file that happens to be named `foo.txt',find . -lname \*foo.txt
"search in the current folder for all the directories with the name ""test""",find . -type d -name test
List empty directories in the current directory tree,find . -depth -empty -type d
find all the files and folder that were created in 2012 on Friday of every month,"find / -daystart -mtime +41 -mtime -408 \   -printf ""%M %n %u %g %10s %TY-%Tm-%Td %Ta %TH:%TM:%TS %h/%f\n"" | awk '($7==""Fri""){print}'"
Find all .txt files of user Tecmint under /home directory,"find /home -user tecmint -iname ""*.txt"""
Find all directories under maximum 1 level down the /parent  directory and set their permission to 700 recursively,find /parent -maxdepth 1 -type d -print0 | xargs -0 chmod -R 700
find all the html files in the current folder and delete a line,"find ./ -type f -name '*.html' | xargs sed -i '1,/sblmtitle/d'"
find the oldest normal file in the current directory and display its contents,"find -type f -printf ""%T+ %p\0"" | sort -z | grep -zom 1 "".*"" | cat"
"List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page.",find ./in_save/ -type f -maxdepth 1| more
Delete all files/directories under current directory tree with '.$1' extension where $1 expands as the first positional parameter,"find . -name ""*.$1"" -delete;"
find all the files ending with .mp3 or .jpg,find . \ -print
delete all the mp3 files in the current folder.,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
find all the files that have been modified exactly 24 hours ago,find . -type f -mtime 1
display all the empty files in the current folder( files of size 0 bytes),find . -empty
Search for 'organic' in all files with '.html' extension under ~/html directory,find ~/html/ -name '*.html' -exec grep organic '{}' ';'
Check the syntax of all PHP files under the current directory,"find . -type f -name ""*.php"" -exec php -l {} \;"
"remove all the files in the folder ""myfiiles"" which have not been accessed in the last 30*24 hours",find /myfiles -atime +30 -exec rm {} ;
"Print mv commands to rename all files under current directory by formatting the filenames with the sed scripts '\''s/^-\s*/\L\1\E-\2/'\'', '\''s/ /_/g'\'' and '\''s/_-/-/g'\''","find ./ -type f -exec bash -c 'echo ""mv \""$1\"" \""$(echo ""$1"" | sed -re '\''s/^-\s*/\L\1\E-\2/'\'' -e '\''s/ /_/g'\'' -e '\''s/_-/-/g'\'')\""""' - {} \;"
search all files in the current folder which match the regular expression,"find . -regex "".*/my.*p.$"" -a -not -regex "".*test.*"""
search for the word bananas in the all the regular/normal files in the entire file system,find / -type f -exec grep bananas {} \; -print
"Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/",find arch/x86/usr/sbin arch/x86/usr/X11R6/bin usr/sbin/ -type f | xargs chmod a+x
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find ""$1"" -type f | egrep -v '\.bz2' | xargs bzip2 -9 &"
find all the html files that are acces in the last 24 hours in the current folder,"find . -mtime 1 -name ""*.html"" -print"
Replace all occurrences of foo  with bar in all *.css  files under %s directory,find %s -iname *.css | xargs sed -i s/[Ff][Oo][Oo]/bar/g
display all the directories in the current folder and create a skeleton of make directory commands with all these folders,find -type d|sed -r '/^.$/{s:.:#!/bin/bash:};{s/^\./mkdir -p &/}'
find all the files in the current folder which are exactly 1234 bytes,find . -size 1234c
"find all the files starting with ""config"" in the folder Symfony ( case insensitive search)",find Symfony -iname '*config*';
"find C, C++ source and header files in current folder and create etags for them",find . -type f  -print | xargs etags -a
Find all *.jpg files under current directory and print only unique names,find . -name *.jpg | uniq -u
Find all directories named 'local' in entire file system,find / -name local -type d
list all files,find .
"Save the list of all .py files under and below the current directory that contain ""something"" in their pathnames to output.txt",find . -name '*.py' | tee output.txt | xargs grep 'something'
Find all the files which were modified more than 50 days but less than 100 days ago,find / -mtime +50 -mtime -100
find all files that are readable or writable by their owner,find . -perm +600 -print
calculate the total size of jpg files in current folder,"find . -name ""*jpg"" -exec du -k {} \; | awk '{ total += $1 } END { print total/1024 "" Mb total"" }'"
display all the files in the current folder which contains form feed  and does not contain NULL,"find . | xargs grep -PL ""\x00"" | xargs grep -Pl ""\x0c"""
Find all broken symlinks under current directory,find . -type l -xtype l
"Print the list of files in the current directory tree ignoring .svn, .git, and other hidden directories",find . -type f -not -path '*/\.*'
"list all files under the current directory, writing the output to the file files_and_folders",find . > files_and_folders
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time,"find / -type f -name ""*"" -newermt ""$newerthan"" ! -newermt ""$olderthan"" -printf ""%T+\t%p\n"" | sort | awk '{print $2}'"
replace the word foo to bar in the current folder in all the regular/normal files which have execute permission,find . -type f -executable -exec sed -i 's/foo/bar/g' {} +
display all the files in the folders /etc /srv excluding the paths /etc/mtab and  /srv/tftp/pxelinux.cfg,find /etc /srv \  -prune -o -print
"List all files under the current working directory with name "".htaccess""",find `pwd` -name .htaccess
Find all files under ~/code that are executable by owner without descending into hidden directories and print their parent directories appended with : at the beginning and remove all newlines and the last :,find ~/code -name '.*' -prune -o -type f -a -perm /u+x -print | sed 's@/[^/]\+$@:@' | sort | uniq | tr -d '\n' | sed 's/^/:/; s/:$//'
"display the number of lines in all the "".c"" files in the current folder","find . -name ""*.c"" -print | xargs wc -l"
Convert all markdown files on the system to html,"find / -name ""*.md"" -type f -exec sh -c 'markdown ""$0"" > ""$0.html""' {} \;"
"Search the current directory tree for files and directories whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll"""
"display all the files ending with "".user"" in /var/adm/logs/morelogs/ and excluding all regular files","find /var/adm/logs/morelogs/* -type f -prune -name ""*.user"" -print"
Find all *.data files under jcho directory,find jcho -name *.data
"Delete files ""*doc copoy"" in directory tree /mnt/zip","find /mnt/zip -name ""*doc copy"" -execdir rm ""{}"" \;"
Find PHP files containing 2 or more classes,"find . -type f -name ""*.php"" -exec grep --with-filename -c ""^class "" {} \; | grep "":[2-99]"" | sort -t "":"" -k 2 -n -r"
Find all files/directories newer than ttt or owned by user 'wn' in entire file system,find / \( -newer ttt -or -user wnj \) -print
find all the files in the home folder that are modified day before yesterday,find $HOME -mtime -2 -mtime +1
Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days.,find . -atime +30 -print
find all files that names are dir-name-here,"find / -name ""dir-name-here"""
Count the number of files named `file1',find -name file1 | wc -l
Search for all *.conf files in entire file system,"find / -type f -name ""*.conf"""
Print a list of all *.code files from the current directory tree,find . -name *.code
display all files in current directory discard any errors and save the output to a file,find . 2>/dev/null > files_and_folders
Search for the string 'device' in all regular files in the entire filesystem,"find / -type f -print | xargs grep ""device"""
search for a word in all the php files in the current folder and display the matching lines. PLus at the end takes multilple files as input,find . -name \*.php -type f -exec grep -Hn '$test' {} \+
display the count of total number of empty files in the current folder,find . -type f -empty | wc -l
Set permissions to 700 for directories under var/,find var/ -type d -exec chmod 700 {} \;
Find image files and move them to the pictures directory,find ~/Desktop -name “*.jpg” -o -name “*.gif” -o -name “*.png” -print0 | xargs -0 mv –target-directory ~/Pictures
Exclude directory from find . command,"find -name ""*.js"" -not -path ""./directory/*"""
find the biggest files only,find . -type f -exec du -Sh {} + | sort -rh | head -n 15
Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case.  Print the name of the file where a match is found.,"find . -type f -name ""*.java"" -exec grep -il string {} \;"
"Print the full path directory name of each ""file.ext"" found under the current directory","find . -name ""file.ext"" -execdir pwd ';'"
"Concatenate all files under the current directory and below that contain ""test"" in their names",find . -iname '*test*' -exec cat {} \;
"Move all files in ""/path/subfolder"" to ""/path"" without clobbering any destination files",find /path/subfolder -maxdepth 1 -type f -name '*' -exec mv -n {} /path \;
Find all regular files under '/home/john' directory tree that start with 'landof' in their names,"find /home/john -name ""landof*"" -type f -print"
Force the group stickiness for directories under /var/www,find /var/www -type d -print0 | xargs -0 chmod g+s
create backup of all the text files  present in the current folder,"find -name ""*.txt"" cp {} {}.bkup \;"
display all the text files in the current folder except readme files,"find . -type f -name ""*.txt"" ! -name README.txt -print"
Find all first occurrences of directories named '.texturedata' under '/path/to/look/in' directory tree,find /path/to/look/in/ -type d -name '.texturedata' -prune
Search the current directory tree for .rb files ignoring .vendor directories,find . -name .vendor -prune -o -name '*.rb' -print
Find all .gz archives in the /path/to/dir directory tree,"find /path/to/dir -name ""*.gz"" -type f"
Find all empty files under /tmp and below,find /tmp -type f -empty
Find all files/directories under '/usr/local/games' directory tree that contain the string 'xpilot' in their names,"find /usr/local/games -name ""*xpilot*"""
List .conf files residing in the /etc/nginx/ directory tree,find /etc/nginx -name '*.conf' -exec echo {} ;
Search the current user's home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive.,find ~/ -newer alldata.tar 	-exec tar uvf alldata.tar {} \;
"Find all regular files in the current directory and search them for ""example""",find -maxdepth 1 -type f | xargs grep -F 'example'
"find all the jpg images in the folder /path/to/files which have been modified after after the file ""timestamp"" and convert them into pdf.",find /path/to/files -iname '*.jpg' -newer timestamp -exec mogrify -format pdf {} +; touch timestamp
view the manual page of find,man find
find all the files in the home folder which are empty (Size 0 bytes),find ~ -empty
Show the explanation of find's debugging options,find -D help
display all html files  in  current folder,"find -name ""*.htm"" -print"
Change the ownership of all files in the current directory tree from root to www-data,find -user root -exec chown www-data {} \;
Find all file.ext files/directories under /home/kibab directory and print . for each of them,find /home/kibab -name file.ext -exec echo . ';'
Find regular files named 'findme.txt' under '/usr' and '/home' directory tree,find /usr /home -name findme.txt -type f -print
Finds all the log* files recursively in /myDir that are more than 7 days older and compresses them.,"find /myDir -name ""log*"" -ctime +7 -exec bzip2 -zv {} \;"
"Copy the entire contents of the current directory preserving ownership, permissions, and times",find . | cpio -pdumv /path/to/destination/dir
"find case-insentive example.com file, and whole dose not contain beta",find -iname example.com | grep -v beta
Remove all vmware-*.log files/directories under current directory,find . -name vmware-*.log | xargs -i rm -rf {}
Locate all *.csv files under the current directory tree,"find . -name ""*.csv"""
Change permissions to 644 for all regular files under the /path/to/dir/ tree,find /path/to/dir/ -type f -print0 | xargs -0 chmod 644
Search the current directory tree for file `teste.tex',find -name teste.tex
"Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command","find -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}' + | mysql -D ootp"
Remove all files under /home/user/Maildir/.SPAM/cur,find /home/user/Maildir/.SPAM/cur -type f -exec rm -f '{}' '+'
Find all files under $root_dir,find $root_dir -type f
Find all *1234.56789* files/directories under current directory,find . -name '*1234.56789*'
"find files in the current directory and sub-directories, whose content was updated within the last hour",find . -mmin -60
Find all directories in maximum 2 levels down the /tmp/test directory,find /tmp/test/ -maxdepth 2 -mindepth 1 -type d
search for the word hello in all the text files in the temp folder and delete them,find /tmp -type f -name ‘*.txt*’ | sed -e ‘s/.*/\”&\”/’ |xargs -n 1 grep -l hello|sed -e ‘s/.*/\”&\”/’|xargs -n 1 rm -f
Delete all 1US*  files under current directory,"find . -iname ""1US*"" -exec rm {} \;"
Remove everything in a current folder without prompting.,find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf
dispaly all the empty regular/normal files in the current folder,find . -type f -empty
get all the files that have been modified within the last 30 days,find . -mtime -30 -print
"Search the current directory tree for files whose name is "".note"", case insensitive",find . -iname '.note' | sort -r
display all files in current directory and save the output to a file,find . > files_and_folders
Find files with 002 permission in entire file system with the null character as the delimiter,find / -type f -perm -002 -print0
remove all the core files from /usr folder which have not been accessed in the last 7*24 hours,"find /usr -name core -atime +7 -exec rm ""{}"" \;"
"list all regular files under the directory ""$directory""",find $directory -type f -name '*'
Recursively changes group ownership on every file in the ${WP_ROOT}/wp-content directory to ${WS_GROUP} group.,find ${WP_ROOT}/wp-content -exec chgrp ${WS_GROUP} {} \;
"search for the files ""foo.txt"" in the current folder",find . -name foo.txt
"Find all directories named CVS, and deletes them and their contents.",find . -type d -name CVS -exec rm -r {} \;
Find all files/directories under current directory with 'foobar'  in their names and copy them to ~/foo/bar,"find . -iname ""*foobar*"" -exec cp ""{}"" ~/foo/bar \;"
Search the current directory tree for files AAA and BBB,find . \ -print
"Search the /root directory recursively for the regular file named ""myfile"" ignoring /root/work/",find /root/ -path '/root/work' -prune -o -name myfile -type f -print
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*,find /path/to/directory/* -maxdepth 0 -type d -printf '%f\n'
Search the current directory tree for all regular non-hidden files except *.o,"find ./ -type f -name ""*"" -not -name ""*.o"""
Recursively removes all files like '*.pyc' in a current folder.,find . -name '*.pyc' -print0 | xargs -0 rm
Perform a default Plesk configuration,find /var/www/vhosts/*/httpdocs -type f -iwholename “*/wp-includes/version.php” -exec grep -H “\$wp_version =” {} \;
"Set permissions to ug=rw,o= for files under the $d directory tree","find $d -type f -exec chmod ug=rw,o= '{}' \;"
"Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor","find . | grep -v ""\.png$"" | grep -v ""\.class$"" | vim -"
Find files in the current directory and below that are newer than /bin/sh,find . -newer /bin/sh
Print all files/directories under ... directory by terminating their paths with a null character,find ... -print0
Finds all folders that contain 'ssh' file and have 'bin' in path.,find / -name ssh|grep bin|xargs dirname
"search for files that are readable for everybody, have at least on write bit set but are not executable for anybody",find . -perm -a+r -perm /a+w ! -perm /a+x
Find all executables in the current directory tree,find ./ -executable
display all the files in the entire file system which are bigger than 10MB,find / -size +10000k
Find all files named `file1' on the system,find / -name file1
Find files on the system that are bigger than 20 megabytes and show the sorted list of their filenames,"find / -type f -size +20000k -exec ls -lh {} \; 2> /dev/null | awk '{ print $NF "": "" $5 }' | sort -nrk 2,2"
Find all the files whose permissions are 777 under current directory,find . -type f -perm 0777 -print
Find all files under /path/to/dir that were modified less than 7 days ago with null character as the delimiter,find /path/to/dir -type f -mtime -7 -print0
Remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago,find $backup_path/* -name *.sql -mtime +30 -exec rm {} \;
print all the files in the current folder which do not begin with a capital letter,find . \! -name '[A-Z] *' -exec lpr { }\;
Locate all *.mov files in the current directory tree,find . -name '*.mov'
Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user.,"find ~/dir_data -type f  -exec chmod a-x,u+w {} \;"
Update timestamps of all files  under current directory. Also works on older Unix systems with obsolete 'find' command.,find . -print -exec touch {} \;
Find all broken symlinks under current directory,find -xtype l
Find *.html files in the /usr/src/linux directory tree,"find /usr/src/linux -name ""*.html"""
display a long listing of all the log files in the current folder which are bigger than 1MB,find . -size +1000k -name *.log -print0 | xargs -0 ls –lSh
display all the files in current folder which have not been modified in the last 7 days,find . -mtime +7
find all files in the current directory do not display the files which do not have read permission to all users,"find . ! -perm -g+r,u+r,o+r -prune"
"Search for files/directories which are writable by somebody (their owner, or their group, or anybody else)",find . -perm /222
Search the home directory tree for video files,find ~ -type f -name '*.mkv' -o -name '*.mp4' -o -name '*.wmv' -o -name '*.flv' -o -name '*.webm' -o -name '*.mov'
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*,find  /path/to/directory/* -maxdepth 0 -type d -exec basename {} \;
List the current directory recursively ignoring ./src/emacs/ and all its contents,find . -path ./src/emacs -prune -o -print
"Find all directories under /home/me/""$d""","find /home/me/""$d"" -type d"
Find files/directories that does not have write permssion for group,find /path ! -perm /g+w
Find grub.conf files in entire file system discarding errors,find / -name grub.conf 2>/dev/null
Find all *.txt files/directories under your home directory,"find ~ -name ""*.txt"" -print"
Copy directory tree preserving UID and GID and leaving user files alone,find . -depth -print | cpio -o -O /target/directory
Search for files/directories which are writable by either their owner or their group,"find . -perm /u+w,g+w"
change the owner and group of all the files in the folder  /usr/lpp/FINANCIALS,find /usr/lpp/FINANCIALS -print | xargs chown roger.staff
Show all of the .conf files in Pat's user folder and subdirectories using the less pager,"find /home/pat -iname ""*.conf"" | less"
Print the list of all directories in the /myfiles directory tree,find /myfiles -type d
Display file status for each regular file in the current directory tree,find . -type f -exec stat {} \; > /dev/null
"display all the files in the file system which belong to the user ""wnj"" and which are modified after the file ""ttt""",find / -newer ttt -user wnj -print
Recursively removes all files like '*.pyc' of '*.pyo' in a current folder without prompting.,"find . -type f -name ""*.py[c|o]"" -exec rm -f {} +"
Delete all files named '-F' under current directory tree,"find . -name ""-F"" -exec rm {} \;"
Find all the files on the system that have been accessed within the last hour,find / -amin -60
"Find recursively all files whose names ends with ""foo""","find . -name ""*foo"""
"Find files in the /travelphotos that are greater than 200k in size but do not have ""2015"" anywhere in the file name","find /travelphotos -type f -size +200k -not -iname ""*2015*"""
run ls command on *.pl files,"find . -name ""*.pl"" -exec ls -ld {} \;"
Find mysong.ogg anywhere under the home directory,find $HOME -name 'mysong.ogg'
List the abc.def files under the directories /ghi and /jkl which have commented entries and display those entries,find /ghi /jkl -type f -name abc.def 2> /dev/null -exec grep -H ^# {} \;
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find /path/to/dir -type f -print0 | xargs -0 grep -l ""foo"""
"Print the number of entries  in the subdirectories of the current directory, stopping search at any device mount points.","sudo find . -xdev -type f | cut -d ""/"" -f 2 | sort | uniq -c | sort -n"
"Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name","find . -type f ! \( -name ""*gz"" -o -name ""*tmp"" -o -name ""*xftp"" \) -exec gzip -n '{}' \;"
Find all *.py files/directories under current directory,find . -name *.py
Find SGID files,find / -perm +g=s
Find all directories under current directory excluding those which match the regex /\. in their names,find . -type d | grep -v '/\.'
Find files/directories that are newer than 'foo.txt' under current directory tree,find -newer foo.txt
Find all files/directories in the entire file system and redirect the output to masterfilelist.out file,find  /   -print > masterfilelist.out
Search the current directory recursively for regular files with the extension given as variable $extension,"find . -type f -name ""*.$extension"""
find all the perl files in the current folder,"find . -type f -name ""*.pl"""
Find all pdf files excluding *_signed.pdf files under /some/dir with null character as the delimiter,"find /some/dir -name ""*.pdf"" ! -name ""*_signed.pdf"" -print0"
change the permission of all the directories to 755 in the current folder,find -type d -exec chmod 755 {} \;
Find all files owned by group `root' in the current directory tree and change their user to `temp',find . -group root -print | xargs chown temp
Move all regular files under current directory to ./newdir,find ./ -type f -print | xargs    -l56 -I {} mv -f {} ./newdir
search through only the /usr and /home directories for any file named Chapter1.txt,find /usr /home -name Chapter1.txt -type f
List all broken symlinks excluding cyclic links under current directory,"find . -type l -printf ""%Y %p\n"" | grep -w '^N'"
Identify CMS version/releases accross all your PHPBB installations,"find /home/*/public_html/ -type f -wholename *includes/constants.php -exec grep -H ""PHPBB_VERSION"" {} \;"
list all files in /home/bozo/projects directory tree that were modified within the last day,find /home/bozo/projects -mtime -1
search for all regular/normal files in current folder and display all the files which contain 16 lines,find . -type f -print0 | xargs -0 grep -cH '.' | grep ':16$'
Find regular files named 'findme.txt' under '/usr' and '/home' directory tree,find /usr /home -name findme.txt -type f -print
check find version,find --version
"Recursively add "".jpg"" to all files without an extension in the directory tree ""/path""","find /path -type f -not -name ""*.*"" -exec mv ""{}"" ""{}"".jpg \;"
change the permissions of all the regular files in the current folder,find . -type f -exec chmod 500 {} ';'
"Print the names and sizes of regular files residing in the ""dir"" directory tree","find dir -type f -printf ""f %s %p\n"""
Find all directories in the current directory tree that are not accessible by all,find -type d ! -perm -111
"Find all *.txt files under the current directory whose names are not ""File.txt""",find . -maxdepth 1 -type f -name '*.txt' -not -name File.txt
Search the entire file hierarchy for files larger than 100 megabytes and delete them.,find / -size +100M -exec /bin/rm {} \;
Find which ruby files under current directory contain the string 'jump',find . -name '*.rb' -exec grep -H jump {} \;
"Remove all files whose names begin with ""no-such-thing"" in the /home/peter directory tree",find /home/peter -name no-such-thing* |xargs rm
Write out the entire directory hierarchy from the current directory,find . -print
Correct permissions for directories in the web directory,find /your/webdir/ -type d -print0 | xargs -0 chmod 755
Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory's parent,find ~/container  -mindepth 3 -type f -exec mv {} .. \;
"find all the files ending with ""~"" in current folder and move them to temp folder",find -name '*~' -print0 | xargs -0 -I _ mv _ /tmp/
To descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option. This will avoid deleting nested directories:,"find .  -maxdepth 1 -type d -iname "".[^.]*"" -print0 | xargs -I {} -0 rm -rvf ""{}"""
Search for files only that end with .php and look for the string $test inside those files,find . -name \*.php -type f -print0 | xargs -0 grep -Hn '$test'
find all files in the current directory that are less than 1 byte size,find . -size -1c -print
"display all the files ending with "".foo"" excluding those that are in the directory "".snapshot""",find . -name .snapshot -prune -o -name '*.foo' -print
Get only the latest version of file from the 'custlist*' files under current directory,find . -name custlist\* | perl -ne '$path = $_; s?.*/??; $name = $_; $map{$name} = $path; ++$c; END { print $map{(sort(keys))[$c-1]} }'
"find the file ""myfile.txt"" in the folder /home/user/myusername/",find /home/user/myusername/ -name myfile.txt -print
"Rename recursively all files in the current directory tree that are called ""article.xml"" to ""001_article.xml""","find . -name ""article.xml"" -exec rename 's/article/001_article/;' '{}' \;"
Delete files older than 31 days,find ./ -mtime +31 -delete
find file end with  '.txt' in current directory.,"find . -name ""*.txt"""
Find all *.txt files/directories under current directory and execute process command for each of them,find . -name '*.txt' -exec process {} \;
Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory,find . -name CVS -prune -o -exec mv '{}' `echo {} | tr '[A-Z]' '[a-z]'` \; -print
List all *.txt files/directories under current directory,find . -name *.txt -exec ls {} \;
List all *.txt files/directories under current directory,"find . -name '*.txt' -exec echo ""{}"" \;"
Remove all .txt files with spaces in names in and below the current directory,"find -name ""*\ *.txt"" | xargs rm"
Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them,"find ""$DIR"" -type f \! -newer ""$a"" \! -samefile ""$a"" -delete"
Find all hidden files,"find /tmp -type f -name "".*"""
Change the permission to 755 for all directories under current directory,find . -type d | xargs chmod -v 755
"Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.",find $LOCATION -print -exec shred $TIMES -u '{}' \;
Search directory /path/to/check/ for regular files,find /path/to/check/* -maxdepth 0 -type f
"Generate HTML <a> links to files under the /public/html/cosi directory tree whose name is ""wiki.phtml""","find /public/html/cosi -name ""wiki.phtml -exec echo ""<a href=\""{}\"">{}</a>"" \;"
List all .jpg files in the home directory tree,"find . -name ""*.jpg"" -exec ls {} \;"
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" -print0 | xargs -0 rm"
"display a long listing of all images with the name ""articles"" in the current folder","find . -iname ""Articles.jpg"" -print0 | xargs -0 ls -l"
find files in the /usr/src directory with pattern` *.c  that larger than 100 Kilobytes,find /usr/src -name '*.c' -size +100k -print
Find all files/directories under current directory,find .
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago,find /tmp/ -ctime -1 -name x*
"Move all directories in the current directory tree that have been modified in the last day to ""/path/to/target-dir""",find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +
Compress all files under /source directory tree using gzip with best compression method,find /source -type f -print0 | xargs -0 -n 1 -P $CORES gzip -9
Delete all __temp__* files/directories under current directory tree,find . -depth -name '__temp__*' -exec rm -rf '{}' \;
find all the files in the file system which have been modified in the last 30*24 hours,find / -mtime -30 -print
"find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .",find . \ -exec rm {} \;
"This find command ignore the case when searching for file name , to ignore the case  in this example all .py & .PY file will search","find . -type f -iname ""*.py"""
Search for 'Attached: Yes' in all regular files under '/proc/scsi' directory tree matching the path '/proc/scsi/usb-storage' and show only the matched filenames,find /proc/scsi/ -path '/proc/scsi/usb-storage*' -type f | xargs grep -l 'Attached: Yes'
"Create a copy of the current working directory structure in the usr/project directory,",find . -type d -print|sed 's@^@/usr/project/@'|xargs mkdir
"Search the /home/user1 directory tree for files whose names end in "".bin""","find /home/user1 -name ""*.bin"""
Move all *.php~  files under current directory to /mydir,"find . -iname ""*.php~"" -exec mv {} /mydir \;"
Delete all empty directories under root,find root -type -d -empty -delete
Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories,"find ""$1"" -perm -u+r -print0 | xargs chmod g+r"
Find all hard links to file /path/to/file that exist under the current directory tree,find . -samefile /path/to/file
"Find all files under $1, calculate their md5sums and redirect the results to $1__checksums.md5","find ""$1"" -type f -exec md5sum {} \; > ""$1""__checksums.md5"
"Find all files in the current directory tree whose size is greater than 1MB, and move them to the ""files"" folder",find . -size +1M -print0 | xargs -0 -I '{}' mv '{}' files
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -execdir /bin/rm {} \+
Set permissions for files in `foldername' to 777,"find foldername -exec chmod a+rwx {} "";"""
"create a cpio archive of the entire contents the current directory while preserving the permissions, times, and ownership of every file and sub-directory",find . -depth -print | cpio -o -O /target/directory
Find and print the full pathname of all PDF files in the current directory and its sub-directories.,"find . -name ""*.pdf"" -print"
"Search all directories starting from the root directory for ""filename""","find / -iname ""filename"""
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll"" -type f"
find all the files in the entire file system that have been accessed in the last 60 days ago,find / -amin -60
Print content of all files found regarding seach options '[whatever]',find [whatever] -exec cat {} \;
"Recursively finds all *.txt files and prints strings with ""text_pattern"" ignoring text distincts.","find . -name ""*.txt"" | xargs grep -i ""text_pattern"""
Find all files/directories named 'java' under /usr directory,find /usr -name java
"search for the file in the entire file system which has the words ""filename"" in its name",find / -name ”*filename*”
Remove all files that contain the word GUI in entire file system,find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*,find . -mtime 0 -not \( -name '*.swp' -o -regex '\./es.*' -o -regex '\./en.*' \)
"Change the owner of all files in the current directory tree excluding those who match ""./var/foo*"" to ""www-data""",find . -not -iwholename './var/foo*' -exec chown www-data '{}' \;
display the file name and the file type of all the files in the current directory,"find . -printf ""%y %p\n"""
Search for files/directories which are writable by both their owner and their group,"find . -perm -g+w,u+w"
Find all files with the SUID bit set,find / -perm -u+s
Create symlinks to all  /home/folder1/*.txt files with the same name in current directory,find /home/folder1/*.txt -type f -exec ln -s {} \;
Search the system for 'dead' symbolic links,find / -type l -print | perl -nle '-e || print';
Archive the list of 1st level subdirectories in /fss/fin to /fss/fi/outfile.tar.gz,"tar -czf /fss/fi/outfile.tar.gz `find /fss/fin -d 1 -type d -name ""*"" -print`"
"Find files starting with the word ""file"" in the current directory tree","find . -name ""file*"""
Find all 100MB+ files and delete them,find / -size +100M -exec rm -rf {} \;
"Search the current directory tree for files whose names contain ""TextForRename""","find ./ -name ""*TextForRename*"""
Display a long listing of all the regular files in the file system which belong to user 'root' and which have suid bit set,find / -type f -user root -perm -4000 -exec ls -l {} \;
"find all the regular/normal files in the current folder which belong to the group ""flossblog""",find . -group flossblog -type f
Find all files under current directory and change their permission to 644,find . -type f -exec chmod 644 {} \;
find all .bak files in or below the current directory and move them to ~/.old.files directory:,"find . -name ""*.sh"" -print0 | xargs -0 -I {} mv {} ~/back.scripts"
Find all '*~' files under current directory and delete them,find ./ -name '*~' | xargs> rm
"Search *.x files from the current directory tree for string ""fred""",find . -name ‘*.x’ -print0 | xargs -0 grep fred
"List the current directory recursively ignoring the ""dir1"" subdirectory",find . -path ./dir1\*  -prune -o -print
find all files in the current folder which have not been accessed in the last 30 days in the current folder,find . -atime +30 -print
delete all the log files in the current folder,find -name '*.log' -delete
search for all text files in the folder /home,find /home -name *.txt
"Remove all .sh files in the current directory tree whose names begin with ""t""","find . -name ""t*.sh"" -exec rm -vf '{}' \;"
Find files on the system bigger than 50MB but smaller than 100MB,find / -type f -size +50M -size -100M
Recursively finds and compresses all files in the directory '/path/to/dir',find /path/to/dir -type f -exec bzip2 {} \;
Find files/directories in entire file system with at least 644 permission,find / -perm -644
"List the current directory recursively ignoring the ""dir1"" subdirectory",find . -path ./dir1\*  -o -print
Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories,"find ${x} -type d -exec chmod ug=rwx,o= '{}' \;"
Perform a case insensitive search for *.jpg files which are greater than 500KB in size under /ftp/dir/ directory,"find /ftp/dir/ -size +500k -iname ""*.jpg"""
Run 'chmod 0755' on all directories in the current directory tree,find . -type d -exec chmod 0755 {} \;
Find all directories matching the regex '.texturedata' in their names under '/path/to/look/in/' directory tree,find /path/to/look/in/ -type d | grep .texturedata
Find directories in the current directory  and print them appended with a string literal 'Directory: ',"find . -maxdepth 1 -type d -print | xargs  -I ""^"" echo Directory: ""^"""
find all the files in the current directory which have been modified in the last 30 days and display the contents.,find . -atime +30 -exec ls \;
find all the files ending with emlx in a folder and save the output to a list file,find /path/to/folders/ -name \*.emlx -print0 > filelist
"Look for ""testfile.txt"" in the ""/"" directory and 1 level below",find / -maxdepth 2 -name testfile.txt
"Print as many dots as there are files named ""file.ext"" in the /home/kibab directory tree",find /home/kibab -name file.ext -exec echo . ';'
Find all *.csv files under /foot/bar/ and move them to some_dir,find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir
Locate the httpd.conf file on the system,find / -name httpd.conf
Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed,"find . -name ""*.php"" -exec chmod 755 {} + -printf '.' | wc -c"
find all the php files in current folder using regular expressions,find . -regex '.+\.php'
Find and remove all .txt regular files under the current directory and below,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size,find $HOME -iname '*.ogg' -type f -size -100M
"Search the /Path/bar* directories recursively for files matching pattern ""file_name*""","find /Path/bar* -name ""file_name*"""
Find all *.ogg (case insensitive) files/directories under your home directory,find $HOME -iname '*.ogg'
search for all the mp3 files in the current folder and change the character encoding of them to <source-encoding>,"$ find . -name ""*mp3"" -print0 | xargs -0 mid3iconv -e <source-encoding> -d"
Find all files that aren't owned by user www-data,find -not -user www-data
"Search for the Perl regex ""[\x80-\xFF]"" in *.xml files under current directory tree","find . -name *.xml | xargs grep -P ""[\x80-\xFF]"""
Search the current directory recursively for files whose size is between 10 and 50 MB,find . -size +10M -size -50M -print
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"" 2>&1 | xargs ls -lrt | awk '{print $9}'"
display all the text files in a folder,find $1 -type f -name '*'$n'.txt'
Find all directories in the /data1/realtime directory tree that were modified within the last 60 minutes,find /data1/realtime -mmin -60 -type d
Find all *.mp3 files under current directory,find . -name *.mp3
"Print all files with a '-' after their name if they are regular files, and a '+' otherwise",find / -type f -exec echo {} - ';' -o -exec echo {} + ';'
display a long list and delete all the regular/normal files in the current folder starting with the word k which have been modified in the last 4 hours,find . -type f -name “k*.*” -mmin -360 -exec ls -l ‘{}’ ; | xargs -0 /bin/rm -f
Print the files to which symbolic links in the current directory point,find . -type l -print | xargs ls -ld | awk '{print $10}'
find all the core files in the entire file system and  delete them,find / -name core -exec rm -f {} \;
"Find all files in the current directory tree whose names are "".DS_STORE""","find . -name "".DS_STORE"""
Find regular files with permissions less than 111,find -perm -111 -type f
Find all files/directories under current directory tree wihout descending into './src/emacs' directory,find . -path './src/emacs' -prune -o -print
Find files/directories writable by group and others under the /path directory,find /path -perm -go+w
Find all the files in the current directory,find * -type f -print -o -type d -prune
Search the /usr/local/doc directory tree for .texi files,find /usr/local/doc -name '*.texi'
find the type of all the regular/normal files in the current folder,find . -type f -exec file {} \;
Search the /path directory tree for files having permissions 777,find /path -perm ugo+rwx
"Find recursively all files in the ""."" directory tree whose names end with "".class"" and delete them","find . -type f -name ""*.class"" -exec rm -vf {} \;"
Locate logo.gif in the /var/www directory tree,find /var/www -name logo.gif
Find all the files whose permissions are 777 in the current directory,find . -type f -perm 0777 -print
Find all directories with space in their names under current directory and rename them by replacing all spaces with _,"find -name ""* *"" -type d | rename 's/ /_/g'"
Get the disk space used by all *.txt (case insensitive) files/directories under current directory,"find . -iname ""*.txt"" -exec du -b {} + | awk '{total += $1} END {print total}'"
Find files modified more recently than file poop,find . -newer poop
"find the file ""httpd.log"" in the entire file system",find / -type f -name httpd.log
"search files  in the file system excluding those in the paths ""10_Recommended"" and ""/export/repo""","find / -name whatever -not -path ""/10_Recommended*"" -not -path ""/export/repo/*"""
list all the files which have size 0 bytes in some directories,find `gen_root_dirs.sh` -type f -size 0 -ls
find all regular files in a folder using regular expressions which do not have a specific name pattern and send these files as input to the script.bash script file,"find ""$DIRECTORY_TO_PROCESS"" -type f -iregex "".*\.$FILES_TO_PROCES""  ! -name ""$find_excludes"" -print0 | xargs -0 -I {} bash script.bash {}"
Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file,"find . -type f -name '*.html' -exec sed -i -e '1r common_header' -e '1,/STRING/d' {} \;"
Find all Executable files in the file system,find / -perm /a=x
display all the directories in the current folder for the files which have not been accessed in the last 48 hours,find . -type d -atime +2
Search the file system for regular files whose names are shorter than 25 characters,"find / -type f -regextype posix-extended -regex '.*/.{1,24}$'"
Print a sorted list of *.so files in the bla directory tree,find bla -name *.so -print0 | sort -rz
"searches through the root filesystem (""/"") for the file named Chapter1.",find / -name Chapter1 -type f -print
display all the directories in the current folder,find . -type d
"Recursively copy all regular files below current directory to directory /tmp on hostname, connecting as ssh user matching current username on local host.",find . -type f -exec scp {} hostname:/tmp/{} \;
"show all .cpp, .c, .h, .hpp files in the folder ~/src",find ~/src -type f \ -exec echo {} \;
Find all directories under current directory and replace all null delimiters with : in the output then remove the last :,"find -type d -print0 | sed -e ""y/\d0/:/;s/:$//;"""
find all the files in the entire file system that start with top,find / -name 'top*'
search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago,"find /home/you -iname ""*.mp3"" -atime 10 -type -f"
find files in home directory that names are game,find ~ -name game
Delete all hidden files under $some_directory,"find ""$some_directory"" -type f -name '.*' -delete"
Find all files larger than 20000k,find / -type f -size +20000k
Find all directories under current directory,find -type d
Find all files/directories with user id 120 under current directory tree,find . -uid 120 -print
"Remove all files whose names end with ""~"" in the /home/peter directory tree",find /home/peter -name *~ |xargs rm
"Search regular files from the /path/to/dir directory tree for lines that contain ""_START"" and are enclosed in lines ""@GROUP"" and ""@END_GROUP""","find /path/to/dir -type f -exec sed '/@GROUP/,/@END_GROUP/!d' {} + | grep '_START'"
"Find all ""G*.html"" files modified more than 7 days ago in the current directory tree","find . -mtime +7 -name ""G*.html"""
Find all files/directores that are newer than /etc/motd and conain the string 'top' at the beginning of their names under user's home directory tree,find ~ -name 'top*' -newer /etc/motd
"display list of all the C files ( fuiles with "".c"" extension ) in current folder",find . -name '*.c' -ls
find all regular files in current folder which are atleast 1 level deep and search in the alphabetical order of the directory names,find -s . -mindepth 1 -type f -print0; printf '\0';
"Find all files in the current directory tree, except GIT files",find -type f -name .git -prune -o -print
Search the current directory tree for PHP files changed less than 14 days ago,find . -name *.php -ctime -14
change the permissions of mp3 files in the folder /var/ftp/mp3 to 644,find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \;
Print the number of files in a directory.,"#!/bin/bash

directory=""/path/to/your/directory""

find ""$directory"" -maxdepth 1 -type f | wc -l"
"List the last modified file under ""$DIR""","find $DIR -type f -printf ""%T@ %p\n"" | sort -n | cut -d' ' -f 2 | tail -n 1"
display all the files in the current folder.,find .
Find all files under /home/username/public_html/modules  and set their permission to 640,find /home/username/public_html/modules -type f -exec chmod 640 {} +
find all the files in the current folder which have executable permission to all the users and display the ten files,find . -perm /a=x | head
"Remove the ""^M"" characters from all *.ext files under /home directory","find /home -type f -name ""*.ext"" -exec perl -pi -e 's/\r//g' {} \;"
display long listing of all regular/normal files whose size is less than 50 bytes.,find /usr/bin -type f -size -50c -exec ls -l '{}' ';'
search all the files in the current folder using regex,"find . -regex "".*/my.*p.$"""
find all the png files in the current folder which are present in the pattern list search .txt,find . -name '*.png' | grep -f search.txt
Recursively finds all files and prints all strings with 'text-to-find-here' from that files.,find / -type f | xargs grep 'text-to-find-here'
Run 'git pull' in every git repository in the current directory,"find . -type d -name .git -exec sh -c ""cd \""{}\""/../ && pwd && git pull"" \;"
Find all php files that belong to user 'takuya' and have been modified in the last 1 day,find -user takuya -name '*.php' -daystart -mtime -1
list *.pdf files under the /home/user/Desktop directory.,find /home/user/Desktop -name '*.pdf'
Find all files that have additional permissions,find / -perm -644
Delete all .svn files/directories under current directory,find . -name .svn -exec rm -rf {} \;
Look for files with wide open permissions,find . -type f  -perm a=rwx -exec ls -l {} \;
"Find all *.* files not within .git directory and run $SED_CMD -i ""s/$1/$2/g"" on each of them","find . -type f -name ""*.*"" -not -path ""*/.git/*"" -print0 | xargs -0 $SED_CMD -i ""s/$1/$2/g"""
change the ownership of all regular/normal files in the current directory after users confirmation,find . -type f -ok chown username {} \;
Search case insensitively for 'foo' in all the files with '.java' extension under current directory tree and show only the file names,"find . -type f -name ""*.java"" -exec grep -il 'foo' {} \;"
Count all the lines of code in all php files in current directory recursively,"find . -name ""*.php"" | xargs grep -v -c '^$' | awk 'BEGIN {FS="":""} { $cnt = $cnt + $2} END {print $cnt}'"
Find all regular files with '.what_to_find' extension in the entire filesystem and move them to directory '/new_directory',"find / -iname ""*.what_to_find"" -type f -exec mv {} /new_directory \;"
Find all files under minimum 1 level down the current directory,find .  -mindepth 1 -type f
"Find all *.c files under and below the current directory that contain ""wait_event_interruptible""",find . -name \*.c -print | xargs grep wait_event_interruptible /dev/null
"Set the setgid bit on all directories in the repository ""/git/our_repos""",find /git/our_repos -type d -exec chmod g+s {} +
Search core files in current direcory and delete .,find . -name core -exec rm {} \;
Find all *.rb and *.py files/directories under current directory,"find . -name ""*.rb"" -or -name ""*.py"""
Change permissions to 755 for all directories in the current directory tree,find . -type d | xargs chmod -v 755
Copy directory tree preserving UID and GID and leaving user files alone,find . -depth -print | cpio -o -O /target/directory
Remove all regular files from the current directory tree that were modified between August 10th and August 17th,"find . -type f -newermt ""Aug 10"" ! -newermt ""Aug 17"" -exec rm {} \;"
display all files in current folder which have not been modified in the last 60 minutes,find -mmin +60
"list files under the current directory that match the filename '...', suppressing all error messages",find . -name '...' 2>/dev/null
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find's -ls option,find ./ -daystart -mtime -3 -type f  ! -mtime -1 -exec ls -ld {} \;
Find all foo.mp4 files in the current directory tree,"find ./ -name ""foo.mp4"" -exec echo {} \;"
Find all files that are set user ID to root,find . -user 0 -perm -4000 -print
List the files in the /etc directory tree containing text '128.200.34.',find /etc -type f -print | xargs grep -il '128\.200\.34\.'
"Find all directories named ""D"" in the current directory tree","find . -name ""D"" -type d"
Change the file extension from '.txt' to '.bak' for all files/directories under current directory tree,"find . -name ""*.txt"" | sed ""s/\.txt$//"" | xargs -i echo mv {}.txt {}.bak | sh"
display all the text files in the temp folder,find /tmp -name *.txt
"List the files/directories under /PATH_to_SEARCH, do a numeric sort and print the ones with different inode numbers",find /PATH_to_SEARCH -ls | sort -n | awk '!seen[$1]++'
display a long listing of all the files in the current folder that have been accessed in today from the start of the day,find -daystart   -atime 0 -ls
Find all files/directories under ${CURR_DIR} directory,cd ${CURR_DIR} && find .
"find regular files in the current directory, without descending into sub-directories and display as a null separated list.",find -maxdepth 1 -type f -printf '%f\000'
Find recursively all files changed within the last 5 minutes starting from directory b,find b -cmin -5
find all the *.conf files under / (root),"find / -name ""*.conf"""
Search the /path directory tree for files lacking the group writable bit,find /path ! -perm /g+w
Find all regular files in /usr/bin accessed more than 20 days ago,find /usr/bin -type f -atime +20
"find all the files in the folder ~/Music which begin with ""Automatically Add""","find ~/Music/ -name ""Automatically Add*"""
Find all PHP files in the current directory recursively,find . -name \*.php -type f
find all files starting with capital letter in the current folder,"find . — name ""[A‑Z]*"" — print"
convert all the normal files in the current folder from dos format to unix format,find . -type f -exec dos2unix {} \;
display all the regular files in the current folder which dont not have the permission 777,find . -type f ! -perm 777
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found",find /the/path -type f -name '*.abc' -execdir rename 's/\.\/(.+)\.abc$/version1_$1.abc/' {} \;
Send Output From Find The Find Command To A File,find / -name *.mp3 -fprint nameoffiletoprintto
use find -exec with multiple commands regardless of their success or failure,"find . -name ""*.txt"" \( -exec echo {} \; -o -exec true \; \) -exec grep banana {} \;"
search for all the links in a folder and display all the broken links,find -L /target -type l | while read -r file; do echo $file is orphaned; done
Set file permission to 664 and directory permission to 775 for all files and directories under htdocs,find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +
"Find all files under current directory excluding the $OUTPUT file, calculate their md5sum with $MD5SUM_OPTIONS options and redirect the result to $OUTPUT","find . -type f ! -name ""$OUTPUT"" -exec md5sum $MD5SUM_OPTIONS {} + > $OUTPUT"
Find all files/directories named 'document' in the root filesystem partition,find / -xdev -name document -print
"Create symbolic links in the current directory for all files located in directory ""/path/with/files"" with a name containing ""txt""","find /path/with/files -type f -name ""*txt*"" -exec ln -s {} . ';'"
Find all files/directories under current directory tree whose paths match the regex 'filename-regex.\*\.html',find . -regex filename-regex.\*\.html
Find things changed today,find /path/to/search -daystart -ctime -1
Search the /path directory tree for files missing g+w or o+w bits,find /path ! -perm -022
Find all test2.h files under current directory,sudo find . -name test2.h
Recursively removes all files like '*.pyc' in a current folder.,rm `find . -name \*.pyc`
Delete all regular files that have not been modified in the last 60 weeks under $DIR directory tree,find $DIR -type f -mtime +60w -exec rm {} \;
display all directories in current folder excluding those which do not have read permission to all users and save the output to a file,"find . -type d ! -perm -g+r,u+r,o+r -prune -o -print > files_and_folders"
"Find ""*201512*"" regular files in /home/myhome/data/ARCHIVE/ and move them to /home/myhome/ARCHIVE/TempFolder/",find /home/myhome/data/ARCHIVE/. -name . -o -type d -prune -o -name '*201512*' -print | xargs -i mv {} /home/myhome/ARCHIVE/TempFolder/.
"Move all files in the current directory tree that match ""some_pattern"" to ""target_location""",find . -name some_pattern -print0 | xargs -0 -J % mv % target_location
find and delete all the empty directories in the current folder and all its sub directories too,find . -depth -empty -type d -delete
"List executable files in the current directory, sort the list and then display the differences between the list and file .gitignore.",find . -perm /111 -type f | sed 's#^./##' | sort | diff -u .gitignore -
Find all files/directories matching the regex .*sql.*,find -regex .*sql.*
Remove all tmp/*.mp3 files,find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs rm
Find all files/directories in level 2 down the current directory,find -mindepth 2 -maxdepth 2
"Replace all occurrences of '2013 Magento Inc.' with '2012 Magento Inc.' in all files with '.php, '.xml' and '.phtml' extensions under current directory tree",find . -name '*.php' -print0 -o -name '*.xml' -print0 -o -name '*.phtml' -print0 | xargs -0 sed -i '' 's/2013 Magento Inc./2012 Magento Inc./g'
display the list of all the normal files excluding hidden files which have been accessed in the last 500 days,find . -type f -not -name ‘.*’ -mtime +500 -exec ls {} \;
Find all .java files starting from the current folder,"find . -name ""*.java"""
"copy all the files with the extension "".type"" from one folder to a target directory","find ""$sourcedir"" -type f -name ""*.type"" -exec sh -c 'for f; do cp ""$f"" ""$0""; done' ""$targetdir"" {} +"
Find files that are empty,find -empty -type -f
Find all directories by the name `httpdocs' on the system,find / -type d -name 'httpdocs'
List the z* links in the /usr/bin directory with inode information and the file to which it points to,"find /usr/bin -type  l  -name ""z*"" -ls"
"Search the current directory tree for file ""a.txt""","find . -name ""a.txt"" -print"
Identify CMS version/releases accross all your Wordpress websites,"find /home/*/public_html/ -type f -iwholename ""*/wp-includes/version.php"" -exec grep -H ""\$wp_version ="" {} \;"
Find a more recent version of httpd.conf file than /etc/apache-perl/httpd.conf in entire file system,find / -name httpd.conf -newer /etc/apache-perl/httpd.conf
"display all the files in the home folder which end with "".xbm""",find ~ -name '*.xbm'
Perform white space safe deletion of files named core under /tmp,find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
find all the files in the root folder which have been modified in the last 24 hours and print them,find / -mtime -1 -print
Find all files/directories named file1 under current directory,find -name file1
Search file aaa from current direcoty downwards and print it .,find . -name aaa -print
"Find with combine multiple search criterias , in this command serach  files that begin with abc in there name and dont have .py extension .",find . -type f -name 'abc*' ! -name '*.py'
Find all *fstab* files under and below /etc,find /etc -name *fstab*
Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories,"find ${x} -type d -exec chmod ug=rwx,o= '{}' \;"
"Search the files from the current directory tree for ""foo""",find . -exec grep foo {} +
Change file permissions on all regular files within a directory,find /path/to/directory -type f -exec chmod 644 {} +
Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output,find $DIR -type f -exec grep $SEARCH /dev/null {} \; | wc --bytes
find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000,find . -uid +500 -uid -1000 -type f
Find *.html files in the current directory tree that were modified less than 7 days ago,"find . -mtime -7 -name ""*.html"" -print"
"List the current directory recursively ignoring the ""dir1"" subdirectory",find . -path ./dir1  -prune -o -print
Remove files modified at least five days ago in directory trees /path/to/files*,find /path/to/files* -mtime +5 -exec rm {} \;
Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree,find /home/user/Series/ -iname '*sample*' -exec rm {} \;
Find all files/directories under minimum 2 level down the current directory and set their permission to 700,find . -mindepth 2 | xargs chmod 700
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory,"find . -name ""$1"" -type f -print0 | xargs -0 grep -i ""$2"""
display all regular/normal files in the current folder which are accessed in the last 7*24 hours,find . -type f -atime -7
display all the files in the current folder which have been modified in one hour ago,"find .  -newermt ""1 hour ago"""
display all files in the folder /usr and its sub directory(do not search beyond the sub directory),find /usr -maxdepth 1 -print
Search the /etc/apache-perl directory tree for files newer than /etc/apache-perl/httpd.conf,find /etc/apache-perl -newer /etc/apache-perl/httpd.conf
Find files larger than 100MB in /var/www and exclude files with /download/ in their path from the output,"find /var/www/ -type f -name ""*"" -size +100M -exec du -h '{}' \;|grep -v /download/"
find regular  file named foo.txt under root / directory.,find / -name foo.txt -type f
"Search directory $CURR_DIR for regular files that were changed, accessed, or modified $FTIME days ago","find ${CURR_DIR} -type f \( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \) -printf ""./%P\n"""
Find all files/directories under current directory with null character as the delimiter and then replace the null characters with :,"find -print0 | tr ""\0"" "":"""
search all undo files(ending with .undo) in the current folder and calculate the total size of them,find -name '*.undo' -exec wc -c {} + | tail -n 1 | cut -d' ' -f 1
Search for all files newer than file /tmp/t,find / -newer /tmp/t
Replace spaces in file names with underscores for all files in the current directory tree,"find -name ""* *"" -type f | rename 's/ /_/g'"
find all the css files,find -name '*.css'
Find all files in the /home/ directory tree that were last modified less than 7 days ago,find /home -mtime -7
"Find any file that has ""disc"" somewhere in its name in the current directory and all of its sub-directories.",find . -name *disc*
Recursively removes all files and folders named '.svn' in a current folder.,find . -name .svn | xargs rm -fr
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -type f -mtime +$DAYS_TO_SAVE -print0 | awk -v RS='\0' -v ORS='\0' '{ print } END { print NR }' | xargs -0 rm"
"Find all files in the current directory tree whose names are "".DS_STORE""","find . -name "".DS_STORE"""
search for a word in all the files in the current directory,find . -type f -exec grep 'needle' {} \;
display all the normal/regular files in the directory FOLDER1,find FOLDER1 -type f -print0
"Search my_folder recursively for text files containing ""needle text""","find my_folder -type f -exec grep -l ""needle text"" {} \; -exec file {} \; | grep text"
find all the files in the current folder which have been modified after the file disk.log,find . -newer disk.log -print
Replace all spaces with underscores in file paths under current directory.,"find -name ""* *"" -type f | rename 's/ /_/g'"
Find all image.pdf files under ./polkadots,"find ./polkadots -type f -name ""image.pdf"""
Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago,find /directory/whatever -name '*.tar.gz' -mtime +$DAYS
Forcefully delete all files in the current directory,find . -name '*' | xargs rm
display the count of number html files in the current folder,"find . -name ""*.html"" -print | xargs -l -i wc {}"
find all the regular/normal files in the /path folder and delete them,find /path -type f -print0 | xargs -0 rm
display list of all the regular/normal files in the home folder which are bigger than 512 kb,find /home/ -type f -size +512k -exec ls -lh {} \;
Find all files under /home/mywebsite/public_html/sites/all/modules and set their permission to 640,find /home/mywebsite/public_html/sites/all/modules -type f -exec chmod 640 {} +
Counts lines in each *.php file.,"wc -l $(find . -name ""*.php"")"
"Search for a pattern ""can't"" in all the files with the name ""file-containing-can't"" in the current directory tree","find . -name ""file-containing-can't"" -exec grep ""can't"" '{}' \; -print"
Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory,"find /etc -name ""*.txt"" | xargs -I {} mv {} {}.bak"
"Search all files in the current directory tree that are named ""whatever"" for ""you_search_for_it""",find -name whatever -exec grep --with-filename you_search_for_it {} \;
find all files in the current folder and search for a word in them.,"find . -type f -exec grep ""applicationX"" {} \;"
Measure the disk space taken up by all *.txt files in the current directory tree,"find . -name ""*.txt"" -print0 |xargs -0 du -ch | tail -n1"
Find all files under current directory,"find ""`pwd`"" -type f"
Search the current directory tree for regular files omitting directory `omit-directory',find . \( -name omit-directory -prune \) -o \( -type f -print \)
Find all files/directories that contain the string literal '$VERSION' in their names under current directory tree,find . -name '*$VERSION*'
list the files with a name ending with '.mp3' or '.jpg' and beginning with 'foo',find . \ -name 'foo*' -print
Find files/directories under current directory that matches './projects/insanewebproject' in their paths,find -ipath './projects/insanewebproject'
Find all files under /mountpoint and below which have hard links,find /mountpoint -type f -links +1
"Find all files in the current directory tree ignoring the "".git"" directory",find . -type d -name '.git*' -prune -o -type f -print
Find all files under directory tree /path/to/dir whose permissions are not 644,find /path/to/dir ! -perm 0644
Search all files under and below /etc for IP addresses,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
change the permissions of all the directories in the current folder,find . -type d -exec chmod 2775 {} \;
Search for files/directories with the case insensitive pattern anaconda.* in /var/log directory and create an archive (file.tar) of the last file found,find /var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \;
"Rename all ""thumbs"" directories to ""thumb"" in the current directory and 1 level below",find . -maxdepth 2 -type d | sed 'p;s/thumbs/thumb/' | xargs -n2 mv
remove all the log files which have not been modified in the last 5 days,find /logs -type f -mtime +5 -exec rm {} \;
display all the files in the kat folder,"find kat -printf ""%f\n"""
"Find files in the current directory whose names begin with ""file"" and remove them",find . -name file* -maxdepth 1 -exec rm {} \;
Find all files under $dir,"find ""$dir"" -type f"
Remove all broken symbolic links in /usr/ports/packages,find -L /usr/ports/packages -type l -delete
Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files,find $dir -type f -name $1 -exec sed $num'q;d' {} \;
Measure the disk space taken up by all *.txt files in the current directory tree,"find . -name ""*.txt"" -print0 |xargs -0 du -ch | tail -n1"
"display all the "".c"" files in the current folder excluding those that are present in the .svn sub folder","find .  -name .svn -prune -o -name ""*.c"" -print"
"display all file in the home folder except "".c"" files","find $HOME -not -iname ""*.c"" -print"
Delete all files/directories taken by the glob pattern * except the ones with the name 'b',find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf '{}' ';'
Display the number of lines in all regular files under current directory tree and also show the total count,find . -type f -exec wc -l {} +
Find files/directories named 'aaa.txt' under current directory tree,find . -name aaa.txt
find all the files  in the entire file system which belong to the user with the uid 1005 and discard all the errors,find / -uid 1005 2>/dev/null
Find files on the system that are bigger than 20 megabytes,"find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null | awk '{ print $NF "": "" $5 }'"
display list of all the hidden files in the home folder,"find $HOME -name "".*"" -ls"
find all the word press configuration php files in the folder /var/www and do not search beyond two levels,find /var/www/ -name wp-config.php -maxdepth 2
find all the files in the folder /opt which have been accessed exactly 20 days ago,find /opt -atime 20
Find all files/directories named 'foo.bar' in the entire filesystem,find / -name foo.bar -print
Replace all spaces with underscores in directory names under current directory.,"find /tmp/ -depth -name ""* *"" -execdir rename 's/ /_/g' ""{}"" \;"
display all files in current folder which have not been modified in the last 60 minutes,find -mmin +60
"change owner of the files into directory ""/mydir"" with "".txt"" extension to user root","find /mydir -type f -name ""*.txt"" -execdir chown root {} ';'"
search all jpg files in current folder,"find . -type f -name ""*.jpg"""
Counts total number of lines in all file under current folder.,find ./ -type f -exec wc -l {}  \; | cut -d' ' -f1 | paste -sd+ | bc
"Search the current directory tree for files containing ""album"" and ""vacations"" in their names and not containing ""2015""","find . -name ""*album*"" -a -name ""*vacations*"" -a -not -name ""*2015*"""
Find all files under current directory and replace the match of the regex '^.*/S' with 'S' in every line of the output,find . -type f -print | sed 's|^.*/S|S|'
Copy all *.data files under jcho directory to files whose names are constructed by replacing the first '0' to '2' in their names,"find jcho -name *.data -exec sh -c 'f=""${0}""; d=$; cp ${f} ${d} ' {} \;"
display all regular files in current folder which are atleast 1 level deep and search in the alphabetical order of the directories,find -ds . -mindepth 1 -type f -print0; printf '\0';
"Recursively lists all files in a current folder in long format, sorting by modification time.",ls -ldt $(find .)
find all the files in the home folder which have not been modified in the last 1 year.,find $HOME -mtime +365
"Find symlinks under and below the ""test"" directory and replace them with the content of the linked files",find test -type l -exec cp {} {}.tmp$$ \; -exec mv {}.tmp$$ {} \;
display a long listing of all the files in the current folder which have been modified in the last 24 hours,find . -mtime -1 | xargs ls -ld
Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory,find ~/container  -mindepth 3 -type f -exec mv {} . \;
display list of all the files in the /tmp folder,"find /tmp/ -exec ls ""{}"" +"
Remove trailing spaces and tabs from all *.java files under current directory,"find . -type f -name ""*.java"" -exec perl -p -i -e ""s/[ \t]$//g"" {} \;"
Locate files that reside in the home directory and have not been accessed in the past 30 days,find $HOME -atime +30
Find files modified at least 5 days in the future,"find . -newermt ""5 days"""
"Change all file permissions to 664 and all directory permissions to 775 in directory tree ""htdocs""",find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +
find all the files in the current directory and display them,find . -exec echo {} ;
find all the files in the current folder which are readable,find . -readable
Print files created/modified in the last day,find /directory -newermt $(date +%Y-%m-%d -d '1 day ago') -type f -print
Find all syslog directories under /var/log directory,"find /var/log -name ""syslog"" -type d"
find the oldest normal file in the current directory and display with its timestamp,"find ! -type d -printf ""%T@ %p\n"" | sort -n | head -n1"
Find all files/directories in current directory and execute myscript with minimal invocation for those files/directories,find . -exec myscript {} +
Get the disk space used by all *.txt  files/directories under current directory,"find . -iname ""*.txt"" -exec du -b {} + | awk '{total += $1} END {print total}'"
"search for the file ""filename"" in the entire file system",find / -name filename
"Unzip all files matching ""file_*"" and pipe into ""agrep -dEOE 'grep'""",find -name 'file_*' -follow -type f -exec zcat {} \; | agrep -dEOE 'grep'
find all regular/normal files in the current folder,find -type f
Find all the files which are accessed 50 days back,find / -atime 50
find all the directories in the $LOGDIR folder which have been modified in the last 24 hours and compress them,find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
Locate all the hard links of file `passwd',find / -samefile passwd
Find and list all files on your current directory and show a few lines of output from the beginning,find | head
Archive all *.xml files under current directory tree to xml.tar excluding the files that match '/workspace/' in their paths,find . -name \*.xml | grep -v /workspace/ | tr '\n' '\0' | xargs -0 tar -cf xml.tar
Find all files/directories under current directory and print their paths,"find . -exec echo {} "";"""
find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.,find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
remove all the files in the present directory which have space in their name.,"find . -name ""* *"" -exec rm -f {} \;"
"Remove the ""^M"" characters from all *.ext files under /home directory","find /home -type f -name ""*.ext"" -exec sed -i -e 's/^M$//' {} \;"
Find all files/directories that contain the string literal '$VERSION' in their names under current directory tree,find . -name '*$VERSION*'
Find all directories name nasa in the current directory and below.,find . -name nasa -type d
"display a long listing of all images with the name ""articles"" in the current folder","find . -iname ""Articles.jpg"" -exec ls -l {} \;"
Find all files larger than 20000k,find / -type f -size +20000k
"display all directories in the folder ""/myfiles""",find /myfiles -type d
"Find files recursively with extension ""ext""","find . -name ""*.ext"""
"Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/",find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents
"find all regex ""./[a-f0-9\-]\{36\}\.jpg"" files","find . -regex ""./[a-f0-9\-]\{36\}\.jpg"""
find all text files which have extra extensions in the current folder,find . -name '*.text' -exec $SHELL -c '[ ! -f ${1%.*} ]' $SHELL '{}' ';' -print
list all zero-length files under the current directory,find . -empty -exec ls {} \;
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir,find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir
find all the files in the entire file system whose size is exactly 15MB,find / -size 15M
Search the current directory tree for directories that can be opened by noone,find -type d ! -perm -111
find all files and directories that have been modified in the last seven days,find . -mtime -7
Find broken links,find / -type l -print0 | xargs -0 file | grep broken
display all regular/normal files in the current folder with the name dummy,find -type f -name dummy
"Print the commands that would execute ""myfile"" on all .ogv files from the current directory tree",find ./ -name *.ogv -exec echo myfile {} \;
Search the file system for regular files whose names are shorter than 25 characters,"find / -type f|egrep ""/[^/]{0,24}$"""
Find files associated with an inode,find . -inum 968746 -print
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar,"find . -name ""*FooBar*"" -exec sh -c 'cp -- ""$@"" ~/foo/bar' sh {} +"
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.,"find . -name ""FILE-TO-FIND"" -exec rm -rf {} +"
Find directories that are directly under /home/user/workspace directory  and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days,"find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -execdir echo ""It seems that {} wasn't modified during last 30 days"" ';'"
Find all *.java files under current directory and archive them to myfile.tar,"find . -type f -name ""*.java"" | xargs tar rvf myfile.tar"
"Find files in the ""dir"" directory tree whose names are 33 characters in length",find dir -name '?????????????????????????????????'
Find every file under the directory /home owned by the user joe.,find /home -user joe
find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names,find . -name '*.[ch]' | xargs grep -l thing
Delete all .svn files/directories under current directory,find . -name .svn |xargs rm -rf
compresses all the files in the current folder with default depth,find . -depth -print | cpio -dump /backup
Find all *.rb  files under current directory and change their mode to 600,"find . -name ""*.rb"" -type f -exec chmod 600 {} \;"
Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/,find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \; | xargs rm
List all broken symlinks including cyclic links under current directory,find . -type l -exec test ! -e {} \; -printf '%Y %p\n'
Find all files/directories under '/var/tmp' directory tree that belong to a user with user id 1000,find /var/tmp -uid 1000
Find all regular files starting from the current directory,find . -type f
Find all regular files undee '/usr/bin' directoryt tree that are less than 50 bytes in size,find /usr/bin -type f -size -50c
"Find all files/directories with '.tar.gz' extension under $DIR/tmp/daily/ directory tree, sort them numerically and show the last 3 of them",find $DIR/tmp/daily/ -name '*.tar.gz' | sort -n | tail -3
Get a list of directories owned by group ID 100,find / -type d -gid  100
Check if directory $some_dir is empty,"find ""`echo ""$some_dir""`"" -maxdepth 0 -empty"
Count the number of lines in all files in the xargstest/ directory tree that match pattern 'file??',find xargstest/ -name 'file??' | sort | xargs wc -l
"search for regular/normal file with the name ""myfile"" in the entire file system",find / -name myfile -type f -print
Find all files that are modified in last 3 days,find . -type f -mtime -3
find all the .jpg files in / and copy them to the current folder.,find / -type f -name *.jpg  -exec cp {} . \;
create a backup of all the files in the folder /tmp and display the taken for this operation,timex find /tmp -print|backup -ivqf/dev/null
display all the files in the current folder which do not belong to any user,find . -nouser
Force delete all the regular/normal files in the current folder and do not search in the sub folders   (print0 is used to handle files which have newlines in their names or files with the name only as spaces ),find . -maxdepth 1 -type f -print0 | xargs rm -f
find in the entire file system for the file mysql,sudo find / -name mysql -print
"Search the current directory tree for all files matching regular expression "".*\.rb$""","find . -regex "".*\\.rb$"""
Find all *.xml.bz2 files under current directory,find . -name \*.xml.bz2
Print $d if $d is empty,"find ""$d"" -prune -empty"
find regular files which modification time is  7 days ago,find . -mtime -7 -type f
"Find all files in the current directory tree with extension .html and replace all occurences of ""php"" with ""html"" inside them","find ./ -type f -name *"".html"" | xargs sed -i ""s/php/html/g"""
find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt,"find /    \ ,"
Fix files to default permissions 755,find . -type d -exec chmod 755 {} \;
Search case insensitively for 'foo' in all the files with '.java' extension under current directory tree and show only the file names,"find . -type f -name ""*.java"" -exec grep -il 'foo' {} \;"
Find all directories in the current directory tree whose names do not contain '.' and move their contents to the current directory,find . -type d ! -iname '*.*' | while read d; do mv $d/* .; done
Find all files under $dir directory,"find ""$dir"" -type f"
Find files newer than `tmpfile' starting from the current directory,find . -newer tmpfile
Locate symbolic links in /usr and below,find /usr -type l
display all the files in the current folder which have been modified in the last 14*24 hours,find . -mtime -14 -print
display long listing of all the empty files in the current folder,find . -empty -exec ls -l {} \;
Find all files under current directory,find -type f
"Remove all files and directories called ""test"" from the current directory tree","find . -name test -exec rm -R ""{}"" \;"
Write the list of regular files in the current directory tree to files /tmp/grep1 and /tmp/grep2,find ./ -type f | tee /tmp/grep1 /tmp/grep2 >/dev/null
Find all files/directories in 1 level down the current directory,find -mindepth 1 -maxdepth 1
Find all .txt files in current  directory and rename with  .html .,"find  . -type f -name ""*.txt"" -exec mv {} `basename {} .html` .html \;"
"Search directory foo for files containing ""foo/bar"" in their full names",find foo -path foo/bar -print
Search the /tmp directory tree for files owned by user `ian',find /tmp -user ian
find all the files in the current folder that have been modified in the last 24*3 hours,find ./ -mtime -3
Find files with 002 permission in entire file system and print them with the string 'has world write permissions' printed at last,echo $(find / -type f -perm -002) has world write permissions
Find files with group write permission and remove the permission,find . -perm -20 -exec chmod g-w {} ;
Find all regular files in the current directory tree ignoring directory ./source/script,find . -path ./source/script -prune -o -type f -print;
"Remove files named ""core"" from the /work directory tree and write their names to /dev/stderr (the standard error","find /work \ , \"
"Find all regular files under $DIR directory tree with "".$TYPE"" extension (case insensitive) where $TYPE expands in the current shell","find $DIR -type f -iname ""*.$TYPE"""
Delete all hidden files under $some_directory,"find ""$some_directory"" -type f -name '.*' -delete"
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir,find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +
Delete all filename* files under /dir directory,"find /dir -name ""filename*"" -type f -print | xargs rm"
Find all of jzb's files,find -user jzb
Find all *.rb  files under current directory and count their line numbers,"find . -name ""*.rb"" -type f -exec wc -l \{\} \;"
Find all files/directories named modules under current directory and list them twice,find . -name modules \! -exec sh -c 'find -name modules' \;
Remove files under current directory with inode number $inum,find . -inum $inum -exec rm {} \;
"Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files","find [directory] -name ""pattern_to_exclude"" -prune -o -name ""another_pattern_to_exclude"" -prune -o -name ""pattern_to_INCLUDE"" -print0 | xargs -0 -I FILENAME grep -IR ""pattern"" FILENAME"
"find all regex  "".*/[a-f0-9\-]\{36\}\.jpg"" files","find . -regextype sed -regex "".*/[a-f0-9\-]\{36\}\.jpg"""
change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html,find /home/nobody/public_html -type f -exec chmod 644 {} \;
display the count of total number of empty files in the current folder,find . -type f -empty | wc -l
"Set read, write and execute permission for all  for the files/directories in foldername directory tree","sudo find foldername -exec chmod a+rwx {} "";"""
Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories,"find . -type f -exec chmod ug=rw,o= {} \;"
Remove files in the current directory tree modified more than 31 days ago recursively,find . -type f -mtime +31 -print0 | xargs -0 -r rm -f
"search for the file job.hostory in the folder ""/data/Spoolln""",find /data/SpoolIn -name job.history
Delete all files under $INTRANETDESTINATION/weekly directory tree that were modified more than 32 days ago,find $INTRANETDESTINATION/weekly -mtime +32 -exec rm {} \;
Print file size with the file name,find . -name '*.ear' -exec du -h {} \;
find all the files in the current directory which are bigger than 1000MB,find . -size +1000M
List every symbolic link in every home directory's subdirectory owned by group `staff',find `pwd` -group staff -exec find {} -type l -print ;
Find all directories that start with stat,find . -type d –iname stat*
find all the files in the current folder that end with the word bar,find -name *bar
Search for 'It took' in all $srch1*  files under current directory,"find . -iname ""$srch1*"" -exec grep ""It took"" {} \; -print"
Execute /usr/bin/find with $* arguments where current directory is the first argument,/usr/bin/find ./ $*
"Find all files/directories under current directory without descending into './bookshop/mediaimg', '*/CVS*', './files', './images/cms', './internal', './limesurvey171plus_build5638' and './gallery2' paths, then run cvs command with 'status' and each path as arguments and redirect the output to output.txt fle","for i in `find .  -not \ -path './bookshop/mediaimg' -prune -o -path '*/CVS*' -prune -o  -path './files' -prune  -o -path './images/cms' -prune -o -path './internal' -prune -o -path './limesurvey171plus_build5638' -prune  -o -path './gallery2' -prune -o  -print  `; do cvs status  ""$i"" |grep Status ; done &>~/output.txt"
List all the file links,find . -type l
Find all the files/directories in '/path/to/files' directory tree which have not been modified in the last 2 hours,"find ""/path/to/files"" -mmin +120"
Find all files in /home/user/ that were created or changed 10 minutes ago,find /home/user/ -cmin 10 -print
Find all *.plist files/directories under current directory,find . -name \*.plist
Search the current directory recursively for regular files last modified more than 2 days ago,find . type -f -mtime +2
Find all *.txt files/directories under current directory and execute process for each of them,find . -name \*.txt -print0 | xargs -0 -I{} process {} argument
Print the list of the current directory's subdirectories,find . -maxdepth 1 -mindepth 1 -type d -printf '%f\n'
change owner of the files into directory dir_to_start except directory dir_to_exclude to user owner,find dir_to_start -name dir_to_exclude -prune -o -print0 | xargs -0 chown owner
print the names of all of the unstripped binaries in the /usr/local directory tree. Builtin tests avoid running file on files that are not regular files or are not executable,find /usr/local -type f -perm /a=x | xargs file |  grep 'not stripped' | cut -d: -f1
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive  of the last file found,find var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \;
Find all the files in file system which are modified more than 50 days back and less than 100 days,find / -mtime +50 –mtime -100
"Search for all files that end in "".conf""","find / -type f -name ""*.conf"""
Find files readable only by the group,find . -perm g=r -type f -exec ls -l {} \;
"display all the files in current folder which start with ""file2015-0""","find . -name ""file2015-0*"""
Search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified.,find ~/ -mtime -2 -o -newer filename
Find all .java files starting from the current folder,"find * -name ""*.java"""
display all the configuration files in the current folder which are in the current tree structure,find .  -path '*/*config'
Remove empty directories from the current directory tree,find . -depth -empty -type d -delete
Find all files/directories startring with 'onlyme' in their names under current directory without going into sub-directories,find . -maxdepth 1 -name 'onlyme*'
Find & replace broken symbolic links,find -L . -type l -delete -exec ln -s new_target {} \;
Find files/directories under '/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time,find /dir -newer yesterday.ref -a \! -newer today.ref -print
Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time,find . -name '*.[ch]' | xargs grep $1 | less
search for all the files in the folder /data/images which are modified after /tmp/foo,find /data/images -newer /tmp/foo
View manual page of find utility,man find
See what files are executable by the file's owner and group,find -type f -perm -110
"find all the "".jpg"" files in current folder and display their count",find ./ -name '*.jpg' -type f | wc -l
Find all .sh files in or below the current directory and move them to folder ~/back.scripts,"find . -name ""*.sh"" -print0 | xargs -0 -I file mv file ~/back.scripts"
Search the file system for regular files whose names are shorter than 25 characters,"find / -type f | egrep '.*/.{1,24}$'"
Search for the regex \s1$ in all files under current directory,find . -type f -exec perl -wnl -e '/\s1$/ and print' {} +
Find all files in ~/clang+llvm-3.3/bin/ and print 'basename /file/path' for each file,find ~/clang+llvm-3.3/bin/ -type f -exec echo basename {} \;
display list of all the hidden files in the home folder,"find $HOME -name "".*"" -ls"
Search the /Applications directory tree for *.app directories,"find /Applications -type d -name ""*.app"""
Show manual for the find command,man find
"display all the files in the file system which belong to the user ""user1""",find / -user user1
"Report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days",find /mydir1 /mydir2 -size +2000 -atime +30 -print
Find all files that aren't owned by user www-data,find -not -user www-data
Find all files starting from the current directory which are owned by the user tommye,find . -user tommye
Find all directories in current directory  excluding . and print a sorted list in the file a,find . -maxdepth 1 -type d ! -name . | sort > a
"Recursively move all files in ""/path/to/srcdir"" to ""dest/""",find /path/to/srcdir -type f -print0 | xargs -0 -i% mv % dest/
Search the current directory recursively for text files containing at least one character,find . -type f -exec grep -Iq . {} \; -and -print
Search for first match of the case insensitive regex 're' in all *.coffee files under current directory and print the file paths along with the matches,find . -print0 -name '*.coffee'|xargs -0 grep -m1 -ri 're'
Find files/directories named 'foo.bar' in the root filesystem partition,find / -name foo.bar -print -xdev
Find all files in the current directory tree whose pathnames match pattern '*/1/lang/en.css',find . -path ‘*/1/lang/en.css’ -print
Calculate the md5 sum of all files in the current directory with the filename printed first,find -maxdepth 1 -type f -exec md5sum {} \; | awk '{s=$2; $2=$1; $1=s;}1'
"Show the list of all files on the system whose names do not end in "".c""","find / \! -name ""*.c"" -print"
"Add ""Line of text here"" on top of each *.py files under current directory",find . -name \*.py -print0 | xargs -0 sed -i '1a Line of text here'
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid',"find -not -name ""query_to_avoid"""
Find all *.zip files under current directory and unzip them in the same directory as the files,find . -name '*.zip' -execdir unzip '{}' ';'
"display all files in current folder excluding those that have the word ""git"" in their name and display files that have git in their path names",find . ! -name '*git*' | grep git
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll"" -not -type d"
Find all files/directories under current directory,find ./
find all instances of a specific file in the entire file system and discard the errors,find / -name expect 2>/dev/null
Search for 'string_to_find' in all files under current directory,find -type f | sed 's/./\\&/g' | xargs grep string_to_find
"change the permissions of all the regular/normal files in the folder ""/path/to/someDirectory"" to 644",sudo find /path/to/someDirectory -type f -print0 | xargs -0 sudo chmod 644
Find files/directories named 'file.txt' that belong to user 'tutonics' in the entire filesystem,"find / -user tutonics -name ""file.txt"""
"list files found under the current directory ending in ""txt"" or ending in ""html""",find . -name '*.txt' -o -name '*.html'
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers,find . -name '*.axvw' -print0 | xargs -0 grep -n 'some string'
"search for the folder .dummy and remove it from the folder ""Test folder""","find ""Test Folder"" -type d -name '.dummy' -delete"
"Find the directories whose pathnames contain ""New Parts"" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views","find -mindepth 3 -maxdepth 3 -type d | grep ""New Parts"" | tr '\012' '\000' | xargs -0 ln -s -t /cygdrive/c/Views"
list all java file that StringBuff in context.,"find . -type f -name ""*.java"" -exec grep -l StringBuffer {} \;"
Recursively removes all files and folders named '.svn' in a current folder.,find . -name .svn -exec rm -rf {} \;
Find all *Company* files/directories under /root/of/where/files/are directory,find /root/of/where/files/are -name *Company*
"search for the file ""foo.txt"" in the entire file system",find / -name foo.txt
Find all socket files in the current directory and its sub-directories.,find . -type s
Print the list of all files larger than 100MB within a directory.,"#!/bin/bash

find /path/to/your/directory -type f -size +100M"
Find all files and directories that have been modified in the last seven days.,find . -mtime -7
Get a recursive file list of directory $dir,"find ""$dir"" -type f"
search for all the directories in a folder and give them as input to the python script,find /stuff -type d -exec script.py {} +
"Search the regular files of the current directory tree for string ""whatever""",find . -type f | xargs -L 100 grep whatever
Get the disk space used by all *.txt (case insensitive) files under /home/d directory,"find /home/d -type f -name ""*.txt"" -printf ""%s\n"" | awk '{s+=$0}END{print ""total: ""s"" bytes""}'"
Find all SGID files in entire file system,find / -perm +2000
"search for the file "".user.log"" in a folder",find /nfs/office -name .user.log -print
Find all files/directories with '.o' extension under '/lib/modules' directory tree,find /lib/modules -name '*.o'
Print a list of all duplicate case insensitive file paths in the current directory tree,find . | sort -f | uniq -i -d
Identify CMS version/releases accross all your Wordpress websites,"find /home/*/public_html/ -type f -iwholename ""*/wp-includes/version.php"" -exec grep -H ""\$wp_version ="" {} \;"
"Find files in two different directories (esofthub and esoft) having the ""test"" string and list them","find esofthub esoft -name ""*test*"" -type f -ls"
Exclude directory from find . command,find ./ -path ./beta/* -prune -o -iname example.com -print
"search for a word in all the .C files( those having the extension ""c"") in current directory",find . -type f \( -iname “*.c” \) |grep -i -r “keyword”
"find StringBuffer in all *.java files, ignoring case","find . -type f -name ""*.java"" -exec grep -il string {} \;"
Find all files under /path/to/base/dir and change their permission to 644,chmod 644 $(find /path/to/base/dir -type f)
find all the text files which are present in the current directory excludinghidden files.,find . -type f \
"Search the files from directory tree ""dirname"" for string ""foo""",find dirname -exec grep foo {} +
Find files/directories in entire file system that were accessed in less than a day ago,find / -atime -1
Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods,find / \ -atime +7 -exec rm {} \;
"display a long listing of all the files that begin with the name ""Metallica"" in the entire file system",find / -name 'Metallica*' -exec ls -l {} \;
Clean the current directory from all subversion directories recursively,"find . -type d -name "".svn"" -print | xargs rm -rf"
"Find files containing string ""#!/bin/ksh"" and append their names and matching strings to /tmp/allfiles",find . -type f -print | xargs /usr/bin/grep -il 'bin/ksh' | tee /tmp/allfiles
"search for all files ending with "".mkv"" in current folder","find /volume1/uploads -name ""*.mkv"""
Find files in the current directory and below that are newer than /bin/sh,find . -newer /bin/sh
Find all files/directories with '.bar' extension in maximum 2 levels down the current directory,find . -name *.bar -maxdepth 2 -print
Find all files under /myfiles with read-write access for others,find /myfiles -type f -perm -o+rw
Find all files in the file system with the SUID bit,find / -perm -u+s -print
change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition,"find . -xtype f \! -iname *.html   -exec mv -iv ""{}""  ""{}.html""  \;"
display all the jars in the current folder,find . -iname '*.jar'
Run script `deslash.sh' on all thumb.png files in the current directory tree,"find -type f -name thumb.png -exec ./deslash.sh {} "";"""
To match only hidden dot directories,"find /nas01/backups/home/user/ -type d -name "".*"" -print0 -exec ls -lrt {} \;"
Find all *.m4a files/directories under /home/family/Music directory,find /home/family/Music -name *.m4a -print0
find all the files in the current folder which have been accessed in the last 24 hours,find . -type f -atime 1
find all the files ending with .ini in the current directory.,find . -name *.ini
"Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/","find $DIR/tmp/daily/ -type f -printf ""%p\n"" | sort -rn | head -n 2 | xargs -I{} cp {} $DIR/tmp/weekly/"
Move all *.php~  files under current directory to /mydir,"find . -iname ""*.php~"" -exec mv ""{}"" /mydir +;"
Search the current directory and all of its sub-directory for any PDF files.,"find . -name ""*.pdf"" -print"
Find files changed in the last 1 day,find . -mtime -1 -type f
find all the files in home folder which have been modified in the last 24 hours,find $HOME -mtime -1
Delete all *txt files under current directory,"find . -name ""*txt"" -type f -print | xargs rm"
ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours,find /mydir -atime +100 -ok rm {} \;
Delete all files/directories with '.old' extension under current directory tree,find . -name “*.old” -delete
"sort each file in the bills directory, leaving the output in that file name with .sorted appended",find bills -type f -execdir sort -o '{}.sorted' '{}' ';'
find all the files in the entire file system that were modified in the last 10 minutes,find / -mmin -10
tar all the regular java files to myfile.tar,"find . -type f -name ""*.java"" | xargs tar cvf myfile.tar"
search for a word in all the php files in the current folder and display the count of all matching lines.,find . -name \*.php -type f -exec grep -Hn '$test' {} \; | wc -l
"Find *.tex files in the current directory tree that contain text ""documentclass""",find . -type f -name *.tex -print0 | xargs -0 grep -l 'documentclass'
"Search for files ""file1"" or ""file9""",find . -name file1 -or -name file9
Find *.o files with permissions 664 in the current directory tree,find . -name *.o -perm 664 -print
"display all scala files in the directory ""src/main""","find . -type f -path ""*src/main/*\.scala"""
Find all files/directories that were modified after February 1st under '/usr' directory tree,"find /usr -newermt ""Feb 1"""
"Copy file header.shtml to directories dir1, dir2, dir3, and dir4",find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
Find all empty directories recursively starting from the current one and delete them,find . -type d -empty -delete
display all the header files  and cpp files in the current folder,find . -name \*.h -print -o -name \*.cpp -print
loop over the results of a find command,"find . -type f -name '*.*' -print0 | while IFS= read -r -d '' file; do     printf '%s\n' ""$file"" done"
Find file names *blast* in specfied directory,"find /usr/local -name ""*blast*"""
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively,find . -maxdepth 1 -type d -exec chmod -R 700 {} \;
Force delete all files in the current folder,"find . | xargs -i rm -f ""{}"""
Print content of all files ending with '*.foo' under the current directory,cat $(find . -name '*.foo')
Archive all files/directories under data/ into archive.tar,find data/ -print0 | tar --null -T - --create -f archive.tar
"Execute zcat on every file matching ""*20120805.gz"" in the current directory and subdirectories",find . -name *20120805.gz -exec zcat {} \;
"Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.","find /       \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \              \( -size +100M -fprintf /root/big.txt  '%-10s %p\n' \)"
List in detail regular files from the current directory tree whose names match Perl regular expression '\w+-\d+x\d+\.\w+$',find -type f |  grep -P '\w+-\d+x\d+\.\w+$' | sed -re 's/(\s)/\\\1/g' | xargs ls -l
Find all empty directories in the current one and delete them,find . -type d -maxdepth 1 -empty -print0 | xargs -0 /bin/rmdir
find all text files in current folder; which have been modified exactly 5 days ago,"find . –name ""*.txt"" –mtime 5"
"Removes all files from current folder but 5 newest ones, ignoring folders in a files list.",find . -maxdepth 1 -type f | xargs -x ls -t | awk 'NR>5' | xargs -L1 rm
find all php files in the folder  /var/www/,"find /var/www/ -type f -iname ""*.php"" -print"
Find all files/directories under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks,"find /path/to/dir/* -printf ""%TY%Tm%Td%TH%TM%TS|%p|%l\n"""
list all *.txt files in the user's home directory.,find ~/ -name '*.txt'
Find all symbolic links under the current folder and below,find –L –xtype l
Find all Read Only files,find / -perm /u=r
Delete all files in the current user's home directory and its sub-directories that have not been accessed for more than 100 days.,find ~ -atime +100 -delete
"find list of all files with file permission , link , owner , group , reation time , size , file name",find . -exec ls -ld {} \;
Find regular files named core under /tmp and delete them,find /tmp -name core -type f -print | xargs /bin/rm -f
Search the current directory up to depth level 2 for files and directories,find . -maxdepth 2
"Copy a file xyz.c to all the directories below the current one whose names begin with ""temp""","find . -type d -name ""temp*"" | xargs -n1 cp xyz.c"
display all the files in the home folder which have read permission to the user,find /home -perm /u=r
Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.,"find ~/dir_data -type d -exec chmod a+xr,u+w {} \;"
Find all files in the current directory tree whose size is greater than 1MB,find . -size +1M
Find all socket files in the current directory and its sub-directories.,find . -type s
find all files that names are filename and open in nano text editor,find / -name filename -exec  nano '{}' \;
find all the files in current folder which end with a speicifc regular expression and display their count,"find ./ -type f -regex "".*\.[JPGjpg]$"" | wc -l"
Remove all files with '.js' extension from the 'js' directory tree,"find ./js/ -type f -name ""*.js"" | xargs rm -f"
display all files in the current folder after pruning those in the current folder ( dot is the output of this command ),find . -prune -print
find all the files in the current directory which are bigger than 1000MB,find . -size +1000M
"Find files matching the pattern ""./sr*sc"" in their paths under current directory","find . -path ""./sr*sc"""
find all  *.csv files which  modify within last 2 days in /home directory then zip -,"find /home/archive -type f -name ""*.csv""  -mtime -2 -exec gzip -9f {} \;"
List all IPV4 addresses found in all files under /etc directory,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n'  | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
"Find all files named 'test' in the current directory tree, not descending into ""test"" directories",find . -name test -prune
"display files in current folder ending with ""pdf"" or ""PDF""",find . -name '*.pdf' -or -name '*.PDF'
"Find all .py files in the current directory except ""setup.py"" and those beginning with ""test_""",find . -maxdepth 1 -mindepth 1 \( -name '*.py' -not -name 'test_*' -not -name 'setup.py' \)
Prints total count of lines of all *.php files in a current folder and subfolders.,find . -name '*.php' -type f -exec cat -- {} + | wc -l
display the three smallest files by size in a folder.,find /etc/ -type f -exec ls -s {} + | sort -n | head -3
Delete all files/directories under current directory tree excluding '.gitignore' files/directories and files/directories matching the patterns '.git' or '.git/*' in their paths,find . ! -name '.gitignore' ! -path '.git' ! -path '.git/*' -exec rm -rf {} \;
List all directories in maximum 1 level down the current directory,find . -type d -maxdepth 1 -exec ls -dlrt {} \;
Find all files/directories under '/abs/path/to/directory' directory non-recursively that match the pattern '.*invalidTemplateName.*' in their names,find /abs/path/to/directory -maxdepth 1 -name '.*invalidTemplateName.*'
delete all the log files in the current folder,find ./ -name '*.log' -print0 | xargs -0 rm
Change permissions to 644 for all files in the current directory tree,find . -type f | xargs -I{} chmod -v 644 {}
Find all 15MB files in entire file system,find / -size 15M
find all instances of a file in the current folder and create a backup of it in the floppy,find . -name nameoffile -print | cpio -iv > /dev/fd0
"search for the regular/normal file ""myfile"" in the current folder excluding search in the paths of ""work"" and ""home"" sub directories",find .  \( -name work -o -name home \)  -prune -o -name myfile -type f -print
"Find files patching ""pattern""","find . -name ""pattern"" -print"
"find non-hidden files (ones that do not start with the period ""."" chartacter) that were are modified in the last 15 minutes.","find . -mmin -15 \( ! -regex "".*/\..*"" \)"
Search for 'Processed Files' in all $srch* (case insensitive) files under current directory run the sed script 'N;s/(.*)\n(.*)/\2 \1/' on the output,"find . -iname ""$srch*"" -exec grep ""Processed Files"" {} \; -print| sed -r 'N;s/(.*)\n(.*)/\2 \1/'"
Print a sorted list of the extensions of the regular files from the current directory tree,find . -type f | sed -e 's/.*\.//' | sed -e 's/.*\///' | sort -u
find all the html files in the current folder and rename them to .var files,find -name '*.html' -print0 | xargs -0 rename 's/\.html$/.var/'
show all the regular/normal files in the folder /home/user/demo,find /home/user/demo -type f -print
"Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=","find . -type f -exec echo chmod u=rw,g=r,o= '{}' \;"
display list of all the files in the current directory (print0 handles file names with newlines or spaces),find -print0 | xargs -0 ls
"Search for file names with ""bad"" characters in the current directory and delete the files.","find . -name '*[+{;""\\=?~<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;"
List all files/directories under current directory with 'FooBar' in their names ensuring white space safety,find . -name 'FooBar' -print0 | xargs -0
Return the depth of the current directory tree,find . -type d -printf '%d:%p\n' | sort -n | tail -1
Find all files/directories that are newer than 'backup.tar.gz' by modification time,find . -newer  backup.tar.gz
"Change permissions of all files ending "".php"" under the current directory to 755 with a progress bar based on lines","find . -name ""*.php"" | pv --line-mode | xargs chmod 755"
"display all the "".c"" files which have been modified in the last 10 minutes",find /home/david -amin -10 -name '*.c'
Find all files/directories under maximum 1 level down the current directory and print their inode numbers and names,find . -maxdepth 1 -print0 | xargs -0 stat -c '%i %n'
"Find all *.py files under and below the current directory and search them for ""xrange""",find . -name '*.py' -exec grep --color 'xrange' {} +
List all files/directories under current directory,find . -print
Change user ownership to `foo' for files with UID=1005,find / -user 1005 -exec chown -h foo {} \;
Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name,find . -print -name SCCS -prune
Replace spaces in directory names with underscores for all directories in the current directory tree,"find -name ""* *"" -type d | rename 's/ /_/g'"
Find all *.c files on the system and feed the output to wc,find / -name *.c | wc
Find files under current directory that contains the string '/bin/ksh',find . -type f -exec grep -iH '/bin/ksh' {} \;
Find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning,find / -cmin -60 | head
"Remove the ""^M"" characters from all *.ext files under /home directory and save the results to new files with _new appended in their names","find /home -type f -name ""*.ext"" -print0 | while read -r -d ""$"" -r path; do cat $path | tr -d '\r' > $path""_new""; done"
Search for 'Text To Find' in all regular files under current directory tree and show the matched files,"find ./ -type f -exec grep -l ""Text To Find"" {} \;"
"Remove all subdirectories of the current directory, except for ""bar"", ""foo"", ""a"", and ""b""","find . -maxdepth 1 -type d \( ! -name ""bar"" -a ! -name ""foo"" -a ! -name ""a"" -a ! -name ""b"" \) -delete"
Find all regular files under $dir,find $dir -type f
"Recursively search for all directories containing ""foo"" (case insensitive) under the current directory, renaming them to replace ""foo"" (case insensitive) with ""Bar""",find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +
Find all files whose filename does not end with *.html.,"find . -type f -not -name ""*.html"""
Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$'  in their names,find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
"List all php files below current directory whose full pathname name does not include ""libs"", ""tmp"", ""tests"", or ""vendor"", sorted by number of lines, letting the user page interactively through the output.","find . -name '*.php' -print0 | xargs -0 wc -l | sort -nr | egrep -v ""libs|tmp|tests|vendor"" | less"
find files in home directory that accessed more than 100 days ago,find ~ -atime 100
Move all files/directories under current directory to ~/play,find . | xargs -I'{}' mv '{}' ~/play/
copy all the regular files in the current directory to the temporary diectory.,find . -type f -exec cp {} /tmp +
Recursively removes all files like '*.pyc' in a current folder.,"find . -name ""*.pyc"" -exec rm -rf {} \;"
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins,"find . -prune -name ""*.dat""  -type f -cmin +60 |xargs -i basename {} \;"
find all the files in the entire file system that have been modified exactly  50 days ago,find / -mtime 50
Find all empty directories under /tmp and below,find /tmp -type d -empty
List all files/directories under current directory,find .
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them,"find -d MyApp.app -name Headers -type d -exec rm -rf ""{}"" \;"
"Recursively finds all ""file_pattern_name"" files and folders and prints strings with ""pattern"", searching through found folders recursively.","find ./ -name ""file_pattern_name""  -exec grep -r ""pattern"" {} \;"
find all text files in the current directory and compress them to a cpio file,find . -name '*.txt' | cpio -pdm /path/to/destdir
Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.,find / -fstype ext3 -name zsh -ls
"remove all the files in current folder which have the extension ""DS_Store""","find . -name "".DS_Store"" -exec rm {} \;"
search for al cpp files in current folder and display distinct parent directory of these files in sorted order,"find . -name ""*.cpp"" -exec dirname {} + | sort -u"
find all files under the current folder except dir1 dir2 dir3  folder,find . -type d \( -path dir1 -o -path dir2 -o -path dir3 \) -prune -o -print
Find all files/directories under /myfiles that were modified 2 days ago,find /myfiles -mtime 2
"Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree","find -O3 ""$save_path"" -depth -mindepth 1 -name 'sess_*' -ignore_readdir_race -type f -cmin ""+$gc_maxlifetime"" -delete"
Find all *.tex regular files in maximum 2 levels down the current directory,"find . -type f -maxdepth 2 -name ""*.tex"""
"Find all files under current directory, calculate their md5sum and print each of the outputs to filename.md5 files",find . -type f | while read f; do g=`md5sum $f` > $f.md5; done
Remove all Thumbs.db files from the current directory tree,find . -name Thumbs.db -exec rm {} \;
find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*',find -name '*.js' -not \( -path './node_modules/*' -o -path './vendor/*' \)
Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree,"/usr/bin/find /home/user/Series/ -iname ""*sample*"" -exec rm {} \;"
Find all *$VERSION* files/directories under current directory where $VERSION is a variable,"find . -name ""*$VERSION*"""
Find all files inside all directories  in /tmp/test directory  and print the number of files in each directory and also print the file/directory paths,"find . -type d -print0 | xargs -0 -I {} sh -c ' echo ""{}: \c"" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'"
"Search the XML files from directories /res/values-en-rUS and /res/xml for string ""hovering_msg""","find /res/values-en-rUS /res/xml -iname '*.xml' -print0 | xargs -0 -d '\n' -- grep -i ""hovering_msg"" --"
"search for the file ""myletter.doc"" in the home folder",find ~ -name myletter.doc -print
Find all regular files that reside in the current directory tree and were last modified more than 2 days ago,find . -type f -mtime +2
display all instances  of the file tkConfig.sh in the folder /usr,find /usr -name tkConfig.sh
"Search the home directory tree for files last modified less than 2 days ago or newer than file ""filename""",find ~/ -mtime -2 -o newer filename
display all the files in the current folder and traverse from the sub directories,find . -type d -depth
find all the regular/normal files in the current directory and print them skip searching all the directories in the current folders.,find * -type f -print -o -type d -prune
Delete all .svn files/directories under current directory,find . -name .svn | xargs rm -fr
List all leaf directories of the current directory tree,"find . -type d | sort | awk '$0 !~ last ""/"" {print last} {last=$0} END {print last}'"
Convert *.doc files in the current directory tree to the .txt format and remove the original files,"find . -name '*.doc' | while read i; do antiword -i 1 ""${i}"" >""${i/doc/txt}"" && rm ""${i}""; done"
search for all the regular files that have been changed in the last 48 hours and sync these to another folder,"find /my/source/directory -ctime -2 -type f -printf ""%P\n"" | xargs -IFILE rsync -avR /my/./source/directory/FILE /my/dest/directory/"
Print the list of directories residing in the current directory tree,find . -type d -exec ls -ld {} \;
"find all the files which end with "".deb"" and display their base name",find . -name '*.deb' -exec basename {} \;
Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.,find *-name hi.dat
Find all SGID files,find / -perm /g=s
List the names of the directories in current directory without going into sub-directories,find . -maxdepth 1 -mindepth 1 -type d -printf '%f\n'
Find all index.* files/directories under current directory,find -name 'index.*'
Find all directories starting from / that have permissions 777,find / -type d -perm 0777
Locate the httpd.conf file on the system,find / -name httpd.conf
"Change permissions to u=rwx,g=rx,o= for all directories in the current directory tree","find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;"
Descend into every directory under /etc and print the file/directory names with relative paths,"find /etc -execdir echo ""{}"" ';'"
Search for files/directories with a case insensitive .txt extension in entire file system,find / -iname '*.txt'
Find all files/directories under Mainfolder directory and redirect the output to outputfle,find Mainfolder > outputfile
Search in current directory downwards all files whose size is 10 bytes  .,find . -size 10c -print
List all regular files in /var/www and below that have changed in the last 10 minutes,"find /var/www -cmin -10 -type f -printf ""%c %pn"""
"searches through the root filesystem (""/"") for the file named Chapter1, and prints the location",find / -name Chapter1 -type f
"display all the files with the names ""name1"" and ""name2"" in the current folder and do not search in the sub directories","find . -maxdepth 1 -name ""name1"" -o -name ""name2"""
Find broken symlinks in the current directory tree,"find -type l | while read f; do if [ ! -e ""$f"" ]; then ls -l ""$f""; fi; done"
Find files and directories newer than CompareFile under current directory,find . -newer CompareFile -print
Find all files except files with '.gz' extension in the current directory non-recursively and compress them with gzip,"find . -maxdepth 1 -type f ! -name '*.gz' -exec gzip ""{}"" \;"
Find all *.mp3 (case insensitive) files/directories under /tmp and remove them,find /tmp -iname '*.mp3' -print0 | xargs -0 rm
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format,"find -type f -name ""*.htm"" | sed 's@^./@@g;s@/@-@g' | awk -F'-' '{print $1 ""-"" $2 ""-"" $3 ""-"" substr ""-"" $5}'"
"Remove the ""^M"" characters from all *.ext files under /home directory","find /home -type f -name ""*.ext"" -exec sed -i -e ""s/\x0D$//g"" {} \;"
find the most recently changed files under current directory,find . -type f -printf '%TY-%Tm-%Td %TT   %p\n' | sort
Find all regular files under current directory  and replace every occurrences of 'toreplace' with 'replace' in those files,find . -maxdepth 1 -type f -print0 | xargs -0 sed -i 's/toreplace/replaced/g'
Find files/directories greater than 10MB in your home directory,find ~ -size +10M
Display all files in a folder,find man5 -print
Search the current directory tree for files last accessed more than 10 days ago,find . -atime +10
Find all regular files on the system whose names are 'myfile',find / -name myfile -type f -print
Search the current directory for all files with no 'read' privilege for 'others',find . -maxdepth 1 ! -perm  -o=r
Copies file 'index.html' to each top-level directory in the current directory.,find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html
find all the files that have been modified today,find /tmp/test/* -mtime +0
Count case insensitive absolute paths recursively from the current directory,"find -type f  -exec readlink -m {} \; | gawk 'BEGIN{FS=""/"";OFS=""/""}{$NF=tolower;print}' | uniq -c"
"Find all *.xml.bz2 files under current directory and run the command find_graph with -build_graph, $i.graph and $i as it's arguments where $i is expanded to each file path","for i in `find . | grep "".xml.bz2$""`; do find_graph -build_graph $i.graph $i; done"
"display all the regular/normal files ending with "".mod"" in a folder","find ""$dir"" -name ""*.mod"" -type f -print0"
"Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.",find . -iname foo
Search  in current directory downwards all files whic  have permission 777 .,find . -perm 777 -print
Find all regular files under $SOURCE directory tree that were modified more than $KEEP days ago and show only the names without the paths,find $SOURCE -type f -mtime +$KEEP | sed ‘s#.*/##'
"Find recursively the files named ""file"" in the current directory ignoring all .git directories",find . -name .git  -prune -o -name file  -print
Find all orm* files/directories under current directory,find . -name 'orm*'
Find all *.jpg files under current directory and print only unique names,find . -name *.jpg | uniq -u
Find all *.foo files under current directory and print their contents,cat $(find . -name '*.foo')
Search the current directory recursively for directories with the execute permission set for everybody,find -type d ! -perm -111
find all the directories in the current folder and replace the,find -type d|sed -r '/^.$/{s:.:#!/bin/bash:};{s/^\./mkdir -p &/}'
search for all the files in the current directory which have been modified in the last 24 hours.,find . -mtime -1
move all the files in the current folder  to temp folder and search atleast in one subfolder,"find . -mindepth 1 -print0|xargs -0 -I, mv , /tmp"
List all files in maximum 2 levels down the current directory,find . -maxdepth 2  -type f -exec ls -l {} \;
Delete interactively all the files/directories with inode number 782263 under current directory tree,find . -inum 782263 -exec rm -i {} \;
Print all filenames under /proc and below,find /proc -print0 | xargs -0
Search the current directory tree for all files except SVN ones,find . | grep -v \.svn
Search for a line starting with 'use strict' in all files with '.pl' extension under current directory tree and show the unmatched files only,find . -name '*.pl' | xargs grep -L '^use strict'
Find all *.txt file  in the entire system and copy them to /tmp/txt,find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
delete all the php files in the folder /var/www,find /var/www/*.php -type f -exec rm {} \;
display all the soft links in a  folder which are not broken,find -L /target ! -type l
"search for the file ""myfile"" in the current folder and display all errors apart from permission denied error",find . -name myfile |& grep -v 'Permission denied'
Find all .java files starting from the current folder,"find * -name ""*.java"""
search for al cpp files in current folder and display distinct parent directory of these files in sorted order,"find . -name ""*.cpp"" -exec dirname {} + | sort -u"
"Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them","find . -type d -ls | awk '{print $4 - 2, $NF}' | sort -rn | head"
"Remove all files whose names end with ""~"" in the /home/peter directory tree",find /home/peter -name *~ -print0 |xargs -0 rm
find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.,find $HOME -type f -atime +30 -size 100k
search for a word in all the php files in the current folder and display the matching lines,find . -name \*.php -type f -exec grep -Hn '$test' {} \;
Find all files starting from the current directory that match regular expression '.*Message.*\.java',find . -print | grep '.*Message.*\.java'
"search the file ""myfile.txt"" in home folder","find ""$HOME/"" -name myfile.txt -print"
"find regular files in the ""mail"" folder under the user's home directory, displaying filenames and lines that contain the text ""Linux""","find ~/mail -type f | xargs grep ""Linux"""
display a long listing of the files in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f -exec ls -l {} +
Find *.java files under current directory and compress them to myfile.tar,"find . -type f -name ""*.java"" | xargs>    tar rvf myfile.tar"
Counts all files in a current folder and subfolders.,find `pwd` -type f -exec ls -l {} \; | wc -l
find all the files in the file system which have been modified in the last 10 minutes,find / -mmin -10
Find all regular files named postgis-2.0.0 under current directory,"find . -type f -name ""postgis-2.0.0"""
List files in the current directory and below that are exactly 1234 bytes in size,find . -size 1234c
Search the /etc directory tree for symbolic links,find /etc -type l -print
Find regular files under '/somefolder' directory tree satisfying the options/conditions/operations provided in ${ARGS[@]} array with find command,"find /somefolder -type f '(' ""${ARGS[@]}"" ')'"
"Recursively copy all regular files below current directory to directory /tmp on hostname, connecting as ssh user matching current username on local host.",find . -type f -exec scp {} hostname:/tmp/{} \;
display the contents of all the files in the current folder which start with test,find . -iname '*test*' -exec cat {} \;
Find all files/directories under current directory and print their paths,"find . -exec echo {} "";"""
"Remove all files from the current directory tree whose names do not match regular expression ""excluded files criteria""","find . | grep -v ""excluded files criteria"" | xargs rm"
display the count of total number of non empty files in the current folder,find . -type f -not -empty | wc -l
Find a single file called FindCommandExamples.txt under current directory and remove it,"find . -type f -name ""FindCommandExamples.txt"" -exec rm -f {} \;"
"find all the text files in the current folder starting with ""somefiles-""  and prepend the first line","find . -name ""somefiles-*-.txt"" -type f -exec sed -i 'iText that gets prepended (dont remove the i)' -- '{}' \;"
"Search through the /usr/local directory for files that end with the extension .html, and print the file locations.","find /usr/local -name ""*.html"" -type f"
Find regular files in the current directory that are writable by their owner,find -maxdepth 1 -type f -perm /200
"Create symbolic links in the current directory for all files excluding ""CONFIGFILE"" located in ""/your/project""","find /your/project -maxdepth 1 ! -name ""CONFIGFILE"" -exec ln -s \{\} ./ \;"
"Search the *.cc files in the current directory tree for string ""xxx""","find . -name ""*.cc"" | xargs grep ""xxx"""
List all regular file owned by root with permissions 4000,find / -type f -user root -perm -4000 -exec ls -l {} \;
"List all files/directories under current directory using comma (,) as the delimiter for different fields in the output","find . -ls | awk '{printf( ""%s,%s,%s,%s,%s,%s,%s,%s %s %s,%s\n"", $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11 )}'"
"Search through the /usr/local directory for files that end with the extension .html, and print the file locations.","find /usr/local -name ""*.html"" -type f"
Go into the first directory whose name contains 1670,cd `find . -maxdepth 1 -type d | grep 1670`
Find files/directories under current directory and print them as null terminated strings.,find -print0
Counts sum of non-empty lines from all .php files in a current folder.,"find . -name ""*.php"" | xargs grep -v -c '^$' | awk 'BEGIN {FS="":""} { cnt = cnt + $2} END {print cnt}'"
"search for the files in the current folder which begin with the word ""kt"" followed by a digit",find . -name 'kt[0-9] '
Find the passwd file in the current directory and one level down,find -maxdepth 2 -name passwd
"Move all files matching patterns ""*.old"", "".old"", "".*.old"" from the current directory to directory ""../old/""","find . ! -name . -prune -name '*.old' -exec sh -c 'mv ""$@"" ../old/' sh {} +"
Rename '.mkv' extension to '.avi' for all files/directories under '/volume1/uploads' directory tree,"find /volume1/uploads -name ""*.mkv"" -exec rename 's/\.mkv$/.avi/' \{\} \;"
Prints total number of lines of all *.php files in a current folder and subfolders.,"cat `find . -name ""*.php""` | wc -l"
Search for 'example' in all regular files from the current directory tree,find -type f -print0 | xargs -r0 grep -F 'example'
Delete all files throughout the entire filesystem that are no longer owned by a valid user.,find / -nouser | xargs -0 rm
"find all text files in the folder ""FFF"" and find the md5sum for them","find FFF -name ""*.txt"" -exec md5sum '{}' \;"
Find all file1 and file9 files/directories under current directory,find . -name file1 -or -name file9
"Replace all occurrences of ""StringA"" with ""StringB"" in the *.php and *.html files residing in the current directory tree","find . \( -name ""*.php"" -or -name ""*.html"" \) | xargs grep -l StringA | xargs sed -i -e 's/StringA/StringB/g'"
Find all subdirectories of the current directory except hidden ones,"find -maxdepth 1 -type d ! -name "".*"""
find directories in the folder /usr/spool/uucp,find /usr/spool/uucp -type d -print
change the permissions of all regular/normal files in the current directory,find . -type f -exec chmod 664 {} \;
Find all HTML files starting with letter 'a' in the current directory and below,find . -name a\*.html
Change permissions to 755 for all subdirectories of the current directory,"find . -type d -print | sed -e 's/^/""/' -e 's/$/""/' | xargs chmod 755"
"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and ""en"" and ""es"" directories","find . \ -prune , -mtime 0 ! -name ""*.swp"""
find all directory list which have empty list in /tmp directory,find /tmp -type d -empty
"show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories",find . -maxdepth 1 -name \*.txt -print0 | grep -cz .
List all files in the current directory tree that were last modified in March 2007,"find ! -newermt ""apr 01 2007"" -newermt ""mar 01 2007"" -ls"
Find all executables under /path directory,find /path -perm /ugo+x
"display list of all the hidden files in the directory ""/dir/to/search/""","find /dir/to/search/ -name "".*"" -ls"
Find text files modified less than 5 days ago,"find . –name ""*.txt"" –mtime 5"
search all the files in the current folder excluding those that are present in the folder test and using regex,"find . -name test -prune -regex "".*/my.*p.$"""
Display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size,find $dir -type -f size +$size -print0 | xargs -0 ls -1hsS
"find case-insentive example.com file, and whole dose not contain beta",find -iname example.com | grep -v beta
Find files/directories modified within the last hour under current directory,find . -mtime -1
find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ).,find $HOME -mtime +365
"Append all regular files modified in the last 24 hours to the ""$archive.tar"" tar archive","find . -mtime -1 -type f -exec tar rvf ""$archive.tar"" '{}' \;"
Find all files/directories under current directory that were modified exactly 30 minutes ago,find . -mmin 30
Change the file extension from '.txt' to '.bak' for all files/directories under current directory tree,"find . -name ""*.txt"" | sed ""s/\.txt$//"" | xargs -i echo mv {}.txt {}.bak | sh"
Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths,"find ""$1"" -path ""*/.*"" -prune -o \"
find all the files that have not been modified in the last  hours.,find . -mtime +7
Find all regular files in the current directory tree that do not contain a whitespace,find . -type f \
find files  that were accessed within the last 24 hours,find / -atime -1
"display all the "".c"" files in the folder ""/home/david"" which have been accessed in the last 48 hours",find /home/david -atime -2 -name '*.c'
Find all directories that have been modified in the last seven days.,find . -mtime -7 -type d
Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches,find . -name '*.txt'|xargs grep -m1 -ri 'oyss'
display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2.,find . -maxdepth 1 -type f | xargs -I ‘{}’ sudo mv {} /directory1/directory2
Find all files under var/ directory and change their permission to 600,find var/ -type f -exec chmod 600 {} \;
"list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.","find . ! -perm -g+r,u+r,o+r -prune"
Find all files named 'foo' under current directory tree without descending into directories named 'foo',find . -name foo -type d -prune -o -name foo -print
Find all the files recursively in directories or files taken from the glob pattern /tmp/test/* that have been modified today,find /tmp/test/* -mtime -0
display all soft links in current folder,find . -type l
find all readme files in a folder,find /usr/share/doc -name README
Find all the files that were modified within the last day,find . -mtime -1
Remove all tmp/*.mp3 files,find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs rm
search a url in all regular/normal files in a folder.,find ./ -type f -exec grep https://www.ksknet.net {} \;
search for all xml files in current folder and display them,"find . -name ""*.xml"" -exec echo {} \;"
Find empty files/directories under test directory,find test -empty
"find the file ""foo.txt"" in the current folder and assign the output to a variable",OUTPUT=`find . -name foo.txt`
Find all empty directories under /tmp,find /tmp -type d -empty
Delete all files in the $DIR directory that have not been accessed in 5 or more days.,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories","find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;"
Find all files under foldername directory and set their permission to 644,"sudo find foldername -type f -exec chmod 644 {} "";"""
long list the detials of all the shell scripts in current directory,"find . -name ""*.sh"" -exec ls -ld {} \;"
display the long listing detials of all the files in the folder junk which is in home folder.,"find ~/junk   -name ""*"" -exec ls -l {} \;"
find all the *.conf files under /,"find / -name ""*.conf"""
print all files which name is xyzzy  followed by null and save to list,find / -name xyzzy -print0 > list
"Find files/directories under current directory matching the posix-egrep type regex "".+\.(c|cpp|h)$"" in their names","find . -regextype posix-egrep -regex "".+\.(c|cpp|h)$"""
find all js files which path neither ./dir1 nor ./dir2,find . -name '*.js' -not \
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety,find var/log -print0 -iname 'anaconda.*' | tar -cvf somefile.tar -T -
List all files/directories under /myfiles directory,find /myfiles -exec ls -l {} ;
"Count the total number of lines in all HTML files under /usr/src that contain string ""foo""","time find /usr/src -name ""*.html"" | xargs /usr/bin/grep -l ""foo"" | wc -l"
change the owner of all the files in folder /u/netinst to netinst,find /u/netinst -print | xargs chown netinst
Find all links pointing to /path/to/foo.txt,find . -lname /path/to/foo.txt
show all the files in the folder /etc which have been modified in the last 24 hours,find /etc -mtime -1
Find all *.txt files that reside under and below /home/wsuNID/,"find /home/wsuNID/ -name ""*.txt"""
Search for regular file foo ignoring case,find . -iname foo -type f
Find all files/directories under current directory and print their paths,find . -exec echo {} ';'
Find all directories under current directory,find . -type d -print
Find all files/directories under current directory with null character as the delimiter,find -print0
List all files in entire file system that belong to the user wnj or modified later than the ttt file,find / \( -newer ttt -or -user wnj \) -print
Run `command' on each file from the current directory tree,find . -exec command {} \;
Find all files under current directory and show their file information,find . -type f -exec file {} \;
"Create a symbolic link in directory ""new"" for each file in ""original"" directory tree",find original -type f -exec ln -s {} new/{} \;
find regular/normal files in the current folder,find -type f
List all regular files in the current directory tree modified within the last 24 hours,find . -mtime 0 -type f -ls
Find all PNG and JPG files and append them to archive `images.tar',"find . \( -iname ""*.png"" -o -iname ""*.jpg"" \) -print -exec tar -rf images.tar {} \;"
"Save all directories under the current directory as a comma separated list in variable ""FOLDERS""","FOLDERS=$(find . -type d | paste -d, -s)"
delete all normal/regular files in the current folder which are empty,find . -type f -empty -delete
find all the links in the current folder which are broken,find /target -type l -xtype l
Find all files/directories matching the regex .*sql.*,find -regex .*sql.*
"Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.",find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &
find all jar files in current folder and search for a file in all these jar's and display the jar names along with searched file,"find . -name ""*.jar"" -exec unzip -l {} \;|grep -E ""Archive:|message_track.properties"""
"Find all directories named ""D"" in the current directory tree","find . -name ""D"" -type d"
Find all files inside all directories  in /tmp/test directory  and print the number of files in each directory and also print the file name and directory paths,"find . -type d -print0 | xargs -0 -I {} sh -c ' echo ""{}: \c"" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print | sed ""s#.*/##"" '"
Find and print the names of all files found in the current directory and all of its sub-directories.,find .
use find command to search for .png and .jpg files,find ./ -type f \( -iname \*.jpg -o -iname \*.png \)
Find all *.err files under current directory that are larger than 5120 bytes in size,"find . -type f -size +10 -name ""*.err"""
"search for all the php files in the folder ""/home/mywebsite"" which have been changed in the last 30*24 hours","find /home/mywebsite -type f -name ""*.php"" -ctime -30"
Find all *.txt files under current directory that match the regex c|d|z in their names,find . -name '*.txt' | perl -lne 'print if /c|d|z/'
Change permissions to 755 for all directories in the current directory tree,find . -type d | xargs chmod -v 755
find all the symbolic links in the current folder,find /etc -type l -print
"search for a file ""file"" in current folder and if the file is found quit !",find -name file -quit
Locate files with user permissions rwx owned by my_user,find . -user my_user -perm -u+rwx
Find all files/directories named 'foo.rb' under current directory tree,find . -name foo.rb
Find all TXT files on the system and copy them to /tmp/txt,find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
"display all the files in the current folder excluding those ending with "".disabled"" in sorted order",find /target/ | grep -v '\.disabled$' | sort
Find all files/directories under current directory tree that belong to the group 'compta',find -group compta
"search for all the files in the current folder which start with ""my""",find . -name 'my*'
search for the word echo all the bash files(files ending with .bash) in the current folder,"find . -name ""*.bash"" |xargs grep ""echo"""
find all the files in the current folder which have been modified in the last 60 minutes,find . -mmin -60
search for a word in all the regular files in the current folder.,find -type f -print0 | xargs -r0 grep -F 'example'
Archive all filepattern-*2009* files/directories under data/ into 2009.tar,find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;
Remove trailing tabs in .java files from the current directory tree,"find . -type f -name ""*.java"" -exec perl -p -i -e ""s/[ \t]$//g"" {} \;"
Change permissions to 777 for all directories in the current directory tree,find . -type d -exec chmod 777 {} \;
Rename file extension '.andnav'  to '.tile' for all files/directories under current directory tree,"find . -name ""*.andnav"" -exec rename -v 's/\.andnav$/\.tile/i' {} \;"
delete all the files in the current folder,find . -print0 | xargs -0 rm
Find all build* directories under /var/www/html/ and reverse sort them,"find /var/www/html/ -type d -name ""build*"" | sort -r"
"Remove files in the current directory tree whose names match pattern ""file?""","find . -name ""file?"" -exec rm -vf {} \;"
Find all regular files with case insensitive pattern '*$1*'  under current directory tree and execute a command given by $2  with each of those files as arguments,"find . -type f -iname '*'""${1:-}""'*' -exec ${2:-file} {} \;"
display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) .,find . -size -26c -size +23c -exec ls -l '{}' \;
"Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.",find . -iname foo -type d
Locating large files  in /home/ for 'cleaning',find /home -type f -size +100M -delete
delete all the normal files in the current folder and do not delete those in the subfolders,find . -maxdepth 1 -type f -delete
find all js files which path neither ./dir1 nor ./dir2,"find . -name '*.js' -not \( -path ""./dir1"" -o -path ""./dir2/*"" \)"
Find files/directories with inode number '212042' under '/var' directory tree without traversing other devices/partitions,find -x /var -inum 212042
"find all the normal/regular files in the folder ""pathfolder"" excluding all hidden files and display the count",find pathfolder -maxdepth 1 -type f -not -path '*/\.*' | wc -l
Find all Makefile's in the current directory tree and print the line 235 of each of them,find . -type f -name Makefile -print -exec sed -n '235p' {} \;
Delete all files/directories with '.old' extension under current directory tree,find . -name “*.old” -delete
find all text files in the current directory,"find . -name ""*.txt"" -print"
Find all regular files on the system whose size is greater than 20000k,find / -type f -size +20000k
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them",find . -name 'file*' -size 0 -print0 | xargs -0 rm
Display a long listing of the files/directories with human readable sizes  under '/var' directory tree which are bigger than 10MB,find /var/ -size +10M -exec ls -lh {} \;
display all the files in the current folder for the files which have been accessed in the last 24 hours,find . -type f -atime -1
"Find regular files under / that contain ""stringtofind"" and clear out their contents","find / -maxdepth 1 -xdev -type f -exec grep -li ""stringtofind"" {} + | parallel sed ""'/./d'"" '{}'"
Find all files/directories with '.bar' extension in maximum 2 levels down the current directory,find . -name *.bar -maxdepth 2 -print
"Recursively search for all files with names ending with ""_test.rb"", renaming them to end with ""_spec.rb"".","find . -name ""*_test.rb"" | xargs rename s/_test/_spec/"
Find and remove multiple *.txt files,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
display the contents of all the regular files in the current folder and save the output to out.txt,find . -type f -exec cat {} \; > out.txt
find a file in current folder and show all errors apart from permission denied,find /. -name 'toBeSearched.file' 2>&1 | grep -v 'Permission denied'
Find all .mp3 files starting from the current directory,find . -type f -iname *.mp3
"find all the directories  with the name ""c"" in the current folder which are at least 3 levels deep and which are not present in the path ""/p/"".",find -mindepth 3 -type d -path '*/p/*' -prune -o -name c -print
change the directory to the last found folder in the directory 'a',cd `find a |sed '$!d'`
find all the files in the home folder that have not been modified in the last one year,find $HOME -mtime +365
Remove file with inode number 31246,find . -inum 31246 -exec rm [] ';'
Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ensuring white space safety,"find /mnt/zip -name ""*prefs copy"" -print0 | xargs    -0 -p /bin/rm"
Find all PHP files under current directory that contain only one non-blank line,find . -type f -name '*.php' -exec grep -Hcm2 '[^[:space:]]' {} + | sed -n '/:1$/{s///;p}'
"Find files in the current directory tree whose names match regular expression ""^.*~$\|^.*#$""","find -regex ""^.*~$\|^.*#$"""
"Search the system for files whose names begin with letters 'a', 'b', or 'c'",find  / -name '[a-c]*'
delete all the files in the current folder which are bigger than 1KB,find . -size +1024 ?print|xargs -i rm \;
"Search the directories matching pattern ""/path/to/some/dir/*[0-9]"" for level 1 subdirectories",find /path/to/some/dir/*[0-9] -type d -maxdepth 1
Compute the mean average of the word count of *.txt files in the home directory,find ~/ -name '*.txt' -print0 | xargs -0 wc -w | awk 'END { print $1/(NR-1) }'
Find files in the current directory recursively that are not readable by all,find -type f ! -perm -444
"Copy all files below the current directory whose names contain ""FooBar"" to directory foo/bar/ in user's home directory.",find . | grep FooBar | xargs -I{} cp {} ~/foo/bar
check the type of files in the folder /usr/bin,find /usr/bin | xargs file
Display all regular files under current directory tree ignoring files in './dir1' and './dir2' directories,find . -type f |sed '/.\/dir[12]\/[^/]*$/d'
Remove Mac OS X Desktop Services Store files,"find . -name "".DS_Store"" -exec rm {} \;"
"find all the files which end with "".deb"" and display their base name (strip the extension)",find . -name '*.deb' -exec basename {} \;
Find files newer than `tmpfile' starting from the current directory,find . -newer tmpfile
create a backup of all normal/regular files in current folder which have been modified between two dates and create a tar.gz file of this backup,find /path/to/files/ -newermt 20131204 -not -newermt 20131205 -type f -print0 | cpio --create --null  --format=ustar  | gzip > /tmp/dec-4.tar.gz
Find all *.css files under /starting/directory and print filenames and the lines matching the regex '\.ExampleClass' from those files,find /starting/directory -type f -name '*.css' | xargs -ti grep '\.ExampleClass' {}
Find files/directories under current directory that matches the regex /path/to/something[^/]*$  in their paths,find . | grep -qi /path/to/something[^/]*$
search for files which are writable by both their owner and their group,find . -perm -220
move all the files in the current folder  to temp folder and search atleast in one subfolder,find . -mindepth 1 -exec mv -t /tmp {} +
find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes,find /etc/sysconfig -amin -30
"Find files in the current directory tree whose pathnames contain ""sub""","find ./ | grep ""sub"""
"Search for the query ""filename"" in the current directory and any subdirectories","find -iname ""filename"""
Search the current directory tree for symlinks pointing at other symlinks,find . -type l -xtype l
Case insensitive search using find command in Linux,"find . –iname ""error"" –print   find . –iname ""error"" –print"
Find all the files/directories in the entire filesystem that do not belong to user 'wnj' and are not newer than the file/directory 'ttt' by modification time,find / \! \( -newer ttt -user wnj \) -print
Set permissions for files in `foldername' and its subdirectories to 644,"find foldername -type f -exec chmod 644 {} "";"""
Find all *.foo files under current directory and print their contents,find . -name '*.foo' -exec cat {} \;
Print the list of the current directory's subdirectories,find -maxdepth 1 -type d
Find all directories in current directory without going into sub-directories,find . -type d -maxdepth 1
Find all directories under current directory whose names are 33 characters long,"find . -type d -name ""?????????????????????????????????"""
Print a sorted list of the extensions of the regular files from the current directory tree matching pattern '*.???',"find . -type f -name ""*.???"" | awk -F. '{print $NF}' | sort -u"
Find all files/directories that are owned by user 'wnj' and are newer than 'ttt' by modification time in the entire filesystem,find / -newer ttt -user wnj -print
Find all files/directories under current directory and sort them,find | sort
"Search directory trees /tmp and /var/tmp for ""testfile.txt""","find /tmp /var/tmp -iname ""testfile.txt"""
"Remove all files and directories called ""test"" from the current directory tree",find . -name test -delete
find all the files ending with jpg in current folder and display their count ( case insensitive ),"find ./ -type f -regex "".*\.[Jj][Pp][gG]$"" | wc -l"
Create a script to monitor system disk space usage and delete old backup files to free up space.,"#!/bin/bash

threshold=""90""
backup_dir=""/backup""
disk_usage=$(df -h $backup_dir | awk 'NR==2 {print $5}' | sed 's/%//')
if [ ""$disk_usage"" -gt ""$threshold"" ]; then
    find $backup_dir -type f -mtime +7 -delete
fi"
find all files in home folder which have been modified after a timestamp,find ~ -newer /tmp/timestamp
find all the files in the current folder which have been modified in the last one minute,find . -type f -mmin 0
"find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format",find -mmin -60 -exec ls -l {} \;
"Search the current directory tree for files and directories whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll"""
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.,"find . -type f -name "".*"" -newer .cshrc -print"
Find files that are writable by both the “other” and the group under the plsql directory,find plsql -type f  -perm -ug=rw -exec ls -l {} \; 2>/dev/null
find the oldest normal file in the current directory,find -type f -printf '%T+ %p\n' | sort | head -n 1
Create a script to find and delete all files older than a certain number of days in a directory.,"#!/bin/bash

find . -type f -mtime +$1 -delete
echo ""Old files deleted."""
"Display a long list of all the files/directories named "".todo"" under $STORAGEFOLDER directory tree",find $STORAGEFOLDER -name .todo  -exec ls -l {} \;
find all the files in the current folder which do not have the execute permission,find . -type d ! -perm -111
"find files having the extension ""bam"" in current directory","find . -name ""*.bam"""
Find the file in the current directory tree with inode number $inum and delete it,find . -inum $inum -exec rm {} \;
Find all executable upvoter-* files/symlinks under maximum 1 level down the {} directory,find {} -name 'upvoter-*' \( -type f -or -type l \) -maxdepth 1 -perm +111
"Execute ""myfile"" on all .ogv files from the current directory tree",find ./ -name *.ogv -exec bash -c 'myfile {}' \;
"search for the directory ""config"" in the current folder and change directory to it","cd `find . -name ""config""`"
List detailed information about all Jar files in the current directory tree,"find . -name ""*.jar"" -exec zipinfo {} \;"
Find all regular *.css files,"find . -type f -name ""*.css"""
Find all files/directories under current directory tree with inode number 211028 and move them to 'newname.dir',find . -inum 211028 -exec mv {} newname.dir \;
find all the cpp files in the current folder and move them to another folder,find . -type f -iname '*.cpp' -exec mv {} ./test/ \;
"Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them","find . -type d -ls | awk '{print $4 - 2, $NF}' | sort -rn | head"
"Replace the occurrences of ""HOGE"" with ""MOGA"" once per each line of the .yaml files from the current directory tree","find . -type f -name ""*.yaml"" -print0 | xargs -0 sed -i -e ""s/HOGE/MOGA/"""
Find regular files readable by the world,find . -perm -g=r -type f -exec ls -l {} \;
Recursively finds all '*.pdf' files in a current folder and removes them without prompting.,find . -name '*.pdf' -exec rm -f {} \;
Find files/directories under current directory without descending into it,find -prune
"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories","find . -type d -exec chmod u=rwx,g=rx,o=x {} \;"
"List .html files in the current directory tree that contain string ""base\-maps"" but do NOT contain string ""base\-maps\-bot""","find . -name ""*.html"" -exec grep -lR 'base\-maps' {} \; | xargs grep -L 'base\-maps\-bot'"
"find all the files in the current folder with the name ""test-a"" and move them to the folder test-10",find ~ -type f -name test-a -exec mv {} test-10 \;
Print the list of files and directories of the /etc directory,find /etc/. ! -name /etc/.
"Print the /proc directory tree, ignoring the PID-process things",find /proc -type d | egrep -v '/proc/[0-9]*' | less
"Find files/directories with exactly read,write and execute permission for all  under /path",find /path -perm 777
Find a single file called FindCommandExamples.txt under current directory and remove it,"find . -type f -name ""FindCommandExamples.txt"" -exec rm -f {} \;"
Find the passwd file under root and one level down.,find -maxdepth 2 -name passwd
find all directories with the name test in a directory,find /home/john -type d -name test -print
Find recursively the latest modified .zip file in the current directory,"find . -name ""*zip"" -type f | xargs ls -ltr | tail -1"
find all the files in the current folder which have execute permission to all the users,"find . -perm /u=x,g=x,o=x"
"Find all files with name ""file.ext"" under the current working directory tree and print each full path directory name",find `pwd` -name file.ext |xargs -l1 dirname
"Remove all directories called ""test"" from the current directory tree",find . -name test -type d -print0|xargs -0 rm -r --
find all text files in user/directory/ which have been modified today and display the last line of these files,"find /user/directory/ -name ""*txt"" -mtime 0 -type f -printf '%p: ' -exec tail -1 {} \;"
search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order,find . -name '*.cpp' | sed -e 's/\/[^/]*$//' | sort | uniq
find all the files that have been modified exactly 24 hours ago,find . -type f -mtime 1
"display all the files in the folder ""$ORIG_DIR""","find ""$ORIG_DIR"""
Search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them.,find . -type f -ctime -3 | tail -n 5
Print the list of all files and directories with 777 permissions within a directory.,"#!/bin/bash

find /path/to/your/directory -perm 777"
display all the text files in the current folder  and do not search in the bin directory,"find . -name bin -prune -o -name ""*.txt"" -print"
Print a colon-separated list of all directories from the $root directory tree,find $root -type d | tr '\n' ':'
delete all the normal/regular files in the current folder,find . -type f -print -delete
Copy all files under director 'foo' whose name doesn't contain 'Music' to directory 'bar'.,find foo -type f ! -name '*Music*' -exec cp {} bar \;
"Change the owner of all "".txt"" files in directory tree ""/mydir"" to ""root""","find /mydir -type f -name ""*.txt"" -execdir chown root {} ';'"
Print out all files with their paths that have identical content and the same filename in different cases,find * -type f  | xargs md5sum | sort | uniq -Dw32 | awk -F'[ /]' '{ print $NF }' | sort -f | uniq -Di
Remove Mac OS X Desktop Services Store files,"find . -name "".DS_Store"" -exec rm {} \;"
Remove all text files in the home directory with confirmation,find $HOME/. -name *.txt -ok rm {} \;
Print the names of all hidden regular files from the current directory,find . -maxdepth 1 -type f -name '.*' -exec basename {} \;
Find all files in and below the home directory that have been modified in the last 90 minutes,find ~ -mmin -90
Find all directories in entire file system which are larger than 50KB,find / -type d -size +50k
"Move all files from the current directory to ""targetdirectory""","find . ! -name . -prune -exec sh -c 'mv ""$@"" targetdirectory/' sh  {} +"
Show the number of regular files in the current directory tree,find . -type f | wc -l
Find all Lemon*.mp3 files under current directory and run mplayer with these files,find . -name 'Lemon*.mp3' -print0 | xargs -­0 -i mplayer '{}'
Find all the files which are accessed in last 1 hour in entire file system,find / -amin -60
Print out ln commands for each file in /home/folder1/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names,"find /home/folder1/*.txt -type f | awk -F '.txt' '{printf ""ln -s %s %s_CUSTOM_TEXT.txt\n"", $0, $1}'"
update the permissions of the directories in the folder folder_name to 775,find folder_name -type d -exec chmod 775 ‘{}’ \;
Search the home directory for OGG and MP3 files,find $HOME -iname '*.ogg' -o -iname '*.mp3'
"display all text, mpg, jpg files  in the folder /Users/david/Desktop",find /Users/david/Desktop -type f \
List all *.txt files/directories under /etc,"find /etc -name ""*.txt"" -exec ls -l {} \;"
find files in the home folder which have been modified in the last day.,find ~/ -daystart -type f -mtime 1
Remove all files in the /myfiles directory tree that were accessed at least 30 days ago,find /myfiles -atime +30 -exec rm {} ;
Remove `core' files whose status was changed more than 4 days ago,find `pwd` -name core -ctime +4 -execdir /bin/rm -f {} \;
Print the list of 1st level subdirectories in /fss/fin,"find /fss/fin -d 1 -type d -name ""*"" -print"
display all the regular/normal files in the current directory which are atleast 2 levels deep,find . -mindepth 2 -type f
Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory,find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -ls
Finds all files in a '/path' folder and prints long listing for them.,find /path -type f -exec ls -l \{\} \;
Search for files only that end with .php and look for the string $test inside those files,find . -name \*.php -type f -exec grep -Hn '$test' {} \;
"display all the files in the current directory excluding the paths ""targert"", ""tools"", ""git""",find . \
"find all the files in the current directory ending with "".i""","find . -name "".*\.i"""
Find all directories in the current directory tree that do not have `execute' permissions for anyone,find . -type d ! -perm -111
find all the text files in the entire filesystem which belong to the user root and display the ten files.,"find / -user root -iname ""*.txt"" | head"
search for the file foo.txt in the entire file system,find / -name foo.txt
List all files under current directory matching the regex '.*\.\(c\|h\|cpp\)',find . -type f -regex '.*\.\(c\|h\|cpp\)' -exec ls {} \;
Find and remove all .core files,"find / -name ""*.core"" | xargs rm"
Removes all empty folders within $DELETEDIR folder.,"find ""$DELETEDIR"" -mindepth 1 -depth -type d -empty -exec rmdir ""{}"" \;"
"Find files named core in or below the directory /tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or newlines are correctly handled.",find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
"Search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits",find . -perm -664
search for all the files in the current folder which have not been modified in the last 7 days and save the output to a file,find -mtime +7 -print > found.lst
Fint all *.txt files/directories in entire file system without descending to other file system and without error reporting,"find / -name  ""*.txt"" -mount 2> /dev/null"
find all the html files which are modified in the last 7 days,"find . -mtime -7 -name ""*.html"""
List all files/directories under current directory,find . -ls
remove all the core files from /usr folder which have not been accessed in the last 7*24 hours,"find /usr -name core -atime +7 -exec rm ""{}"" \;"
display all files in the folder /usr and its sub directory,find /usr -maxdepth 1 -print
display all the html files in the current folder that have not been modified in the last 7*24 horus,"find . -mtime +7 -name ""*.html"" -print"
Find all directories under '/var/www' directory tree excluding '/var/www/web-release-data' and '/var/www/web-development-data' directories and their sub-directories,find /var/www -type d \
display all normal/regular files in current  folder,find . -type f
"list all files under the current directory, writing the output to the file files_and_folders, do not try to descend into directories that cannot be read.","find . -type d ! -perm -g+r,u+r,o+r -prune -o -print > files_and_folders"
change the ownership of all regular/normal files in the current directory,find . -type f -exec chown username {} \;
Find all files/directories named 'articles.jpg' under '/home/username/public_html/images' directory tree,"find /home/username/public_html/images -name ""articles.jpg"""
Find all files/directories owned by the user 'bob' under '/home' directory tree,find /home -user bob
Find files/directories writable by group or others under the /path directory,"find /path -perm /g+w,o+w"
"create symbolic links in current directory to all files located in ""dir"" directory and have filename extension ""jpg""",find dir -name \*.jpg -print0 | xargs -0 -N1 ln -s
Find the unique owners of all the files in the /bin directory,find /bin -type f -follow | xargs    ls -al | awk ' NF==9 { print $3 }'|sort -u
find all the symbolic links in the current folder and follow to the pointing file,find -L
find all the text files in the temp folder and search for the word hello in all these files and display the matched files,find /tmp -type f -name ‘*.txt*’ | sed -e ‘s/.*/\”&\”/’ |xargs -n 1 grep -l hello|sed -e ‘s/.*/\”&\”/’
delete all the core files in the folder /prog which are bigger than 1KB,find /prog -type f -size +1000 -print -name core -exec rm {} \;
Search the current directory tree for files executable by at least someone,find . -type f -perm +111 -print
"Find command will list of all files & directories from current directory , before listing echo command will display ' List of files & Directory '",find . -exec echo ' List of files & Direcoty'   {} \;
update the permissions of the directories in the folder folder_name to 775,find folder_name -type d -exec chmod 775 ‘{}’ \;
Backup all of the Java files in the current directory tree by copying them and appending the suffix .bk to each,"find . -name ""*.java"" -exec cp {} {}.bk \;"
Find all the files in file system which are greater than 50MB and less than 100MB,find / -size +50M -size -100M
search for MP3 files in the current folder and subfolders except in dir1 subfolder.,"find ! -path ""dir1"" -iname ""*.mp3"""
find all files in the current folder whose size is less than 50KB,find . -size -50k
find all text files which have extra extensions in the current folder,"find . -name '*.text' -exec sh -c 'for i do if [ ! -f ""${i%.text}"" ]; then echo == $i; fi;done' sh {} +"
"Find all files named ""foo_bar"" in the current directory recursively",find -name foo_bar
"Remove all directories called ""test"" from the current directory tree",find . -name test -type d -exec rm -r {} +
Find all directories under current directory whose paths are 5 characters long,"find . -regextype posix-extended -type d -regex "".{5}"""
Print the list of directories residing in the current directory tree,find . -type d -exec ls -ld {} \;
List all files/directories under current directory with 'FooBar' in their paths ensuring white space safety,find . -print0 | grep --null 'FooBar' | xargs -0
Find all *.c files located under /home and below,"find /home -name ""*.c"""
"Make a new directory ""new-dir"" in every directory in the current directory tree","find . -type d | xargs -I ""{x}"" mkdir ""{x}""/new-dir"
Backup all PHP files under the current directory tree,"find -name ""*.php"" –exec cp {} {}.bak \;"
Find all the files in file system which are greater than 50MB and less than 100MB,find / -size +50M -size -100M
Find all SGID set files,find / -perm /g=s
Search for first match of the case insensitive regex 're' in all *.coffee files under current directory,find . -name \*.coffee -exec grep -m1 -i 're' {} \;
Find all files in the current directory tree whose size is greater than 1MB,find . -size +1M
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names,"find ""$STORAGEFOLDER"" -name .todo  -exec dirname {} \;"
Find '.git' directories in directory tree /home/madhu/release/workspace,find /home/madhu/release/workspace -type d -name '.git'
Display all files in a folder,find man5 -print
search for a word in all the php files in the current folder and display the count of all matching lines.,find . -name \*.php -type f -exec grep -Hn '$test' {} \; | wc -l
Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' that were modified within the last day,find /tmp/test/* -daystart -mtime -1
display all the .sh scripts and perl files in the current folder,find . -type f \
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT},"find ${INPUT}/ -name ""*.pdf"" -exec test -e '{}'.marker \; -exec mv '{}' '{}'.marker ${OUTPUT} \;"
Search for the pattern '^use strict' in all *.pl files under current directory,find . -name '*.pl' | xargs    grep -L '^use strict'
Find all *.ext files/directories under current directory and print their path and parent directory path,"find /path -type f -name ""*.ext"" -printf ""%p:%h\n"""
"Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and ""en"" and ""es"" directories","find . \( -name en -o -name es \) -prune , -mtime 0 ! -name ""*.swp"""
Delete all empty files/directories under test directory,find test -depth -empty -delete
"Find all duplicate files within a directory and its subdirectories, then create a report listing them.","#!/bin/bash

find /path/to/directory -type f -exec md5sum {} + | sort | uniq -w32 -d --all-repeated=separate > duplicate_files_report.txt"
"find in the file system for the directories with the name ""httpdocs""",find / -type d -name 'httpdocs'
"find all the png files in current folder which are present in the pattern list file ""search.txt"" and copy them to another directory",find . -name '*.png' | grep -f < | xargs -i{} cp {} /path/to/dir
"Search the system for files named ""findcommandexamples.txt"", ignoring the case",find  / -iname findcommandexamples.txt
Find all files/directories that are owned by user 'takuya' under current directory tree,find -user takuya
"display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names","find /var/log -name ""*.log"" -print0"
save the list of all the trace files from the folder $DBA/$ORACLE_SID/bdump/ which have been modified in the last 24 hours,find $DBA/$ORACLE_SID/bdump/*.trc -mtime -1 -print >> /tmp/trace_list.lst
"Search the current directory tree for a regular file named ""file_name""",find . -type f -name file_name
Show the last 10 .conf files found by `find' in the /etc directory and 1 level below,"find /etc -maxdepth 2 -name ""*.conf"" | tail"
"Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago","find /home/u20806/public_html -name ""robots.txt"" -o -maxdepth 1 -mmin +5 -type f -name ""*.txt"" -delete"
rename file extensions for files with specific extension in the current folder,"find . -name '*.andnav' -exec sh -c 'mv ""$0"" ""${0%.andnav}.tile""' {} \;z"
"Remove all files from the current directory tree whose names end in ""~""",find -iname '*~' | xargs rm
display the long listing of all files in /var/log which were modified 60 days or more ago.,find /var/log/ -mtime +60 -type f -exec ls -l {} \;
"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories","find . -type d -exec chmod u=rwx,g=rx,o=x {} \;"
"remove all the "".core"" files in the file system","find / -name ""*.core"" | xargs rm"
Set 644 permission to all regular files under current directory,chmod 644 `find . -type f`
Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory.,find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar
Search the home directory tree for files last modified more than a year ago,find $HOME -mtime +365
Removes all empty folders under current folder.,"find . -type d -empty -exec rmdir ""{}"" \;"
List all non-empty files under under current directory,find . -type f ! -size 0
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory",find ./ -name '*.epub' -o -name '*.mobi' -o -name '*.chm' -o -name '*.rtf' -o -name '*.lit' -o -name '*.djvu'
Find all the files that were modified more than one day ago,find . -mtime +1
"display all file in the home folder except "".c"" files","find $HOME \! -iname ""*.c"" print"
"Make a list of regular files from the current directory tree that have more than 1 link and view it with the ""less"" pager","find . -type f -noleaf -links +1 -printf ""%n %i %f\t%h\n"" | sort | less"
Find all *.jpg files under current directory and print only duplicate names,find . -name \*.jpg -exec basename {} \; | uniq -d
"Find files matching the pattern ""./sr*sc"" in their paths under current directory","find . -path ""./sr*sc"""
List all regular files under current directory ensuring white space safety,find . -type f -print0 | xargs -0 -n 1
Find all files/directories that start with 'onlyme' in their names under maximum 2 levels down the current directory,find . -maxdepth 2 -name 'onlyme*'
Find all regular files under current directory tree that were accessed $FTIME days ago,find . -type f -atime $FTIME
"Find all files in the current directory tree containing ""foo"" in their names",find . -print | grep -i foo
Descend into every directory under /etc and print the file/directory names with relative paths,"find /etc -execdir echo ""{}"" ';'"
"display all the files in the home folder which belong to the suer ""bruno"" and end with "".sxw"" and have been accessed in the last 3*24 hours",find /home -type f -name *.sxw -atime -3 -user bruno
list regular files ending in .mbox,find . -type f -wholename \*.mbox
Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded,"find ""${searchpath}"" -type f -print0 | xargs -0 grep -l -E ""${string1}.*${string2}.*${string3}"""
Search the .java files from the current directory tree for TODO lines,"find . -name ""*.java"" -exec grep -i -n TODO {}  \;"
"remove all the permissions for others to all the files in the current folder which have  read,write,execute access to users,group and others.",find * -perm 777 -exec chmod 770 {} \;
Find all files under /path/to/base/dir and change their permission to 644,find /path/to/base/dir -type f -print0 | xargs -0 chmod 644
"search for the word ""nutshell"" or ""Nutshell"" in all the files in the folder book",find /book -print | xargs grep '[Nn] utshell'
"Find the largest original "".gz"" file in the current directory tree","find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1"
Display a long listing of all files/directories named 'file' under current directory tree,find -name file -ls
Find all executable files,find / -perm /a=x
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name",find . -name '*-GHBAG-*' -exec rename 's/GHBAG/stream-agg/' {} +
Search the current directory tree for hidden files,find .*
Find files in the current directory tree whose size is 24000 bytes,find . -size 24000c
Count all directories in maximum 1 level down the current directory,find . -maxdepth 1 -type d -exec ls -dlrt {} \; | wc --lines
Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches,find . -name '*.txt'|xargs grep -m1 -ri 'oyss'
Find all files in the directory $directory or below with the permissions specificed by $permissions.,"find ""$directory"" -perm ""$permissions"""
"Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.",find $LOCATION -print -exec shred $TIMES -u '{}' \;
"Search all Python files in the current directory tree for string ""import antigravity""","find . -name ""*.py"" | xargs grep 'import antigravity'"
find all the files in the entire file system which have been modified in the last 120 hours,find / -mtime -5 -print
Delete all files with '.old' extension under current directory tree,find . -name “*.old” -print | xargs rm
Set permissions to 700 for every subdirectory of the current directory,find . -mindepth 1 -type d -print0 | xargs -0 chmod -R 700
Delete all contents form the files that contain the regex 'string' in maximum 1 level down the / directory excluding other partitions,find / -maxdepth 1 -xdev -type f|xargs grep -l 'string'| xargs perl -pi -e 's/.//g'
Change permissions to 500 for all regular files under and below the current directory,find . -type f -exec chmod 500 {} ';'
find all the files in the folder Musica and display them in a single line null separated,find Música/* | egrep -Z \/\\. | xargs -0 echo
Change the ownership to eva for all files/directories that belong to the user 'george' in the entire file system without traversing to other devices/partitions,find -x / -user george -print0 | xargs -0 chown eva
Find all directories under current directory excluding  directories  that start with a .  in their names,find -type d -a ! -name '.?*' -o ! -prune
Find *.c files under $HOME and search for the string 'sprintf' in those files,find $HOME -name '*.c' -print | xargs    grep -l sprintf
Find files/directories under '/usr' directory tree that are newer than /tmp/stamp$$ by modification time,find /usr -newer /tmp/stamp$$
create a back up of several folder,find etc home apps -depth -print | cpio -ov > dev/rmt0
"Find all files named 'test' in the current directory tree, not descending into ""test"" directories",find . -name test -prune
Display a long listing of all the regular files in the file system which belong to user 'root' and which have suid bit set,find / -type f -user root -perm -4000 -exec ls -l {} \;
"Search all the regular files in the current directory for ""example""",find -maxdepth 1 -type f | xargs grep -F 'example'
"Print as many dots as there are files named ""file.ext"" in the /home/kibab directory tree",find /home/kibab -name file.ext -exec echo . ';'
"Search the files in the current directory tree that are named ""string to be searched"" for ""text""","find . -name ""string to be searched"" -exec grep ""text"" ""{}"" \;"
Find and print the names of all files found in the current directory and all of its sub-directories,find . -print
display all the files in the current directory and do not search in the sub directories,find . -maxdepth 0 -print
Find all *.txt files/directories under current directory,find -name '*.txt'
Find empty regular files in /dir and its subdirectories,find /dir -type f -size 0 -print
"search for the text file ""file.txt"" and display its parent directory",cd /nfs/office/ &&  find . -name 'file.txt' | sed -r 's|(\./?).*|\1|'
"Compress all .txt files in the current directory tree to archive ""txt.zip""",find . -name '*.txt' | xargs zip -9 txt.zip
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories,find $1 -perm -u+x -exec chmod g+x {} \;
"display all the files in the current folder excluding those which are in the path of "".git""","find . ! -path  ""*.git*"" -type f -print"
Search for regular files of the grooup 'users' in the file system,find /  -type f -group users
Find all regular files in /usr/bin accessed more than 20 days ago,find /usr/bin -type f -atime +20
display all the files in the current folder,"find . | awk '{ print ""FILE:"" $0 }'"
"find all the files in the folder /work which belong to the user ""olivier""",find /work -user olivier -print
show the disk use of all the regular/normal files in the current folder which are bigger than 50MB,find . -type f -size +50000k | xargs du -sh
Print the first line of each file under the home directory,find $HOME/. -name *.txt -exec head -n 1 -v {} \;
"display all the files ending with "".user"" or beginning with ""admin"" or ending with "".user.gz"" in /var/adm/logs/morelogs/ and excluding  all regular files","find /var/adm/logs/morelogs/* -type f -prune \( -name ""admin.*"" -o -name ""*.user"" -o -name ""*.user.gz"" \) -print"
find all the files in the folder /usr/bin which have been modified in the last 10 days,find /usr/bin -type f -mtime -10
"Show ls's detailed output for all files named ""something""",find . -name something -exec ls -l {} \;
"find regular files under the current directory, whose name ends in .mbox and rename each file, to the same name without .mbox at the end","find . -type f -wholename \*.mbox | sed 's/\\.mbox/mv ""\1.mbox"" ""\1""/' | sh"
Find files/directories that have no owner or group under /path,find /path -nouser -or -nogroup
Get the disk space used by all *.txt  files/directories under /path directory,find /path -iname '*.txt' | perl -lane '$sum += -s $_; END {print $sum}'
Copy all files in current directory that do not match */not-from-here/* in their paths to /dest,find . -type f -not -path '*/not-from-here/*' -exec cp '{}' '/dest/{}' \;
"Unzip all "".gz"" files in the current directory tree excluding files containing ""dvportgroups"", ""nsanity"", ""vcsupport"", ""viclient"", and ""vsantraces""",find . -name '*.gz' ! -name '*dvportgroups*' ! -name '*nsanity*' ! -name '*vcsupport*' ! -name '*viclient*' ! -name 'vsantraces*' -exec gunzip -vf {} \;
display the number of lines in all the header files in the current folder,"find . -name ""*.h"" -print | xargs wc -l"
List all files in the current directory tree that were modified 60 minutes ago,find . -mmin 60 | xargs '-rd\n' ls -l
Find all *.php files under current directory and change their permission to 640,chmod 640 $(find . -name *.php)
"Move all files in ""/path/subfolder"" to ""/path"" without clobbering any destination files",find /path/subfolder -maxdepth 1 -type f -name '*' -exec mv -n {} /path \;
Get the total sizes of all files under current directory,find path -type f -printf '%s\n' | awk '{sum += $1} END {print sum}'
"Find every directory under ""0001"" and make new directories replacing ""0001"" with ""0002"" at the beginning of their names.",find 0001 -type d | sed 's/^0001/0002/g' | xargs mkdir
Display non-hidden files in the current directory with the given output format,find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\n'
Find all the files in file system which are accessed 50 days back,find / -atime 50
Find directories starting from /TBD that were modified more than 1 day ago,find /TBD -mtime +1 -type d
See the word count of every *.txt file in the home directory,find ~/ -name '*.txt' -print0 | xargs -0 wc -w
Find all *.txt files under current directory and copy them to ./tmp,"find . -type f -name '*.txt' | sed 's/'""'""'/\'""'""'/g' | sed 's/.*/""&""/'  | xargs -I{} cp -v {} ./tmp/"
Find all *.foo files under current directory and print their contents,cat `find . -name '*.foo' -print`
"Find files that are writable by the user, the group, or both under the plsql directory",find plsql -type f  -perm /220 -exec ls -l {} \; 2>/dev/null
find all files in the current folder that have a single letter in their name and have not been modified today,find . -name \? -mtime +0
Find all files under 'dir' directory with white space safety in their paths and print their md5 sums into file.txt,find dir -type f -print0 | xargs -0 md5sum >> file.txt
find the path of a specfic video file in the current directory,"find ./ -name ""foo.mp4"" -printf ""%h\n"""
Search for files that were accessed less than 5 days ago.,find -atime -5
Find all directories under current directory and change their permission to 500,find . -type d -exec chmod 500 {} \;
Search in the current directory and all sub-directories except ./D and any further sub-directories also named D for the file named hi.dat,$ find . \( -name D -prune \) -o -name hi.dat
"display the contents of all the files ending with "".fq"" and perform a control check on this raw sequence of data and display the output to the screen","find . -name ""*.fq""  -exec cat '{}' ';' | fastqc  /dev/stdin"
Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder ./JUKEBOX,find . -name '*.JUKEBOX.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE ./JUKEBOX
Search for .bam files anywhere in the current directory recursively,"find . -name ""*.bam"""
find all the files in the current folder which are bigger than 10MB and less than 50MB,find . -size +10M -size -50M -print
"Search the CSS files found in the current directory tree for string ""foo""",find . -name \*.css -print0 | xargs -0 grep -nH foo
find all js files under the build direcotry except build/external and build/log directory.,find build -not \( -path build/external -prune \) -not \( -path build/blog -prune \) -name \*.js
Find only number of hard link & name of files from long list,"find -type f -iname ""*.txt"" -exec ls -lrt {} \;|awk -F' ' '{print $1 $2  $9}'"
Find all user files larger than 5MB,find / -size  +5000000c 2> /dev/null
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -exec /bin/rm {} \+
Find all files under current directory and write the paths without the leading ./ in the file outputfile,find . -type f -printf '%P\n' > outputfile
Search for first match of the regex 're' in all *.coffee files under current directory,find . -name \*.coffee -exec awk '/re/ {print;exit}' {} \;
Find files with a question mark in their names,find . -name \*\\?\*
"show all files in /usr/tom and display only files ending with "".pl"" or "".pm""",find /usr/tom | egrep '*.pl| *.pm'
"Search the .log files in the current directory tree for string ""The SAS System""","find `pwd` -name ""*.log"" -exec grep ""The SAS System"" {} \;"
"List all files in the /hometest directory tree whose names are ""Trash"", and their sizes",find /hometest -name Trash -exec ls -s {} \;
Find all files that have wrong permission,find / \( -perm -006 -o -perm -007 \) \( ! -type -l \) -ls
display all the regular files in the current folder that are less than 10KB,find . -type f -size -10k
"display all the regular/normal files ending with "".mod"" in a folder","find ""$dir"" -name ""*.mod"" -type f -print0"
find files ending with .jpg,find . -name '*.jpg' -print ./bar/foo.jpg
"find all js files which path does not contain ./node_modules/* nor './vendor/*""",find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'
"delete all the ""wmv"" ""wma"" files in the currnet folder,",find . \ -exec rm {} \;
"Search the current directory tree for .log files containing the string ""The SAS System"", and save their names to sas_log_list.txt","find . -name ""*.log"" -exec grep -l ""The SAS System"" {} \; > sas_log_list.txt"
change the owner and group of all the normal/regular files in the current folder and /home/admin/data/ to admin & admin,find . /home/admin/data/ -type f -exec chown admin.admin {} \;
search for a word in all the shell scripts in the current folder and display the matched files.,"find . -type f -name ""*.sh"" -exec grep -l landoflinux {} \;"
display all normal / regular files in current folder in reverse order,find . -type f | tac
Remove with prompting all files starting in /mydir that have not been accessed in over 100 days,find /mydir -atime +100 -ok rm {} \;
"find the file with the name ""file"" in the entire file system",find / -name file
Find *.java files in the current directory with GNU find and replace foo with bar in those files,"find . -name ""*.java"" -exec sed -i s/foo/bar/g \;"
Find all symbolic links starting from the current directory and list them,find . -type l -ls
Execute the 'echo' command on each file from the current directory tree individually,find . -exec echo {} \;
Find regular files in the current directory tree that have the user executable bit set,find . -type f -perm -u=x
Concatenate files containing `test' in their names,find . -name '*test*' -exec cat {} \;
display all non empty directories in current folder,find . \! -empty -type d
"Find all files/directories that have read, write, execution permission for user and belong to the user 'my_user' under current directory tree",find . -user my_user -perm -u+rwx
Delete all hard links to the physical file with inode number 2655341,find /home -xdev -inum 2655341 | xargs rm
This will remove all files  modified longer than 14 days ago under /root/Maildir/ recursively from there and deeper (mindepth 1,find /root/Maildir/ -mindepth 1 -type f -mtime +14 | xargs rm
"Search the .py files residing in the current directory tree for ""something"" and save the output to output.txt",find . -name '*.py' -exec grep 'something' {} \; > output.txt
Print the sizes and file names of all files in the current directory tree that are between 700k and 1000k,find . \ -exec du -Hs {} \; 2>/dev/null
Archive all non-hidden files in the current directory and its sub-directories in the file arch.cpio,find ./* | cpio -o > arch.cpio
Find all files under current directory matching the regex '.*\(\(error\|access\)\(_log\)?\|mod_jk\.log\)\.[0-9]+' in their paths,find -type f -regex '.*\(\(error\|access\)\(_log\)?\|mod_jk\.log\)\.[0-9]+'
Search /tmp/ for files smaller than 100 bytes,find /tmp -size -100c
display a long listing of all the normal/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces ),find . -type f -print0 | xargs -0 ls -l
"Search the current directory tree for all files matching pattern ""*.rb""","find . -name ""*.rb"""
Print the current directory,find -prune
Find all files under /home/username/public_html/sites/all/modules and set their permission to 640,find /home/username/public_html/sites/all/modules -type f -exec chmod 640 {} +
Find all *.jpg  files under current directory,find . -iname '*.jpg'
"search for all the files in current folder which start with ""file2015-0"" and move them to frst 400 fiiles  to another folder","find . -name ""file2015-0*"" | head -400 | xargs -I filename mv  filename"
"Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string ""debug (""","find /srv/www/*/htdocs/system/application/ -name ""*.php"" -print0 | xargs -0 grep -H ""debug ("""
"Copy all files matching ""file_name.extension"" to ""/path/to/receiving/folder"" preserving directory hierarchy",find . -name 'file_name.extension' -print | cpio -pavd /path/to/receiving/folder
display all the files in the current folder which have are bigger than 1KB,find . -size +1024 -print
Find all files/directories named 'photo.jpg' (case insensitive) under current directory tree,"find . -iname ""photo.jpg"""
Find all the Sticky Bit set files whose permission are 551,find / -perm 1551
"Find ""*.dat"" files recursively in the current directory, print the lines starting on line 5 to the console and save to ""concat.txt""","find . -type f \ -exec tail -n+5 -q ""$file"" {} + |tee concat.txt"
display all the files in the entire file system,find / -type f -exec echo {} \;
Find the largest files in a particular location,find /home/tecmint/Downloads/ -type f -exec du -Sh {} + | sort -rh | head -n 5
Find files with the extension .conf in the /etc directory,find /etc -name '*.conf'
"find all the directories starting with the name ""someNamePrefix"" which have not been modified in the last 10 days and force delete them",find /somePath -type d -name ‘someNamePrefix*’ -mtime +10 -print | xargs rm -rf ;
Search for files/directories with the case insensitive pattern anaconda.* in /var/log,find /var/log/ -iname anaconda.*
Search for all files larger than 1GB and move them to a separate directory.,"#!/bin/bash

find /path/to/source -type f -size +1G -exec mv -t /path/to/large_files {} +"
Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago,"find ./work/ -type f -name ""*.sh"" -mtime -20 | xargs -r ls -l"
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found,"find /tmp -type f -perm -002 | awk -- '1{print ""Found world write permissions:"";print};END{if(NR==0)print ""No world writable found.""}'"
find  files which full path name is /tmpfoo/bar under foo directory and print,find foo -path /tmp/foo/bar -print
Find recursively all regular files in the current directory tree ending in .dll or .exe,"find . -type f | grep -P ""\.dll$|\.exe$"""
"display all files in the directory ""dir"" which have been accessed in the last 60 minutes",find /dir -amin -60
"Remove trailing white spaces from all files under current directory ignoring *.jpg, *.png and *.ttf files","find . -not \ --type f -print0 | xargs -0 sed -i '' -E ""s/[[:blank:]]+$//"""
Find all text files in the home directory,find ~/ -name '*.txt'
"display all the files in the current folder excluding those that are present in the path ""./etc""","find . ! -wholename ""./etc*"""
search for all the text files and display the long listing of these files from that directory,"find . -name ""*.txt"" -execdir ls -la {} "";"""
Find all files in current directory and search for 'searchName' in those files and show errors for files that are not directly on the current directory,"find ./ -name ""*"" -printf ""%f\n"" | xargs grep ""searchName"""
Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt,"find /mnt/zip -name ""*prefs copy"" -print0 | xargs>    -p rm"
"Find all files in current directory excluding hidden files, archive them and put the output into variable  full_backup_dir","full_backup_dir=""$(find . -depth \( -wholename \./\.\* \) -prune -o -print | cpio -oav)"""
"Move all directories in the current directory tree that have been modified in the last day to ""/path/to/target-dir""",find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
create a tar of all png & jpg images in the current folder,find . \ -print -exec tar -rf images.tar {} \;
Find an inode and remove,find . -inum 968746 -exec rm -i {} \;
Find all files/directories named file1 under current directory,find -name file1
find regular/normal files in the current folder,find -type f
Find the first file/directory in ... directory and quit,find ... -print -quit
"find all the ""error_log"" files in the folder ""/home"" which are bigger than 5MB and force delete them","find /home -size +5000000b -name ""error_log"" -exec rm -rf {} \;"
Execute md5sum command on files found by the find command,"find -iname ""MyCProgram.c"" -exec md5sum {} \;"
"Remove all files with names like ""vmware-*.log"" from the current directory tree",find . -name vmware-*.log -delete
"find all files in current folder having the name pattern ""some_pattern"" and move them to the folder target_location",find . -name some_pattern -print0 | xargs -0 -i mv {} target_location
Search the current directory tree for executable regular files,find . -executable -type f
list all samba files in /var/l* directory ( /var/lib or /var/log ),find  /var -path */l??/samba*
get all files in a current directory modified in the last 7 days,find . -mtime -7 -print0 | xargs -0 tar -rf /foo/archive.tar
"find regular files under the current directory, whose name ends in .mbox and rename each file, to the same name without .mbox at the end","find . -type f -wholename \*.mbox | sed 's/\(.*\)\.mbox/mv ""\1.mbox"" ""\1""/' | sh"
Find all aliencoders.[0-9]+ files under /home/jassi/ directory,"find /home/jassi/ -type f -name ""aliencoders.[0-9]+"""
Report all files in /mydir1 and /mydir2 larger than 2000 blocks and accessed in over 30 days,find /mydir1 /mydir2 -size +2000 -atime +30 -print
Find all regular files in .git and replace every occurrences of 'subdomainB.example.com'  with 'subdomainA.example.com' in those files,find .git -type f -print0 | xargs -0 sed -i 's/subdomainB\.example\.com/subdomainA.example.com/g'
Find all .svn directories under current directory and delete them,"find . -type d -name "".svn"" -print | xargs    rm -rf"
"Recursively finds files like '*.js', and filters out files with 'excludeddir' in path.",find . -name '*.js' | grep -v excludeddir
Find all 400 permission files under /data directory,find /data -type f -perm 400 -print
Find files which were changed in the past 1 hour,find . -cmin -60
Search the current directory tree for hidden files skipping .htaccess,"find . -type f \( -iname "".*"" ! -iname "".htaccess"" \)"
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time,"find / -type f -name ""*"" -newermt ""$newerthan"" ! -newermt ""$olderthan""  -printf '%T@ %p\n' | sort -k 1 -n | sed 's/^[^ ]* //'"
Find all files of the user with UID=1000,find -user 1000
List all files in the /var directory tree whose size is greater than 10 megabytes,find /var/ -size +10M -ls
Find all files/directories under ./var/log directory,find ./var/log
search for the word hello in all the text files in the temp folder and delete them,find /tmp -type f -name ‘*.txt*’ | sed -e ‘s/.*/\”&\”/’ |xargs -n 1 grep -l hello|sed -e ‘s/.*/\”&\”/’|xargs -n 1 rm -f
"Create a symbolic link in the current directory for each file .dbf under the directories matching ""/home/michael/foxpro/mount/A[1FV]/[12][0-9][0-9][0-9]""",find /home/michael/foxpro/mount/A[1FV]/[12][0-9][0-9][0-9] -name '*.dbf' -type f -exec ln -s {} \;
Find all regular files in the current directory tree and print a command to move them to the current directory,find . -type f -exec echo mv -t . {} +
Search the current directory recursively for regular files last accessed more than 2 minutes ago,find . type -f -amin +2
"find the file ""foo.txt"" in the current folder and assign the output to a variable",OUTPUT=`find . -name foo.txt`
Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days,find . -type f -mtime -7 -print -exec cat {} \; | tar cf - | gzip -9
Find all PHP files under current directory that contain only one line,find -name *.php -print | xargs -L1 awk 'NR>1{exit} END{if print FILENAME}'
Counts all files in a current folder and in subfolders one-level lower and sorts result by number of files within.,"find . -maxdepth 1 -type d -print0 | xargs -0 -I {} sh -c 'echo -e $ ""{}""' | sort -n"
"Find all files and directories whose names end in "".rpm"" and change their permissions to 755",find / -name *.rpm -exec chmod 755 '{}' \;
display all the regular/normal files in the entire file system,find / -type f -exec echo {} \;
search for a word in all files in a directory,"find /directory/containing/files -type f -print0 | xargs -0 grep ""test to search"""
"Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg",find /Users/david/Desktop -type f \
Find all files that belongs to user root under / directory and show a few lines of output from the beginning,find / -user root | head
Find all regular files under and below /home/user/demo/,find /home/user/demo -type f -print
Counts lines in each *.php file.,find . -name '*.php' -type f | xargs wc -l
Find all .bak files starting from the current directory and delete them,"find . -iname ""*.bak"" -type f -print | xargs /bin/rm -f"
find the type of all the regular/normal files in the current folder,find . -type f -exec file {} \;
unzip and search for a word in all the jar files in the current folder and display the matched file name,"find . -iname '*.jar' -printf ""unzip -c %p | grep -q '<stringWithOrWithoutSpacesToFind>' && echo %p\n"" | sh"
Calculate the MD5 checksums of all files from directory tree //path/to/source/Directory and save them as Output.txt,find //path/to/source/Directory -type f -exec md5sum {} + | awk '{print $0}' > Output.txt
Search the /path tree for all executables,find /path -perm /ugo+x
"search in the current folder for all the regular/normal file with the name ""test""",find . -type f -name test
unsafed rm all file which name start with '#',find / -name '#*' -atime +7 -print | xargs rm
Find all files under current directory,find . -type f
delete all the files in the file system which belong to the user edwarda after user confirmation,"find / -user edwarda -ok rm ""{}"" \;"
Print the list of directories with their sizes in a directory.,"#!/bin/bash

find /path/to/your/directory -mindepth 1 -maxdepth 1 -type d -exec du -hs {} +"
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%TY %p\n',find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%TY %p\n'
Create a gzip archive file  of all *.log files under $sourcePath,"find $sourcePath -type f -name ""*.log"" -exec tar -uvf $tarFile {} \;"
change the owner of all the files in the current directory,find . -exec chown myuser:a-common-group-name {} +
"search for the file ""process.txt"" in the entire file system (case insensitive search)",find / -iname 'process.txt' -print
"search for the files ""foo.txt"" in the current folder and rename it to foo.xml",find -name foo.txt -execdir rename 's/\.txt$/.xml/' '{}' ';'
Find the total size of *.jpg files within the current directory tree,find . -type f -iname '*.jpg' -print0 | du -c --files0-from=-
Find all files in the current directory tree whose path names match pattern './sr*sc',find . -path './sr*sc'
Find all SUID files in entire file system,find / -perm +4000
Find files that were accessed in less than a day ago,find / -atime -1
Find all files under current directory and set read permission for group and other for these files,find . -type f -print0 | xargs -0 chmod go+r
Getting a detailed list of files/dirs,"find  / -name ""apt"" -ls"
"Search the current directory tree for regular files whose names end in "".shtml"" or "".css""",find . -type f \ -print
create a gzip of all the files in the current folder excluding the already gzipped files,gzip `find . \! -name '*.gz' -print`
Find all the files which are greater than 50MB but less than 100MB in size,find / -size +50M -size -100M
change the permissions of all regular/normal files in the current directory,find . -type f | xargs chmod 664
find all the png files in the current folder which begin with the word image,"find . -name ""image*.png"""
find all files in the current folder which are bigger than 10MB and less than 50 MB,find . -size +10M -size -50M -print
delete all the regular files in the temp folder which have not been modified in the last 24 hours,find /tmp/ -type f -mtime +1 -print0 | xargs -0 -n1 rm
Search for files/directories named 'fileName.txt' under current directory tree without traversing into './ignored_directory',find . -path ./ignored_directory -prune -o -name fileName.txt -print
Print the byte count of all regular files found in the current directory tree,find . -type f | xargs | wc -c
find all the files that have been modified exactly 2 days ago,find -mtime 2
display all the trace files  from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours,find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7
Find all files/directories under /home/feeds/data directory,find /home/feeds/data
List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject',find . -type f -print | xargs grep -il '^Subject:.*unique subject'
"find all the files in the folder ""/mp3-collection"" which are bigger than 10MB excluding those that start with the word Metallica","find /mp3-collection -size +10000k ! -name ""Metallica*"""
Find all directories under /fss/fin,find /fss/fin -type d
Search for 'some string' in all *js files under current directory and show the matched lines with line numbers,find . -name '*js' -exec grep -n 'some string' {} \;
Find all .php files starting from the root directory /,"find / -name ""*.php"""
"Search the current directory tree for files containing ""bash"" in their names","find . -name ""*bash*"" | xargs"
"find all the text files in the current folder starting with ""somefiles-""  and prepend the first line","find . -name ""somefiles-*-.txt"" -type f -exec sed -i 'iText that gets prepended ' -- '{}' \;"
Show mv commands to move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT_LOCATION} to ${OUTPUT_LOCATION},find ${INPUT_LOCATION} -name '*.pdf.marker' -exec sh -c 'echo mv $0 `dirname $0`/`basename $0 .marker` $1' {} ${OUTPUT_LOCATION} \;
List files ending in .html and residing in the current directory tree,"find . -name ""*.html"""
display all the files in the home folder,find $HOME -print
find all the regular files in the current directory which do not have a read permission,find -type f ! -perm -444
Find all directories under current directory and set their permission to 755,find -type d exec chmod 755 {} +
Find all 100MB files in file system and delete them using rm command,find / -size +100M -exec rm -rf {} \;
Find all *.txt files/directories under current directory discarding 'Permission denied' errors,"find . -name ""*.txt"" -print | grep -v 'Permission denied'"
"Set permissions of all directories under ""/path/to/base/dir"" to 755",chmod 755 $(find /path/to/base/dir -type d)
Delete all files under /path/to/files that are not newer than dummyfile,find /path/to/files -type f ! -newer dummyfile -delete
Delete files containing whitespaces without recursion,"find . -name '*[+{;""\\=?~()<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;"
find all regular/normal files in current folder which have been modified in the last 60 minutes,find -type f -mtime -60
Find all files/directories with '.txt' extension under '/home' directory tree that are exactly 100KB in size,"find /home -name ""*.txt"" -size 100k"
Delete all files under $INTRANETDESTINATION/monthly directory tree that were modified more than 366 days ago,find $INTRANETDESTINATION/monthly -mtime +366 -exec rm {} \;
"Find all files, folders, symlinks, etc matching pattern ""*.php"" in the current directory recursively",find . -name \*.php
Find all files/directories named orm.properties under  /eserver6/share/system/config/cluster directory,"find /eserver6/share/system/config/cluster -name ""orm.properties"""
"Find all files accessed on the 29th of September, 2008, starting from the current directory",find . -type f -newerat 2008-09-29 ! -newerat 2008-09-30
sort based on size and display top ten small normal/regular files in the current folder,find . -type f -exec ls -s {} \; | sort -n | head -10
display all regular/normal files in current folder,find . -type f
"Find all files named ""test2"" in the current directory",find -name test2 -prune
locate large files  in /home/ for 'cleaning',find /home -type f -size +100M -print0 |xargs -0 rm
"search in the current folder for all the directories with the name ""test""",find . -type d -name test
Remove all *.swp files/directories under current directory,"find . -name ""*.swp""-exec rm -rf {} \;"
Search the /var/www/ tree for files not owned by user `apache',find /var/www ! -user apache -print0 | xargs -0
Prints total count of lines of all *.py files in a current folder and subfolders.,"find . -name ""*.py"" -exec wc -l {} \; | awk '{ SUM += $0} END { print SUM }'"
find the file arrow.jpg in the entire file system,find / -name arrow.jpg
Delete all .svn directories under current directory,find . -type d -name .svn -print0|xargs -0 rm -rf
"Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string ""debug (""","find /srv/www/*/htdocs/system/application/ -name ""*.php"" -exec grep -H ""debug ("" {} +"
display all the regular/normal files in the entire file system,find / -type f -exec echo {} \;
"Search the current directory recursively for regular files, skipping hidden files in the current directory",find * -type f -print
Find all directories under /var/www/some/subset and set their SGID bit,sudo find /var/www/some/subset -type d -print0 | xargs -0 chmod g+s
Find all 15MB files in entire file system,find / -size 15M
"change the permissions of all the files ending with ""fits"" in the folder ""/store/01"" and save the output file names to a log file","find /store/01 -name ""*.fits"" -exec chmod -x+r {} \; -exec ls -l {} \; | tee ALL_FILES.LOG"
"Search the /Path directory tree for files whose pathnames match pattern ""/Path/bar*"" and whose names match pattern ""file_name*""","find /Path -path ""/Path/bar*"" -name ""file_name*"""
Print the list of .txt files under and below the current directory,find . -name '*.txt' -print0|xargs -0 -n 1 echo
Count the number of lines in every regular .rb file in the current directory tree,"find . -name ""*.rb"" -type f -print0 | xargs -0 wc -l"
delete all the empty directories in the current folder,find . -type d -empty -exec rmdir {} \;
Find empty files in the test directory,find test -empty
"Search the current directory tree for regular files whose names end in ""log""","find `pwd` -name ""*log"" -type f"
"Find all files and directories last modified less than a day ago and copy to ""../changeset"" creating directories as needed",find * -mtime -1 -daystart -print0 | cpio -pd0 ../changeset
Display a count of regular files in each directory at the current level.,find -P . -type f | rev | cut -d/ -f2- | rev | cut -d/ -f1-2 | cut -d/ -f2- | sort | uniq -c
"find all the files in the folder ""myfiles"" which have not been accessed in the last 30 days",find /myfiles -atime +30
Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter,find /mnt/naspath \! \ -type f -mtime 0 -print0
display long listing of all the text files in the current folder (plus at the end executes quickly by sending bulk data as input to the command in exec),"find . -name ""*.txt"" -exec ls -la {} +"
display all regular files in the folder image-folder,find image-folder/ -type f
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name",find . -type f -print0 | xargs -0 chmod 664
"delete all the text files starting with the name ""oldStuff"" in the file system","find / -name ""oldStuff*.txt"" -delete"
Print the list of files modified in the last 7 days sorted by modification time.,"#!/bin/bash

find /path/to/your/directory -type f -mtime -7 -exec stat --format '%Y :%y %n' {} + | sort -nr | cut -d: -f2- | awk '{print $4, $1, $2, $3}'"
"find all the files in the current directory and search for the word ""pw0"" in them.","find . -exec grep -i ""pw0"" {} \;"
Find all files/directories under directory '.cache/chromium/Default/Cache/' which are bigger than 100MB and which are atleast 1 level deep and delete them,find .cache/chromium/Default/Cache/ -mindepth 1 -size +100M -delete
Delete all regular files under current directory,find . -type f -print0 | xargs -0 /bin/rm
Search the current directory tree for files matching regular expression '^myfile[0-9][0-9]?$',find . -\
find any files in the current directory that begin with a number,find . -regex './[0-9].*' -print
find all the files in the current directory which have been modified in the last 24 hours,find . -mtime 0
search for the file picasso in the folder /home/calvin/,find /home/calvin/ -iname “picasso”
Find broken links,find / -type l -print0 | xargs -0 file | grep broken
display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder,find . -name test -prune
Find all files except files with '.gz' extension in the current directory non-recursively and compress them with gzip,"find . -maxdepth 1 -type f ! -name '*.gz' -exec gzip ""{}"" \;"
Find the total size of *.jpg files within the current directory tree,find . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'
display all files in current folder with NULL separating each file,find . -print0
Count all the lines of all php files in current directory recursively,find -name '*.php' | xargs cat | wc -l
"Search the files of the current directory tree for string ""searched-string""","find . | xargs grep ""searched-string"""
Show manual page for the find utility,man find
Find all directories under current directory and run  /path/to/script.sh for each of them,find . -type d -exec /path/to/script.sh '{}' \;
Replace all occurrences of edx  with gurukul in all *.css  files under ./cms/djangoapps/contentstore/views directory,find ./cms/djangoapps/contentstore/views -iname *.css | xargs sed -i s/[Ee][Dd][Xx]/gurukul/g
Find all files name passwd in the root directory and all its sub-directories.,find / -name passwd
Find all files/directories under current directory that match the case insensitive regex ./\(RT\|ED\).* and show several lines of output from the beginning,find . -iregex './\(RT\|ED\).*' | head
"display files ending with "".ext"" in current folder which are present in the file ""foo""",find . -type f -name \*.ext | xargs grep foo
Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories,"find . -name ""*.png"" -prune -o -name ""*.gif"" -prune -o -name ""*.svn"" -prune -o -print0 | xargs -0 -I FILES grep -IR ""foo="" FILES"
Look for all files whose names match pattern 'my*',find / -name 'my*'
"Finds recursively all folders in current folder which path not contains ""NameToExclude"" string and removes only ones without files and another folders within.","find . -type 'd' | grep -v ""NameToExclude"" | xargs rmdir"
Find all directories under 'A' directory tree excluding paths containing the directory 'a',find A -type d \
"search for the file, filename.txt in the current folder ( case insensitive search )",find . -iname filename.txt
Find all the SUID files in the current directory tree,find . -perm /u=s
"Search the current directory tree for regular files that contain ""string""","find . -type f -printf '""%p""\n' | xargs grep string"
"change the owner of all the regular/normal files which belong to the root user to ""tom"" in the current folder",find .-type f -user root -exec chown tom {} \;
long list al the files in the current directory which have all the permissions,find . -perm 777 -type f -exec ls -l {} \;
"Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output",find . -type f -exec grep -i California {} \; -print | wc -l
Search for 'pattern' in all files with '.cc' extension under current directory tree and show the matched lines with line numbers and filenames,find . -name “*.cc” |xargs grep -n “pattern”
"Find all directories named ""nasa""",find . -name nasa -type d
display all files in current folder using regular expression,"find -regex ""$rx"""
Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves,find $ROOT_DIR -type d -depth -print
"Recursively copy all files and directories in ""demo"" excluding "".git"" to ""demo_bkp""",find demo -depth -name .git -prune -o -print0 | cpio -0pdv --quiet demo_bkp
Find all files under media/ directory and change their permission to 600,find media/ -type f -exec chmod 600 {} \;
"Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files","find [directory] -name ""pattern_to_exclude"" -prune -o -name ""another_pattern_to_exclude"" -prune -o -name ""pattern_to_INCLUDE"" -print0 | xargs -0 -I FILENAME grep -IR ""pattern"" FILENAME"
display long listing of all normal/regular files in the current directory which have been modified in the last 2 days.,"find . -mtime -2 -type f -name ""t*"" -exec ls -l '{}' \;"
Find all files/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern,find . -name 'test*' -prune
Find all 400 permission files under /data directory and change their permission to 755,find /data -type f -perm 400 -print | xargs chmod 755
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'etc/rc.d/',find /usr/ports/ -name pkg-plist\* -exec grep -l etc/rc.d/ '{}' '+' | wc -l
Find all executables under /path directory,find /path -perm /ugo+x
Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path,find /foo/bar -name '*.mp4' -exec mv -t /some/path {} +
Find all files in current directory and search for 'searchName' in those files,"find ./ -name ""*"" | xargs grep ""searchName"""
Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty,find project -maxdepth 1 -mindepth 1 -regextype posix-egrep ! -iregex  $PATTERN  ! -empty -type d
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*,find -mtime 0 -not \
Find *.c and *.sh files,"find . -type f \( -name ""*.c"" -o -name ""*.sh"" \)"
"Search the files from the current directory tree for ""chrome""",find . | xargs grep 'chrome'
Delete all regular files under $DIR directory tree that have been modified before file $a,"find ""$DIR"" -type f \! -newer ""$a"" -exec rm {} +"
List all files in the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 |xargs ls -l
"List all files/directories under current directory matching the posix-egrep type regex "".+\.$"" in their names excluding the paths */generated/* and */deploy/*",find . -regextype posix-egrep -regex '.+\.$' -not -path '*/generated/*' -not -path '*/deploy/*' -print0 | xargs -0 ls -L1d
Print a NULL-separated list of all directories of the current directory tree,find . -type d -print0
Change permissions to 644 for all files showing the respective chmod command,find ./ -type f -print0 | xargs -t -0 chmod -v 644
Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match,find project -name '*.php' -type f -print0 | xargs -0 grep -l ireg
"find all the files in the entire file system that have been modified exactly 7 days before which end with ""conf""","find / -name ""*conf"" -mtime 7"
Find all symlinks under /path/to/dir and replace them with the actual files they are pointing at,"find /path/to/dir -type l -exec sh -c 'cp --remove-destination ""$"" ""{}""' \;"
search for a word in all the regular files in the current folder.,find -type f -print0 | xargs -r0 grep -F 'example'
find all files that names are filename and open in nano text editor,find / -name filename -exec  nano '{}' \;
remove all the DS_Store files in the current directory,find . -name .DS_Store -exec rm {} \;
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible,find /home/www/ -type f -exec sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g' {} +
Find all files/directories named Root under current directory and copy them to newRoot,find . -name Root | xargs cp newRoot
"Recursively finds in all folders but ""./output/*"" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.",find .  \ -a \ -a \ -a \ | xargs grep -n soc_attach
"Find all files under the current directory and copy their permissions to the same file in ""../version1""",find . -type f | xargs -I {} chmod --reference {} ../version1/{}
"Find all the files that are not named ""MyCProgram.c"" in the current directory only and without regards to case.","find -maxdepth 1 -not -iname ""MyCProgram.c"""
"Change every file under ""/var/www/html/"" to have permissions 664",sudo  find /var/www/html/ -type f -exec chmod 664 {} \;
Print a listing of the `other' directory,"find other -maxdepth 1 -printf ""%P\n"""
Recursively changes group ownership of every folder in a current directory to the name of that folder.,"find . -type d | sed -e 's/^\.\///g' | awk '{print $1, $1}' | xargs chgrp"
"Find all regular files whose names do not end in ""*.html""","find . -type f -not -name ""*.html"""
long list al the files in the current directory which have read permission to the group,find . -perm -g=r -type f -exec ls -l {} \;
Remove all *.swp files under current directory,"find . -name ""*.swp""|xargs rm"
"search for the file, filename.txt in the folder /home",find /home -name filename.txt
Find files modified between 6 and 9 minutes ago,find . -mmin +5 -mmin -10
"Search all regular files in the current directory tree for ""example""",find -type f -print0 | xargs -r0 grep -F 'example'
Removes all empty folders under path '/foo/bar' and the path itself.,find /foo/bar -type d -depth -exec rmdir -p {} +
find Texinfo source files in /usr/local/doc,find /usr/local/doc -name '*.texi'
Search the current directory recursively for files last modified within the past 24 hours,find . -mtime 0
"find all the files in the folder ""/usr/app/etl/01/OTH/log/tra"" which have been modified  in the last 240 hours  excluding hidden files and those with the name ""/usr/app/etl/01/CLE/par/files_to_skip.par""","find /usr/app/etl/01/OTH/log/tra -type f ! -name "".*"" -mtime -10 | egrep -vf /usr/app/etl/01/CLE/par/files_to_skip.par"
"Find all files/directories under current directory that match the case insensitive glob pattern {EA,FS}_*","find . -iname ""{EA,FS}_*"""
Find files that are orphaned,find -nouser
"Compress all files in the ""$FILE"" directory tree that were last modified 30 days ago and have not already been compressed with gzip",find $FILE -type f -not -name '*.gz' -mtime 30 -exec gzip {} \;
"display all the files in the file system which do not belong to the user ""wnj"" and which are modified before the file ""ttt""",find / \! \( -newer ttt -user wnj \) -print
List all files under current directory that are greater than 10MB in size,find . -size +10M -exec ls -ld {} \;
search for word linux in all the regular/normal files in the folder mail.,"find ~/mail -type f | xargs grep ""Linux"""
"Search the files of the current directory tree for string ""searched-string""","find . | xargs grep ""searched-string"""
Find all files/directories under current directory that match the case insensitive extended regex .*/_.*,find -E . -iregex '.*/_.*'
Find all the Sticky Bit set files in entire file system whose permission are 551,find / -perm 0551
Print the list of files and directories of the /etc directory,find /etc/. ! -name . -prune
Find all files with the extension jpg regardless of case,find . -type f -iname '*.jpg' -print0
Print all files/directories under ... directory by terminating their paths with a null character,find ... -print0
display all the files in the folder /home which have the setuid bit enabled,find /home -perm /u=s
Find files with group write permission and remove the permission,find . -perm -20 -exec chmod g-w {} ;
"find all the files in the current directory that have the extension ""bar"" and donot search in the subdirecotries directories.",find . -name *.bar -maxdepth 2 -print
Append the parent directory name with a space in all 'text.txt' files in all sub directories of current directory,"find . -name text.txt | sed 's|.*/\(.*\)/.*|sed -i ""s@^@\1 @"" & |' | sh"
Find all files/directories under /home/foo/public_html/ that were modified less than 60 minutes ago,grep ! error_log | find /home/foo/public_html/ -mmin -60
Execute /usr/bin/find with $* arguments,/usr/bin/find $*
Search the home directory for files accessed more than 10 days ago,find ~/ -atime +10
List all *.java files/directories under /home/bluher with their full paths,find /home/bluher -name \*.java
Find all files under current directory and set their permission to 775,find -type f | xargs chmod 775
"list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.",find . ! -readable -prune
Find all .txt files in the /home/user directory tree and copy them to /home/backup,find /home/user -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents
"search for the word ""search-pattern"" in all the regular/normal files in the current folder and display the matched file name","find . -type f | xargs grep -l ""search-pattern"""
Force delete all files in the temp folder which have not been accesses in the last 240 hours,find /tmp/* -atime +10 -exec rm -f {} \;
Find all files/directories under 'my key phrase' directory,find 'my key phrase'
change the owner of all the files in the current directory,find . -exec chown myuser:a-common-group-name {} +
"Remove all regular files from the current directory tree whose names do not end with ""ignore1"" or ""ignore2""",find . -type f -not -name '*ignore1' -o -not -name '*ignore2' | xargs rm
Search for 'birthday'  in all regular files under ~/Documents directory tree and show only the filenames,find ~/Documents -type f -print0 | xargs -0 grep -il birthday
Delete all files/directories under current directory,find -delete
Find all files/directories with 755 permission under current directory tree,find ./ -perm 755
change the ownership of all the files in the file system from edwarda to earnestc,find / -user edwarda -print | xargs chown earnestc
Find all directories under /var/www directory and set their permission to 755,sudo find /var/www -type d -print0 | xargs -0 chmod 755
get all files in a current directory modified in the last 7 days,find . -mtime -7 -print0 | xargs -0 tar -rf /foo/archive.tar
Search for all files newer than file /tmp/t1 but not newer than file /tmp/t2,find / -newer /tmp/t1 -and -not -newer /tmp/t2
"Copy entire directory structure from dir1 as a subdirectory of dir2, omitting empty directories, special files  and any directory named ""exclude"".",mkdir dir2; find dir1 \ -not -wholename '*/exclude/*' -exec cp -P --parents '{}' dir2/ \;
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"" -exec ls -lrt {} + | awk '{print $9}'"
find all the files in the current folder which have set guid bit on and list the top 10 files.,find . -perm /g+s | head
find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB,find . -atime +7 -o -size +`expr 10 \* 1024 \* 2` -print
Find all HTML files starting with letter 'a' in the current directory and below ignoring the case,find . -iname a\*.html
searching for all files with the extension mp3,find / -name *.mp3
change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition,"find . -xtype f \! -iname *.html   -exec mv -iv ""{}""  ""{}.html""  \;"
delete all the core files in the folder /prog which are bigger than 1KB,find /prog -type f -size +1000 -print -name core -exec rm {} \;
Find all directories under /fss/fin,find /fss/fin -type d
Change the user to daisy for directories and subdirectories owned by harry,find . -type d -user harry -exec chown daisy {} \;
Find all files/directories named 'query' under current directory tree,"find -name ""query"""
"Search all the .c and .h files in the current directory tree for ""expr""",find -name '*.[ch]' | xargs grep -E 'expr'
"Calculate the md5 sum of the contents of all files sorted in directory tree ""/path""",find /path -type f | sort -u | xargs cat | md5sum
List all ~/bin/FilesDvorak/.* (non-recursive) and ~/.PAST_RC_files/.* (recursive) files/directories and take common entries between these two lists,comm -12 <(find ~/bin/FilesDvorak/.* -maxdepth 0) <(find ~/.PAST_RC_files/.*)
Find all foo.mp4 files in the current directory tree,"find ./ -name ""foo.mp4"" -exec echo {} \;"
"Find files in two different directories  having the ""test"" string and list them","find esofthub esoft -name ""*test*"" -type f -ls"
Calculate MD5 sums for all regular files in the current directory tree,find . -type f | while read f; do g=`md5sum $f` > $f.md5; done
display the count of all the directories in the current folder,find . -type d –print | wc -l
"Print line, word and byte count for each file recursively and also show the total counts",wc `find`
Find all the files on the system that have been modified within the last hour,find / -mmin -60
"Find directories that have ""755"" permissions and modify them to have ""700"" permissions",find . -type d -perm 755 -exec chmod 700 {} \;
"search in the current folder for the file with the name ""test""",find . -iname test
Find files that are writable by both the “other” and the group,find plsql -type f  -perm -ug=rw -exec ls -l {} \; 2>/dev/null
list all files under the current directory called cookies.txt,find -name cookies.txt
"Replace all the mathes to regex '<script type=""text\/javascript"" charset=""utf-8"" src=""file.js""><\/script>.*' with '<script type=""text\/javascript"" charset=""utf-8"" src=""file2.js""><\/script>' in all HTML files under $DIR directory tree modifying the files in-place","find $DIR -type f -name '*.html' -exec sed -i 's/.*<script type=""text\/javascript"" charset=""utf-8"" src=""file.js""><\/script>.*/<script type=""text\/javascript"" charset=""utf-8"" src=""file2.js""><\/script>/g' {} \;"
Find largest file in linux with find command,"find . -type f -printf ""%s\t%p\n"" | sort -n | tail -1"
Remove all files 'a.out' and *.o in the home directory tree that were accessed more than 7 days ago,find $HOME \ -atime +7 -exec rm {} \;
find all files read less than 1 minute ago,find . -amin -1
"Find any file that has ""disc"" somewhere in its name in the current directory and all of its sub-directories.",find . -name *disc*
"List the MD5 digest of all files under ""teste1"" and ""teste2"" sorted alphabetically",find teste1 teste2 -type f -exec md5 -r {} \; | sort
search for a word in all the php files in the current folder and display the count of all matching lines.,find . -name \*.php -type f -exec grep -Hn '$test' {} \+ | wc -l
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days,find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90
Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory,find  / -iname findcommandexamples.txt
Delete all files under /path/to/files that are not newer than dummyfile,find /path/to/files -type f ! -newer dummyfile -delete
find all the file which name end with c or h and content contain 'thing',find . -name '*.[ch]' | xargs grep -l thing
find all the files that have been modified on a specific day and copy them to another directory,find . -type f -daystart -mtime $date_dif -exec copy_it.sh $verbose -s {} -t $to_dir \;
find all normal/regular files in current folder and display them in sorted order,"find . -type f -ls | awk '{print $(NF-3), $(NF-2), $(NF-1), $NF}'"
find all the empty directories in the current folder and all its sub directories too,find . -depth -empty -type d
"Find files/directories under /users/tom that matches both the pattern ""*.pl"" and  ""*.pm""","find /users/tom -name ""*.pl"" -name ""*.pm"""
Find PHP files containing 2 or more classes,"find . -type f -name ""*.php"" -exec grep --with-filename -c ""^class "" {} \; | grep "":[2-99]"" | sort -t "":"" -k 2 -n -r"
Print the size for every *.ogg file found under the home directory,find $HOME -name '*.ogg' -type f -exec du -h '{}' \;
search  in root  directory downwards all files which  have exactly 2 links.,find /  -links 2 -print
Find all *.mov  files under current directory and run an echo command with the path and the name for each file,"find . -iname ""*.mov"" -printf ""%p %f\n"" | while read -a HR ; do echo ffmpeg -i ${HR[0]} -f flv ${HR[1]} ;done"
create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine),find . -name '*.log' -mtime +3 -print0 | xargs -0 -P 4 bzip2
Remove all .mpg files in the /home/luser directory tree,find /home/luser -type f -name ‘*.mpg’ | parallel rm -f
find all files with pattern` '*.mp3' and send output into nameoffiletoprintto file,find / -name *.mp3 -fprint nameoffiletoprintto
Find all the files/directories in the entire filesystem that do not belong to user 'wnj' and are not newer than the file/directory 'ttt' by modification time,find / \! \ -print
"Search the current directory for files whose names start with ""messages."" ignoring SVN files",find \ -exec grep -Iw uint {} +
Find all regular files or symlinks in the entire file system,find / -mount -depth \( -type f -o -type l \) -print
Find all regular files in the current directory tree that are not readable by all,find -type f ! -perm -444
"Change all directories under ""./bootstrap/cache/"" to owner ""apache"" and group ""laravel""",sudo find ./bootstrap/cache/ -type d -exec chown apache:laravel {} \;
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -type f -mtime +$DAYS_TO_SAVE -print0 | awk -v RS='\0' -v ORS='\0' '{ print } END { print NR }' | xargs -0 rm"
"Finds all the log* files in /myDir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them.",find /myDir -name 'log*' -and -not -name '*.bz2' -ctime +7 -exec bzip2 -zv {} \;
find all the html files in the current folder which have been modified in the last 7 days,"find . -mtime -7 -name ""*.html"" -print"
Find all *.ogg files on the system ignoring the case,find / -iname '*.ogg'
Find all hidden regular files starting from the current directory,"find . -type f -name "".*"""
Find all files in /dir1 and print only the filenames (not paths),find ./dir1 -type f -exec basename {} \;
"Create symbolic links in the current directory for all files under ""bar1"" that are not directories and do not end in "".cc""",find bar1 -name '*foo*' -not -type d -not -name '*.cc' -exec ln -s $PWD/'{}' bar2/ \;
"find all the text files in current folder and move all these to another folder appending "".bar"" at the end of these files","find . -name ""*.txt"" | xargs -I '{}' mv '{}' /foo/'{}'.bar"
display all the .sh scripts and perl files in the current folder,"find . -type f \( -name ""*.[sS][hH]"" -o -name ""*.[pP][lL]"" \)"
find all *.java files/directories under current directory,"find . -name  ""*.java"""
Find all *.wav files under current directory that match 'export' in their names and pipe the output to ./calc_space,"find -type f -name ""*.wav"" | grep export | ./calc_space"
Search for the extended grep regex 'expr' in all files with '.c' and '.h' extension under current directory tree,find . -name '*.[ch]' | xargs grep -E 'expr'
change the permissions of all the regular/normal files in the current folder,chmod 640 `find ./ -type f -print`
find all files in etc which have been changed in the last 25 hours,find /etc -ctime -1
Find all the regular files under directory 'dir1' that are at least N levels deep,find dir1 -mindepth N -type f
List all regular files under the current directory and below it,find . -type f -print0 | xargs -0 ls -l
Remove all *.swp files under current directory ensuring white space safety,"find . -name ""*.swp"" -print0|xargs -0 rm"
find all the files from root folder which have nogroup or noname and dispaly their details.,find / \ -ls
Search for files only that end with .php and look for the string $test inside those files,find . -name \*.php -type f -print0 | xargs -0 grep -Hn '$test'
Find all regular files under current directory tree and replace all '1.2.3.4' with '5.6.7.8' in these files modiying the files in-place,"find . -type f -exec sed -i ""s/1\.2\.3\.4/5.6.7.8/g"" {} \"
find all the files in the home folder which have been modified in the last 30 minutes,find $HOME -mmin -30
Search the current directory tree for symlinks pointing at other symlinks,find . -type l -xtype l
"Search all regular files in the current directory tree for ""string""",find . -type f | xargs -d '\n' grep string
Find all files in your home directory and below that are larger than 100M.,find ~ -size +100M
"display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00",find . -daystart -ctime 4 -ls -type f
List the names of all files under current directory,find . -type f -exec basename {} \;
"List all files with name ""someFile"" and their modification time under the current directory sorted by oldest modified to newest modified","find . -name ""someFile"" -printf ""%p:%T@\n"" | sort -t : -k2"
Find all the Sticky Bit set files in entire file system whose permission are 551,find / -perm 0551
display all regular/normal files in the current folder ending with the word ummy,find -type f -name *ummy
display all the jpg images in current folder,find . -type f -iregex '.*\.jpe?g'
Change the permission to 0644 for all files under current directory,find . -type f -exec chmod 0644 {} +
Find all the files under /home directory with name tecmint.txt,find /home -name tecmint.txt
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place,find /myprojects -type f -name '*.cpp' -print0 | xargs -0 -n 1 sed -i 's/previousword/newword/g'
Find all Makefile's in the current directory tree and look for line 235 in each of them,find . -name Makefile -print0 | xargs -0 grep -nH $ | grep :235:
Search the current directory recursively for regular files last changed less than 2 days ago,find . type -f -ctime -2
Move files from $sourcePath to $destPath that have not been modified in the last 10 days,"find $sourcePath -type f -mtime +10 -name ""*.log"" -exec mv {} $destPath \;"
Count the number of files/directories named file1 under current directory,find -name file1 | wc -l
"Search the current directory tree for *cache, *xml, and *html files",find . -type f \
"search for ""specified string"" in all the php files in the current folder",find . -name “*.[php|PHP]” -print | xargs grep -HnT “specified string”
Find out all hard links in the /home directory to file1,find /home -xdev -samefile file1
Find all files under current directory and print them appending a null character at the end of each file paths,find . -type f -print0
Counts lines in each *.php file.,"wc -l `find . -name ""*.php""`"
Find all the files which are modified in last 1 hour,find / -mmin -60
"Search the current directory tree for regular files modified within the past 24 hours whose names do not end with "".DS_Store""",find . -mtime -1 ! -name '.DS_Store' -type f -exec basename {} \;
Calculate the md5 sum of all files in the current directory and formatting the output by removing parenthesis,find -maxdepth 1 -type f -exec md5sum {} \; | sed 's/[^(]*(\([^)]*\)) =/\1/'
Find all directories under /home/username/public_html/sites/all/modules and set their permission to 750,find /home/username/public_html/sites/all/modules -type d -exec chmod 750 {} +
List all empty files in the current directory tree,find . -type f -empty
change the group of all the files which belong to the user edwarda to pubs,"find / -user edwarda -exec chgrp pubs ""{}"" \;"
find all the normal/regular files in the current directory and search for the word mail and display the file names,find . -type f -exec grep -il mail
Search everywhere for files changed within the last minute,find / -newerct '1 minute ago' -print
Find all files/directories under current directory that were modified exactly 30 minutes ago,find . -mmin 30
Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username,find $dir -maxdepth 1 -type d -user $username -perm -100
Search directory /Users/david/Desktop/ recursively for regular files,find /Users/david/Desktop/ -type f
Find all empty regular files in the current directory tree,find . -size 0c -type f
"list broken symbolic links under ""somedir""","find ""somedir"" -type l -print0 | xargs -r0 file | grep ""broken symbolic"" | sed -e 's/^\|: *broken symbolic.*$/""/g'"
Find all files/directories under '/abs/path/to/directory' directory non-recursively that match the pattern '.*invalidTemplateName.*' in their names,find /abs/path/to/directory -maxdepth 1 -name '.*invalidTemplateName.*'
Display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time,"find . -regex "".*\.\(flv\|mp4\)"" -type f -printf '%T+ %p\n' | sort | head -n 500"
Find all directories under path_to_dir directory,find path_to_dir -type d
"Find all directories named ""D"" in the current directory tree and print their parents",find ./ -type d -name 'D'|sed 's/D$//'
"Search all files called ""abc"" that reside in the current directory tree for string ""xyz""","find . -name ""abc"" -exec grep ""xyz"" {} \;"
Find all files in the /usr directory tree that are owned by group `staff',find /usr -group staff
display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins,find . -maxdepth 1 -name '*.dat' -type f -cmin +60 -exec basename {} \;
Find SUID files,find / -perm +4000
Find all *.cgi  files/directories under current directory and change their permission to 755,find . -iname '*.cgi' | xargs chmod 755
Find all *.cgi files/directories under current directory and change their permission to 775,find . -name '*.cgi' -print0 | xargs -0 chmod 775
Find all files inside all directories  in maximum 2 levels down the /tmp/test directory and print the number of files in each directory and also print the file/directory paths,"find /tmp/test/ -maxdepth 2 -mindepth 1 -type d | while read dir; do printf ""%s : "" ""$dir""; find ""$dir"" -maxdepth 1 -type f | wc -l; find ""$dir"" -maxdepth 1 -type f ; done;"
"search for all the files in the current directory which belong to the user ""xuser1"" and change the owner ship of them to ""user2""",find . -user xuser1 -exec chown -R user2 {} \;
"find all files ending with ""js.compiled"" in current folder","find . -type f -name ""*.js.compiled"""
display all the files in the directory modules,find . -name modules
Look for files with the name 'search' under current directory,"find . -name ""search"""
files all files which expect directories and display count of them,find /usr/share \! -type d wc -l
Find files in entire file system with at least 644 permissions,"find / -perm -u+rw,g+r,o+r"
Find all files/directories under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks,"find /path/to/dir/* -printf ""%TY%Tm%Td%TH%TM%TS|%p|%l\n"""
Find regular files that are larger than 2GB,find . -type f -size +2G
Search for files only that end with .php and look for the string $test inside those files,find . -name \*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test'
Find all files in the home directory with open permissions,find ~ -perm 777
"search all jpg,png,jpefg  files in the current folder and calculate the total size of them",find . \ -ls | awk '{total += $7} END {print total}'
Search for files/directories which are writable by either their owner or their group,"find . -perm /u=w,g=w"
Find only permission field & file name from long listing with find command .,"find -type f -iname ""*.txt"" -exec ls -lrt {} \;|awk -F' ' '{print $1  $9}'"
"Recursively counts non-blank, non-comment lines in all *.c files in a current folder.",find . -type f -name '*.c' -exec cat {} \; | sed '/^\s*#/d;/^\s*$/d;/^\s*\/\//d' | wc -l
"Search for files with ""demo"" in their names and ""sitesearch"" in their path names",find . -iname '*demo*' | grep -i sitesearch
Find the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories and redirect the output to the file ~/.codepath,find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n' |sort |uniq |tr -d '\n' > ~/.codepath
Generate UUIDs for the files from the current directory tree,"find -printf ""%P\n""| sort | xargs -I '{}' bash -c 'echo $ {}'"
display all normal/regular files in a folder,find teste1 -type f
Delete empty directories,find . -type d -empty -delete
search for *.log files starting from /,"find / -name ""*.log"""
displays all the files in the current folder,find .
find all the png files in the current folder which begin with the word image,"find . -name ""image*.png"""
find all the regular files in the current folder which have specific word in their name and force delete all these files and save the log to the file log_del.txt,find ./ -type f -name '*.r*' -print0 | xargs -0 rm -rf &> log_del.txt
Print all file/directory names without white space safety under the /proc directory,find /proc | xargs
Search for files bigger than 10M,find ~ -size +10M
Returns the single most recent file in a directory and all subdirectories.,"find $DIR -type f -exec stat --format '%Y :%y %n' ""{}"" \; | sort -nr | cut -d: -f2- | head -n 1"
"Save the list of files in the current directory tree whose names contain ""2011"" to /tmp/allfiles",find . -name '*2011*' -print0 > /tmp/allfiles
Print a sorted list of the extensions of the regular files from the current directory tree,find . -type f | sed -e 's/.*\.//' | sed -e 's/.*\///' | sort -u
find StringBuffer in all *.java files,"find . -type f -name ""*.java"" -exec grep -l StringBuffer {} \;"
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP, preserving path hierarchy","find . -type f -iname ""*linkin park*"" | cpio -pvdmu /Users/tommye/Desktop/LP"
find all the symbolic links in the current folder and follow to the pointing file,find -L
"delete all the files ending with ""~"" in current folder",find -name '*~' -print0 | xargs -0 rm
Search the system for the file 'myfile' ignoring permission denied errors,find . -name myfile |& grep -v 'Permission denied'
find and image in current folder,"find . -iname ""Articles.jpg"""
"Add ""Line of text here"" on top of each *.py files under current directory",find . -name \*.py | xargs sed -i '1a Line of text here'
Find all the files on the system that have been modified within the last hour,find / -mmin -60
"Change permissions to u=rw,g=r,o= for all files inside the current directory tree","find . -type f -exec chmod u=rw,g=r,o= '{}' \;"
Find all *.ini files,find . -name *.ini
Find all *fstab* files under and below /etc,find /etc -name *fstab*
Change user ownership to `foo' for files with UID=1005,find / -user 1005 -exec chown -h foo {} \;
Delete all files in the /myDir directory tree that were last modified 7 days ago,find /myDir -mtime 7 -exec rm -rf {} \;
Find all files/directories that are owned by user 'eric' under current directory tree,find -user eric -print
"Rename all ""thumbs"" directories to ""thumb"" in the current directory tree","find . -type d | awk -F'/' '{print NF, $0}' | sort -k 1 -n -r | awk '{print $2}' | sed 'p;s/\(.*\)thumbs/\1thumb/' | xargs -n2 mv"
list all javascipts file which whole name does not contain excludeddir or excludedir2  or excludedir3,find . -name '*.js' | grep -v excludeddir | grep -v excludedir2 | grep -v excludedir3
"Search the current directory tree for regular files that contain ""string""","find . -type f -printf '""%p""\n' | xargs grep string"
list *.bmp and *.txt files under the /home/user/Desktop directory.,find /home/user/Desktop -name '*.bmp' -o -name '*.txt'
"Search .c and .h files in the current directory tree for ""expr""",find . -name '*.[ch]' | xargs grep -E 'expr'
"Find all regular files in the current directory tree and search them for ""example""",find -type f -print0 | xargs -r0 grep -F 'example'
find all the links in the current directory and print them in each line and display their names.,find . -type l -print | xargs ls -ld | awk '{print $10}'
find all gif files in the file system,"find / -name ""*gif"" -print"
find all the files in current directory of size smaller than 10KB.,find . -size -10k
find all the files in the current directory which have been modified in the  last 6 days.,find . -atime +6
"Finds all files having text ""texthere"" recursively in a current folder, and precedes found string with string number in file and file name.","find -type f -exec grep -Hn ""texthere"" {} +"
"Create links for all files in the current directory tree that are more than 1000 days old in ""/home/user/archives""",find . -type f -mtime +1000 -print0 | cpio -dumpl0 /home/user/archives
Find regular files in the current directory tree that have executable bits set for the user and group but not for the other,"find -L . -type f -perm -u=x,g=x  \! -perm -o=x"
Search for all files newer than file /tmp/t1 but not newer than file /tmp/t2,find / -newer /tmp/t1 -and -not -newer /tmp/t2
find suffix tcl files under all directories started with 'n',"find ./n* -name ""*.tcl"""
display all instances of the .profile file in the entire file system,find / -name .profile -print
Find a directory named 'project.images' in the entire filesystem and show it in long listing format,"find  / -type d -name ""project.images"" -ls"
display all the files in the current folder which have are bigger than 1KB,find . -size +1024 -print
rename all the png files to jpg files in the current fodler,"find . -name ""*.png"" -print0 | sed 'p;s/\.png/\.jpg/' | xargs -0 -n2 mv"
Print the 6th field (delimited by '/') from the paths specified by ~/bin/FilesDvorak/.* files/directories,"find ~/bin/FilesDvorak/.* -maxdepth 0 | awk -F""/"" '{ print $6 }'"
"display a long listing of all the files in the current folder in sorted order, which are bigger than 10KB",find . -size +10k -exec ls -ls {} \+ | sort -nr
Change permissions of all directories residing under and below ./debian to 755,find ./debian -type d | xargs chmod 755
Find all files in /dir1 and print only the filenames,"find /dir1 -type f -printf ""%f\n"""
The  command runs all the directories  found in the $LOGDIR directory wherein a file's data has been modified within the last 24 hours  and compresses them  to save disk space.,find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
Find regular files modified within the last ten minutes under /etc,find /etc -type f -mmin -10
Print the contents of all file* files under current directory with white space safety in file names,"find . -name ""file*"" -print0 | xargs -0 perl -ple ''"
Print the list of files in the current directory tree skipping SVN files,find . -name .svn -a -type d -prune -o -print
Find all files/directories under current directory tree that contain 'pattern' in their names,"find -name ""*pattern*"""
"Copies all files like ""*FooBar*"" under the current directory to the '~/foo/bar' directory.","find . -name '*FoooBar*' | sed 's/.*/""&""/' | xargs cp ~/foo/bar"
change permission of all the files in the entire file system which have permissions 777.,find / -type f -perm 0777 -print -exec chmod 644 {} \;
"search all jpg,png,jpefg  files in the current folder and calculate the total size of them","find . \( -iname ""*.jpg"" -o -iname ""*.jpeg"" -o -iname ""*.png"" \) -ls | awk '{total += $7} END {print total}'"
find all the files in the file system which have been changed 1 minute ago.,find / -newerct '1	minute ago' -print
"Search all .py files in the current directory tree for ""some_function""",find . -name \*.py | xargs grep some_function
"display all the files in the current folder which have been modified after the files ""/bin/sh""",find . -newer /bin/sh
Removes all files from current folder but 5 newest ones.,"find . -maxdepth 1 -type f -printf '%T@ %p\0' | sort -r -z -n | awk 'BEGIN { RS=""\0""; ORS=""\0""; FS="""" } NR > 5 { sub(""^[0-9]*? "", """"); print }' | xargs -0 rm -f"
"Find all *.c files under and below the current directory that contain ""wait_event_interruptible""",find . -name \*.c -print0 | xargs -0 grep wait_event_interruptible /dev/null
Find files/directories in entire file system that were modified a day ago,find / -mtime 1
"Search for all .html files in directory ""www"" and output only the basename (without containing path) of each.",find www -name \*.html -type f -exec basename {} \;
find .gif files in /var/www and below that were last changed between 90 and 180 days ago,find /var/www -name *.gif -ctime +90 -ctime -180
Find all files owned by user `comp',find / -user comp
"search for the folder .dummy in the entire directory structure of ""test folder"" and remove it.","find -depth ""Test Folder"" -type d -name .dummy -exec rm -rf \{\} \;"
Find files/directories named 'file.txt' in the path '/usr/lib/important/',find / -path /usr/lib/important/*/file.txt
cope *.mp3 files to /tmp/MusicFiles,"find . -type f -name ""*.mp3"" -exec cp {} /tmp/MusicFiles \;"
Find all the files on the system that have been accessed within the last hour,find / -amin -60
Recursively removes all files in a 'path' folder but 'EXPR' files.,find [path] -type f -not -name 'EXPR' | xargs rm
find files in a directory and exit the command if the syntax is correct or display invalid command if the syntax is wrong.,"find … -exec sh -c 'trap ""echo \$?"" EXIT; invalid_command ""$0""' {} \;"
Find all directories under maximum 1 level down the /parent  directory and set their permission to 700 recursively,find /parent -maxdepth 1 -type d -print0 | xargs -0 chmod -R 700
Find all directories in /path/to/dir/ without going into sub-directories,find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d
Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed,"find . -name ""*.php"" -exec chmod 755 {} \; -exec /bin/echo {} \; | wc -l"
"Search through the /usr directory for all files that begin with the letters Chapter, followed by anything else.","find /usr -name ""Chapter*"" -type f"
search for all regular/normal files in the current folder and display the number of lines in the file,find . -type f -print0 | xargs -0L1 wc -l
Find smallest file in the current directory with find commad,"find . -type f -printf ""%s\t%p\n"" | sort -n |head -1"
Find all files and directories in the current directory recursively that contain spaces in their names,find . -name '* *'
Create symlinks to all  /home/folder2/*.txt files with the same name in current directory,find /home/folder2/*.txt -type f -exec ln -s {} \;
Find all files under current directory and print them by removing the leading ./ in their paths,"find . -type f -exec bash -c 'f=""{}""; echo ""${f:2}""' \;"
find all the files in the current folder which are smaller than 9MB,find . -size -9k
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar,"find . | grep ""FooBar"" |"
Rename all *.PNG files/directories to *48.png files/directories under current directory,find . -name '*.PNG' -exec bash -c 'git mv {} $/$48.png' \;
Find all PHP files under current directory that contain only one line,find . -type f -name '*.php' -exec grep -Hcm2 $ {} + | sed -n '/:1$/{s///;p}'
Find all empty files in the current directory and delete them,find . -maxdepth 1 -type f -empty -delete
display all normal/regular files in a folder,find teste1 -type f
"find all js files which path does not contain ./node_modules/* nor './vendor/*""",find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'
Find all files under current directory matching the regex '.*\(\\?\|mod_jk\.log\)\.[0-9]+' in their paths,find -type f -regex '.*\(\\?\|mod_jk\.log\)\.[0-9]+'
Remove all *.log files from the current directory tree,find ./ -name '*.log' | xargs rm
find all the symbolic links in the current folder that are broken,find . -xtype l
Find all .sh files in or below the current directory and move them to folder ~/back.scripts,"find . -name ""*.sh"" -print0 | xargs -0 -I {} mv {} ~/back.scripts"
find all the files that were modified yesterday in the current directory.,find . -daystart -ctime 0 -type f
find all the html files in the current folder and search for a pattern in these files,find . | grep html$ | xargs grep <string-to-find>
Find all files/directories named 'имя_файла' in the entire filesystem,"find / -name ""имя_файла"""
Print all file/directory names with white space safety under the /proc directory,find /proc -print0 | xargs -0
Remove all the versioned-but-empty directories from a Subversion checkout under current directory,"find . -name .svn -type d | while read ss; do dir=$; test $ == 3 && echo ""svn rm \""$dir\""""; done"
Find regular files in the current directory that are writable by at least somebody,find -maxdepth 1 -type f -perm /222
find all files in home folder which have been modified exactly 1 day before,find ~ -mtime 1 -daystart
"Find all files with the name ""MyProgram.c"" in the current directory and all of it's sub-directories.","find -name ""MyCProgram.c"""
Get the total size in bytes of all files in the current directory tree,find . -type f | xargs stat --format=%s | awk '{s+=$1} END {print s}'
"Recursively finds files like 'example.com', ignoring case differences, and filters out files with 'beta' in path.",find -iname example.com | grep -v beta
find the count of text files that are present in the current working directory.,find . -maxdepth 1 -name \*.txt -print0 | grep -cz .
Find all files/directories with '.txt' extension under '/home' directory tree that are greater than 100KB in size,"find /home -name ""*.txt"" -size +100k"
remove all core files in the file system,"find / -name ""*.core"" | xargs rm"
Find all hard links to file1 under /home directory,find /home -xdev -samefile file1
"Replace the first occurrence of ""string1"" on each line with ""string2"" in all regular files in the current directory tree",find ./ -type f -exec sed -i 's/string1/string2/' {} \;
"Find the ""param1"" string in regular files under and below /var","find /var -type f  | xargs grep ""param1"""
change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.,"find . \( -type f -exec sudo chmod 664 ""{}"" \; \) , \( -type d -exec sudo chmod 775 ""{}"" \; \)"
Open all .java files in the current directory tree in the vim editor,find . -name '*.java' -exec vim {} +
"Search the current directory tree for file ""a.txt""","find . -name ""a.txt"" -print"
"Search for files with ""sitesearch"" in their names and ""demo"" in their path names",find . -iname '*sitesearch*' | grep demo
"Search the current directory tree for files whose names end in ""rb"" or ""js""","find . -name ""*js"" -o -name ""*rb"""
Change permissions to 700 for directories at the current level and deeper,find . -mindepth 1 -type d | xargs chmod 700
Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them,find . -perm 0644 | head
Find the files in the current directory that match pattern '*.ISOLATE.*.txt' and move them to folder ./ISOLATE,find . -name '*.ISOLATE.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE ./ISOLATE
change the permissions of all the regular files in the folder root_dir to 444,find root_dir -type f -exec chmod 444 {} \;
Remove all vmware-*.log files under current directory,find . -name vmware-*.log -delete
Compresses all '*.xml' files under current directory with 'bzip2' utility.,find -name \*.xml -print0 | xargs -0 -n 1 -P 3 bzip2
Find all xml files under current directory and archive them to .bz2 archives,"find . | grep "".xml$"" | parallel bzip2"
Identify CMS version/releases accross all your Drupal websites,"find /var/www/vhosts/*/httpdocs/ -type f -iwholename ""*/modules/system/system.info"" -exec grep -H ""version = \"""" {} \;"
"Calculate the md5 sum of the md5 sum of all the files sorted under ""$path""","find ""$path"" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"
"find all the png files in current folder which are present in the pattern list file ""search.txt""",find . -name '*.png' | grep -f <
files all files which expect directories and display count of them,find /usr/share \! -type d wc -l
Search for first match of the regex 're' in all *.coffee files under current directory,find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \;
"Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output",find . -type f -exec grep -n California {} \; -print | wc -l
display all html files  in  current folder,"find -name ""*.htm"" -print"
Find all *.xml files under current directory,find -name *.xml
List files and directories recursively,find . -print | xargs ls -gilds
List all leaf directories of the current directory tree,find . -type d -links 2
Change the permissions of the current directory and all its subdirectories to 755.,find . -type d -exec chmod 755 {} \;
Identify CMS version/releases accross all your PHPBB installations,"find /var/www/vhosts/*/httpdocs/ -type f -wholename *includes/constants.php -exec grep -H ""PHPBB_VERSION"" {} \;"
display all the files in the /usr folder which have the permissions 777,find /usr -perm 0777 -print
Find all files in the home directory tree that are owned by another user,find ~ ! -user ${USER}
display all the files  in the current folder excluding the current folder and do not search in the sub directories,find . -maxdepth 1 -type d \
Find all files that are set group ID to 10,find . -group 10 -perm -2000 -print
Search the current directory tree for *.conf and *.txt files,find . -type f \ -print
display all the files in current folder which have not been modified in the last 7 days,find . -mtime +7
Find all directories under current directory with 755 permission and change their permission to 644,find . -perm 755 -exec chmod 644 {} \;
Find files in the current directory and below that are less than 500 kB in size,find . -size -500k -print
"Find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs  and change their permission to 755",find /path/to/base/cache /path/to/base/tmp /path/to/base/logs -type d -exec chmod 755 {} +
Count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -mtime +$DAYS_TO_SAVE | wc -l"
"display all the files with the names ""name1"" and ""name2"" in the current folder and do not search in the sub directories","find . -maxdepth 1 -name ""name1"" -o -name ""name2"""
Print the list of files and directories of the /etc directory,find /etc/. ! -name /etc/.
Search /etc for files modified within the last 10 minutes,find /etc -type f -mmin -10
Copy *.txt files from the dir/ directory tree along with their parent directories,find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents
Find recursively regular files in the current directory tree,find . -type f -print
"Search the current directory tree for the files with extension ""trc"" and remove them if they are more than three days old","find . -name ""*.trc"" -ctime +3 -exec rm {} \;"
Get a detailed list of all files on the system larger than 10MB,find / -size +10M -printf “%12s %t %h/%fn”
Search the current directory recursively for regular files last accessed less than 2 minutes ago,find . type -f -amin -2
Make all directories in the current directory tree accessible to anybody,find . -type d -print0 | xargs -0 chmod go+rx
"find all the ogg files in the current directory which have the word ""monfichier"" in their name",find -name *monfichier*.ogg
Generate UUIDs for the files from the current directory tree,"find . -printf ""%P\n"" | sort | while IFS= read -r f; do echo ""$ $f""; done"
find all directories in the current folder,find -type d
find all the files older than 30 days,find /tmp -mtime +30 -print
"Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.","find /       \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \( -size +100M -fprintf /root/big.txt  '%-10s %p\n' \)"
list all javascipts file expect files under proc folder,find . -type d -name proc -prune -o -name '*.js'
Print the names of all files from the /tmp/dir1 directory tree,find /tmp/dir1 -exec basename {} \;
Display the total count of all the files/directories with '.old' extension under current directory tree,find . -name “*.old” -print | wc -l
Find all directories starting from the current directory,find . -type d
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 day ago,find . -maxdepth 1 -ctime +1 -name file
find all the files that have been modified in the last 24 hours,find . -type f -mtime -1
"Gives longest '*.php' files with line count first, and excludes directories with ""libs"", ""tmp"", ""tests"" and  ""vendor"" in their paths.","find . -name '*.php' | xargs wc -l | sort -nr | egrep -v ""libs|tmp|tests|vendor"" | less"
find all files in the current folder that are modified exactly 2 minutes ago,find -mmin 2 -print
"Remove all files and directories under '/home/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'",find /home/foo \( -name '.DS_Store' -or -name '._.DS_Store' -or -name '._*' -or -name '.TemporaryItems' -or -name '.apdisk' \) -exec rm -rf {} \;
Print the list of all directories under the current directory and below,find ./ -type d -print
search for the file foo in  the current folder and display a long listing of it in sorted order of modification date,find . -name foo | xargs ls -tl
Remove files from the file system that are owned by nobody,find / -nouser -exec rm {} \;
Find all files/directories that are bigger than 100 bytes under '/home/apache' directory tree,find /home/apache -size 100c -print
Find all filename.* files/directories under /root/directory/to/search,find /root/directory/to/search -name 'filename.*'
Locate all .txt files in and below the current directory,"find . -name ""*.txt"""
Recursively removes all files like '._*' from current folder.,"find . -name ""._*"" -print0 | xargs -0 rm -rf"
"Print the list of files in the home directory tree whose names begin with ""Foto""",find ~ -name 'Foto*'
change the permissions of all the regular/normal files to 664 in the current folder,find . -type f -exec chmod 664 {} \;
Find files/directories containing 'test' in their names and display the directory contents before the directories themselves,"find -name ""*test*"" -depth"
List files larger than 10MB under /var/log /tmp that haven't changed in a month,find /tmp /var/tmp -size +30M -mtime 31 -ls
"Find all files with name ""file.ext"" under the current working directory tree and print each full path directory name",find `pwd` -name file.ext |xargs -l1 dirname
"find all text files in the current folder excluding those that are presenti n the folder ""/svn"" and search for a pattern.",find . -name '*.txt' \! -wholename '*/.svn/*' -exec grep 'sometext' '{}' \; -print
"find from / a file called 'toBeSearched.file', suppressing any error messages",find /. -name 'toBeSearched.file' 2>/dev/null
remove all the core files in the current directory,"/bin/find -name ""core"" — exec rm {} \;"
Find all 100MB files in file system and delete them using rm command,find / -size +100M -exec rm -rf {} \;
Find all your text files and page through them,"find . -name ""*.txt"" -print | less"
Find all files/directories named 'file_name' under current directory tree,find . -name file_name
"list *.pdf, *.bmp and *.txt files under the /home/user/Desktop directory.",find /home/user/Desktop -name '*.pdf' -o -name '*.txt' -o -name '*.bmp'
find all the files in the folder /path/to/dir which have been modified after a specific date,find /path/to/dir -newermt “Feb 07”
Find files/directories named 'document' in the entire filesystem and in the directory tree '/usr' even if it's in a different partition without traversing to other devices/partitions,find / /usr -xdev -name document -print
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play,find /tmp/ -ctime -1 -name 'x*' -print0 | xargs -r0 mv -t ~/play/
"Find all *.log files under path/ that do not contain ""string that should not occur""","find path/ -name '*.log' -print0 | xargs -r0 grep -L ""string that should not occur"""
find files in /tmp directory that named are core and deletes them,find /tmp -name core -type f -print | xargs /bin/rm -f
"display all instances of ""foo.cpp"" file in the current folder which are not in the sub directory tree "".svn""",find . -name 'foo.cpp' '!' -path '.svn'
"Copy directory hierarchy from the current working directory to ""/path/to/backup/""",find . -type d -exec mkdir -p -- /path/to/backup/{} \;
"find a.out, *.o and core files under the current directory and sub-directories and delete them.",find . \ -exec rm {} \;
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D',find /usr/ports/ -name pkg-plist\* -exec grep 'unexec.rmdir %D' '{}' '+' | wc -l
Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff',"find . -okdir diff {} /some/other/path/{} "";"""
display a list of all regular/normal files in the current folder,find . -type f -ls
Find all regular files that contain 'linux'  in their names under '/root' directory tree,"find  /root -type f -iname ""*linux*"""
display all files in the current folder,"find . -iname ""*$@*"" -or -iname "".*$@*"""
"Find all *.cls files/directories under current directory and print '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE""L""L}' for each of them where $0 is expanded to the file/directory path","find . -iname ""*.cls"" -exec echo '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE""L""L}' {} \;"
"Remove all regular files from the current directory tree whose names do not end with ""txt""",find . -type f -not -name '*txt' -print0 | xargs -0 rm --
Find all 50MB files in file system,find / -size 50M
"Search the .css files in the /starting/directory tree for "".ExampleClass""",find /starting/directory -type f -name '*.css' | xargs -ti grep '\.ExampleClass' {}
find the depth of all the files in current folder and display the depth and file name,"find folder1/ -depth -type f -printf ""%d\t%p\n"""
"Search the current directory for HTML files whose names begin with ""a""",find . -maxdepth 1 -name a\*.html
Find all regular files in the current directory tree and count them,find -type f | wc -l
Find files/directories that belong to user 'ian' under '/tmp' directory tree,find /tmp -user ian
Find all files which belong to user lal and change their ownership to ravi,find / -user lal -exec chown ravi {} \;
Find all file in current directory with have .c extenstion & have 777 permission . delete then,"find . -name ""*.c"" -a  -perm -777 | xargs rm -rf"
"search the pattern ^PyErr in all the "".c"" files in the folder Lib/",find Lib/ -name '*.c' -print0 | xargs -0 grep ^PyErr
find all empty files in the current directory ( empty file = size 0 bytes ),find . -size 0
Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership,find . -depth -print | cpio -o -O /target/directory
"Find all regular files under $DIR directory tree whose paths match the regex "".*\.${TYPES_RE}"" where ${TYPES_RE} expands as a variable","find ${DIR} -type f -regex "".*\.${TYPES_RE}"""
"display the number of lines in all the "".c"" files in the current folder","find . -name ""*.c"" -print0 | xargs -0 wc -l"
find all the files in the home folder which have not been modified in the last 1 year.,find $HOME -mtime +365
Fix permissions for a group of files with given extension,"find /usr/local -name ""*.html"" -type f -exec chmod 644 {} \;"
Remove directories in /media/1Tb/videos modified more than 7 days ago,find /media/1Tb/videos -maxdepth 1 -type d -mtime +7 -exec rm -rf {} \;
"Find all regular files whose names contain ""@"" in directory tree ~/$folder","find ~/$folder -name ""*@*"" -type f"
Find all readme.txt files/directories under your home directory,find ~ -name readme.txt
Delete all files/directories named 'file' under current directory tree,find -name file -delete
keep only read access to all the files in a directory.,find /path/to/dir ! -perm 0644 -exec chmod 0644 {} \;
force delete all the core files in the home folder,find $HOME -name core -exec rm -f {} \;
"Run checksums recursively from the current directory, and give back the filenames of all identical checksum results","find ./ -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's/^[0-9a-f]*\ *//;'"
Find all *.pdf files under ./polkadots,"find ./polkadots -type f -name ""*.pdf"""
find all normal/regular files in current folder and display the total lines in them,find . -type f -exec wc -l {} +
Find all *fink* files/directories under current directory,"find . -name ""*fink*"" -print"
Recursively finds all bzip2 compressed files in a current folder and decompresses them.,"find ./ -iname ""*.bz2"" -exec bzip2 -d {} \;"
List all leaf directories (directories which don't contain any sub-directory) under current directory,find . -type d -links 2
find all files in the current directory do not display the files which are not readable,find . ! -readable -prune
display all the files in the current folder that are at least one week old (7 days) but less then 30 days old,find . -mtime +30 -a -mtime -7 -print0
Find files/directories named 'foo' in the current partition of the root filesystem,find -x / -name foo
"Search the regular files of the current directory tree for string ""foo""","find ./ -type f | xargs grep ""foo"""
Find all files/directories under current directory and print their paths,find . -exec echo {} \;
"Find recursively the files named ""file"" in the current directory ignoring all .git directories",find . -name .git  -prune -o -name file  -print
find all regular/normal files in current folder which have been modified in the last 60 minutes,find -type f -mtime -60
"display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with "".git""","find . \! -path ""./.git*"" -a \! -name states_to_csv.pl"
change the permissions of all the regular/normal files in the current folder,sudo find . -type f -exec chmod 644 {} +
find all the log files in the file system,"find / -name ""*.log"""
Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output,find . -type f -ctime -3 | tail -n 5
"List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page.",find ./in_save/ -type f -maxdepth 1| more
Find all files in your home directory and below that are exactly 100M.,find ~ -size 100M
Find the passwd file under root and two levels down,find / -maxdepth 3 -name passwd
"list symbolic links under the directory ""$directory"" using contents of the $IFS variable between output of each one","find $directory -type l -printf ""%p$IFS"""
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"" |& xargs ls -lrt | awk '{print $9}'"
search for a word in all the .C files in current directory,find . -type f \ |grep -i -r “keyword”
Find all files with extension .aac in the /home directory tree,find /home -type f -name '*.aac'
"search for the file ""process.txt"" in the current directory","find . -name ""process.txt"""
Search for files/directories named 'fileName.txt' under '/path/to/folder' directory tree without traversing into directories that contain the string 'ignored_directory' in their paths,"find /path/to/folder -path ""*/ignored_directory"" -prune -o -name fileName.txt -print"
Find all empty files in the current directory and delete them,find . -empty -maxdepth 1 -exec rm {} \;
display all the files in the current folder which have been modified in the last 5*24 hours,find . -mtime -5
Find files in the current directory tree which are larger than 5 MB in size,find . -size +5000k -type f
find all the files that are modified in the last 1 day,find -mtime +0 -mtime -1
Find and remove all .mp3 regular files under the current directory and below,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
"Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n' | sort | uniq | tr -d '\n'
Delete all files in directory $DIR that have not been accessed in at least 5 days,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
Save the list of .log files in the current directory tree to sas_log_list.txt,"find `pwd` -name ""*.log"" > sas_log_list.txt"
find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation,find . -size +1M -ok mv {} files \+
display a long list of all the jpg files in the home folder,find ~ -iname '*.jpg' -exec ls {} +
Find all files in the directory $directory or below with the permissions specificed by $permissions.,"find ""$directory"" -perm ""$permissions"""
Remove all *.bak files under current directory,find . -type f -name \*.bak -print0 | xargs -0 rm -v
"Search the current directory and its sub-directories for any file that has ""bsd"" somewhere in its name.","find . -name ""*bsd*"" -print"
Find all *.ext regular files under /path and execute my_cool_script for each of them with the file path as argument,find /path -type f -name '*.ext' -exec my_cool_script \{\} \;
Find all *.m4a files/directories under /home/family/Music directory,find /home/family/Music -name '*.m4a' -print0
Remove all files with a txt extension under current directory,"find . -type f -name ""*.txt"" -print|xargs rm"
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -name ""*.js.compiled"" -exec rename -v 's/\.compiled$//' {} +"
"Search the /Path directory tree for files whose pathnames match ""/Path/bar*"" or ""/Path/foo*"" and whose names match pattern ""file_name*""","find /Path \ -name ""file_name*"""
Show a long listing of files not modified in over 20 days or not accessed in over 40 days,find /mydir \ -exec ls -l {} \;
Find directories that are directly under $workspace_ts directory  and were modified more than 30 days ago,find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime +30 -print
"Search directories /path/to/directory/folder{1..50} for .txt files, outputting only the names of the matched files",find /path/to/directory/folder{1..50} -name '*.txt' -exec basename {} \; 2>/dev/null
find all the files which have been accessed after modifying the file /etc/hosts,find -anewer /etc/hosts
find all the jpg files in current folder and sort them,"find . -type f|grep -i ""\.jpg$"" |sort"
Find all files/directories under current directory and count the number of lines for the output,find |wc -l
Find all the files in the current directory,find * -type f -print -o -type d -prune
"Search the current directory for files whose names start with ""messages."" ignoring SVN and CVS files","find \( -name 'messages.*' ! -path ""*/.svn/*"" ! -path ""*/CVS/*"" \) -exec grep -Iw uint {} +"
Find all IP addresses in /etc directory files,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
Find *.c and *.h files under the current directory tree skipping hidden directories and files,find . \ -a -name '*.[ch]'
Count the number of lines in every regular .rb file in the current directory tree,"find . -name ""*.rb"" -type f -print0 | xargs -0 wc -l"
Find all files with the SUID bit set beginning with the root directory,find / -perm -u+s
Find all *.php (case insensitive) and *.js files (case insensitive) under /home/jul/here excluding  /home/jul/here/exclude/* paths,"find /home/jul/here -type f \( -iname ""*.php"" -o -iname ""*.js"" \) ! -path ""/home/jul/here/exclude/*"""
Search the file system for regular files whose names are shorter than 25 characters,"find / -type f | egrep '.*/.{1,24}$'"
Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory.,find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar
Look for any files that were modified 2-5 days ago,find -mtime +2 -mtime -5
Find all *foo files/directories under current directory,find . -name '*foo'
display all files in the current folder along with their last accessed timestamps,"find . -printf ""%h/%f : dernier accès le %AA %Ad %AB %AY à %AH:%AM:%AS\n"""
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under the current directory and below",find . -type f -print0 |   xargs -0 perl -i.bak -pe 's/subdomainA\.example\.com/subdomainB.example.com/g'
"Move all directories in the current directory that match ""some-dir"" to ""x/""","find ./ -maxdepth 1 -name ""some-dir"" -type d -print0 | xargs -0r mv -t x/"
Find the largest files in a particular location,find /home/tecmint/Downloads/ -type f -exec du -Sh {} + | sort -rh | head -n 5
Find all the files/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26,find ./ -newermt 2014-08-25 ! -newermt 2014-08-26 -print
find all the files under '/usr/local' directory tree which have been modified exactly 24 hours ago,find /usr/local -mtime 1
"Search for all files modified in the last hour within a directory and its subdirectories, then move them to another directory.","#!/bin/bash

find /path/to/directory -type f -mmin -60 -exec mv {} /path/to/destination/ \;"
Find files named tecmint.txt  of owner root in the entire file system,find / -user root -name tecmint.txt
Find all *fink* files/directories in entire file system,find / \ -name \*fink\* -print
"find all files with pattern` '*song*abc2009*.jpg' and replace ""abc2009"" with ""def2010""","find . -name '*song*abc2009*.jpg' | sed 's/\abc2009\$/mv ""&"" ""\1def2010\2""/' | sh"
display all the files in the current folder which have been modified in the last 24 hours,find . -mtime -1 -print
display a long listing of all the java files in the current folder in sorted order,find . -type f -name '*.java' -ls | sort -k +7 -r
Find files and directories that are at least seven levels of nesting in the directory /usr/src,find /usr/src -name CVS -prune -o -mindepth 7 -print
find all the configuration files in the files system and donot display any errors.,"find / -name ""*.conf"" 2>>/dev/null"
Find all *~ files/directories under dir and  print an rm command for each of them for deletion,find dir -name \*~ | xargs echo rm
search for a word in all the .C files in the current directory,"find . -name ""*.c"" -exec grep -ir ""keyword"" {} "";"""
Find all files whose names begin with 'Makefile' at the /usr/ports directory tree's level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them.,"find /usr/ports/ -name Makefile\* -mindepth 3 -maxdepth 3 -exec egrep ""NOPORTDOCS|NOPORTEXAMPLES"" '{}' '+' | wc -l"
Search the /myfiles directory tree for files last modified 2 days ago,find /myfiles -mtime 2
use regex with find command,"find . -regextype sed -regex "".*/[a-f0-9\-]\{36\}\.jpg"""
"Search the current directory tree for the files with extension ""trc"" and list them if they are more than three days old","find . -name ""*.trc"" -ctime +3 -exec ls -l {} \;"
Find recursively the latest modified file in the current directory,find . -type f -print0|xargs -0 ls -drt|tail -n 1
Find and show all files in the current directory tree that are exactly 2000 kB,find . -size 2000k
Find all *.old files and move them to directory oldfiles,"find . -name ""*.old"" -exec mv {} oldfiles \;"
Search only for regular files,find -type f
"Copy all files below the current directory whose names contain ""foobar"" (case-insensitive) to directory foo/bar/ in user's home directory.","find . -iname ""*foobar*"" -exec cp ""{}"" ~/foo/bar \;"
Find all 2*.data files/directories under jcho directory,find jcho -name 2*.data
show all files in the entire file system,"find / -print0 | perl -ln0e 'print ""found $_"" if -p'"
remove all core files in the file system,"find / -name ""*.core"" -print -exec rm {} \;"
Search the *.code files from the current directory tree for string 'pattern',find . -name '*.code' -print0 | xargs -0 grep -H 'pattern'
Print the list of all regular files in the current directory and below,find . -type f
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories","find /the/path -depth -type f -name ""*.abc"" -exec sh -c 'mv ""$1"" ""$/$.edefg""' _ {} \;"
find for a word in all the regular files in the current directory,find . -type f -print | xargs grep -li 'bin/ksh'
Find all files starting from the current directory that match regular expression '.*Message.*\.java',find . -print | grep '.*Message.*\.java'
Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file,find . -name \*.sql -not -samefile $oldest_to_keep -not -newer $oldest_to_keep
Find files/directories under '/usr' directory tree that are newer than /tmp/stamp$$ by modification time,find /usr -newer /tmp/stamp$$
delete all empty files in the current directory,find . -empty -exec rm '{}' \;
Search the current directory recursively for regular files last accessed 2 minutes ago,find . type -f -amin 2
"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","find $1 -name ""$2"" -exec grep -Hn ""$3"" {} \;"
delete all the text files from the current folder after user confirmation,"find . -name ""*.txt"" -ok rm {} \;"
Search directory lpi104-6 for files with inode number 1988884,find lpi104-6 -inum 1988884
"Find all files under current directory whose file type description contains ""image"", display only path to each file.",find . -type f -exec file {} \; | awk -F: '{if  print $1}'
List all leaf directories  under current directory,"find . -type d -execdir sh -c 'test -z ""$"" && echo $PWD/{}' \;"
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"" -exec ls -lrt {} + | awk '{print $9}'"
Search the current directory tree for directories,find $PWD -type d
Find all files/directories that belong to the group 'staff' under '/usr' directory tree,find /usr -group staff
find all the files that have been changed today,find . -ctime 0 -type f
"search for files in the current folder ending with "".au""",find -type f -name '*.au'
Find all files/directories with 777 permission under '/apps/audit' and strip write permission for 'other' from them,find /apps/audit -perm -7 -print | xargs chmod o‑w
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format,"find -type f -name ""*.htm"" | awk -F'[/]' 'BEGIN{OFS=""-""}{ gsub ;print $1,$2, substr,substr,substr }'"
Removes all empty folders with modification time more that 10 minutes ago from $homeDirData folder.,find $homeDirData -type d -mmin +10 -print0 | xargs -0 rmdir
"Search all *.c files from the current directory tree for ""hogehoge""",find . -name \*.c -exec grep hogehoge {} \;
"Find *.tex files in the current directory tree that contain text ""documentclass""",find . -type f -name *.tex -print0 | xargs -0 grep -l 'documentclass'
find the path of a specfic video file in the current directory,find . -name foo.mp4 | sed 's|/[^/]*$||'
Print the list of all directories in the /myfiles directory tree,find /myfiles -type d
Save the list of files containing string `ExtJSLogin' to files.txt excluding change-app-name.sh,find . -type f -exec grep -l 'ExtJSLogin' {} \; | grep -v 'change-app-name.sh' > files.txt
Find all *.py files/directories under current directory,find . -name *.py
display a long listing of the files in current folder which have been modified in the last 60 minutes,find . -mmin -60 |xargs ls -l
Find files named 'core' in or below the directory /tmp and delete them,find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
display all the files in the entire file system which have set uid bit set.,find / -perm -u+s -print
"find all directories with the name like ""????-??-??"" and which have not been modified in the last 24 hours in the folder /volume1/photo/ipcam and send them as input to the script in the exec section","find /volume1/photo/ipcam -maxdepth 1 -type d -name ""????-??-??"" -mtime +0 -exec sh -c 'echo /home/pi/Dropbox-Uploader/dropbox_uploader.sh move /ipcam/$ /ipcam/archive' \;"
"find all files under the current directory, redirecting error messages to the output and filtering any lines containing the text ""Permission denied"", writing the remaining output to some_file",find . 2>&1 | grep -v 'Permission denied' > some_file
list all regular files which path is not dir1 or dir2,"find dir -not \( -path ""dir1"" -o -path ""dir2"" -prune \) -type f"
find all the config(.conf files) files in the folder /home/pat,"find /home/pat -iname ""*.conf"""
display all normal/regular files in current directory,find . -type f
search for the file chapter1 in the folder /work,find /work -name chapter1
Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them,"find ""$DIR"" -type f -mtime +15 -exec rm {} \;"
Move all files from the `sourceDir' directory to the `destDir' directory,find sourceDir -mindepth 1 -maxdepth 1 -print0 | xargs -0 mv --target-directory=destDir
display all files in the current folder which do not match the regular expression,"find . -not -regex "".*test.*"""
"Find recursively all files in the ""."" directory tree whose names end with "".class"" and delete them","find . -type f -name ""*.class"" -exec rm -vf {} \;"
Finds total lines count of few types of files  in a current folder and subfolders.,( find . \ -print0 | xargs -0 cat ) | wc -l
Display a long listing of all directories under '/nas' directory tree,find /nas -type d -ls
Find all files/directories under current directory that match the case insensitive regex ./\(EA\|FS\)_.*,find . -iregex './\(EA\|FS\)_.*'
Run `command' passing the files from the current directory tree as arguments,find . -print|xargs command
List all leaf directories (directories which don't contain any sub-directory) under current directory,find -depth -type d |sed 'h; :b; $b; N; /^\(.*\)\/.*\n\1$/ { g; bb }; $ {x; b}; P; D'
"Remove all files matching the pattern *[+{;""\\=?~()<>&*|$ ]* under current directory","find . -name '*[+{;""\\=?~()<>&*|$ ]*' -exec rm -f '{}' \;"
"Find all files named ""file.ext"" within the current folder and print the path where each one is located","find `pwd` -name ""file.ext"" -exec echo $(dirname {}) \;"
"Return the list of files named ""filename"" that are 50 megabytes or larger","find / -size +50M -iname ""filename"""
Find all files of the user with UID=1000,find -user 1000
search for a word in all the php files in the current folder and display the matching lines.,find . -name \*.php -type f -print0 | xargs -0 -n1 grep -Hn '$test'
"Calculate the md5 sum of the sorted list of md5 sums of all "".py"" files under ""/path/to/dir/""",find /path/to/dir/ -type f -name *.py -exec md5sum {} + | awk '{print $1}' | sort | md5sum
"Remove all regular files under and below directory ""$DIR"" that were last accessed more than 5 days ago","find ""$DIR"" -type f -atime +5 -exec rm {} \;"
"find regular files under the current directory, whose name ends in .mbox, piping the output to a while loop that renames each file, to the same name without .mbox at the end",find . -type f -wholename \*.mbox -print0 | \     while read I ; do         mv $I $ ;     done ;
List all *.txt files/directories under /etc,"find /etc -name ""*.txt"" -ls"
Redirects output of 'time' built-in function and prints only real-time statistic.,{ time find / &>/dev/null; } 2>&1 | grep real
Find *.NEF files under current directory and take only the filename without extension and run other commands on this    file name.,"find . -name ""*.NEF"" -exec basename \{\} .NEF \; | xargs> -i sh -c 'dcraw -w -c $0.NEF | convert - -resize 25% $0.jpg'"
Move all Emacs backup files from the current directory tree to ~/backups/,find . -name '*~' -print 0 | xargs -0 -I % cp % ~/backups
Find root's files in the current directory tree,find ./ -user root
Remove all \*~ files under dir,find dir -name \\*~ -exec rm {} +
Find executable regular files in the current directory tree,find . -type f -exec test -x {} \; -print
search for all the symbolic links in a folder and display all the broken/non-existent links,find /target/dir -type l ! -exec test -e {} \; -print
Find files in the current directory tree whose content was changed within the last 60 minutes,find . -mmin -60
Find all .zip files in the current directory tree and unzip them deleting the archives on success,find . -depth -name '*.zip' -exec /usr/bin/unzip -n {} \; -exec rm {} \;
"Find all PHP files in the current directory recursively and search them for string ""$test"" with 8 simultaneous processes",find . -name \*.php -type f -print0 | xargs -0 -n1 -P8 grep -Hn '$test'
Archive the directory structure under current directory into directory-structure.tar,find . -type d -print0 | tar cf directory-structure.tar --null --files-from - --no-recursion
Search the entire file system for any file that is writable by other.,find / – perm -0002
search all the files in the current folder and assign them to a variable,files=`find .`
find all files that are readable and writable by their owner,find . -perm -600 -print
"display all normal/regular files or directories in the folder ""$ORIG_DIR""","find ""$ORIG_DIR"" -name ""*"" -type d -o -name ""*"" -type f"
Search the home directory tree for files owned by sam,find /home -user sam
Archive all filepattern-*2009* files/directories under data/ into 2009.tar,find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;
display a long listing of the files in current folder which have been modified in the last 60 minutes,find . -mmin -60 |xargs ls -l
Find symbolic links under /etc/,find /etc -type l
Find all fonts  that belong to the user 'warwick',find /usr/local/fonts -user warwick
Find .txt files on the system whose size is greater than 12000 bytes,"find / -name ""*.txt"" -size +12000c"
find all txt files under the current folder except ./directory folder,"find -name ""*.js"" -not -path ""./directory/*"""
List all files under the current working directory tree,find $/ -type f
Find all xml files under current directory and archive them to .bz2 archives,"for i in `find . | grep "".xml$""`; do bzip2 $i&; done"
"find case-insentive example.com file, omit ./beta path",find ./ -path ./beta/* -prune -o -iname example.com -print
Find files/directories writable by group and others under the /path directory,find /path -perm -go+w
"Find regular files named ""regex"" under and below /dir/to/search/",find /dir/to/search/ -type f -name 'regex' -print
Find files not matching the patterns 'Image*-70x70*' and 'Image*-100x100*' in their names under Folder1 and copy them to Folder2,find Folder1 \ | xargs -i% cp -p % Folder2
"Create a tar archive of files from directory tree ""data""",find data/ -print0 | tar --null -T - --create -f archive.tar
find all html or cgi files in current folder,"find ./ -type f -iregex "".*\.html$"" -or -iregex "".*\.cgi$"""
Find all directories in 1 level down the /home directory that have two consecutive vowels in their names and count them,find /home -mindepth 1 -maxdepth 1 -type d -name '*[aeiou][aeiou]*' -printf '*' | wc -c
Find all files/directories which have been modified within the last day in the drectories/files taken from the glob pattern '/tmp/test/*',find /tmp/test/* -mtime -1
Find all regular files under ${path} without following symlinks,find ${path} -P -type f
"Recursively change the owner of all ""*.txt"" files under ""/mydir"" to ""root""","find /mydir -type f -name ""*.txt"" -execdir chown root {} ';'"
Find .rmv files in the current directory recursively,find . -name *.rmv
find all files in the current folder that are modified exactly 1 minute ago,find -mmin 1 -print
Search for the pattern '^use strict' in all *.pl files under current directory,find . -name '*.pl' | xargs    grep -L '^use strict'
Recursively finds all files and prints all strings with 'text-to-find-here' from that files.,find / -type f | xargs grep 'text-to-find-here'
Find files that are 0 bytes in size in the current directory and remove them,find . -maxdepth 1 -size 0c -exec rm {} \;
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f | xargs ls -l
Delete all files in the TBD directory that were modified more than 1 day ago,find /TBD/* -mtime +1 | xargs rm -rf
Returns unsuccessful exit code on each found file like '*tests*' within current directory.,find . -name '*tests*' -print -exec false \;
Delete all files in the current directory.,find . -exec /bin/rm {} \;
display all the regular/normal files in a folder and save errors to a log file,find ./subdirectory -type f 2>>error.log
Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files,find $dir -type f -name $1 -exec sed $num'q;d' {} \;
Print the list of files in the current directory tree skipping SVN files,find . -type d -name .svn -prune -o -print
find all the files in the entire file system whose size is between 50Mb to 100MB,find / -size +50M -size -100M
delete all the tmp files  in the /tmp folder. Print0 is used to display all those files which have newline in their names or files whose name is only spaces.,"find /tmp -name ""*.tmp"" -print0 | xargs -0 rm   find /tmp -name ""*.tmp"" -print0 | xargs -0 rm"
Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files,"find $d -type f -exec chmod ug=rw,o= '{}' \;"
"Search the current directory tree for symlinks whose contents match pattern ""*sysdep.c""",find . -lname '*sysdep.c'
"find all "".flac"" files starting with ""cmn-"" and search for files having CJK characters using unicodes",find . -name 'cmn-*.flac' -print | grep -P '[\x4e00-\x9fa5]'
"Search all regular files in the current directory tree for ""string""",find . -type f -exec grep string {} \;
"Search the current directory tree for files and directories whose names do not end in "".exe"" and "".dll""",find . -name \*.exe -o -name \*.dll -o -print
display all the files in the home folder that have been modified in the last 7*24 hours,find $HOME -mtime -7
Find all *.jpg files and copy them to /,find / -type f -name *.jpg  -exec cp {} . \;
find all the files in current directory of size greater than 2GB.,find . -size +2G
Find all files/directores under '/usr/local' directory tree that case insensitively contain the word 'blast' in their names,"find /usr/local -iname ""*blast*"""
find for a filename with multiple patterns in the current folder,"find . -name ""photo*.jpg"""
find all files that belong to root user,find . -uid 0 -print
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -print0 | xargs -0 /bin/rm
sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days,"find .  -name ""*.txt"" -type f -daystart -mtime -91 -mtime +2 | xargs cat | sort | uniq"
"add read permission to others for the files in the current folder having the name ""rc.conf"" in their name.","find . -name ""*rc.conf"" -exec chmod o+r '{}' \;"
display a long listing of all the log files in the current folder which are bigger than 1MB,find . -size +1000k -name *.log -print0 | xargs -0 ls –lSh
Locate all *.csv files under the current directory tree separating the file names with zeroes,"find . -name ""*.csv"" -print0"
find all the files with the name test in the current folder,find . -iname test
Print all directories under $root appending a : (colon) at the end of each path,find $root -type d -printf '%p:'
Find all *.txt and *.json files,"find . -type f \( -name ""*.txt"" -o -name ""*.json"" \)"
Find files named 'fileName.txt' under '/path/to/folder' directory tree ignoring 'ignored_directory',"find /path/to/folder -name fileName.txt -not -path ""*/ignored_directory/*"""
"Search directories /path/to/directory/folder{1..50} for .txt files, outputting only the names of the matched files stripped of the .txt suffix",find /path/to/directory/folder{1..50} -name '*.txt' -exec basename {} .txt \; 2>/dev/null
Print the file sizes along with their paths for all *.txt  files/directories under current directory tree,"find . -name ""*.txt"" -print0 |xargs -0 du -ch"
Search for regular expression 'expr' in all .c and .h files from the current directory tree,find -name '*.[ch]' | xargs grep -E 'expr'
find all the jpg files in the directory /ftp/dir which are bigger than 500KB,"find /ftp/dir/ -size +500k -iname ""*.jpg"""
display all directories in vim folder do not search in sub directories,find .vim/ -maxdepth 1 -type d
find all the non compressed files in the current directory and compress them.,"find . \! -name ""*.Z"" -exec compress -f {} \;"
Find all directories under current directory and set read & execute permission for group and other for these files,find . -type d -print0 | xargs -0 chmod go+rx
Find all *.php  files and *.js files/directories  under /home/jul/here excluding $EXCLUDE/* paths,"find /home/jul/here -type f -iname ""*.php"" ! -path ""$EXCLUDE/*"" -o -iname ""*.js"" ! -path ""$EXCLUDE/*"""
"Search the directories that match pattern '/path/to/directory/folder{?,[1-4]?,50}' for .txt files","find /path/to/directory/folder{?,[1-4]?,50} -name '*.txt'"
Find all hidden files starting from the directory given as variable $FOLDER,"find $FOLDER -name "".*"""
Delete all files under user's home directory tree that were accessed more than 365 days after their status was changed,find ~ -used +365 -ok rm '{}' ';'
Find all regular files in <path> and execute process with all of them as arguments,find <path> -type f -exec sh -c 'for f; do echo process $f;  done' sh {} +
List files that have been renamed in Git repository.,find -name .git -prune -o -exec git log --pretty=tformat:'' --numstat --follow --find-copies-harder --reverse {} ';' | cut -f3- | grep '.* => .*'
find all the regular/normal files in the current folder,find -type f
"Find all regular files whose names contain ""@"" in directory tree ~/$folder","find ~/$folder -name ""*@*"" -type f -print0"
Find all files/directories named 'document' in the entire filesystem,find / -name document -print
Search for 'class Pool' in all *.java (case insensitive) files under current directory,find -iname '*.java'|xargs grep 'class Pool'
search for all the files in the current directory which have size greater than 10KB  and less than 32KB.,find . -size +10000c -size -32000c -print
find all the files in the entire file system which have been modified in the last 5 days,find / -mtime -5 -print
Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here,"find root -name '*.rmv' -type f -exec cp --parents ""{}"" /copy/to/here \;"
Find all flies under current directory excluding *.png files and print the file paths  that match the case insensitive regex 'foo=' in their contents,"find . -not -name '*.png' -o -type f -print | xargs grep -icl ""foo="""
Print the names of all files and directories in the current directory tree,find . -print
Find files/directories under current directory that matches the regex /projects/insanewebproject[^/]*$  in their paths,find . -exec sh -c 'echo {} | grep -qi /projects/insanewebproject[^/]*$' \; -print
find all files in current folder and display the total lines in them,find . | xargs wc -l
Remove all *.mp3 files in tmp directory but not in it's subdirectories,find tmp -maxdepth 1 -name *.mp3 -print0 | xargs    -0 rm
"Find all *.jpg  files under  maximum 2 levels down the temp/medium/* paths and run `mogrify -resize 428x270""^"" -quality 80 -compress JPEG -monitor -strip` with the file paths as arguments","find temp/medium/* -maxdepth 2 -iname ""*.jpg"" -print0 | xargs -0 mogrify -resize 428x270""^"" -quality 80 -compress JPEG -monitor -strip"
"Search the home directory for filenames starting with ""xx"" except for ""xxx"" files",find ~ -name 'xx*' -and -not -name 'xxx'
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under /home/www and below",find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
"Change the owner of all files in the directory tree ""dir_to_start"" excluding file ""file_to_exclude"" to ""owner""","find dir_to_start -not -name ""file_to_exclude""  -print0 | xargs -0 chown owner"
search for all the files in the current folder and sort them in the order of their depth and display the file names,find -type d -printf '%d\t%P\n' | sort -r -nk1 | cut -f2-
Search for empty files,find . -size 0k
display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems,find / -nouser \ -ls
Change permissions to 644 recursively for PHP files.,find . -type f -name '*.php' -exec chmod 644 {} \;
List all your files including everything in sub-directories,find ~
"Search the files from directory tree ""dirname"" for string ""foo""",find dirname  -print0 | xargs -0 grep foo
"Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files","find . -type f -exec chmod u=rw,g=r,o= '{}' \;"
delete all text files from current folder,"find . -type f ! -iname ""*.txt"" -delete"
"Search the current directory for all regular files executable by 'user', 'group', and 'others'",find . -maxdepth 1 -type f -perm -ugo=x
Find all php files under current directory,"find . -type f -name ""*.php"""
Find all *.txt files/directories under current directory and execute the python script hello.py with all their paths as arguments,"find . -name ""*.txt"" -print0 | xargs -0 python hello.py"
"find all the "".c"" files in the folder ""/home/you"" which have been accessed in the last 30*24 hours","find /home/you -iname ""*.c"" -atime -30 -type -f"
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name",find . -name '*-GHBAG-*' -exec rename 's/GHBAG/stream-agg/' {} +
display all the directories in the folder /path/to/dest except tmp directory,find /path/to/dest -type d \( ! -name tmp \) -print
Remove spaces recursively from all subdirectories under current directory,"find /path/to/dir -type d | tac | while read LINE; do target=$/$; echo mv ""$LINE"" ""$target""; done"
Count the number of directories in the current directory and below,find . -type f -exec basename {} \; | wc -l
Find files that were modified 7 days ago and archive them,find . -type f -mtime 7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
change the group of all regular/normal files in the current directory,find . -type f -exec chgrp usergroup {} \;
Show files in maximum 1 level down the current directory that were modified less than 1 day ago from today,less `find -maxdepth 1 -type f -daystart -mtime -1`
find all the files in the current folder which have been modified in the last one day,find . -daystart -mtime -1 -ls
"Remove the ""^M"" characters from all *.ext files under /home directory and save the results to new files with _new appended in their names","find /home -type f -name ""*.ext"" -print0 | while read -r -d ""$"" -r path; do dos2unix $path $path""_new""; done"
Find all regular files in the current directory tree that are not readable by anyone,find . -type f ! -perm -444
Find all files/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern,find . -name 'test*' -prune
Delete all 'restore.php' files in /var/www and 3 levels below,find /var/www -maxdepth 4 -name 'restore.php' -exec rm -r {} \;
"search for the directory starting with ""ora10"" in the entire file system","find / -type d -name ""ora10*"""
Move all files/directories under current directory to ~/play,find . -exec mv '{}' ~/play/ \;
Find all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents,find /path/to/input/ -type f -exec grep -qiF spammer@spammy.com \{\} \; -print
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2,find . -type d -regextype posix-egrep -regex '\./processor[0-9]*/10\.(1|2)'
Find all files under current directory and change their permission to 400,find . -type f -exec chmod 400 {} \;
Search only for directories,find -type d
Search the /myfiles directory tree for files last accessed more than 30 days ago,find /myfiles -atime +30
"find the file ""filename.txt"" in the usr folder",find /usr -name filename.txt -print
Find all directories under 'test' directory tree whose paths match the regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$',find test -type d -regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$'
Find all *.mov  files under current directory and run an ffmpeg command with the literal '%p' and '%f' as the path and name respectively for each file,"find . -iname ""*.mov"" -exec ffmpeg -i ""%p"" -f flv ""%f"" \;"
Find all directories named postgis-2.0.0 under / directory,"sudo find / -type d -name ""postgis-2.0.0"""
"Find all files/directories matching the regex pattern "".*\\.rb$"" under current directory","find . -regex "".*\\.rb$"""
"Decompresses each of ""*bz2"" files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields.","find . -name ""*.bz2"" -print0 | xargs -I{} -0 bzip2 -dc {} | cut -f, -d4"
Find all .txt files under the current directory and below,"find . -name ""*.txt"""
Find all files/directories with 777 permission under current directory tree,find . -perm 777 -print
"Search the current directory tree for *.c and *.asm files, ignoring the case","find . -type f \( -iname ""*.c"" -or -iname ""*.asm"" \)"
Find all the Sticky Bit files whose permission are 551,find / -perm 0551
display list of all the files in the current directory,find | xargs ls
Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning,find . -perm 0644 | head
Find all *blue* files/directories under /myfiles,find /myfiles -name '*blue*'
Find all files/directories under current directory and append a null character at the end of each path,find -print0
Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE/,find -name '*.ISOLATE.quantifier.txt' -maxdepth 1 -exec mv {} ISOLATE/ +
"List in detail all *.txt files in the current directory tree, omitting paths ./Movies/*, ./Downloads/*, and ./Music/*","find . -type f -name ""*.txt"" ! -path ""./Movies/*"" ! -path ""./Downloads/*"" ! -path ""./Music/*"" -ls"
find all the php files in current folder and search for multiple patterns in these files,"find -name '*.php' -exec grep -li ""fincken"" {} + | xargs grep -l ""TODO"""
find all empty files,find / -empty
Find all top-level files in the current folder but ones with name like '*Music*' to the 'dest/' folder.,find . -maxdepth 1 -name '*Music*' -prune -o -print0 | xargs -0 -i cp {} dest/
Delete all regular files named 'FILE-TO-FIND' under current directory tree,"find . -type f -name ""FILE-TO-FIND"" -exec rm -f {} \;"
"The file ""files_to_find.txt"" contains a list of filenames, create each file or update its timestamp if it exists.",touch `cat files_to_find.txt`
force delete all the files that have been modified in the last 3 days,find . -mtime -3 -exec rm -rf {} \;
"searches through the root filesystem  for the file named Chapter1, and prints the location",find / -name Chapter1 -type f
Find all files that are set user ID to root,find . -user 0 -perm -4000 -print
Search the /usr/bin directory tree for regular files accessed more than 100 days ago,find /usr/bin -type f -atime +100
"display table of files with their name, owner, and size in bytes.",find . -printf 'Name: %f Owner: %u %s bytes\n'
"Find all files named ""something"" in the current folder and below and run them through the ls -l command in a one batch.",find . -name something | xargs -0 ls
Find .jpg files owned by user daniel in the current directory and its sub-directories.,find . -user daniel -type f -name *.jpg
Find all files/directories with 777 permission under current directory tree,find . -perm 777 -print
"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","find $1 -name ""$2"" -exec grep -Hn ""$3"" {} \;"
Find all files/directories named orm.properties in entire file system,"sudo find / -name ""orm.properties"""
replace the word foo to bar in the current folder in all the regular/normal files which have execute permission  (does not update the file),find . -type f -executable -exec sed -i 's/foo/bar/g' {} +
"find all the files which end with "".deb"" and display their base name",find . -name '*.deb' | xargs -n1 basename
"Search the current directory tree for files containing ""string"" in their path names",find | egrep string
find all the files that were modified two days ago,find . -daystart -ctime 1 -type f
rename all the text files  in the current folder to html files,"find -name ""*.txt"" -exec mv {} `basename {} .htm`.html \;"
"List all files/directories under current directory matching the posix-egrep type regex "".+\.(c|cpp|h)$"" in their names","find . -regextype posix-egrep -regex "".+\.(c|cpp|h)$"" -print0 | xargs -0 -n 1 ls"
Find files under '/travelphotos' directory tree which are bigger than 200KB and do not have 2015 in their names,"find /travelphotos -type f -size +200k -not -iname ""*2015*"""
Search the current directory tree for *bash* files printing them on a single line,"find . -name ""*bash*"" | xargs"
Prints first found folder that contains 'ssh' file and has 'bin' in path.,dirname `find / -name ssh | grep bin | head -1`
Find all directories under /directory-path and change their permission to 2755,find /directory-path  -type d -exec sudo chmod 2775 {} +
Change permissions to 644 for all regular files in and below the current directory,"find . -type f -print | sed -e 's/^/""/' -e 's/$/""/' | xargs chmod 644"
display a long listing of all the java files in the current folder in sorted order,find . -type f -name '*.java' -ls | sort -k +7 -r
Find all test.txt files/directories under current directory,find . -name test.txt
"remove all the "".core"" files in the file system","find / -name ""*.core"" -print -exec rm {} \;"
"Unzip all files matching ""file_*"" and pipe into ""agrep -dEOE 'grep'""","find . -name ""file_*"" -follow -type f -print0 | xargs -0 zcat | agrep -dEOE 'grep'"
Find all empty files under /tmp and below,find /tmp -type f -empty
"display list of all the hidden regular/normal files in the directory ""/dir/to/search/""","find /dir/to/search/ -type f -iname "".*"" -ls"
Delete all empty directories in the /some/parrent/dir directory tree,"find /some/parrent/dir -type d | while read d ; do ls ""$d""/* &>/dev/null || rm -r ""$d""; done"
"Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.","find ""$1"" -type f | egrep -v '\.bz2' | xargs bzip2 -9 &"
display all the header files  and cpp files in the current folder,find . -regex '.*\.\(cpp\|h\)'
"Find files whose name starts with ""MyFile"", ignoring the case",find . -iname 'MyFile*'
List files in the current directory,find . \( -path './*' -prune \)
search for files starting with memo and which belong to the user ann in the folder /work,find /work -name 'memo*' -user ann -print
"Print only the line ""foo///"" given two empty directories foo and bar",find foo/// bar/// -name foo -o -name 'bar?*'
search normal files called ' banckup '  from /usr directory downward and print them.,find /usr -type f -name backup -print
Add the .abc suffix to the names of all *.txt regular files in the current directory tree,find . -type f -iname '*.txt' -print0 | xargs -0 mv {} {}.abc
create a tar of all png & jpg images in the current folder,"find . \( -iname ""*.png"" -o -iname ""*.jpg"" \) -print -exec tar -rf images.tar {} \;"
Count the number of the regular files residing under and below ./randfiles/,find ./randfiles/ -type f | wc -l
"find all the ""jpg"" file in a folder.",find /win/C -iname *JPG
"Remove the ""123_"" prefix from all filenames of .txt files in current directory.","find -name ""123*.txt"" -exec rename 's/^123_//' {} "";"""
find all the directories in the current folder,find . -type d -print
find all the html files in the current folder which have been modified excatly 7 days before,"find . -mtime 7 -name ""*.html"" -print"
find all the files in the current directory which have been modified after a file,find . -newer file
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar,find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +
"List all file paths under the current directory with case insensitive name "".note"" in reverse alphabetic order",find . -iname '.note' | sort -r
Display the number of regular files under current directory tree,find . -type f -print0 | tr -dc '\0' | wc -c
display the number of lines in all the files in the current folder,find . -name '*' | xargs wc -l
Find all files starting from the current directory which are exactly 100MB in size,find . -size 100M
Find all files whose permission are 777,find / -type f -perm 777
view the manual page of find,man find
"Find all files named ""test2"" in the current directory",find -name test2 -prune
Find all files/directories with inode number 16187430 and move them to 'new-test-file-name',find -inum 16187430 -exec mv {} new-test-file-name \
"Search the current directory tree for regular files whose names end with ""keep.${SUFFIX}"", where $SUFFIX is a shell variable","find . -type f -name ""*keep.${SUFFIX}"""
Find all TXT files that belong to user root,"find / -user root -iname ""*.txt"""
display all files in the current folder ($@ contains the variables passed as argument to the function),"find . -iname ""*$@*"" -or -iname "".*$@*"""
Search the current user's home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified.,find ~/ -name *.tar.gz -newer filename
search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the /root/work directory,find /root/ -path '/root/work' -prune -o -name myfile -type f -print
Find files/directories that isn't owned by the user 'apache' under /var/www,find /var/www ! -user apache -print0 | xargs -0
Find the first file/directory under current directory named 'modules' and exit with empty result,find . -name modules -exec sh -c 'exit 0' \;
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play,find /tmp/ -ctime -1 -name 'x*' -print0 | xargs -r0 mv -t ~/play/
Find all *gz files under asia and emea directory and print their names and line counts to file_count.txt,"find asia emea -type f -name ""*gz"" | while IFS= read -r fname; do printf ""%s %s\n"" ""$fname"" $ >> file_count.txt; done"
Search the /usr/ directory tree for files newer than file /tmp/stamp,find /usr -newer /tmp/stamp
Find files in the current directory tree whose size is 24000 bytes,find . -size 24000c
Find all files under current directory excluding hidden directories,find -name '.?*' -prune -o \
Change the permissions of every directory in the current directory and all files and directories within them to 700,find . -maxdepth 1 -type d -exec chmod -R 700 {} \;
Search the current directory recursively for files writable for `others',find . -perm -o+w
Remove all Thumbs.db   files under temp/images directory,"find temp/images/ -type f -iname Thumbs.db | while read FILE ; do rm ""${FILE}"" ; done"
rename all the svg.png files to png files in the current fodler,"find . -name ""*.svg.png"" -print0 | sed 's/.svg.png//g' | xargs -0 -I namePrefix mv namePrefix.svg.png namePrefix.png"
Find files in the current directory tree which have permissions rwx for user and rw for group and others,find . -perm 766
Remove all regular files found in and below /path,find /path -type f -exec rm '{}' +
Find files/directories in entire file system with at least 644 permission,find / -perm -644
Search the current directory recursively for regular files last changed 2 days ago,find . type -f -ctime 2
"Find all *.c files under and below the current directory that contain ""hogehoge""",find . -name \*.c | xargs grep hogehoge
"Search the ./bin directory recursively for files called ""cp""",find ./bin -name “cp”
Find all php files whose name is tecmint.php in the current directory,find . -type f -name tecmint.php
"Search the current directory tree for files whose names begin with ""my"" and end with ""p"" followed by any character, ignoring path names containing ""test""","find . -regex "".*/my.*p.$"" -a -not -regex "".*test.*"""
Find all files under /home that belong to user tecmint,find /home -user tecmint
"split all files in directory ""/dev/shm/split/"" into pieces per 1000 lines",find /dev/shm/split/ -type f -exec split -l 1000 {} {} \;
find all the reguar/normal php files in current directory.,"find . -type f -name ""*.php"""
Remove all .tmp files in and below /tmp,"find /tmp -name ""*.tmp"" | xargs rm"
Show the number of lines for each .php and .phtml file in the current directory tree,find . -type f \ -exec wc -l {} +;
Find all *.txt files under /foo and delete them,"find /foo -name ""*.txt"" -delete"
display the number of lines in all the header files in the current folder,"find . -name ""*.h"" -print | xargs wc -l"
Find all files/directories starting with 'readme'  under '/usr/share/doc' directory tree,find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'
search for all the regular/normal mp3 files in the file system and create a directory int /mt/mp3/ with the basename of the mp3 file,find / -iname “*.mp3″ -type f -print0 | xargs -0 -I ‘{}’ mkdir -p /mnt/mp3/`basename {}`
display all the text files and pdf files in the current folder,"find . \( -name ""*.txt"" -o -name ""*.pdf"" \)"
Print the list of all subdirectories of the current directory,find . -maxdepth 1 -mindepth 1 -type d
Filnd all directory in root directory with 777 permission and change permision755  with chmod commad .,find / -type d  -perm 777 -print -exec chmod 755 {} \;
Print the list of files and directories of the current directory,find . ! -name . -prune
"Find all regular files in the current directory and search them for ""example""",find -maxdepth 1 -type f | xargs grep -F 'example'
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" -delete"
Look for files with wide open permissions,find . -type f  -perm a=rwx -exec ls -l {} \;
Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree,find -type f  |  grep -P '\w+-\d+x\d+\.\w+$' | sed -re 's//\\\1/g' | xargs rm
"Find all directories under and below directory ""folder_name"", and change their permissions to 775",find folder_name -type d -exec chmod 775 ‘{}’ \;
Find files modified within the past 24 hours,find . -mtime 0
Find all *.mp3  files/directories under /tmp and remove them,find /tmp -iname '*.mp3' -print0 | xargs -0 rm
Find all files in the home directory tree that are owned by another user,find ~ ! -user ${USER}
Find all *.jpg files in */201111/* paths and numerically sort them according to the second field in the file name with a delimiter '_',"find */201111/* -name ""*.jpg"" | sort -t '_' -nk2"
Find all directories named build under the current directory,find . -type d -name build
find all the files that have not been modified in the last 2 days,find -mtime +2
Search the current directory tree for regular files omitting directory `omit-directory',find . -name omit-directory -prune -o -type f  -print
"Find all directories and for each of them, print an mv command to move it to /new/location",find . -type d   -execdir echo /bin/mv {} /new/location \;
search the file myfile.txt in the current folder,find . -name myfile.txt -print
Set 644 permission to all regular files under /home/my/special/folder directory,chmod 644 `find /home/my/special/folder -type f`
"Find files containing `blah' in their names modified less than 2 days ago, case insensitive",find . -iname '*blah*' -mtime -2
"Find all files whose names end with ""~"" in the /home/peter directory tree, following symlinks, and delete them",find -L /home/peter -name *~ -exec rm '{}' +
"search for the file ""file1"" in the entire file system",find / -name file1
Search for all jpg images on the system and archive them,find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz
search  in root   directory downwards all files which have less than 2 links.,find / -links -2 -print
Search the local subdirectory tree of the current working directory and the /tmp directory tree for directories named mydir,find local /tmp -name mydir -type d -print
Find all directories with 755 permission and change the permission to 700,find . -type d -perm 755 -exec chmod 700 {} \;
"Remove all .sh files in the current directory tree whose names begin with ""new""","find . -name ""new*.sh"" -exec rm -f '{}' \+"
"find all the text files in the current folder expect those which are in the path ""sk""","find . -path ""./sk"" -prune -o -name ""*.txt"" -print"
Find all .js files in the current directory tree that do not contain a whitespace,find . -type f -name '*.js' \
Find all files/directores under /etc filter them by searching for 'test' in their name and run the file command on each of them,find /etc -print0 | grep -azZ test | xargs -0 file
Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick',find /usr/local/fonts -user warwick
Delete all filename* files under /dir directory,"find /dir -name ""filename*"" -type f -exec rm {} \;"
Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them,"find ./ -type f -name ""$2"" -exec sed -i ""s/$3/$4/g"" {} \;"
Print $1 if $1 is an empty directory,"find ""$1"" -name ""?*"" | dd bs=$() count=1 2>/dev/null"
find all the files in the current folder that have been modified in the last 24*3 hours,find ./ -mtime -3
find all the files in the current directory which have been modified after a file,find . -newer file
"Show the mv commands that would rename the *.so files in the current directory tree prepending their names with ""lib""","find . -name ""*.so"" -printf ""mv '%h/%f' '%h/lib%f'\n"" | less -S"
Find all directories under and below parent_directory,find parent_directory -type d
"Find all files under $1, calculate their md5sum and redirect the result to checksums.md5","find ""$1"" -type f -print0 | parallel -0 -X md5 > checksums.md5"
Find all .rb files owned by root in the /apps/ folder and below that have been accessed in the last two minutes.,find /apps/ -user root -type f -amin -2 -name *.rb
Find all the files without permission 777,find / -type f ! -perm 777
Find & Write Changes to a File and Print the Changes Using sed s//gpw,"find . -type f -name ""*.txt"" -exec sed -n 's/Linux/Linux-Unix/gpw output' thegeekstuff.txt"
"Find all *.c files under and below the current directory that contain ""wait_event_interruptible""",find . -name \*.c -exec grep wait_event_interruptible {} +
display all the files in the folder /etc /srv excluding those that are present in the path of ./srv/tftp/pxelinux.cfg* and /etc/mtab,"find /etc /srv \! -path ""./srv/tftp/pxelinux.cfg*"" -a \! -name /etc/mtab"
Find all directories under current directory having DIRNAME in their name,find . -type d | grep DIRNAME
Run the file command on every regular file under current directory,find . -type f -exec file '{}' \;
List files in the current directory and below,find -ls
Find deb packages in the current directory recursively and list them with `dpkg',"find . -type f -and -iname ""*.deb"" | xargs -n 1 dpkg -I"
"Search the current directory recursively for *.txt files with lines that match regular expression ""^string""","find . -name ""*.txt"" -exec egrep -l '^string' {} \;"
Show the last 10 .conf files found by `find' in the /etc directory and 1 level below,"find /etc -maxdepth 2 -name ""*.conf"" | tail"
Find all files/directories under whatever and ... directory and copy them to /var/tmp,"find whatever ... | xargs -d ""\n"" cp -t /var/tmp"
"Search the current directory tree for files containing ""needle"" in their names","find . -iname ""*needle*"""
"find all the files ending with ""~"" in current folder and move them to temp folder",find -name '*~' -print0 | xargs -0 -I _ mv _ /tmp/
Find all *.txt files/directories in entire file system,"find / -name ""*.txt"""
FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines,find . -type f -print0 | egrep -iazZ '$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'
search for dbmsspool.sql file in the current folder,find . -print|grep ?i dbmspool.sql
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.,find . -perm 777 -a -mtime 0 -a -print
List files larger than 10MB under /var/log,find /var/log -size +10M -ls
Test if a file named 'file' in the current directory is more than 1 hour old,find file -prune -cmin +60 -print | grep -q .
List all .jpg files in the home directory tree in a fast way,"find . -name ""*.jpg"" -exec ls {} +"
Search the /usr/bin directory tree for regular files modified or created less than 10 days ago,find /usr/bin -type f -mtime -10
"Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 .","find htdocs cgi-bin -name ""*.cgi"" -type f -exec chmod 755 {} \;"
Find all directories that start with stat,find . -type d –iname stat*
Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames,find ~/Documents -type f -print0 | xargs -0 grep -il birthday
Find all 664 permission files/drectories under current directory tree,find . -perm -664
"Find all files under current directory and set read-write permission for owner, read permission for group and other for those directories","find . -type f -exec chmod u=rw,g=r,o=r {} \; - that's 644"
"display all files in the current directory excluding those that are present in the directories whose name starts with ""efence"" and do not search in the sub directories","find * -maxdepth 0 -name ""efence*"" -prune -o -print"
Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves,find $ROOT_DIR -type d -depth -print
Find all directories under /home/username/public_html/sites/default/files and set their permission to 770,find /home/username/public_html/sites/default/files -type d -exec chmod 770 {} +
find all regular/normal files in the current folder and display them in the a format.,"find -type f -exec perl -e 'printf qq[%s => %s\n], scalar @ARGV, length join q[ ], @ARGV' {} +"
Find all regular files under current directory tree without descending into './dir1'  and './dir2' directories,find . \ -prune -or -type f -print
Append the parent directory name with a space in all 'text.txt' files in all sub directories of current directory,"find . -name text.txt | sed 's|.*/\/.*|sed -i ""s@^@\1 @"" & |' | sh"
Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files,find . -type d -path '*/\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print
display all normal/regular files in current folder,find . -type f
Find all files/directories named 'file' without descending into directories with the same name under current directory tree,find -name file -prune
Print all the file/directory paths under current directory,find | xargs
search for files cart1 or cart2 or cart3 or ...cart6 in the folder junk which is in home folder and display all its details. Discard all the errors and do not display them.,find ~/junk  -name 'cart[1-6]' -exec ls -l {} \; 2> /dev/null
Identify CMS version/releases accross all your Drupal websites,"find /home/*/public_html/ -type f -iwholename ""*/modules/system/system.info"" -exec grep -H ""version = \"""" {} \;"
Print the list of files in the current directory tree skipping SVN files,find . -path '*/.svn*' -prune -o -print
"show all directories in the current folder excluding those that are present in the sub directories of media, images and backups",find . -type d \ -prune -o -print
Find all 50MB files in file system,find / -size 50M
search for all the mp3 files in the file system and move them to the folder /mnt/mp3,"find / -iname ""*.mp3"" -exec mv {} /mnt/mp3 \;"
Print a list of all files and directories in the /var/log directory tree,find /var/log/
"Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.",find . -perm 664
List all files in the current directory tree that were modified 60 minutes ago,find . -mmin 60 | xargs '-rd\n' ls -l
find all the files in the file system which are bigger than 3 bytes,find / -size +3 -print
Find all of the distinct file extensions in current directory,find . -type f | perl -ne 'print $1 if m/\.$/' | sort -u;
Find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths,find / -name \*.dbf -print0 | xargs -0 -n1 dirname | sort | uniq
display a list of all files in the folder passed as argument to a script,find $@ -ls
display all the regular files in current folder,find . -type f
Search for 'example' in all regular files from the current directory,find -maxdepth 1 -type f | xargs grep -F 'example'
Find files that were modified more than 7 days ago and archive them,find . -type f -mtime +7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry',find /usr/ports/ -name pkg-plist\* -exec grep dirrmtry '{}' '+' | wc -l
Find all files named 'aaa.txt' under current directory tree and display their contents,cat `find . -name aaa.txt`
Create thumbnails from the first page of each PDF files under /path/to/dir,find /path/to/dir -name '*.pdf' -exec convert -thumbnail x80 {}[0] {}-thumb.png \;
display all the files in the current folder excluding the files with the name mmm,find . -name mmm -prune -o -print
Search for files bigger than 10M,find ~ -size +10M
Print out all .pdf files from the current directory tree as plain text on the standard output,find . -name '*.pdf' -print0 | xargs -0 -n1 -I '{}' pdftotext '{}' -
Remove trailing spaces from all files under current directory,find . -type f -print0 | xargs -0 perl -pi -e 's/ +$//'
Find and delete files older than 30 days within a directory.,"#!/bin/bash

find /path/to/directory -type f -mtime +30 -delete"
Search for all non-hidden files,find . -name '*'
"Search level 3 of the current directory tree for the directories whose pathnames contain ""New Parts""","find -mindepth 3 -maxdepth 3 -type d | grep ""New Parts"""
Find all files/directories under current directory that match the case insensitive extended regex .*/(EA|FS)_.*,find -E . -iregex '.*/(EA|FS)_.*'
Add read permission for 'other' for all files/directories named 'rc.conf' under current directory tree,"find . -name ""rc.conf"" -exec chmod o+r '{}' \;"
create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/BACKUP.LOG,find . -cpio /dev/fd0 -print | tee /tmp/BACKUP.LOG
Change permissions to 644 for all subdirectories,find . -type d -print0|xargs -0 chmod 644
"display all the files in the file system which belong to the user ""wnj"" or which are modified after the file ""ttt""",find / \( -newer ttt -or -user wnj \) -print
Identify files that do not have a listing in the /etc/passwd or /etc/group file,find / -nouser -o  -nogroup
"search the entire file system for the file ""jan92.rpt""",find / -name jan92.rpt -print
Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user.,"find ~/dir_data -type f  -exec chmod a-x,u+w {} \;"
Find and print the names of all files found in the current directory and all of its sub-directories.,find . -print
"Find all php files in current directory and delete text matching the regex '<?php /\*\*/ eval(base64_decode(""aWY.*?>' in those files","find ./ -name ""*.php"" -type f | xargs sed -i 's#<?php /\*\*/ eval(base64_decode(""aWY.*?>##g'  2>&1"
Find all directories containing 'linux' in their names under '/root' directory tree,"find  /root -type d -iname ""*linux*"""
find all text files in current folder and delete them,"find . -name "".txt"" -exec rm ""{}"" \;"
find all the configuration or text files in current directory,find . -type f \ -print
"Move all directories in the current directory tree that have been modified in the last day to ""/path/to/target-dir""",find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
List all hidden regular files from the current directory separating them with zeroes,find . -maxdepth 1 -type f -name '.*' -printf '%f\0'
Find all *.m4a files/directories under /home/family/Music directory,find /home/family/Music -name *.m4a -print0
display all the directories in the current folder which are atleast one level deep,find . -mindepth 1 -type d -print0
Remove all *.txt files in the home directory tree with confirmation,find $HOME/. -name *.txt -ok rm {} \;
Print content of all files ending with '*.foo' in current directory recursively,find . -name '*.foo' -exec cat {} \;
Search the entire file system for .jpg files.,find / -name “*.jpg”
Save the list of files modified within a fortnight ago to `deploy.txt' stripping the file names of any leading directories,find . -type f -mtime -14 -printf '%f\n' > deploy.txt
Move all *.log files under $sourcePath that were modified more than 10 days ago to a zip archive $zipFile,"find $sourcePath -type f -mtime +10 -name ""*.log"" | xargs zip -mT $zipFile -@"
"search for all pdf files in the folder ""/home/pdf"" which have been accessed in the last 60*24 hours","find /home/you -iname ""*.pdf"" -atime -60 -type -f"
Find all directories in directory tree `httpdocs',find httpdocs -type d
"remove all the ""core"" files in the current folder which have not been changed in the last 4 days.",find . -name core -ctime +4 -exec /bin/rm -f {} \;
find the count of all the charcters of the list of regular files present in the current folder,find . -type f | xargs | wc -c
Find all directories under /path/to/base/dir and change their permission to 755,find /path/to/base/dir -type d -exec chmod 755 {} +
display long listing of all the symbolic links in the current folder,find . -type l -exec ls -l {} \;
find all the text files in the home folder,"find ~ -name ""*.txt"" — print"
Find all files in your home directory and below that are smaller than 100M.,find ~ -size -100M
Delete file with inode number 314167125,find . -type f -inum 314167125 -delete
Replace 'company' with 'newcompany' in all files under current directory and keep backups with .bakup extension,find -type f -print0 | xargs -0 sed -i .bakup 's/company/newcompany/g'
Delete all files/directories with node number $inum under current directory tree,find . -inum $inum -exec rm {} \
Find files in the current directory tree which are larger than 5 MB in size,find . -size +5000k -type f
Get a list of all hidden files from the current directory tree,"find . -type f -name '.*' -print0 | while IFS= read -r -d '' f; do basename ""$f""; done"
Find files in entire file system that are writable by group or other,"find / -perm /g+w,o+w"
"search for the folder .dummy in the entire directory structure of ""test folder"" and remove it.","find -depth ""Test Folder"" -type d -name .dummy -exec rm -rf \{\} \;"
Find all files/directories named 'articles.jpg' under current directory tree,"find . -name ""articles.jpg"""
"Search the current directory tree for regular files whose names begin with ""orapw""","find . -name ""orapw*"" -type f"
Find all top-level files in the current folder but ones with name like '*Music*' to the 'dest/' folder.,find . -maxdepth 1 -name '*Music*' -prune -o -print0 | xargs -0 -i cp {} dest/
"Copies all files under the current folder like ""file.ext"" with ""FooBar"" in the path to the root of the current folder, preserving mode, ownership and timestamp attributes.","find . -name ""file.ext""| grep ""FooBar"" | xargs -i cp -p ""{}"" ."
"show all the files in the current folder which has the word ""ITM""",find . -name ‘*ITM*’
"display all the "".c"" files in the current folder excluding those that are present in the .svn sub folder","find .  -name .svn -prune -o -name ""*.c"" -print"
"Print the list of files from the ""/zu/durchsuchender/Ordner"" directory tree whose names begin with ""beispieldatei"" and which contain string ""Beispielinhalt""","find ""/zu/durchsuchender/Ordner"" -name ""beispieldatei*"" -print0 | xargs -0 grep -l ""Beispielinhalt"""
"Search the specified group for the given ""filename","find / -group users -iname ""filename"""
search for all the files having spaces in the current folder and save the output to the variable founddata,"founddata=`find . -name ""filename including space"" -print0`"
Find all files with the SUID bit set,find / -perm -u+s
display the filename and size of all the files in the file system which are bigger than 20MB,"find / -type f -size +20000k -exec ls -lh {} \; | awk '{ print $8 "": "" $5 }'"
Find '.git' directories in directory tree /path/to/files and print the pathnames of their parents,find /path/to/files -type d -name '.git' -exec dirname {} +
"Find all regular files residing in the current directory tree and search them for string ""/bin/ksh""",find . -type f -print | xargs grep -i 'bin/ksh'
Archive all filepattern-*2009* files/directories under data/ into 2009.tar,"find data/ -name ""filepattern-*2009*"" | cpio -ov --format=ustar > 2009.tar"
Find all files ignoring hidden files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,find . -not -path '*/\.*' -type f -print0 | xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'
dispaly a long listig of all the files in the current folder which are bigger than 100KB,find . -size +100000 -ls
find all the files that are modified in the last 7 days,find -daystart -mtime -7
"Print every file's type, name, and inode","find -printf ""%y %i %prn"""
Find all files under /somefolder matching the extended regex '\./$' in their paths,find -E /somefolder -type f -regex '\./$'
Find all files under current directory and print only the filenames (not paths),find . -type f -execdir echo '{}' ';'
Find all regular files in the home directory tree that were modified in the last 24 hours,find ~ -type f -mtime 0
find all the text files in current folder and change the extension of these files and move them to another folder,find ./ -name \*.txt | perl -p -e 's/^(.*\/\.txt)$/mv $1 .\/foo\/$2.bar.txt/' | bash
search for the file foo in  the current folder and display a long listing of it in sorted order of modification date,find . -name foo | xargs ls -tl
find all the fles that have .ssh in the end and redirect the output to ssh-stuff,find / -name .ssh* -print | tee -a ssh-stuff
"find all the normal/regular files in the current folder which are present in the pattern file ""file_list.txt""",find . type f -print | fgrep -f file_list.txt
Locate logo.gif in the /var/www directory tree,find /var/www -name logo.gif
Show file type information for files in /usr/bin,find /usr/bin | xargs file
display the version of find command,find -version
List the current directory recursively ignoring ./src/emacs/ and all its contents,find . -path ./src/emacs -prune -o -print
Remove files that are greater than 1MB in size under current directory,find . -type f -size +1M -exec rm {} +
find regular files and directories that have been modified in the last seven days,find . -mtime -7 -type f
Delete all files with '.old' extension under current directory tree,find . -name “*.old” -exec rm {} \;
"display all the files in the current folder excluding search in the paths containing the folder having the word ""mmm""",find . ! -path *mmm*
Find all the files that end with the extension “.java” in the current directoy tree,"find . -name ""*.java"""
Find all *.txt files/directories under current directory,find . -name '*.txt'
search for MP3 files in the current folder and subfolders exclude dir1 AND dir2,"find ! -path ""dir1"" ! -path ""dir2"" -iname ""*.mp3"""
Find all files/directories named orm.properties under  /eserver6 directory,"find /eserver6 -name ""orm.properties"""
"Change mode of all files ending with "".php"" under the current folder to 755 and write the output to the console and ""logfile.txt"" file",find . -name '*.php' -exec chmod 755 {} \; | tee logfile.txt
Search directory tree $DIR for *.txt files,"find ""${DIR}"" -name ""*.txt"""
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.,"find . -name ""FILE-TO-FIND"" -exec rm -rf {} \;"
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories,"find . -maxdepth 1 -name ""*.jpg"" -size -50k -exec rm {} \;"
List all files/directories with spaces in their names under ~/Library directory,find ~/Library -name '* *' -exec ls {} \;
"List regular files in current directory with read, write and execute permission for all users and also show the permissions",find . -type f  -perm 777 -exec ls -l {} \;
find all directory list which have empty list in /tmp directory .,find /tmp -type d -empty
List directories under current directory,find . -type d
Find .txt files on the system whose size is greater than 12000 bytes,"find / -name ""*.txt"" -size +12000c"
Find all empty directories under $somedir and copy /my/configfile into those directories,"find ""$somedir"" -type d -empty -exec cp /my/configfile {} \;"
"Calculate the total disk usage for each "".jpg"" file on the system and prepend the system host name to the output","find ""$PWD"" / -iname '*.jpg' -exec du -s {} + | sed ""s/^/$: /"""
Get a list of files and directories in the current directory tree,find . -print0 | xargs -0 echo
Search the current directory tree for *bash* files,"find . -name ""*bash*"""
change permission of all the files in the entire file system which have the permissions 777.,find / -type f -perm 0777 -print -exec chmod 644 {} \;
Find all regular files under current directory tree whose names end with 'cache' or 'xml' or 'html',"find . -type f \( -name ""*cache"" -o -name ""*xml"" -o -name ""*html"" \)"
"Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output",find . -type f -exec grep California {} \; -print | wc -l
Search the current directory tree for files last accessed more than 10 days ago,find . -atime +10
"Search for occurrences of string ""main("" in the .c files from the current directory tree","find . -type f -name ""*.c"" -print -exec grep -s ""main("" {} \;"
"Find sqlite3 databases in the current directory tree, execute query 'SELECT * FROM table WHERE column1=""value""' on all of them, and search the result for ""value""","find . -name ""*.db"" -type f | while read file ; do sqlite3 $file ""SELECT * FROM table WHERE column1='value'"" | grep value ; if [ $? -eq 0 ] ; then echo $file ; fi done"
copy all java files from current folder to another folder,"find . -name ""*.java"" -print0 | xargs -0 -J % cp % destinationFolder"
"search for the word ""slrn"" in all the files in the folder $HOME/html/andrews-corner",find $HOME/html/andrews-corner -exec grep -q 'slrn' '{}' \; -print
List all *.txt files/directories under /etc,"find /etc -name ""*.txt"" | xargs ls -l"
"Recursively removes all files with name like ""*.war"" in  /home/ubuntu/wars folder.","find /home/ubuntu/wars -type f -name ""*.war"" -exec rm {} \\;"
"Create a script to automate database backups, including compression and rotation of backup files.","#!/bin/bash

date=$(date +%Y%m%d)
backup_dir=""/path/to/backups""
backup_file=""$backup_dir/db_backup_$date.sql""

mysqldump -u username -p password database_name > ""$backup_file""
gzip ""$backup_file""
find ""$backup_dir"" -type f -name ""db_backup_*"" -mtime +7 -delete"
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*,find . -mtime 0 | grep -v '^\./en' | grep -v '^\./es' | grep -v .swp
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*',find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;
List all directories under current directory,find . -type d -exec ls -dlrt {} \;
List all leaf directories of the current directory tree,find . -type d -links 2
display all text files in the folder /user/directory which have been modified in today,"find /user/directory/* -name ""*txt"" -mtime 0 -type f"
Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them,find xargstest/ -name 'file??' | sort
Find all files in the current directory recursively that were last modified more than 5 days ago,find ./* -mtime +5
Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension  that were modified more thant 60 days ago,find /home/backups -type f -iregex '.*\.t?gz$' -mtime +60 -exec rm {} \;
Show a listing of files not modified in over 20 days or not accessed in over 40 days,find /mydir \ -exec ls -l {} \;
Update timestamps of all files and directories under current directory.,find . -print0 | xargs -0 touch
Find all directories under /home/username/tmp and set their permission to 770,find /home/username/tmp -type d -exec chmod 770 {} +
Find all README's in /usr/share,find /usr/share -name README
Find grub.conf files in entire file system discarding errors in csh or tcsh shell,find / -name grub.conf >& /dev/null
Find files belonging to the given owner,find /path/to/search -user owner
Search for 'specific string' in all files matching the name pattern '“*.[txt|TXT]”' under current directory tree,find . -name “*.[txt|TXT]” -print | xargs grep “specific string”
Find all PHP files under current directory that contain only one non-blank line,find . -type f -name '*.php' -exec grep -Hcm2 '[^[:space:]]' {} + | sed -n '/:1$/{s///;p}'
"Calculate the md5 sum of all the file metadata in the current directory tree excluding "".svn""",find . -name '.svn' -prune -o -type f -printf '%m%c%p' | md5sum
Find all regular files in .git and replace every occurrences of 'subdomainB.example.com'  with 'subdomainA.example.com' in those files,find .git -type f -print0 | xargs -0 sed -i 's/subdomainB\.example\.com/subdomainA.example.com/g'
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions,"find / -maxdepth 1 -xdev -type f -exec grep -i ""stringtofind"" -q ""{}"" \; -print0 | xargs -0 sed '/./d'"
"display all the hidden files in the directory ""/dir/to/search/""","find /dir/to/search/ -name "".*"" -print"
Find all 'test' directories in the current directory tree and remove them,find . -type d -name 'test' -exec rm -rf {} \;
display all the files in the current folder and traverse from the sub directories,find . -type d -depth
"Find all files named ""filename"" in the current directory tree, not descending into ""FOLDER1"" directories",find . -name FOLDER1 -prune -o -name filename
Find files that were modified second last week and archive them,find . -type f -mtime +7 -mtime -14 | xargs tar -cvf `date ‘+%d%m%Y’_archive.tar`
Find all files that were last accessed less than7 days ago under /home,find /home -mtime -7
Count the number of the regular files residing under and below ./randfiles/,find ./randfiles/ -type f | wc -l
Find all files/directories starting with 'readme' (case insensitive) under '/usr/share/doc' directory tree,find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'
Find all directories under ${1:-.} directory without descending into any sub-directories,find ${1:-.} -mindepth 1 -maxdepth 1 -type d
Find the files in the current directory that match pattern '*.ISOLATE.*.txt' and move them to folder ./ISOLATE,find . -name '*.ISOLATE.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE ./ISOLATE
Prints total number of lines of all *.m and *.h files in a current folder and subfolders.,"find ./ -type f -name ""*.[mh]"" -exec wc -l {}  \; | sed -e 's/[ ]*//g' | cut -d""."" -f1 | paste -sd+ - | bc"
Delete empty files and print their names,find . -empty -delete -print
Search for all the files in man pages and return the manual page for grep,find /usr/share/man/ -regex .*/grep*
display all the files in the file system which have been modified in the last 10 minutes,find / -mmin -10
Find and print all PDF files in the current directory and its sub-directories except for any found in the ./pdfs directory.,"find . -name ""*.pdf"" -print | grep -v ""^\./pdfs/"""
"Find files ending in ""*macs""",find -name '*macs'
Find all .* files excluding list_files  under current directory,"find . -iname "".*"" \! -iname 'list_files'"
find the oldest normal file in the current directory and display its contents,"find -type f -printf ""%T+ %p\0"" | sort -z | grep -zom 1 "".*"" | cat"
Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago and show a message if no files were found,"find /directory/whatever -name '*.tar.gz' -mtime +$DAYS | grep 'tar.gz' || echo ""You don't have files older than $DAYS days"""
"Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones",find ~/code -type d -name '[^\.]*' | tr '\n' ':' | sed 's/:$//'
Print a sorted list of unique directory paths in entire file system that match the pattern '<name_pattern>' in their names,find / -name '<name_pattern>' -type d | sort | uniq
Find all directories under /home/username/public_html/themes and set their permission to 750,find /home/username/public_html/themes -type d -exec chmod 750 {} +
Find all files/directories under 'A' directory tree excluding directory 'A/a' and all of it's contents,"find A \! -path ""A/a/*"" -a \! -path ""A/a"""
"Search the home directory tree for .tar.gz files newer than file ""filename""",find ~/ -name *.tar.gz -newer filename
Rename all *.html files under and below the current directory to *.var,find -name '*.html' -print0 | xargs -0 rename 's/\.html$/.var/'
"search for the file ""process.txt"" in the entire file system","find / -name ""process.txt"""
"Search directory trees /tmp and /var/tmp for ""testfile.txt""","find /tmp /var/tmp -iname ""testfile.txt"""
display all the files in the current folder excluding the files with the name mmm,find . -name mmm -prune -o -print
display all the ip addresses in all the files that are present in /etc folder,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n' | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
"find all normal/regular files in the folder ""//path/to/source/Directory"" and calculate the md5sum of them and save the output to  file Output.txt",find //path/to/source/Directory -type f -exec md5sum {} + | awk '{print $0}' > Output.txt
Find all files in the current directory tree that are newer than some_file,find . -newer some_file
find files with pattern` '*.h' and print comparison between file and /tmp/master directory,find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'
"Find all files/directories under current directory excluding the paths that match the POSIX extended regex "".*def/incoming.*|.*456/incoming.*""","find . -regex-type posix-extended -regex "".*def/incoming.*|.*456/incoming.*"" -prune -o -print"
"find all the text files in the current folder expect those which are in the path ""sk""","find . -path ""./sk"" -prune -o -name ""*.txt"" -print"
display all files in the current folder after pruning those in the current folder,find . -prune -print
search for a word in all the files in the entire filesystem and display the matched fline along with the file name,find / -type f -exec grep -Hi 'the brown dog' {} +
"Find all directories under /home/me/""$d""","find /home/me/""$d"" -type d"
"Change all files in the current directory tree to owner ""xx""",find . \
Find all regular files under current directory,find . -type f
"Search file /etc/logs/Server.log for lines containing ""Error""",find /etc/logs/Server.log -exec grep Error {} \; -print
"Find all regular files in the ""aaa"" directory",find aaa/ -maxdepth 1 -type f
"List the current directory recursively ignoring the ""dir1"" subdirectory's content",find . -print -name dir -prune
Find all PHP files under current directory that contain only one line,find . -type f -name '*.php' -exec grep -Hcm2 $ {} + | sed -n '/:1$/{s///;p}'
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents,find /data/SpoolIn -name job.history -exec grep -l FAIL {} \; | wc -l
Search the /dir directory tree for files whose names match regular expression '.*2015.*\(album.*\|picture.*\)',find /dir -regex '.*2015.*\(album.*\|picture.*\)'
Find all files in current directory and execute command1 and command2 for each file,find . -type f \
"delete all the files ending with ""~"" in current folder",find -name '*~' -print0 | xargs -0 rm
Print the list of the subdirectories of /path/to/dir,find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d
Find files/directories that are owned by the user 'syslog' in entire filesystem,find / -user syslog
find all the wav files in the current folder and do not search in the sub directories,find . -name '*.wav' -maxdepth 1
Find all *.ogg files on the system ignoring the case,find / -iname '*.ogg'
"Remove all files and directories called ""test"" from the current directory tree",find . -name test -delete
search for text files in the current folder which do not have write access to others,"find . -type f \( -iname ""*.txt"" -not -perm -o=w \)"
display all the text files in current folder,"find . -name ""*.txt"""
find all the files in the file system which have read permission to the user and display the ten files,find / -perm /u=r | head
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago,find / -newerct '1 minute ago' -print
"Find all *.txt files under the current directory whose names are not ""File.txt""",find . -maxdepth 1 -type f -regex '.*\.txt' -not -name File.txt
"Search directories /opt, /usr, /var for regular file foo",find /opt /usr /var -name foo -type f
compress all the non-compressed  files in the current directory.,"find . \! -name ""*.Z"" -exec compress -f {} \;"
find all the file that have been modified exactly 3 days ago,find ./ -daystart -mtime -3
Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.,find *-name hi.dat
"display all the users in the current folder that belong to the group ""sunk""",find . -type f -group sunk
Find all regular files with name pattern $filename under $fileloc directory tree,"find ""$fileloc"" -type f -prune -name ""$filename"" -print"
"Dry run making directories in ""/TARGET_FOLDER_ROOT/"" for each "".mov"" file in the current directory tree","find . -type f -iname \*.mov -printf '%h\n' | sort | uniq | xargs -n 1 -d '\n' -I '{}' echo mkdir -vp ""/TARGET_FOLDER_ROOT/{}"""
display all the details of empty files in current folder,find . -size 0 -printf '%M %n %u %g %s %Tb\n \b%Td %Tk:%TM %p\n'
Get the total size of all files under dir1 directory,"find dir1 ! -type d -printf ""%s\n"" | awk '{sum += $1} END{print sum}'"
"Make directories as needed in ""dest"" for every directory found under ""src/""",find src/ -type d -exec mkdir -p dest/{} \;
Find all HTML files starting with letter 'a' in the current directory and below,find . -name a\*.html
"List all *.jar files/directories under /usr, /home and /tmp directory","find /usr /home  /tmp -name ""*.jar"""
"Find all directories and for each of them, print an mv command to move it to /new/location",find . -type d   -execdir echo /bin/mv {} /new/location \;
Find all the SGID files in the current directory tree,find . -perm /g+s
"Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name",find . -type f ! \ -exec gzip -n '{}' \;
Find directories modified in last 7 days,find . -mtime -7 -type d
display all the text files in the current folder which have been modified in the last half minute,find . -mmin 0.5
Search the current directory tree for regular files that were modified $FTIME days ago,find . -type f -mtime $FTIME
Print out ln commands for each file in /home/folder1/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names,"find /home/folder1/*.txt -type f | awk -F '.txt' '{printf ""ln -s %s %s_CUSTOM_TEXT.txt\n"", $0, $1}'"
search for a cpp directory in current folder and display all its files,"find . -type d -name ""cpp"" -exec find {} -type f \;"
"Search the .c files residing in the Lib/ directory tree for lines beginning with ""PyErr""",find Lib/ -name '*.c' -print0 | xargs -0 grep ^PyErr
"Remove all files and directories under '/home/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'",find /home/foo \ -exec rm -rf {} \;
"Copy all files in ""/var/spool/mail"" to ""/home/username/mail"" preserving the directory hierarchy and modification times",find /var/spool/mail -type f | cpio -pvdmB /home/username/mail
"Find all files throughout the entire file hierarchy with the optional constraints of опция_поиска, значение and/or опция_действия.",find / [опция_поиска] [значение] 	[опция_действия]
find all the swap files (files ending with ~) in the current folder and delete them,"find . -name ""*~"" -delete"
use regex with find command,"find . * | grep -P ""[a-f0-9\-]{36}\.jpg"""
Find all files in /dir1 and print only the filenames (not paths),"find /dir1 -type f -printf ""%f\n"""
"Replace the occurrences of ""HOGE"" with ""MOGA"" once per each line of the .yaml files from the current directory tree","find . -type f -name ""*.yaml"" -print0 | xargs -0 sed -i -e ""s/HOGE/MOGA/"""
"show all directories in the current folder excluding those that are present only in the paths ./media, ./images and ./backups",find . -path './media' -prune -o -path './images' -prune -o -path './backups' -prune -o -print
"display all the files in the current folder except those whose name is ""PERSONAL""",find . -name PERSONAL -prune -o -print
Find all filename.* files/directories under /root/directory/to/search,find /root/directory/to/search -name 'filename.*'
Find all directories in the /data1/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago,find /data1/realtime -mmin -60 -mmin +5 -type d
Find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores,"find /tmp/ -depth -name ""* *"" -execdir rename 's/ /_/g' ""{}"" \;"
Delete all empty subdirectories in and below directory/,find directory -mindepth 1 -type d -empty -delete
"Find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names",find /basedir/ \( -iname '*company*' -and \ \) -print0
find regular files under the current directory and execute an md5sum command on each one,find -type f -exec md5sum {} +
Find all files/directories under '/usr/local' containing 'blast'  in their names,"find /usr/local -iname ""*blast*"""
Find all files in current directory excluding hidden files and put the output into full_backup_dir variable,full_backup_dir=$(find . -depth '(' -wholename './.*' ')' -prune -o -print)
"List all .c and .h files in the current directory tree that contain ""thing""",find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing
"Search the ""test1"" directory recursively for regular files named ""textfile.txt""",find test1 -type f -name 'textfile.txt' -print
"find in the file system for the directories with the name ""httpdocs"" discard all the errors",find / -type d -name httpdocs 2> /dev/null
Find writable regular files omitting those that contain sites/default/files in their names,find . -type f -writable | grep -v sites/default/files
display all files which have been modified between two dates in current folder,"find . -type f -newermt ""2014-01-01"" ! -newermt ""2014-06-01"""
Find all *shp* files/directories under current directory and move them to ../shp_all/,"find . -name ""*shp*"" -exec mv {} ../shp_all/ \;"
Search /root/directory/to/search recursively for the files matching pattern 'filename.*',find /root/directory/to/search -name 'filename.*'
The  command runs all the directories (-type d) found in the $LOGDIR directory wherein a file's data has been modified within the last 24 hours (-mtime +0) and compresses them (compress -r {}) to save disk space.,find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
Search the current directory tree for all .java files that were last modified at least 7 days ago,find . -name '*.java' -mtime +7 -print
remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names,"find -name ""*.txt"" -print0 | xargs -0 rm"
"Print the list of files from the ""/zu/durchsuchender/Ordner"" directory tree whose names begin with ""beispieldatei"" and which contain string ""Beispielinhalt""","find ""/zu/durchsuchender/Ordner"" -name ""beispieldatei*"" -print0 | xargs -0 grep -l ""Beispielinhalt"""
"find all the xml files in current folder and which are present in the pattern list file ""/tmp/a""","find . -name ""*.xml"" -exec grep -HFf /tmp/a {} \;"
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir,find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +
"Move all directories in the current directory tree that have been modified in the last day to ""/path/to/target-dir""",find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir
Find all files under current directory and search for 'something' in those files,find . -exec grep something {} +
Search the /myfiles directory tree for regular files with at least these permissions: 647,find /myfiles -type f -perm -647
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar,"find . -name '*FoooBar*' | sed 's/.*/""&""/' | xargs cp ~/foo/bar"
Find regular files modified within the last 7 days,find . -mtime -7 -type f
Find files with 002 permission in entire file system with the null character as the delimiter,find / -type f -perm -002 -print0
Execute Shell script with find comamnd,"find -maxdepth 0 -name ""*.sh""  -exec ./lastline.sh {} \;"
Find all regular *.css files,"find . -type f -name ""*.css"""
"Find regular files matching pattern ""*oraenv*"" and excecute the ""file"" utility for each of them","find . -name ""*oraenv*"" -type f -exec file {} \;"
display all the files in the file system which belong to the group lighttpd,find / -group lighttpd -print
Removes all empty folders that ends with any-cased '*.bak' under '/Users/' path.,find /Users -type d -iname '*.bak' -print0 | xargs -0 rmdir
find all files in the current folder which are of size 0 bytes.,find . -type f -size 0b
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way,find -d MyApp.app -name Headers -type d -exec rm -rf {} +
Find the password file between sub-directory level 2 and 4.,find -mindepth 3 -maxdepth 5 -name passw
Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex expanded by the variable $i and show the output by paging through one screenful at a time,find . -name '*.[ch]' -exec grep $i {} | less
display all the html files in the current folder that have been modified exactly 7*24 hours ago,"find . -mtime 7 -name ""*.html"" -print"
"display all the trace files ("".trc"") from the folder $DBA/$ORACLE_SID/bdump/ which have not been accessed in the last 7*24 hours",find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7
Find all directories under current directory excluding  directories  that start with a .  in their names,find . -type d -a ! -name '.?*' -o -name '.?*' -a ! -prune
Find all identical files in the HOME directory and subdirectories and tell if there are hard links,find $HOME -type f | samefile -r
"List all files/directories under current directory matching the posix-egrep type regex "".+\.(c|cpp|h)$"" in their names","find . -regextype posix-egrep -regex "".+\.(c|cpp|h)$"" | xargs -n 1 ls"
Delete all in the current directory tree,find . -delete
Find all files/directories under 'A' directory tree excluding directory 'A/a' and all of it's contents,"find A \! -path ""A/a/*"" -a \! -path ""A/a"""
"Force create a hard link in ""/usr/local/bin"" to ""findpdftext""","sudo ln -f ""findpdftext"" /usr/local/bin"
show all the files in the entire file system which are bigger than 100MB,find / -size +100M
Search the current directory tree for files and directories with permissions 775,find .  -perm 775 -print
"Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one.",find ~/ -atime +100 -exec rm -i {} \;
search for a word in all the fies in the current folder,find . -type f -exec grep some_string {} \;
Find all broken symlinks under current directory,find . -xtype l
Clean directories and subdirectories of the temporary files generated during normal use,find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
change permission of all the files in the entire file system which have permissions 777.,find / -type f -perm 0777 -print -exec chmod 644 {} \;
"find all the files in the folder ""/u/bill"" which have been accessed in the last 2-6 minutes",find /u/bill -amin +2 -amin -6
search for all the mp3 files in the folder /home/you which have been accessed 24 ago,find /home/you -iname “*.mp3” -atime 01 -type -f
"find all jpg images starting with image in the folder ""dir"" and give them as input to the script, script.ksh",find dir -name image\*.jpg -exec /bin/ksh script.ksh {} \;
"Change permissions to u=rwx,g=rx,o= for all directories in the current directory tree","find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;"
find all the files in the entire file system that start with top,find / -name 'top*'
Find all *.java files under current directory containing the string 'String',"find . -name ""*.java"" -exec grep ""String"" {} \+"
search for all the files which have not been modified in the last 6 months  in current folder and display the disk usage of them,find . -mtime +180 -exec du -sh {} \;
Locate all *.txt files in the current directory tree,find . -name '*.txt
Find files with SGID  and SUID permssions set in the file system,find /  \ -ls
"force delete all the regular files with the name ""test.txt""",find /home -type f -name test.txt -exec rm -f {} \
Find all files/directories named 'document' in maximum 4 levels down the '/usr' directory,find /usr -maxdepth 4 -name document -print
list all CSS files under the current directory,"find . -type f -name ""*.css"""
List detailed information about all Jar files in the current directory tree,"find . -iname ""*.jar"" | xargs zipinfo"
Delete all files in the /myDir directory tree that were last modfied more than 7 days ago,find /myDir -mindepth 1 -mtime +7 -delete
Find all files/directories containing 'foo' in their names under current directory tree,find . -name '*foo*'
find all the files that have been modified exactly 1 day ago,find -mtime 1
delete all the files in the current folder which have been modified in the last 14*24 hours,find . -mtime -14 -print|xargs -i rm \;
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time,"find / -type f -name ""*"" -newermt ""$newerthan"" ! -newermt ""$olderthan"" -ls"
display all text files in the current folder,"find . -type f -name ""*.txt"""
display all the files in the current folder,find . | xargs echo
find all the files in the file system which have not been modified in the last 100*24 hours,find / -mtime +100 -print
Run an awk program on every TXT file found in the current directory tree,"find . -name ""*.txt"" -print -exec awk '$9 != """" && n < 10 {print; n++}' {} \;"
Count the number of all directories under current directory non-recursively,find . -mindepth 1 -maxdepth 1 -type d | wc -l
"Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command","find -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}' | mysql -D ootp"
List and sort all leaf directories (directories which don't contain any sub-directory) under current directory,"find . -type d | sort | awk '$0 !~ last ""/"" {print last} {last=$0} END {print last}'"
Find all regular files under current directory tree that match the regex 'tgt/etc/*' in their paths,"find . -type f -name \* | grep ""tgt/etc/*"""
Find files on the system accessed during the last 24 hours but not within the last hour,find / -atime -1 -amin +60
"Find all directories named ""D"" in the ""A"" directory tree",find A -type d -name 'D'
List all *.txt files/directories under current directory ensuring white space safety,find . -name '*.txt' -print0|xargs -0 -n 1 echo
Find files under /tmp that are larger than 10KB and smaller than 20KB,find /tmp -size +10k -size -20k
List all *.txt files/directories under /etc,"ls -l $(find /etc -name ""*.txt"" )"
Find all files under /path/to/dir and change their permission to 644,find /path/to/dir -type f -exec chmod 644 {} +
Find all files on smbfs mounts and print its information and file type,find $ -mount -type f -ls -execdir file {} \;
Find all empty files under /tmp,find /tmp -type f -empty
List all *jsp and *java regular files found in the current directory tree,find . \( -name '*jsp' -o -name '*java' \) -type f -ls
Print the filenames taken by the glob pattern * with null character as the delimiter,find * -maxdepth 0 -type d -print0
Find all files/directories under current directory tree that contain '1' or 'k' in their names,"find . -name ""*[1k]*"""
Find all files that belong to user root,find / -user root
Do a dry run of renaming file extension '.andnav' to '.tile' for all files/directories under current directory tree,"find . -name ""*.andnav"" | rename -vn ""s/\.andnav$/.tile/"""
"Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty.",find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
"Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to ""compressedP.list"", and compress each file in parallel",find . -type f  -mtime +7 | tee compressedP.list | parallel compress
Check if directory $some_dir is empty,"find ""`echo ""$some_dir""`"" -maxdepth 0 -empty"
Find all *.jpg files under current directory and print only unique names,find . -name \*.jpg -exec basename {} \; | uniq -u
Find all PHP files in the current directory recursively,find . -name \*.php -type f
Find blabla* files under current directory,"find . -depth -name ""blabla*"" -type f | xargs rm -f"
Find the largest files in a particular location,"find /home/tecmint/Downloads/ -type f -printf ""%s %p\n"" | sort -rn | head -n 5"
Print 'cp' commands that would copy a file xyz.c to all the files with '.c' extension present in the ./C directory and below,"find ./C -name ""*.c"" | xargs -n1  echo cp xyz.c"
Find all files under /home/myfolder that match the regex 'abc.*def.*ghi' in their contents,find /home/myfolder -type f -print0 | xargs -0 grep -l -E 'abc.*def.*ghi'
Find all symbolic links in the current directory tree,find -type l
remove all the pdf files in the current folder and do not delete those in the sub folders,"find . -name ""*.pdf"" -maxdepth 1 -print0 | xargs -0 rm"
display all text files in current folder,"find . -name ""*.txt"""
"Find all directories named ""D"" in the current directory tree",find ./ -type d -name 'D'
Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago,find $backup_path/* -mtime +30 -exec rm {} \;
Find all text files in the home directory,find ~/ -name '*.txt'
find all symbolic links in the current folder,find -type l
Find all files/directories in current directory and execute multiple commands  for each file/directory,find . -exec bash -c 'cmd1; cmd2' filedumper {} \;
"Remove sequence like '\xEF\xBB\xBF' from first string of every file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.",find . -type f -exec sed '1s/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
Find files newer than main.css in ~/src,find ~/src -newer main.css
Compute the mean average of the word count of *.txt files smaller than 2000 words in the home directory,find ~/Journalism  -name '*.txt' -print0 | xargs -0 wc -w | awk '$1 < 2000 {v += $1; c++} END {print v/c}'
find all files in the current folder that are modified exactly 1 minute ago,find -mmin 1 -print
"Remove all directories called ""test"" from the /path/to/dir directory tree","find /path/to/dir -name ""test"" -type d -delete"
find the file arrow.jpg in the entire file system,find / -name arrow.jpg
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found,"find var/log/ -iname ""anaconda.*"" -exec tar -rvf file.tar {} \;"
Print the full path of a file under the current working directory with inode number specified on standard input,"xargs -n 1 -I '{}' find ""$(pwd)"" -type f -inum '{}' -print"
List all files under the current working directory last modified less than a day ago,find `pwd` -mtime -1 -type f -print
find all the files that have been modified in the last 1 day,find . -type f -daystart -mtime -1
"Add ""Line of text here"" on top of each *.py files under current directory",find . -name \*.py | xargs sed -i '1a Line of text here'
Rename file with inode number 31467125 to new_name.html,find . -type f -inum 31467125 -exec /bin/mv {} new_name.html \;
"List all files named ""filename"" from the current directory tree, ignoring directory ""FOLDER1""",find . -name FOLDER1 -prune -o -name filename -print
move all the files in the current folder  to temp folder and search atleast in one subfolder,find . -mindepth 1 -exec mv -t /tmp {} +
Find all files/directories case insensitively containing 'xt' in their names under '/etc' directory tree,find /etc -iregex '.*xt.*'
find all the files that have been modified in the last 60 minutes,find -mmin -60
display the contents of all the regular/normal files in the entire file system with the name dummy and discard all the errors and save the output to the files tesst.txt,find / -type f -name dummy 2>/dev/null -exec cat {} \; >tesst.txt
"search for the regular/normal file ""Dateiname"" in the entire file system","find / -type f -iname ""Dateiname"""
Delete all files/directories under current directory tree excluding '.gitignore' files/directories and files/directories matching the patterns '.git' or '.git/*' in their paths,find . ! -name '.gitignore' ! -path '.git' ! -path '.git/*' -exec rm -rf {} \;
"Search the current directory recursively for files containing ""needle text""","find . -type f -print0 | xargs -0 grep -I ""needle text"""
Find all regular files under ./Desktop directory,find ./Desktop -type f
Find files/directories named 'document' in 'ext2' partitions in entire filesystem,find / -fstype ext2 -name document -print
Find all 50MB files,find / -size 50M
find all jar files in current folder and search for a file in all these jar's and display the jar names along with searched file,"find . -name ""*.jar"" -print -exec jar -tf {} \;|egrep  ""jar$|message_track.properties"""
Find all *.m4a files/directories under /home/family/Music directory,find /home/family/Music -name '*.m4a' -print0
Show the list of files modified more than 31 days ago,find / -mtime +31 -print
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 day ago,find . -maxdepth 1 -ctime +1 -name file
"search for the word ""foo"" in all the regular/normal files in the directory ""/path/to/dir""","find /path/to/dir -type f -print0 | xargs -0 grep -l ""foo"""
Find all files/directories greater than 100MB and print their list along with their size in /root/big.txt file,find \
"Find all files in the current directory tree ignoring the "".git"" directory",find . -type d -name '.git*' -prune -o -type f -print
list any files modified since /bin/sh was last modified,find . -newer /bin/sh
Remove all files/directories in the current directory without '.git' and '.gitignore',find -mindepth 1 -depth -print0 | grep -vEzZ '(\.git(/|$)|/\.gitignore$)' | xargs -0 rm -rvf
Find all regular files starting from the current directory,find . -type f
Find all *.mp4 files under /foo/bar and move them to /some/path,find /foo/bar -name '*.mp4' -print0 | xargs -I{} -0 mv -t /some/path {}
Exclude directory from find . command,"find -name ""*.js"" -not -path ""./directory/*"""
list the regular files in your home directory that were modified yesterday,find ~/ -daystart -type f -mtime 1
display all the files in the home folder which have not been modified in the last 365*24 hours,find $HOME -mtime +365
"Find the ""param1"" string in regular files under and below /var","find /var  -type f -exec grep ""param1"" {} \; -print"
"find all the files that have the word ""fstab"" in their name in a folder",find /etc -name *fstab*
find all files in the current folder that are modified exactly 2 minutes ago,find -mmin 2 -print
Delete all hard links to the physical file with inode number 2655341,find /home -xdev -inum 2655341 | xargs rm
"Calculate the SHA1 sum for the contents of the path/to/folder directory tree, including permissions",find path/to/folder -type f -print0  | sort -z | xargs -0 sha1sum; find path/to/folder \ -print0 | sort -z | xargs -0 stat -c '%n %a' | sha1sum
Backup all PHP files under the current directory tree,"find -name ""*.php"" –exec cp {} {}.bak \;"
Remove files matching pattern '*-*x*.*' from the current directory tree,find  -name '*-*x*.*' | xargs rm -f
Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names,find . -mindepth 1 -name '.*' -prune -o \( -type d -print \)
find files which full path name like '*/*config' at current directory and print,find .  -path '*/*config'
sort based on size and display top ten small normal/regular files in the current folder,find . -type f -exec ls -s {} \; | sort -n | head -10
Remove all files from the current directory tree whose names contain whitespaces,"find . -name ""* *"" -exec rm -f {} \;"
"Execute ""${MD5}"" on all files found under ""${1}"", numerically sort the results, and save to variable ""DATA""","DATA=$( find ""${1}"" -type f -exec ${MD5} {} ';' | sort -n )"
"Find *.txt files in the current directory tree, ignoring paths ./Movies/*, ./Downloads/*, and ./Music/*","find . -type f -name ""*.txt"" ! -path ""./Movies/*"" ! -path ""./Downloads/*"" ! -path ""./Music/*"""
Find all files in the /myfiles directory tree following symbolic links,find -L /myfiles
find all the files in the current folder which are writable,find . -writable
Print all filenames under /proc and below,find /proc | xargs
"Find the directories whose names contain ""New Parts"" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views","find -mindepth 3 -maxdepth 3 -type d -name ""*New Parts*"" -exec ln -s -t /cygdrive/c/Views {} \;"
"Recursively search for all files with names ending with ""_test.rb"", renaming them to end with ""_spec.rb"", using at most 4 concurrent processes.","find . -name ""*_test.rb"" | xargs -P 4 rename s/_test/_spec/"
"Find all regular files in the the user's home/mail directory and search for the word ""Linux"".","find ~/mail -type f | xargs grep ""Linux"""
"Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.",find . -mindepth 1 -maxdepth 1 -type d| grep \/a |xargs -n 1 cp -i index.html
Find all files in the current directory tree whose names begin with '-',find . -name '[-]*'
"Search the specified user for the given ""filename""","find / -user pat -iname ""filename"""
Find all files/directories under '/usr/local/games' directory tree that contain the string 'xpilot' in their names,"find /usr/local/games -name ""*xpilot*"""
"search for the word ""foo"" in all the regular/normal files with the name ""file-pattern"" in the directory ""/path/to/dir""","find /path/to/dir/ -type f -name ""file-pattern"" -print0 | xargs -I {} -0 grep -l ""foo"" ""{}"""
find all the files in the file system which are bigger than 3 bytes,find / -size +3 -print
Recursively prints .txt files in current directory,find $(pwd) -name \*.txt -print
Delete the text matched by the regex '<script>if(window.*<\/script>' in all index.html files under current directory,find index.html | xargs -rt sed -i 's/<script>if(window.*<\/script>//g'
Find all files/directories under current directory tree excluding hidden files/directories,find . -not -path '*/\.*'
Print a NULL-separated list of all directories of the current directory tree,find . -type d -print0
Rename all *.jpg files to *_MED.jpg files under temp/medium directory,"find temp/medium -iname ""*.jpg"" -printf 'mv %p %p\n' | sed 's/\.jpg$/_MED\.jpg/' | while read l; do eval $l; done"
"Find all files/directories with '.tar.gz' extension under $DIR/tmp/daily/ directory tree, sort them numerically and show the last 3 of them",find $DIR/tmp/daily/ -name '*.tar.gz' | sort -n | tail -3
find all files in home folder which have been modified exactly 1 day before,find ~ -mtime 1 -daystart
"Unzip every "".gz"" file in the current directory tree",find . -name '*.gz' -exec gunzip '{}' \;
Print the list of files in the current directory tree skipping Git files,find . -path './.git' -prune -o -type f
list all files under .performance_test directory except .performance_test/prune_me directory,"find "".performance_test"" -not \ -exec bash -c 'echo ""$0""' {} \;"
"find all the files ending with ""rb"" and display the first 10000 lines from these files.","find . -name ""*rb"" -print0 | xargs -0 head -10000"
find all the files in the current folder which have been modified in the 10 minutes ago,find -mmin +15 -mmin -25
"Change all files with no user under ""/var/www"" to have owner ""root"" and group ""apache""",sudo find /var/www -nouser -exec chown root:apache {} \;
"Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found",find /var/log/crashes -name app-\*\.log -mmin -5 -print | head -n 1
Display the files/directories under current directory tree matching the regex '/$prefix$ypatt' where $prefix and $ypatt expands in the current shell,"find . -print | grep ""/${prefix}${ypatt}"""
Search the entire system for SUID or SGID files,find / -path /proc -prune -o -type f -perm +6000 -ls
find all files in the current folder which are of size 0 bytes.,find . -type f -empty
change cgi files to mode 755 under htdocs or cgi-bin directories,"find htdocs cgi-bin -name ""*.cgi"" -type f -exec chmod 755 {} \;"
find all the files in the current directory and print them excluding those that have the name SCCS.,find . -print -o -name SCCS -prune
Find all the files recursively in directories or files taken from the glob pattern /tmp/test/* that have been modified today,find /tmp/test/* -mtime -0
Find all regular files in the current directory tree ignoring GIT and SVN directories,find . \( -type d -regex '^.*/\.\$' -prune -false \) -o -type f -print0
search for mp3 files in the folder /mp3collection which are smaller than 5MB,find /mp3collection -name '*.mp3' -size -5000k
Change the permissions of every directory in the current directory and all files and directories within them to 700,find . -maxdepth 1 -type d -exec chmod -R 700 {} \;
"find the file ""dateiname"" in the entire file system","find / -iname ""Dateiname"""
"find all the text files in the current folder starting with ""somefiles-""","find . -name ""somefiles-*-.txt"" -type f"
Print all files on the system owned by group `name_of_group',find / -group name_of_group
Look for SUID files and directories,find / -perm +4000
Search for 'keyword' in all javascript files under current directory tree excluding all paths that includes the directory 'node_modules',"find ./ -not -path ""*/node_modules/*"" -name ""*.js"" | xargs grep keyword"
"find all the files ending with "".sh"" in the folder /dir excluding those wth the names foo and bar.","find /dir \ -o \ -o -name ""*.sh"" -print"
"Find all files whose names end with ""macs"" in and below the current directory",find -name '*macs'
"Recursively finds all files and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.",find ./ -type f -exec grep -H 'text-to-find-here' {} \;
"Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths","find . -type f -ctime -3 -printf ""%C@ %p\n"" | sort | tail -n 5 | sed 's/[^ ]* \(.*\)/\1/'"
"display all the file in the folder /home/david/ which start with the word ""index""",find /home/david -iname 'index*'
list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.,find $HOME -type f -atime +30 -size 100k
display a long list of all the files that are bigger than 10KB in current folder,find . -size +10k -exec ls -l {} \;
Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory,find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'
Search for files that are at least 100MB,find / -size +100M
Print the names of all regular files in the current directory tree,find . -type f -exec echo {} \;
using exec in find command to dispaly the searched files,find . ... -exec cat {} \; -exec echo \;
Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files,"find ${x} -type f -exec chmod ug=rw,o= '{}' \;"
"search for all the files in the current directory which belong to the user ""xuser1"" and change the owner ship of them to ""user2""",find . -user xuser1 -exec chown -R user2 {} \;
Find all /path/to/check/* regular files without descending into any directory,find /path/to/check/* -maxdepth 0 -type f
find all files that belong to root user,find . -uid 0 -print
Find all files/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago,"find . -name ""R*VER"" -mtime +1"
delete all the files in the current folder,find . -print0 | xargs -0 rm
find all the files in the file system which have read permission to the user and display the ten files,find / -perm /u=r | head
"Print the list of regular files from the current directory that were last modified on November, 22","find . -maxdepth 1 -type f -newermt ""Nov 22"" \! -newermt ""Nov 23"" -exec echo {} +"
"find all normal/regular files in the folder /some/dir and save the output to the file ""somefile""",find /some/dir/ -type f > somefile
Find all directories named '.texturedata' under '/path/to/look/in/' directory tree,find /path/to/look/in/ -type d -name '.texturedata'
find all the files that are modified exactly one day ago,find -daystart -mtime 1
"Find all directories in the current one recursively which have the write bit set for ""other""",find . -type d -perm -o=w
Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]',find /dev/sd*[a-z] -printf . | wc -c
Prints last modified file in a current folder with modification time.,find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'| sort -n | tail -n1
"display the html, javascript and text files in the current folder","find . -type f \ -exec sh -c 'echo ""$0""' {} \;"
get the count of all the files that have been accessed in the last 30 days,find . -atime +30 -exec ls \; | wc -l
Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last :,find ~/code -type d -name '[^\.]*' | tr '\n' ':' | sed 's/:$//'
Find all .txt files under the current directory and below,find . -name '*.txt' -print0
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files and count the number of lines in the output,"find .  -type f -name ""CDC*"" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \ | wc -l"
"Look in the current directory and below for all files whose names begin with either ""my"" or ""qu""",find . \ -print
Find regular files in the current directory tree that have all executable bits set,find -L . -type f -perm -a=x
"Find directory ""/some/dir"" if it is empty",find /some/dir/ -maxdepth 0 -empty
find all the html files in current folder and replace old string with new string,perl -p -i -e 's/oldstring/newstring/g' `find ./ -name *.html`
"Search the current directory tree for regular files whose names end in "".shtml"" or "".css""",find . -type f \
Copies file 'index.html' to each top-level directory in the current directory.,find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html
Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory,find /path/to/folders/* -type d -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \;
List all regular files in /var/www and below that have changed in the last 10 minutes,"find /var/www -cmin -10 -type f -printf ""%c %pn"""
Find files and directories with group id 1003,find . -gid 1003
"Search for ""vid=123"" in all compressed files found under ""/my_home"" matching ""*log.20140226*""",zcat `find /my_home -name '*log.20140226*'`|grep 'vid=123'
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -mtime +$DAYS_TO_SAVE -exec bash -c 'printf ""Total: %d\n"" $#; rm ""$@""' _ {} +"
"Copy all files unconditionally and directories in directory tree ""myfiles"" to ""target-dir"" preserving directory hierarchy and modification time",find myfiles | cpio -pmud target-dir
"display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name ""Metallica""",find /mp3-collection -name 'Metallica*' -or -size +10000k
Count the number of characters in the list of regular files from the current directory tree,find . -type f | xargs | wc -c
Find all files/directories under current directory tree that contain '1' or 'k' in their names,"find . -name ""*[1k]*"""
"Find all .sql files in the current directory recursively and apply script ""scriptname"" to them",find . -name '*.sql' -exec scriptname {} +
Search the current directory tree for regular .mkv files,"find . -type f -name ""*.mkv"""
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT},"find ${INPUT}/ -name ""*.pdf"" -exec mv '{}' '{}'.marker ${OUTPUT} \;"
List all files/directories under current directory ensuring white space safety,find -print0 | xargs --null
"display all the files and directories with the name ""CVS""  from /usr/src folder that are at least seven levels deep and do not descend onto the folders",find /usr/src -name CVS -prune -o -depth +6 -print
"List all files in the current directory tree that were last modified between ""mar 03, 2010 09:00"" and ""mar 11, 2010""","find -newermt ""mar 03, 2010 09:00"" -not -newermt ""mar 11, 2010"" -ls"
"Search the current directory tree for directories lacking execute permissions for user, group, or others",find . -type d ! -perm -111
Exclude directory from find . command,find ./ -path ./beta/* -prune -o -iname example.com -print
"Copy a file xyz.c to all the directories below the current one whose names begin with ""temp""","find . -type d -name ""temp*"" | xargs -n1 cp xyz.c"
find all files with pattern` '*.mp3',find / -name *.mp3
Find all files and directories under current directory without crossing over to other partitions and archive them into path_to_save.cpio.gz,find . -xdev -print0 | cpio -oa0V | gzip > path_to_save.cpio.gz
Copy all files that match 'FooBar' in their paths under current directory tree to the '~/foo/bar' directory,"find . | grep ""FooBar"" | tr \\n \\0 | xargs -0 -I{} cp ""{}"" ~/foo/bar"
"find all case-insensitive php or pthml files, which whole path does not contain /some/directory case-insensitivily , and excute xgettext which whole name as   parameter",find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext
rename all the text files  in the current folder to html files,"find -name ""*.txt"" -exec mv {} `basename {} .htm`.html \;"
find httpd.conf file in /etc directory,"find /etc -name ""httpd.conf"""
Find all xml files under current directory and archive them to .bz2 archives,"for i in `find . | grep "".xml$""`; do bzip2 $i; done"
Find all files under  current directory and rename them by replacing all white spaces with _,"find ./ -name ""* *"" -type f -d 1 | perl -ple '$file = $_; $file =~ s/\s+/_/g; rename;'"
Search /usr/local for subdirectories whose names end with a number 0-9,find /usr/local -maxdepth 1 -type d -name '*[0-9]'
"Find all regular files in the the user's home/mail directory and search for the word ""Linux"".","find ~/mail -type f | xargs grep ""Linux"""
update the permission of all the php files in current directory and save the output to a file,find . -name '*.php' -exec chmod 755 {} \; > logfile.txt
search for a pattern in all the python files in the current folder. and save the output to output.txt file. print0 is used to handle files with newlines in their names,find . -name '*.py' -print0 | xargs -0 grep 'something' > output.txt
"Search the ~/Books directory recursively for files named ""Waldo""",find ~/Books -name Waldo
Find all pdf files excluding *_signed.pdf files under /some/dir with null character as the delimiter,"find /some/dir -name ""*.pdf"" ! -name ""*_signed.pdf"" -print0"
"Find all ""YourProgramName"" regular files in the current directory tree and print the full paths to the directories containing them",find . -type f -name YourProgramName -execdir pwd \;
"Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths","find . -type f -ctime -3 -printf ""%C@ %p\n"" | sort | tail -n 5 | sed 's/[^ ]* \/\1/'"
"find all files under the current directory that end in ""foo"" and execute somecommand on each quoted filename","find . -name ""*.foo"" -exec somecommand ""{}"" \;"
Find all broken symlinks under /path/to/search directory,find /path/to/search -xtype l
find all the files in the current folder which do not have the execute permission,find . -type d ! -perm -111
Find all *.zip files under current directory and unzip them in the same directory as the files,find . -name '*.zip' -exec sh -c 'unzip -d `dirname {}` {}' ';'
Find all regular files with permissions 777 under and below /home/user/demo/,find /home/user/demo -type f -perm 777 -print
Find all files under current directory that are read less than 1 minute ago,find . -amin -1
"Find command will list of all files & directories from current directory , before listing echo command will display ' List of files & Directory '",find . -exec echo ' List of files & Direcoty'   {} \;
"delete all the files in the current folder which end with "".bak"" or "".backup"" and which have not been accessed in the last 30 days",find .  -type f -atime +30 -exec rm '{}' ;
Create tar.gz files older than one day logs,find /home/testuser/log/ -mtime +1 | xargs  tar -czvPf  /opt/older_log_$(date +%F).tar.gz
"find all the directories with the name ""uploads"" in current folder",find . -type d -name 'uploads'
"search the word ""MySearchStr"" in all the regular/normal files in the current folder and display the line number and the file name",find . -type f -print0 | xargs -0 -e grep -nH -e MySearchStr
find all the mp3 files in the current folder and move them to another folder,"find . -name ""*.mp3"" -exec mv {} ""/Users/sir/Music//iTunes/iTunes Media/Automatically Add to iTunes.localized/"" \;"
"Copies all files like ""*FooBar*"" under the current directory to the '~/foobar' directory.",find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +
Return a list of files newer than file poop,find . -mnewer poop
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2,find . -type d -regextype posix-egrep -regex '\./processor[0-9]*/10\.'
Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory,find {} -name 'upvoter-*' -type f -or -type l -maxdepth 1 -perm +111
Find all *.mov  files under current directory and run an ffmpeg command with the path and the name for each file,"find . -iname ""*.mov"" -printf ""%p %f\n"" | xargs -r -n2 ffmpeg -f flv -i"
Find all the files whose name is tecmint.txt,find . -name tecmint.txt
Change permissions to 755 for all subdirectories of the current directory,"find . -type d -print | sed -e 's/^/""/' -e 's/$/""/' | xargs chmod 755"
"Locate all files in the current directory and below that have ""testfile"" in their names regardless of the case","find -iname ""*TESTFILE*"""
"Finds all the log* files in /myDir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them.",find /myDir -name 'log*' -and -not -name '*.bz2' -ctime +7 -exec bzip2 -zv {} \;
"Find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory","find ""$musicdir"" -type f -print | egrep -i '\.(mp3|aif*|m4p|wav|flac)$'"
"search for the file, filename.txt in the current folder",find . -name filename.txt
"Find all files named ""file.ext"" in the current directory tree and print the path names of the directories they are in",find `pwd` -name file.ext |xargs -l1 dirname
find all the files from root folder which have nogroup or noname and dispaly their details.,find / \( -nogroup -o -noname \) -ls
"Find all *.txt files under current directory, change their permission to 666 and copy them to /dst/ directory",find . -name \*.txt -exec chmod 666 {} \; -exec cp {} /dst/ \;
display all the directories in the current folder excluding those that are present in the folder secret,find . -name secret -type d -prune -o -print
Recursively finds all *.dbf files from the root folder and prints list of folders with such files.,"find / -name ""*.dbf""  -exec dirname {} \; 2> /dev/null | sort -u"
display a long list of all regular/normal files in the file system which belong to the root and with suid bit set,find / -type f -user root -perm -4000 -exec ls -l {} \;
"Search the current directory tree for files whose names do not end in ""1"" and ""2""","find . -type f ! -name ""*1"" ! -name ""*2"" -print"
List the largest file in long list format of all the files under the current directory,find . -type f -ls | sort -nrk7 | head -1 #unformatted
Delete files containing whitespaces without recursion,"find . -name '*[+{;""\\=?~<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;"
Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder,find /path/to/your/directory -regex '.*\.\' -exec cp {} /path/to/specific/folder \;
Find all regular files named 'Waldo' under 'Books' directory tree that is located in user's home directory,find ~/Books -type f -name Waldo
Find all directories under current directory and set their permission to 775,find -type d exec chmod 775 {} +
Find all files in the current directory tree that match pattern 'a(b*',find . -name 'a(b*' -print
find all the files which have the write permission to the group and remove the write permission.,find . -perm -20 -exec chmod g-w {} ;
Find all *.dbf files/directories in entire file system,"find / -name ""*.dbf"""
create a backup of all the files which have been modified in the last 48 hours,find source/directory -ctime -2 | cpio -pvdm /my/dest/directory
Search the system for the file “testfile.txt” ignoring the case,"find / -iname ""testfile.txt"""
Print a list of all files and directories in the /var/log directory tree,find /var/log/
display all the regular/normal files in a folder,find ./subdirectory/ -type f
Delete all files in the /myDir directory tree that were last modfied more than 7 days ago,find /myDir -mindepth 1 -mtime +7 -delete
"Delete files in the DIR directory tree whose names begin with ""2015"" and contain ""album"" or ""picture""",find DIR \( -name 2015\* -a \( -name \*album\* -o -name \*picture\* \) \) -delete
display all files in the current folder which start with met,find -name met*
find for a word in all the regular files in the current directory,find . -type f -exec grep -li '/bin/ksh' {} \;
Move all Emacs backup files from the current directory tree to ~/backups/,find . -name '*~' -print 0 | xargs -0 -I % cp % ~/backups
Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format,"find  / -type d -iname ""project.images"" -ls"
Delete all directories in the /myDir directory tree,find /myDir -type d -delete
Find all directories in the /data1/realtime directory tree that were modified within the last 60 minutes,find /data1/realtime -mmin -60 -type d
find all the html files in the current folder which have been modified exactly 7 days ago,"find . -mtime 7 -name ""*.html"" -print"
search for files starting with memo and which belong to the user ann in the folder /work,find /work -name 'memo*' -user ann -print
"search for a files ""cart1"" in the folder junk which is in home folder and move the folder to ~/junk/A.",find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \;
display all the files in the file system which have been modified in the last 10 minutes,find / -mmin -10
Create a script to monitor system file changes in critical directories and send an alert if any changes are detected.,"#!/bin/bash

critical_dirs=""/etc /var/www""

for dir in $critical_dirs; do
    changes=$(find $dir -cmin -60)
    if [ -n ""$changes"" ]; then
        echo ""File changes detected in directory $dir."" | mail -s ""File Change Alert"" user@example.com
    fi

done"
Find all files/directories named 'file' and print them with null character as the delimiter instead of newline,find -name file -print0
Find all files/directories named orm.properties under current directory,"find . -name ""orm.properties"""
Find files that were modified more than 7 days ago and archive them,find . -type f -mtime +7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
Remove trailing whitespaces in .txt files from the current directory tree,"find . -type f -name ""*.txt"" -exec sh -c 'for i;do sed 's/[[:space:]]*$//' ""$i"">/tmp/.$$ && cat /tmp/.$$ > ""$i"";done' arg0 {} +"
display a long listing of all the files in the current folder that have been accessed in today from the start of the day,find -daystart   -atime 0 -ls
"display all the C files or Python files in the folder ""euler""","find euler/ -iname ""*.c*"" -exec echo {} \; -or -iname ""*.py"" -exec echo {} \;"
"Find all files matching ""abc*"" in the current directory and append ""\tok""",find . -name 'abc*' | sed 's/$/\tok/' | column -t
Count and show the number of lines for each PHP files in the current directory tree,find . -name '*.php' | xargs wc -l
"change the permissions of all the regular/normal files in the folder ""/path/to/someDirectory"" to 644",sudo find /path/to/someDirectory -type f -print0 | xargs -0 sudo chmod 644
Find all files/directories under /export/home/someone directory in a remote host  and upload the files/directories to ftp://somehost/tmp/,"ssh someone@somehost 'cd /export/home/someone && find . -name ""*"" -print| '"
find all files that do not have execute permission to all,find . -type d ! -perm -111
display the count of number of files in the current folder,find | wc -l
"Find all files under the current directory and copy their permissions to the same file in ""../version1""",find . -type f | xargs -I {} chmod --reference {} ../version1/{}
Delete all regular files that have not been modified in the last 60 weeks under $DIR directory tree,find $DIR -type f -mtime +60w -exec rm {} \;
Print the path names of all .png files in the /home/kibab directory tree,find /home/kibab -name '*.png' -exec echo '{}' ';'
Find all files residing in /home/dm/Video or below that were changed less than 7 days ago,find /home/dm/Video -mtime -7
Find all regular files named postgis-2.0.0 under your home directory,"find ~/ -type f -name ""postgis-2.0.0"""
Find all *-* files under current directory,find . -type f -name '*-*'
display all the directories in the current folder,find . -type d -print
display the name and size of all the regular/normal files  in the current folder which are bigger than 50MB,"find . -type f -size +50000k -exec ls -lh {} \; | awk '{ print $9 "": "" $5 }'"
Print all the file/directory paths under current directory,find | xargs
Find all files on smbfs mounts and print its information and file type,find $(mount -t smbfs | awk '{print $3}') -mount -type f -ls -execdir file {} \;
"Find recursively all files that match ""pattern"" starting from the directory ""dir""","find dir -name ""pattern"" 2>/dev/null"
Find all regular files under and below dir/ and change their names from UTF8 to the ASCII/TRANSLIT encoding,find dir/ -type f -exec mv {} $ \;
Remove all .tmp files in and below /tmp,"find /tmp -name ""*.tmp"" | xargs rm"
Remove all tmp/*.mp3 files,find tmp -maxdepth 1 -name *.mp3 -print0 | xargs -0 rm
"Find all files starting from / whose names end with "".rpm"" and change their permissions to 755",find / -name *.rpm -exec chmod 755 '{}' \;
"search for all the files in current folder which start with ""file2015-0"" and move them to another folder","find . -name ""file2015-0*"" -exec mv {} .. \;"
Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file,"find . -type f -name '*.html' -exec sed -i -e '1r common_header' -e '1,/STRING/d' {} \;"
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of the last file found,find var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \;
"Search the current directory tree for *.wav files that have ""export"" in their pathnames","find -type f -name ""*.wav"" | grep export"
search for a file in the current folder and prepend the first line,find ./ -name somename.txt -exec sed -e '1i My new text here` {} \;
find all the files in the current folder which do not belong to any user,find . -nouser -ls
"find all the files ending with "".coffee"" in the current folder and search for the words ""re"" in each line",find . -name \*.coffee -exec grep -m1 -i 're' {} \;
Search the current directory and directories below for .sql files,find . -name \*.sql
Find all or single file called tecmint.txt under the / directory of owner root,find / -user root -name tecmint.txt
delete all text files from current folder,"find . -type f ! -iname ""*.txt"" -delete"
Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree,"find teste2 -type f -iname ""$srchfor""|wc -l"
display all files in the current folder,find . -print
find all the text files in the file system and search only in the disk partition of the root.,"find / -xdev -name ""*.txt"""
"Remove all directories called ""test"" from the /path/to/dir directory tree","find /path/to/dir -name ""test"" -type d -delete"
display all the files along with their group name in the folder /home which do not belong to the group test,"find /home ! -group test -printf ""%p:%g\n"""
Find and list all files on your current directory and show a few lines of output from the beginning,find | head
Show the explanation of find's debugging options,find -D help
Assign the alias rm2g to a find command that removes any .tar file larger than 2 gigabytes.,"alias rm2g=""find / -type f -name *.tar -size +2G -exec rm -i {} \;"""
"Search the /Path directory tree for files matching pattern ""file_name*"" and containing ""bar"" in their pathnames","find /Path -name ""file_name*"" | grep ""bar"""
Find all files/directories named 'com.apple.syncedpreferences.plist'  under ~/Library directory tree,"find ~/Library/ -iname ""com.apple.syncedpreferences.plist"""
show all regular/normal the files in the current folder whose size is bigger than 0 bytes excluding everything,find * -prune -type f -size +0c -print
Find all empty files in /tmp,find /tmp -type f -empty
find all the log files in the file system which are present in the current partition,"find / -xdev -name ""*.log"""
Find all files in entire file system which are larger than 20000KB,find / -type f -size +20000k
"display all the files in the folder ""/Users/Me/Desktop"" which belong to the user ""popo"" and which have the permission 777",find /Users/Me/Desktop -user popo -perm 777
"find all the files ending with "".foo"" in the folder /usr",find /usr -name '*.foo' -print
Find all *.md files in entire file system and convert them to HTML  files,"find / -name ""*.md"" -type f -exec markdown -o {}.html {} \;"
find all the video files in the home folder,find ~ -type f -exec file -i {} + | grep video
Find all MP3s in the /home directory tree,find /home -type f -name '*.mp3'
Count total number of lines in all *.txt file in cuuent directory .,find .  -type f  -name '*.txt' -exec wc -l {} \; | awk '{total += $1} END{print total}'
Find all files larger than 100M and delete them,find / -size +100M -exec rm -rf {} \;
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play,"find /tmp/ -ctime -1 -name ""x*"" -exec mv '{}' ~/play/"
Search for all files not newer than file /tmp/t,find / -not -newer /tmp/t
find all files in the file system which belong to no user or which have no user,find / -nouser
"Search all files called ""abc"" that reside in the current directory tree for string ""xyz""",find . -name abc | xargs grep xyz
find all the files in the current folder which end with .o or with the name a.out and display them.,find . ( -name a.out -o -name *.o ) -print
search for a word in all the fies in the current folder,find . -type f -exec grep some_string {} \;
Prints ten latest modified files within the current directory.,"find . -type f -printf '%T@ %p\n' | sort -n -r | head -${numl} |  cut -f2- -d"" "" | sed -e 's,^\./,,' | xargs ls -U -l"
Find files in the current directory tree whose size is greater than 24000 bytes,find . -size +24000c
Find *.java files in the current directory and replace foo with bar in those files,"find . -name ""*.java"" -exec sed -i '' s/foo/bar/g \;"
Move *wp-admin/index.php files under /var/www/  to ./index_disabled,find /var/www/ -path '*wp-admin/index.php' -exec mv {} $/index_disabled
Check if a specific file exists and has been modified in the last 3 days.,"#!/bin/bash

file=""/path/to/file""

if [ -e ""$file"" ] && [ $(find ""$file"" -mtime -3 | wc -l) -gt 0 ]; then
    echo ""$file has been modified in the last 3 days""
else
    echo ""$file does not exist or has not been modified in the last 3 days""
fi"
"find all "".flac"" files starting with ""cmn-"" and search for files having CJK characters using unicodes",find . -name 'cmn-*\.flac' -print | grep -P './cmn-[\x4e00-\x9fa5]\.flac'
Copy all regular files from the current directory tree to directory `TARGET',find . -type f -exec cp -t TARGET {} \+
Set permissions to 500 for directories under the current directory,find . -type d -exec chmod 500 {} \;
find all files that names are game,find / -name game
find all PDFs owned by user “seamstress”,find / -user seamstress -iname “*.pdf”
Remove trailing white spaces from all *.rb files under current directory,find . -name '*.rb' | xargs -I{} sed -i '' 's/[[:space:]]*$//g' {}
Find all files/directories with 644 permission in entire file system,find / -perm 644
"Removes resursively all files and folders named ""Thumbs.db"", ignoring case distincts.","find . -iname ""Thumbs.db"" -print0 | xargs -0 rm -rf"
display all executable files in the folder /home,find /home -perm /a=x
Find all regular .mp3 files larger than 10M and delete them,find / -type f -name *.mp3 -size +10M -exec rm {} \;
"Copy all files and directories under the current directory into ""../new"" preserving relative paths",find -print0 | sort -z | cpio -pdv0 ../new
Delete all __temp__* directories under maximum 1 level down the current directory tree,find . -maxdepth 1 -type d -name '__temp__*' -print0 | xargs -0 rm -rf
"Find files that end in "".gz"" and execute ""awk -F, '$1 ~ /F$/'"" on their unzipped contents","find . -maxdepth 1 -name \*.gz -print0 | xargs -0 zcat | awk -F, '$1 ~ /F$/'"
find all the directories in the current folder excluding search in the sub directories and create these directories in another path,find . -maxdepth 1 -type d | xargs -I X mkdir '/new/directory/X'
Copies all files under the current directory like any-cased '*foobar*' to the '~/foo/bar' directory.,"find . -iname ""*foobar*"" -exec cp ""{}"" ~/foo/bar \;"
Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way,find MyApp.app -name Headers -type d -prune -exec rm -rf {} +
remote copy all text files from one location to another,find .  -name '*.txt' -exec rsync -R {} path/to/dext \;
Find all *.gz files in the current directory and decompress them using gunzip,find . -name '*.gz' -print0 | xargs -0 gunzip
find files in /dir/path/look/up directory that names are dir-name-here,"find /dir/path/look/up -name ""dir-name-here"" -print"
find symbolic links with pattern` '*sysdep.c',find . -lname '*sysdep.c'
"Search the current directory tree for files whose names end in ""rb"" or ""js""","find . -regextype posix-egrep -regex "".*$"""
List all files and directories residing in the current directory and below,find -print0 | xargs -0 ls
find all the php files,find -name '*.php'
search for text files in the folders /home/hobbes/ /home/calvin/,find /home/hobbes/ /home/calvin/ -name “*.txt”
Change the permission of all regular files under current directory tree to 644,find . -type f -exec chmod 644 {} \;
Find List of directory  with non-zero file count,"find -maxdepth 1 -type d | sort | while read -r dir; do n=$; if [ $n -gt 0 ]; then printf ""%4d : %s\n"" $n ""$dir""; fi; done"
"Find all files in /home/kos and below whose names end in "".tmp""",find /home/kos -name *.tmp -print
Give all files in the /path/to/base/dir tree read privileges,find /path/to/base/dir -type f -exec chmod 644 {} +
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f -ls
"Remove all files from the system whose path names contain ""GUI""",find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
Print the empty directories and files under current directory,find -empty
"Search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case","find . -iregex "".*packet.*"""
Compress regular files in the current directory tree that were last modified more than 7 days ago,find . -type f  -mtime +7 | tee compressedP.list | xargs compress
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them,"find -d MyApp.app -name Headers -type d -exec rm -rf ""{}"" \;"
Find text files modified less than 5 days ago,"find . –name ""*.txt"" –mtime 5"
Find all files/directories under current directory tree that belong to the user 'tom',find ./ -user tom
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*,find /path/to/directory/* -maxdepth 0 -type d -exec basename -a {} +
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -type -f -mtime ""+$DAYS_TO_SAVE"" -exec rm {} \; -exec printf '.' \; | wc -c"
"Search for all files with either ""sitesearch"" or ""demo"" in their path names",find . | grep -i demo | grep -i sitesearch
List all hidden regular files from the current directory separating them with zeroes,find . -maxdepth 1 -type f -name '.*' -printf '%f\0'
Find all *.rb (regular) files under current directory and count their line numbers,"find . -name ""*.rb"" -type f | xargs wc -l"
"find StringBuffer in all *.java files, ignoring case","find . -type f -name ""*.java"" -exec grep -il string {} \;"
Print '-okdir is an action so an implicit -print is not applied' for each file/directory found by the name 'file' under current directory tree,find -name file -okdir echo '-okdir is an action so an implicit -print is not applied' \;
Move all *foo*  directories under current directory to new paths obtained by replacing all occurrences of 'foo'  with 'Bar' in their paths,"find . -type d -iname '*foo*' -exec bash -O nocasematch -c '[[ $1 =~  ]] && mv ""$1"" ""${1//${BASH_REMATCH[1]}/Bar}""' -- {} \;"
Find all l files in the 'foo' folder but ones with name like '*Music*' to the 'bar' folder.,find foo -type f ! -name '*Music*' -exec cp {} bar \;
"Recursively removes all files with name like ""*.war"" in  /home/ubuntu/wars folder.","find /home/ubuntu/wars -type f -name ""*.war"" -exec rm {} \\;"
Delete all directories in the /myDir directory tree,find /myDir -type d -delete
List  the file under the current directory that has the oldest modification time,find . -type f -ls | sort +7 | head -1
Search for 'some string' in all *js files under current directory and show the matched lines with line numbers,find . -name '*js' | grep -n  'some string'
Find files that were modified less than 7 days ago and archive them,find . -type f -mtime -7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
search for text files in the current folder which do not have write access to others,find . -type f \
display all the files in the current folder which have been modified in the last 24 hours excluding all directories,find . \( -type d ! -name . -prune \) -o \( -mtime -1 -print \)
"Make directories in ""/TARGET_FOLDER_ROOT/"" for each "".mov"" file in the current directory tree","find . -type f -iname \*.mov -printf '%h\n' | sort | uniq | xargs -n 1 -d '\n' -I '{}' mkdir -vp ""/TARGET_FOLDER_ROOT/{}"""
Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set,find /path/to/dir/ -type f ! -perm 0644 -print0 | xargs -0 chmod 644
Delete all regular files with '.cache' extension that were accessed more than 30 days ago under $HOME/Library/Safari/Icons directory tree,"find $HOME/Library/Safari/Icons -type f -atime +30 -name ""*.cache"" -print -delete"
Update timestamps of all files and directories under directory /path/to/dir.,find /path/to/dir -print0 | xargs -0 touch
Search the current directory tree for all image files,"find . -type f -regex "".*\.\"""
"Search the current directory tree for files named ""accepted_hits.bam""","find `pwd` -name ""accepted_hits.bam"""
Show the list of directories in the /mnt/raid directory tree,find /mnt/raid -type d -print
"Search the /root directory recursively for the regular file named ""myfile"" ignoring /root/work/",find /root/ -path '/root/work' -prune -o -name myfile -type f -print
Remove files that are greater than 1MB in size under <directory>,find <directory> -type f -size +1M -delete
change the owner and group of all the directories in the current folder and /home/admin/data/ to admin & admin,find . /home/admin/data/ -type d -exec chown admin.admin {} \;
find all the files that are modified in the last 1 day,find -mtime +0 -mtime -1
Save a list of all the files/directories under current directory tree to a file named 'foo',find . -fprint foo
Find all *.tex files/directories in maximum 2 levels down the current directory,find . -maxdepth 2 -name '*.tex'
change the permissions of all the directories in the current folder,chmod 751 `find ./ -type d -print`
find all the files in the file system which have been changed in the last 24 hours.,find / -ctime -1
find all text files in current folder and trim the extra spaces in all lines in these files,find . -type f -name '*.txt' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
Delete the text matched by the regex '<script>if(window.*<\/script>' in all index.html files under current directory,find index.html | xargs -rt sed -i 's/<script>if(window.*<\/script>//g'
"List files named ""accepted_hits.bam"" in the current directory tree prefixing their names with ""somecommand""","find `pwd` -name ""accepted_hits.bam"" | xargs -i echo somecommand {}"
display all regular/normal files in the current folder that were accessed exactly 7*24 hours back,find . -type f -atime 7
Find directories named `doc' in /usr and below,find /usr \( -name doc -and -type d \)
Remove all files with the .c extension in the current directory tree,"find . -name ""*.c"" | xargs rm -rf"
Remove all files under /home/user/Maildir/.SPAM/cur,find /home/user/Maildir/.SPAM/cur -type f | xargs rm
Display all the files/directories under '/home/bozo/projects' directory tree that have been modified within the last day,find /home/bozo/projects -mtime -1
Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html',"find /home/u20806/public_html -maxdepth 1 -mmin +25 -type f -name ""*.txt"" -delete"
Find all files/directories not with the name 'query_to_avoid' under current directory,"find \! -name ""query_to_avoid"""
"Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic",find arch etc lib module usr xpic -type f | xargs chmod -x
Display a long listing of all the regular files owned by the user 'bluher' in the entire filesystem,find / -type f -user bluher -exec ls -ls {}  \;
Find all files under current directory and search for 'something' in those files,find . -print | xargs grep something
Find all files/directories with '.err' extension under '/home/username' directory tree,"find /home/username/ -name ""*.err"""
"Search all files in the current directory tree whose names end in ""1"" for string ""1""","find . -name ""*1"" -print0 |xargs -0 grep ""1"""
"Copy an entire file structure, creating empty files in the copy instead of copying the actual files.",find src/ -type d -exec mkdir -p dest/{} \; -o -type f -exec touch dest/{} \;
list all files under $dir directory except path $dir/prune_me directory,"find ""$dir"" -not -path ""$dir/prune_me*"" -exec bash -c 'echo ""$0""' {} \;"
Search for files/directories which are writable by either their owner or their group,"find . -perm /u+w,g+w"
find all the xml files in the current folder which are present in the pattern text file,"find . -name ""*.xml"" -exec grep -HFf < {} \;"
Print the number of lines for each *.txt file from the $DIR directory tree,"find $DIR -name ""*.txt"" -exec wc -l {} \;"
Remove all files under /home/user/Maildir/.SPAM/cur,find /home/user/Maildir/.SPAM/cur -type f -exec rm -f '{}' '+'
Print the path names of all files and directories in the current directory tree,"find -printf '""%h/%f"" '"
Print the list of all regular files in the current directory and below,find . -type f
Find files/directories named blah under current directory,find ./ -name blah
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755",sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755
Change permission to 755 of all files/directories under current directory tree that have 777 permission,find -perm 777 | xargs -I@ sudo chmod 755 '@'
Change the ownership of all files in the current directory tree from root to www-data,find -user root -exec chown www-data {} \;
search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago,"find /home/you -iname ""*.mp3"" -atime 10 -type -f"
"Delete all empty files and directories in the ""test"" directory tree",find test -depth -empty -delete
Find all *.axvw files/directories under current directory,find . -name '*.axvw'
"List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin",find . -name bin -prune -o -name src -prune -o -type f -print | xargs egrep -il '^From:.*unique sender'
Search /usr/bin for regular files that were last accessed more than 100 days ago,find /usr/bin -type f -atime +100
Search for the pattern 'search string' in all the files in the ''/tmp folder and display the matched lines along with the file names,find /tmp -type f -exec grep 'search string' '{}' /dev/null \+
Find all *.php  files and *.js files/directories  under /home/jul/here excluding *.js files/directories under /home/jul/here/exclude/* paths,"find /home/jul/here -type f -iname ""*.php"" -o -iname ""*.js"" ! -path ""/home/jul/here/exclude/*"""
Show the list of files that are not owned by user wnj or are not newer than file `ttt',find / \! \ -print
find all the files which have the write permission to the group and remove the write permission.,find . -perm -20 -exec chmod g-w {} ;
Move all *.data files/directories in $S directory to $S/data/ directory,"find ""${S}"" -name '*.data' -exec mv '{}' ""${S}/data/"" \;"
Search the current directory tree for all .java files newer than the file build.xml,find . -name '*.java' -newer build.xml -print
"Find all files under current directory whose file type description contains ""image"", display the paths to files and file type descriptions.",find . -name '*' -exec file {} \; | grep -o -P '^.+: \w+ image'
Find all files under /home/username/public_html/modules  and set their permission to 640,find /home/username/public_html/modules -type f -exec chmod 640 {} +
delete all files in the home directory which ahve the name core in them,find ~/ -name 'core*' -exec rm {} \;
"Search the regular files of the current directory tree for string ""foo""","find . -type f -exec grep ""foo"" '{}' \;"
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/home/www' directory tree and modify them in-place,find /home/www -type f -name '*.cpp'  -exec sed -i 's/previousword/newword/g' '{}' \;
Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name  in their names,"find ../../$name-module -name 'Name*' -type f -exec bash -c ""mv \""\$1\"" \""\${1/Name/$Name}\"""" -- {} \;"
"Find all directories named ""0"" in the current directory tree and create a tar archive of their RS* subdirectories","find . -type d -name ""0"" -execdir tar -cvf filename.tar RS* \;"
Perform case-insensitive search for file `TeSt123.txt' on the system,find / -iname TeSt123.txt
Find all files under /home/username/public_html/sites/all/themes and set their permission to 640,find /home/username/public_html/sites/all/themes -type f -exec chmod 640 {} +
Delete all 1US* (case insensitive) files under current directory,"find . -iname ""1US*"" -exec rm {} \;"
Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory,find . -name CVS -prune -o -exec mv '{}' `echo {} | tr '[A-Z]' '[a-z]'` \; -print
Find all the files which are accessed 50 days back,find / -atime 50
Change permissions to 644 for all directories under and below /path/to/someDirectory/,find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755
"Show all files in user's home directory that have read, write and execute permissions set for user, group and others.",find ~ -perm 777
Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days,find /var/tmp/stuff1 -mtime +90 -delete &
Find all files on the system whose names are 'composer.json',find / -name composer.json
"Find all *.py files under and below the current directory and search them for ""xrange""",find . -name '*.py' -exec grep --color 'xrange' {} +
find all the files in current folder which have spaces and save the long listing of these files to log file before deleting them,"find . -name ""filename including space"" -print0 | xargs -0 -I '{}' sh -c 'ls -aldF {} >> log.txt; rm -rdf {}'"
display all the empty files in the entire file system,find / -size 0 -print
Look for *.jpg files on the system,find / -name “*.jpg”
Prints last modified file in a current folder with modification time.,"find . -type f | sed 's/.*/""&""/' | xargs ls -E | awk '{ print $6,"" "",$7 }' | sort | tail -1"
Search the home directory tree for video files,find ~ -type f -regex '.*\.\(mkv\|mp4\|wmv\|flv\|webm\|mov\)'
Print the list of files and directories of the /etc directory,find /etc   ! -name /etc
search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end and save the output list to output.txt,find /data/images -type f -newer /tmp/start -not -newer /tmp/end > output.txt
Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them,find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -exec rm {} \;
find all the mp3 files in the entire file system whose size is bigger than 10MB,find / -type f -name *.mp3 -size +10M -exec rm {} \;
Search for 'pattern_to_search' in all regular files with '.txt' extension under '/directory/containing/files' and show the matched lines along with filenames,"find /directory/containing/files -type f -name ""*.txt"" -exec grep -H 'pattern_to_search' {} +"
"search for files named ""WSFY321.c"" in a case-insensitive manner","find . -iname ""WSFY321.c"""
change the permissions of all the directories  to 775 in the current folder,find . -type d -exec chmod 775 {} \;
Find all directories under $1/.hg and set their SGID bit,"find ""$1""/.hg -type d -print0 | xargs chmod g+s"
Find all Makefile's in the current directory tree and look for line 235 in each of them,find . -name Makefile -print0 | xargs -0 grep -nH $ | grep :235:
print the names of all of the unstripped binaries in the /usr/local directory tree. Builtin tests avoid running file on files that are not regular files or are not executable,find /usr/local -type f -perm /a=x | xargs file |  grep 'not stripped' | cut -d: -f1
Find all regular files recursively in the current directory,find . -type f
Remove all .php files in the /var/www/ directory,find /var/www/*.php -type f -exec rm {} \;
Find all files in $dir directory (non-recursive) and count them,"find ""$dir"" -maxdepth 1 -type f | wc -l"
delete all the files in the current folder  which do not belong to any user,find / -nouser -exec rm {}\;
"Find all files named ""file.ext"" in the current directory tree and print the path names of the directories they are in","find $PWD -name ""file.ext"" -exec sh -c 'echo $' ';'"
Search for files/directories with a case insensitive .txt extension in entire file system,find / -iname '*.txt'
Find all files/directories under '/usr' directory tree that have been modified exactly 5 minutes ago,find /usr -mmin 5
Find all files/directories under current directory that match the case insensitive regex ./\.* and show several lines of output from the beginning,find . -iregex './\.*' | head
Show all files in /etc that are owned by root have been modified within the last minute,find /etc/ -user root -mtime 1
change to a directory and search for a file in that directory,cd /nfs//office/ && find . -name '.user.log'
Remove all regular files under '/var/log/remote' directory tree that have not been modified in the last 14 days where day count starts from today,find /var/log/remote/ -daystart -mtime +14 -type f -exec rm {} \;
Find all broken symlinks under current directory,find -type l -xtype l
Find all *.* files under current directory,find . -type f -a -name '*.*'
Find all files/directories with 777 permission under '/apps/audit' and strip write permission for 'other' from them,find /apps/audit -perm -7 -print | xargs chmod o‑w
Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.,find . -perm 040 -type f -exec ls -l {} \;
Find all files on the system whose names are 'autoload.php',find / -name autoload.php
search for files in current folder using name patterns,"find . -name ""S1A*1S*SAFE"""
search for all the files in the current directory which have been modified in the last 24 hours.,find . -mtime -1
"search for all the files ending with ""fits"" in the folder ""/store/01""","find /store/01 -name ""*.fits"""
Find every file/directory under /var/spool that was modified more than 60 days ago.,find /var/spool -mtime +60
"Search all files called ""abc"" that reside in the current directory tree for string ""xyz""",find . -name abc | xargs grep xyz
change the owner of all the files in the file system which belong to the user with the uid 999,find / -user 999 -exec chown NEWUSER {} \;
Find files and directories with the name RAID but don't traverse a particular directory,find . -name RAID -prune -o -print
Find all file.ext files/directories under present working directory and print . for each of them,"find `pwd` -name ""file.ext"" -exec echo $ \;"
"Find all files in the current directory and below with extension .php and replace ""php"" with ""html"" in their names","find ./ -type f -name ""*.php""  | xargs -r rename ""s/php/html/"""
find all files in current folder using name patterns,"find . -iregex "".*packet.*"""
Find all files/directories under current directory tree with inode number 211028 and move them to 'newname.dir',find . -inum 211028 -exec mv {} newname.dir \;
Find all files under current directory and set read permission for group and other for these files,find . -type f -print0 | xargs -0 chmod go+r
Remove trailing white spaces from all files under dir directory and keep backups of the originals,"find dir -type f -print0 | xargs -0 sed -i .bak -E ""s/[[:space:]]*$//"""
"search for the directory ""mysql"" in the /etc folder",find /etc -name mysql -type d
Remove all *.bak and *.backup files that were accessed last time more than 30 days ago,find . \ -type f -atime +30 -exec rm '{}' ';'
"Search the regular files of the current directory tree for string ""whatever""",find . -type f | xargs -L 100 grep whatever
"Copy all files from the current directory tree to /path/to/destination/dir preserving their times, permissions, and ownership",find . | cpio -pdumv /path/to/destination/dir
display all the directories in the current folder for the files which have not been accessed in the last 48 hours,find . -type d -atime +2
Move files older than 1 day to directory TMP,find . -atime +1 -type f -exec mv {} TMP \;
Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder,find /path/to/your/directory -regex '.*\.\(avi\|flv\)' -exec cp {} /path/to/specific/folder \;
Md5sum the last 5 files in /directory1/directory2/,find /directory1/directory2/ -maxdepth 1 -type f | sort | tail -n 5 | xargs md5sum
"Find all files in current directory excluding hidden files, archive them and put the output into variable  full_backup_dir","full_backup_dir=""$(find . -depth \ -prune -o -print | cpio -oav)"""
force remove all the regular/normal files which begin with sess in the temp folder,find /tmp -type f -name sess* -exec rm -f {} \;
Find all *.jpg files in */201111 paths,"find */201111 -name ""*.jpg"""
"Find files with pattern ""*[!0-9][1-9].txt""  and execute chmod and ls command with AND condition then sort the output","sudo find -name ""*[!0-9][1-9].txt"" -exec chmod 744 '*' {} \; -a -exec ls -l {} \; | sort | parallel ls -l"
Find all catalina* files/directories under /path/to/search/in,find /path/to/search/in -name 'catalina*'
display all the .sh scripts in the folder /usr,find /usr -name \*.sh
"List all files/directories under current directory matching the posix-egrep type regex "".+\.$"" in their names excluding the files that contain 'generated' or 'deploy' in their paths",find . -regextype posix-egrep -regex '.+\.$' -print0 | grep -vzZ generated | grep -vzZ deploy | xargs -0 ls -1Ld
List all files under current directory matching the regex '.*\.\',find . -type f -regex '.*\.\' -exec ls {} \;
Calculate the total size of all *.jpg files in the directory tree,"find . -name ""*jpg"" -exec du -k {} \; | awk '{ total += $1 } END { print total/1024 "" Mb total"" }'"
display all files which have been modified between two dates in current folder,"find . -type f -newermt ""2014-01-01"" ! -newermt ""2014-06-01"""
Find all files/directories under '/home/user/' directory tree whose status were changed 10 minutes ago,find /home/user/ -cmin 10 -print
Find all *.mov  files under current directory and run an ffmpeg command with the path and the name for each file,"find . -iname ""*.mov"" -print0 | xargs -0 -i sh -c 'ffmpeg -i {} -f flv `basename {}`'"
Find all regular files with name pattern $filename under $fileloc directory tree,"find ""$fileloc"" -type f -prune -name ""$filename"" -print"
Find files on the system created during the last 50 days,find / -ctime -50
find all the findme.txt files in the file system,find / -name findme.txt -type f -print
Count all the lines of all files with names ending with 'php' in current directory recursively,find -name '*php' | xargs cat | wc -l
"Search for all the directories in directories taken from the glob pattern '/path/to/folders/*' and add the extension "".mbox"" to all and create directories named 'Messages' inside them",find /path/to/folders/* -type d -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \;
"search for all text files in the directory ""/path/to/inputfiles"" and pass them as input to the shell script in exec command and save the output to the file out.txt","find /path/to/inputfiles -name ""*.txt"" -exec /path/to/myprogram.sh {} \; > Out.txt"
Look for `regexp' in binary files,find .  -type f -print|xargs file|grep -i text|cut -fl -d:    | xargs grep regexp
search for all regular/normal files in current folder and display all the files which contain 16 lines,find . -type f -print0 | xargs -0 grep -cH '' | awk -F: '$2==16'
display all the text and pdf files in the current folder,"find . -regex "".*\(\.txt\|\.pdf\)$"""
Find all files that have wrong permission,find / \ \ -ls
Find all *.mp3 files in entire file system greater than 10MB and delete them,find / -type f -name *.mp3 -size +10M -exec rm {} \;
find all the video files in the home folder,find ~ -type f -exec file -i {} + | grep video
Set 644 permission to all regular files under current directory,find . -type f -exec chmod 644 {} \;
Test if files named 'something' were found in YOUR_DIR,"[[ ! -z `find 'YOUR_DIR/' -name 'something'` ]] && echo ""found"" || echo ""not found"""
looks for all files larger than 10 megabytes  within /home,find /home -type f -size +10485760c -print
search for MP3 files in the current folder and subfolders exclude dir1 AND dir2,"find ! -path ""dir1"" ! -path ""dir2"" -iname ""*.mp3"""
search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours,find /etc/ -type f -mtime -1
"Change all directories under ""./storage/"" to owner ""apache"" and group ""laravel""",sudo find ./storage/ -type d -exec chown apache:laravel {} \;
Search for .bam files anywhere in the current directory recursively,"find . -name ""*.bam"""
Look for any files that have not been modified in the last two days,find -mtime +2
"Finds recursively and following symlinks from root folder all files that contain ""text-to-find-here"" and prints files names.","grep -Ril ""text-to-find-here"" /"
Find all regular files in the current directory tree ignoring GIT and SVN directories,find . \( -type d -regex '^.*/\.\(git\|svn\)$' -prune -false \) -o -type f -print0
find all the jpg files in the entire file system and discard all the errors.,find / -name *.jpg 2>/dev/null
"Find all directories starting from root that contain the string ""99966"" in their names","find / -type d -name ""*99966*"" -print 2>/dev/null"
Find empty files and directories,find . -empty
"search for the host ""slc02oxm.us.oracle.com"" in all the xml files in the current folder and display the files which has the matched content",find -name “*.xml” -exec grep -l “slc02oxm.us.oracle.com” {} \;
Find files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -print
find the oldest normal file in the current directory,find . -type f -print0 | xargs -0 ls -ltr | head -n 1
Exclude directory from find . command,find . -type d -name proc -prune -o -name '*.js'
Find all orm* files/directories under current directory,find . -name 'orm*'
Perform white space safe deletion of files named core under /tmp,find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
Find all regular files under ${S} directory,"find ""${S}"" -type f"
Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match,find project -name '*.php' -type f -print0 | xargs -0 grep -l ireg
"display all the files on the current folder excluding those that are present in the folder ""./src/emacs""",find . -path ./src/emacs -prune -o -print
"Finds every folder with file 'header.php' within, and copies file 'topscripts.php' to every one of them.",find -type f -name 'header.php' | xargs -n 1 dirname | xargs -n 1 cp -f topscripts.php
find all files in the current folder which have only the write permission for the others,find . -perm -0002 -print
Find all files under current directory,find . -type f -print
Set 644 permission to all regular files under current directory,find . -type f -exec chmod 644 {} \;
find all the files in the file system that belong to the user www,find / -user www -print
"search for the word ""search-pattern"" in all the regular/normal files in the current folder and display the matched file name","find . -type f | xargs grep -l ""search-pattern"""
Find all *.txt files/directories under current directory,find -name '*.txt'
Create a tar file containing all the files in ~/Library folder that contain spaces in their names,find ~/Library -name '* *' -print0 | xargs -0 tar rf blah.tar
Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand,"find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand ""%"" | grep ExpectedResult'"
"display all the files in the current directory excluding the paths ""targert"", ""tools"", ""git""","find . \( ! -path ""*target*"" -a ! -path ""*tools*"" -a ! -path ""*.git*"" -print \)"
Remove all .mpg files in the /home/luser directory tree,find /home/luser -type f -name '*.mpg' -print0 | xargs -0 rm -f
List files in the current directory tree using echo,find . -exec echo {} ;
Find all the SGID bit files whose permissions set to 644 in the file system,find / -perm 2644
find all the empty directories in the current folder,find . -type d -empty
"Remove all files with names like ""vmware-*.log"" from the current directory tree",find . -name vmware-*.log -delete
find suffix tcl files under all directories started with 'n',"find ./n* -name ""*.tcl"""
Find all files/directories under current directory and append a null character at the end of each path,find -print0
Find all regular files under $dir directory tree that are bigger than $size MB in size and print them along with their sizes in decreasing order of size,"find $dir -type f -size +""$size""M -printf '%s %p\n' | sort -rn"
Delete all MP3 files under /tmp,find /tmp -iname '*.mp3' -print0 | xargs -0 rm
Find files in the /var/log folder which were modified modified 2 weeks ago,find /var/log/ -mtime +7 -mtime -8
Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size.,find . -atime +7 -size +20480 -print
"Find all regular files in the current directory tree whose names end with "".DS_Store"" and delete them",find . -type f -name '*.DS_Store' -ls -delete
Find all files under /path/to/dir that were modified less than 7 days ago with null character as the delimiter,find /path/to/dir -type f -mtime -7 -print0
Find all files under current directory and show their file information,find . -type f | xargs file
"Remove all directories called ""test"" from the current directory tree","find -name ""test"" -type d -delete"
"search for the word ""mysql"" in all the files in the current containing the word ""notes"" in their name. print0 is used to handle files  with newlines in their names or those which have only spaces in their names","find . -iname ""*notes*"" -print0 | xargs -I{} -0 grep -i mysql ""{}"""
Find all files/directories under /path directory that were modified more than 30 minutes ago,find /path -mtime +30m
"search for the file ""file"" in current folder and save the output to the same file",find -name file -fprint file
find all the html files in the current folder which have not been modified in the last 7 days,"find . -mtime +7 -name ""*.html"" -print"
display all the files  in the current folder excluding the current folder and do not search in the sub directories,find . -maxdepth 1 -type d \( ! -name . \)
find all the regular/normal files in the current folder which have been accessed in the last 1440*24 hours and not modified in 1441*24 hours excluding those which are in the custom sub directory tree,ionice -c 3 find  . -type f -amin -1440 -mmin +1441 -not -path custom/ -print0
find all files that are readable or writable by their owner,find . -perm +600 -print
display the directory name along with the modified time  for all the files /var,"find /var -maxdepth 2 -type d -printf ""%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\n"""
Find files/directories that does not have write permssion for group,find /path ! -perm /g+w
Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals,"find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E ""s/[[:space:]]*$//"""
List all empty files under the current directory,find . -maxdepth 1 -empty
find all files in the file system whose size is bigger than 3GB,find / -size +3G
Find all files whose owner is `user1',find / -user user1
find  file which case-insensitive name is too in currect directory,find . -iname foo
Search for all files newer than file /tmp/t,find / -newer /tmp/t
Show all files that have not been accessed in the $HOME directory for 30 days or more,find $HOME -atime +30
display all the symbolic links in the current folder,find . -type l
"Search the files from the current directory tree for ""foo""",find . -exec grep foo {} \;
"copy all the files with the extension "".type"" from one folder to a target directory","find ""$sourcedir"" -type f -name ""*.type"" | xargs cp -t targetdir"
find all directories with the name test in a directory,find /home/john -type d -name test -print
Search the current directory tree for files named 'Subscription.java',find . -name 'Subscription.java'
Find all files recursively starting from / that have been modified in the past 30 minutes and list them,find / -mmin -30 -ls
find all the directories in the folder /raid with the extension local_sd_customize.,"find /raid -type d -name "".local_sd_customize"" -print"
Find all *bar files/directories under current directory,find -name *bar
List all files/directories under /data1/Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago,find /data1/Marcel -size +1024 \ -ls
"find all the files in the folder ""myfiles"" which have been modified exactly 48 hours back.",find /myfiles -mtime 2
"display all the files in the current folder which have not been modified in the last 7 days and which are not in the list ""file.lst""",find -mtime +7 -print | grep -Fxvf file.lst
search for version in system.info files.,"find /home/*/public_html/ -type f -iwholename ""*/modules/system/system.info"" -exec grep -H ""version = \"""" {} \;"
file all the Sticky Bit set files whose permission are 551,find / -perm 1551
"Find ""file.xml"" under the current directory and change directory to its parent",cd `find . -name file.xml -printf %h`
List all files in the /var directory tree whose size is greater than 10 megabytes,find /var/ -size +10M -ls
List all *.txt files/directories under current directory,find . -name *.txt -exec ls {} \;
change permissions of all the script files in a directory,"find /home/john/script -name ""*.sh"" -type f -exec chmod 644 {} \;"
Find all MP3 files in the home directory tree that were modified in the last 24 hours,find ~ -type f -mtime 0 -iname '*.mp3'
Search the home directory for files accessed more than 10 days ago,find ~/ -atime +10
Find the total size of *.jpg files within the directory tree ./photos/john_doe,find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$
Find all files under current directory that were modified more than 1 day ago,find -mtime +1
find all the file that have not been modified in the last 3 days ( considers day starting not 24 hours ),find ./ -daystart -mtime +3
Find all regular files under $d directory tree and change their permissions to 777,"find ""$d/"" -type f -print0 | xargs -0 chmod 777"
Find all files/directores under '/usr/local' directory tree that contain the word 'blast' in their names,"find /usr/local -name ""*blast*"""
Find all files named `file1' on the system,find / -name file1
Search the /path directory recursively for TXT files,"find /path -type f -iname ""*.txt"""
Counts lines in each *.php file.,"wc -l `find . -name ""*.php""`"
Locate all *.csv files under the current directory tree,"find . -name ""*.csv"""
List all files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 | xargs -r ls -ld
display a long listing of all the files in the current folder which are bigger than 10KB,find . -size +10k -exec ls -lh {} \+
display all the files in the current folder which are bigger than 100MB and save the output list to the file /root/big.txt,find \( -size +100M -fprintf /root/big.txt %-10s %p\n \)
Find all *.txt files/directories under current directory,find -name \*.txt
delete all the empty files in the current folder,find . -empty -delete -print
Find all directories under current directory and change their permission to 755,find . -type d -exec chmod 755 {} \;
"display list of all the regular/normal files in the current folder which start with ""my""",find . -name 'my*' -type f -ls
display a long listing of all the xls or csv files in the entire file system,"find / -regex "".*\.\(xls\|csv\)"""
Find all CSS files,"find . -name ""*.css"""
List all files that are between 10000 and 32000 bytes in size,find . -size +10000c -size -32000c -print
Search the current directory tree for regular files last changed more than 14 days ago,find -type f -ctime +14
Counts all files in a current folder and subfolders.,find -type f -exec printf '\n' \; | wc -l
"find all the files in the current directory that have the word ""bash"" in their name","find . -name ""*bash*"""
Find all files under $dir directory,"find ""$dir"" -type f"
Find all files/directories under current directory that were accessed 30 minutes ago,find -amin 30
List every directory under current directory with their child executable files,"find . -type d | sort | xargs -n1 -I{} bash -c ""find {} -type f -maxdepth 1 -executable | sort -r"""
display all the jars in the current folder,find . -iname '*.jar'
Find empty files in the test directory,find test -empty
Find all files/directories named 'articles.jpg' under current directory tree,"find . -name ""articles.jpg"""
Copy a whole directory tree skipping files residing on other files systems to destination_dir,find ./ -mount -depth -print | cpio -pdm /destination_dir
Find all *.rb and *.py files/directories under current directory,"find . -name ""*.rb"" -or -name ""*.py"""
display all the normal/regular files in a directory,find $dir -type f -name $name -print
Find all .rpm files and change their permissions to 755,find / -name *.rpm -exec chmod 755 '{}' \;
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT_LOCATION} to ${OUTPUT_LOCATION},"find ""${INPUT_LOCATION}"" -name '*.pdf.marker' | xargs -i bash -cx 'pdf=`dirname {}`/`basename {} .marker`;[ -e ""$pdf"" ]&&{ mv {} ""$pdf"" ""$0"";}' ""${OUTPUT_LOCATION}"""
find all c & c++ files in the current directory and save output names to another file,"find . -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.h"" -o -name ""*.hpp"" > cscope.files"
Delete all empty directories and directories that contain only empty directories under current directory,find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
find all the text files in the current folder and do not  search in the sub directories,"find -maxdepth 1 -iname ""*.txt"""
"searches through the root filesystem (""/"") for the file named Chapter1, and prints the location",find / -name Chapter1 -type f -print
Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree,"find ""$DIR"" -type f -exec grep ""$SEARCH"" {} \;"
"find in $HOME files ending in ""txt"" and do nothing with them, or files ending in ""html"" and list them null separated.",find $HOME -name \*txt -o -name \*html -print0
Search the /path/to/directory tree for regular files modified 61 days ago and then remove them,find /path/to/directory -type f -mtime 61 -exec rm -f {} \;
Print the pathnames of all files from the /tmp/dir1 directory tree,find /tmp/dir1 -exec echo {} \;
find & Substitute Only When the Line Matches with the Pattern Using sed,"find . -type f -name ""*.txt"" -exec sed '/\-/s /\-.*//g'  {} \;"
Show the list of files modified less than a minute ago,find / -mmin -1 -print
Search directory trees foo and bar for .java files,"find foo bar -name ""*.java"""
"Search for ""1234567890"" in every gzip file modified between 8:00 and 9:00 on 2014-04-30",find . -newermt '2014-04-30 08:00:00' -not -newermt '2014-04-30 09:00:00' |xargs gunzip -c | grep 1234567890
"Append all regular files modified in the last 24 hours to the ""$archive.tar"" tar archive","find . -mtime -1 -type f -exec tar rvf ""$archive.tar"" '{}' \;"
"List and remove all regular files named ""core"" that are larger than 500KB",find /prog -type f -size +1000 -print -name core -exec rm {} \;
display the three smallest files by size in a folder.,find /etc/ -type f -exec ls -s {} + | sort -n | head -3
Print a sorted list of the extensions of the regular files from the current directory tree,"find . -type f -name ""*.*"" | awk -F. '{print $NF}' | sort -u"
Find all files/directories named orm.properties under  /eserver6/share/system/config/cluster directory,"find /eserver6/share/system/config/cluster -name ""orm.properties"""
"find foo, Foo, FOo, FOO, etc.",find . -iname foo
"Search for ""YOURSTRING"" in all files under current directory",grep YOURSTRING `find .`
"Search for directories that contain the phrase ""foo"" but do not end in "".bar""",find . -name '*foo*' ! -name '*.bar' -type d -print
display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories,"find . -maxdepth 1 -name ""*.jpg"" -size -50k | xargs echo rm -f"
Find all files/directories under current directory that were modified later than /reference/file,find . -newer /reference/file
Find all *.mov files under current directory,"find . -name ""*.mov"""
search for the directory with the name aa in the current folder,find . -type d -name aa
Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy,find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents
"Copy all files in ""/var/spool/mail"" to ""/home/username/mail"" preserving the directory hierarchy and modification times",find /var/spool/mail -type f | cpio -pvdmB /home/username/mail
Find all directories with 755 permission and change the permission to 700,find . -type d -perm 755 -exec chmod 700 {} \;
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print their parent directory paths,find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90  | sed 's|/[^/]*$||'
Find recursively all regular .txt files in the current directory tree except README.txt,"find . -type f -name ""*.txt"" ! -name README.txt -print"
Change the ownership to eva for all files/directories that belong to the user 'george' in the entire file system without traversing to other devices/partitions,find -x / -user george -print0 | xargs -0 chown eva
"find foo, Foo, FOo, FOO, etc.",find . -iname foo
Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago,find $LOCATION -name $REQUIRED_FILES -type f -mtime +1 -delete
Delete all files/directories with node number $inum under current directory tree,find . -inum $inum -exec rm {} \
Count all the lines of code in all php files in current directory recursively,"find . -name ""*.php"" | xargs grep -v -c '^$' | awk 'BEGIN {FS="":""} { $cnt = $cnt + $2} END {print $cnt}'"
Find files on the system whose names begin with either x or X,"find / -name ""[Xx]*"""
Find all image.pdf files/directories under ./polkadots,find ./polkadots -name 'image.pdf'
Search the /home/weedly directory tree for regular files named myfile,find /home/weedly -name myfile -type f -print
Find all regular files in current directory and /home/www directory,find * /home/www -type f
"Recursively copy all directories in ""/path/to/source"" to ""/path/to/dest/"" preserving directory hierarchy",find /path/to/source -type d | cpio -pd /path/to/dest/
Find all files/directories in entire file system more than 700 Megabytes,find / -size +700M
display long listing of all the empty files in the current folder,find . -empty -exec ls -l {} \;
Measure the disk space taken up by all TXT files in the current directory tree,"find . -iname ""*.txt"" -exec du -b {} + | awk '{total += $1} END {print total}'"
Find all files/directories named 'document' in the root filesystem partition,find / -xdev -name document -print
"show all the "".flac"" files in the current folder and do not search in the sub directories",find . -maxdepth 1 -type f -name '*.flac'
Locate world-writable files and directories on the system,find / -path /proc -prune -o -perm -2 ! -type l -ls
"Copy directory hierarchy from ""./<SOURCE_DIR>/"" to ""<DEST_DIR>""","find ./<SOURCE_DIR>/ -type d | sed 's/\.\/<SOURCE_DIR>//g' | xargs -I {} mkdir -p <DEST_DIR>""/{}"""
Find all *.log files under path/,"find path/ -name ""*.log"""
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir,find . -type d -mtime 0 -exec mv {} /path/to/target-dir \;
Find all files under current directory and upload them to https://PATH_TO_NEXUS/,find . -type f -exec curl --user user:pass --ftp-create-dirs -T {} https://PATH_TO_NEXUS/{} \;
"display all the files in the current folder that end with "".ksh""","find . -name ""*.ksh"" -prune"
Find files on the system accessed during the last 24 hours but not within the last hour,find / -atime -1 -amin +60
find all the mp3 files in the file system,"find / -iname ""*.mp3"" -print"
Find files/directories named 'foo.bar' under './dir1' and './dir2' directory tree,find ./dir1 ./dir2 -name foo.bar -print
List files larger than 10MB in the /var directory recursively,find /var/ -size +10M -ls
"Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines","find ""$searchpath"" -name ""$filepat.[ch]"" -exec grep --color -aHn ""$greppattern"" {} \;"
Search /var/tmp for files larger than 30 MB modified 31 days ago,find /tmp /var/tmp -size +30M -mtime 31 -ls
Find all *fink* files/directories in entire file system,"find / -name ""*fink*"" -print"
"Search for all the directories named 'm?' under current directory tree, add the extension "".mbox"" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory",find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'
find all the text files in current folder and force delete them,"find . -name ""*.txt"" | xargs rm -rf"
Find & calculate total number of worlds in all .txt file from current directory,find .  -type f  -name '*.txt' -exec wc -w {} \; | awk '{total += $1} END{print total}'
Remove files that are less than 1MB in size under <directory>,find <directory> -type f -size -1M -delete
find all the files in the home folder which have been modified today,find ~ -type f -mtime 0
Find all the files without permission 777,find / -type f ! -perm 777
Remove all .txt files with spaces in names in and below the current directory,"find -name ""*\ *.txt"" | xargs rm"
"search for a regular/normal file myfile in the folder ""/home/weedly""",find /home/weedly -name myfile -type f -print
"Find all files/directories with '.mp4' extension and all regular files with '.flv' extension, sort them according to their names and display the first 500 of them","find /storage -name ""*.mp4"" -o -name ""*.flv"" -type f | sort | head -n500"
List first 20 files under current directory,find . -type f |xargs ls -lS |head -20
Find files/directories modified within the last day under /etc,find /etc -type f -ctime -1
"Create a tar archive of files from directory tree ""data""",find data/ -print0 | tar -T - --null --create -f archive.tar
"Search all regular files from the current directory tree for lines containing ""California"" and ""surfboard"", and save the output as SurfsUp.txt",find . -type f -exec grep California {} \; -print | grep surfboard > SurfsUp.txt
find files which modification time is  one day ago,find . -mtime 1
Finds more than 5 days old files in two directories  and compresses them.,find /home/folder1 /home/folder2 -type f -mtime +5 -exec compress {} \;
delete all the text files from the current folder after user confirmation,"find . -name ""*.txt"" -ok rm {} \;"
Search for all *.conf files in entire file system,"find / -type f -name ""*.conf"""
dsisplay all files inthe current folder,find .
Find all the files in file system which are modified in last 1 hour,find / -mmin -60
"Find all 400 permission files under /data directory, print 'Modifying ' appended with file path for each of them and change their permission to 755",find /data -type f -perm 400 -exec echo Modifying {} \; -exec chmod 755 {} \;
Delete all files/directories under current directory tree with '.$1' extension where $1 expands as the first positional parameter,"find . -name ""*.$1"" -delete;"
List all directories found in the current directory and below.,find . -type d
Search in current directory downwards all files whose owner is aa1 and grop is grp .,find .  \( -user aa1 - group grp \) -print
"search for all ""tif"" images in the entire file system",find / -name '*.tif ' –print
"find all the files ending with "".foo"" in the folder /usr",find /usr -name '*.foo' -print
List all files under current directory matching the regex '.*(c|h|cpp)$',find -E . -type f -regex '.*(c|h|cpp)$' -exec ls {} \;
Find every JavaScript file in the wordpress directory tree,find wordpress -name '*js'
display the count of all the normal/ regular files in the current directory,find . -type f |wc -l
Search for the regex '^ERROR' in all *.log files under current directory,"find . -name ""*.log"" -exec egrep -l '^ERROR' {} \;"
Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 100MB in size,find $HOME -iname '*.ogg' -size +100M
Find all .mp3 files starting from the current directory and delete them,find . -type f -iname *.mp3 -delete
create the compressed tar archive images.tar.gz containing all jpg files found under /,find / -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz
display the filename and size of all the files in the file system which are bigger than 20MB,"find / -type f -size +20000k -exec ls -lh {} \; | awk '{ print $8 "": "" $5 }'"
"Find files starting with the word ""file"" in the current directory tree","find . -name ""file*"""
"change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name",find . -type f -print0 | xargs -0 chmod 664
"Change every file under ""/var/www/html/"" to have permissions 664",sudo  find /var/www/html/ -type f -exec chmod 664 {} \;
Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '/home/backups' directory tree,find /home/backups -type f \ -print0 | xargs -0 ls -t | tail -1 | xargs rm
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir,find . -type d -mtime 0 -exec mv {} /path/to/target-dir \;
Find all files/directories under /usr/tom which matches the extended regex '*.pl| *.pm'  in their names,find /usr/tom | egrep '*.pl| *.pm'
"Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty.",find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
Removes only lowest level subfolders from current directory tree (folders without files and another folders within).,find . -type d | xargs rmdir
find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today,find . -name \? -daystart -mtime +0 -mtime -3
show all the files in the entire file system which are bigger than 1.1GB,find / -size +1.1G
remove all the files in the current folder which have not been changed in the last 30*24 hours,find ./ -ctime +30 -type f -exec rm -f {} \;
Remove all *.tmp files from the /tmp directory tree,"find /tmp -name ""*.tmp"" | xargs rm"
"Measure the execution time of the command: find /usr/src -name ""*.html"" | xargs grep -l ""foo"" | wc -l","time find /usr/src -name ""*.html"" | xargs grep -l ""foo"" | wc -l"
find Texinfo source files in /usr/local/doc,find /usr/local/doc -name '*.texi'
Converts all windows line endings to unix line endings,find $(pwd) -type f | xargs -I xxx sed -i 's/\r//g' xxx
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories,"find . -maxdepth 1 -name ""*.jpg"" -size -50k -exec rm {} \;"
"Search all files in the current directory tree that are named ""whatever"" for ""whatever""",find . -name whatever -print | xargs grep whatever
Find all regular files in the current directory tree and print a command to move them to the current directory,find . -type f -exec echo mv -t . {} +
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%TY %p\n',find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%TY %p\n'
Find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end,"find /etc -maxdepth 2 -name ""*.conf"" | tail"
"Search the files residing in the current directory tree whose names contain ""bills"" for ""put""",find . -name '*bills*' -exec grep put {} \;
"Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension","find /path/to/directory/* -maxdepth 0 -type d -printf ""%P\n"" -exec sudo tar -zcpvf {}.tar.gz {} \;"
Print the names and sizes of all regular files from the current directory tree,"find . -type f -printf ""%f %s\n"""
display all the regular/normal files in the /root folder which are bigger than 500MB,"find /root -type f -size +500M -printf ""The %p file is greater than 500MB\n"""
Find all files/directories under current directory which have read-write permission for owner and only read permission for group and others,find -perm -644
display all the files in the current folder along with the modification time and display file names of the last 10 modified files,"find . -type f -printf '%T@ %p\n' | sort -n | tail -10 | cut -f2- -d"" """
"find all files with pattern` '*song*abc2009*.jpg' and replace ""abc2009"" with ""def2010""","find . -name '*song*abc2009*.jpg' | sed 's/\(^.*song.*\)abc2009\(.*.jpg\)$/mv ""&"" ""\1def2010\2""/' | sh"
Archive all directories in /path/to/directory/*  to files with .tar.gz extension transforming the full paths to relative paths,find /path/* -maxdepth 0 -type d -exec sudo tar -zcpvf {}.tar.gz {} \;
find all the swap files  in the current folder and delete them,"find . -name ""*~"" -exec rm {} \;"
"find all normal/regular files in current folder which end with ""~"" or which begin and end with ""#"" and and and delete them",find . -maxdepth 1 -type f -name '*~' -delete  -or -name '#*#' -delete
display a long list of all the jpg files in the home folder(plus at the end is used to give bulk data as input),find ~ -iname '*.jpg' -exec ls {} +
"Find all files and directories in the current directory tree except those whose name is ""dirname"", case insensitive",find ./ -iname ! -iname dirname
find all files in current folder which are more than 300MB,find . -size +300M
Find all the .c files in the current directory tree that contain the string ‘stdlib.h’,find . -name '*.c' | xargs grep 'stdlib.h'
find all jpg files in current folder,"find . -type f -name ""*.JPG"""
"change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name",find . -type d -print0 | xargs -0 chmod 2775
"force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name","find . -name ""*.c"" -print0 | xargs -0 rm -rf"
Find directories that are directly under $workspace_ts directory  and were modified less than 30 days ago,find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime -30
"change the owner of all the regular/normal files which belong to the root user to ""tom"" in the current folder",find .-type f -user root -exec chown tom {} \;
Find all directories under /home/username/tmp and set their permission to 770,find /home/username/tmp -type d -exec chmod 770 {} +
Find all files under /path and calculate their md5sum,find /path -type f -print0 | xargs -0 md5sum
"change the group to ""new_group"" and permissions to 770 for all the files in the current folder","find . -name ""*"" -exec chgrp -v new_group '{}' \; -exec chmod -v 770 '{}' \;"
Find all symbolic links containg 'vim' in their names under '/usr/bin' directory tree,find /usr/bin -name '*vim*' -type l
"search in the current folder for the file ""myletter.doc""",find . -name myletter.doc -print
"Find all regular files in the ""$dir"" directory",find $dir -maxdepth 1 -type f
display all regular/normal files in the folder /Users/david/Desktop/,find /Users/david/Desktop/-type f
list all files under the current directory called cookies.txt,find -name cookies.txt
Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree,"find ""$DIR"" -type f -exec grep -q ""$SEARCH"" {} + ;"
show all the files in the entire file system which are bigger than 100MB,find / -size +100M
"Change permissions of all files ending in "".php"" under the current directory to 755 and print a '+' for each file",find . -name '*.php' -exec chmod 755 {} \; -exec echo '+' \;
Delete all directories in the TBD directory that were modified more than 1 day ago,find /TBD -mtime +1 -type d | xargs rm -f -r
list all the directories in the folder httpdocs,find httpdocs -type d
find all the word press configuration php files in the folder /var/www,find /var/www/ -name wp-config.php
display the help of find command,find --help
"Print the name of ""file1"" if this file is newer than ""file2""",find file1 -prune -newer file2
change the permissions of all the directories in the current folder,find . -type d -exec chmod 2775 {} \;
Remove files matching pattern '*-*x*.*' from the current directory tree,find  -name '*-*x*.*' | xargs rm -f
Select everything selected by * without descending into any directories,find * -maxdepth 0
"Execute ""myfile"" on all regular files from the current directory tree","find . -type f -exec bash -c 'myfile ""{}""'  \;"
"remove all the files in the folder ""myfiiles"" which have not been accessed in the last 30*24 hours",find /myfiles -atime +30 -exec rm {} ;
display all regular/normal files which have been modified in the last 30 minutes,find -type f -and -mmin -30
Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter,find /mnt/naspath -name .snapshot -prune -o \
Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods,find / \( -name tmp -o -name '*.xx' \) -atime +7 -exec rm {} \;
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.",find . -exec file {} \;
change the permission of all the directories to 755 in the current folder,find -type d -exec chmod 755 {} \;
Print a sorted list of regular files from directory tree /folder/of/stuff,find /folder/of/stuff -type f | sort
find all the files in the file system whcih have been modified in the last 1 day,find / -mtime -1
List all directories starting from root that have sticky bit set,find / -type d  -perm -1000  -exec ls -ld {} \; 2> /dev/null
"display the contents of all the files in the current folder which have the name ""dummy"" and discard all the errors while searching",find / -type f -name dummy 2>/dev/null -exec cat {} \;
List all files under and below the directory given as variable $FULFILLMENT,find $FULFILLMENT -ls
display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders,find . \ -print
Find command will display top 5 small files from curent directory . most probably you will get ZERO  bytes files .,find . -type f -exec ls -s {} \; sort -n |head -5
Print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/*,find /path/to/directory/* -maxdepth 0 -type d
Find all files on your system that are world writable,find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \;
Fiind and remove multiple files such as *.mp3 or *.txt,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
Find all *.py files/directories under current directory,find . -name \*.py -print
List files larger than 10MB under /var/log /tmp that haven't changed in a month,find /tmp /var/tmp -size +30M -mtime 31 -print0 | xargs -0 ls -l
display all the directories in the folder /path/to/dest except tmp and cache directories,find /path/to/dest -type d \ -o \ -print
find a specfic video file in the current directory,"find ./ -name ""foo.mp4"" -exec echo {} \;"
change the permissions of all the directories in the folder root_dir to 555,find root_dir -type d -exec chmod 555 {} \;
Find all fglrx-libGL* files under and below debian/fglrx/,find debian/fglrx/ -name 'fglrx-libGL*'
find all regular/normal files which have execute permission in current folder and copy them to another folder,cp `find -perm -111 -type f` /usr/local/bin
find all files in the home folder which have been modified between 72 and 96 hours before,find ~ -mtime 2 -mtime -4 -daystart
Find all directories containing 'linux' in their names under '/root' directory tree,"find  /root -type d -iname ""*linux*"""
"find all files ending with "".fq"" and give is as input to the fastQC command","find . -name ""*.fq"" | xargs -n 1 fastqc"
force delete all the files which have not been accessed in the last 240 hours in the temp folder,find /tmp/* -atime +10 -exec rm -f {} \;
Find all *.txt files/directories under current directory and execute process once with all of them as arguments,find . -name \*.txt -print0 | xargs -0 process
Find all *.xml files under current directory,find -name *.xml
Find all directories under minimum 2 levels down the mydir directory,find mydir -mindepth 2 -type d
Delete all empty directories and directories that contain only empty directories under current directory,find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
Find writable regular files in the current directory,find .  -maxdepth 1 -type f -writable
find all the files that have been modified in the last 12 hours,find ./ -mtime -0.5
Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago,find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &
Create a script that monitors system file integrity using cryptographic hashes and alerts if any files are tampered with.,"#!/bin/bash

while true; do
    find /etc -type f -exec sha256sum {} + > /tmp/file_hashes.txt
    sleep 3600
    compare_file_hashes
    sleep 3600

done"
"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename "".svn""",find . -iname .svn -print0 | xargs -0 rm -rf
find all the files in the home folder which have been modified today,find ~ -type f -mtime 0
"Delete all files in the ""${S}/bundled-libs"" folder except ""libbass.so""","find ""${S}/bundled-libs"" \! -name 'libbass.so' -delete"
"search for the directory ""uploads"" in current folder and change the permission of the folder and all the files to 755","find . -type d -name 'uploads' | while read d; do chmod -R 755 ""$d""; done"
find all files in current folder which are less than 300MB,find . -size -300M
"Replace ""foo"" with ""bar"" in all PHP files in the current directory tree","find . -name ""*.php"" -print | xargs sed -i 's/foo/bar/g'"
delete all the regular files in the temp folder which have not been modified in the last 24 hours,find /tmp/ -type f -mtime +1 -exec rm {} \;
Search directory tree $DIR for *.txt files,"find ""$DIR"" -name \*.txt"
move files accessed more than one day ago to directory TMP,find . -atime +1 -type f -exec mv {} TMP \; # mv files older then 1 day to dir TMP
Find regular files that have SUID or SGID set,find / -perm +6000 -type f
Search the current directory tree for all files except SVN ones,find . -not -iwholename '*.svn*'
"Copy directory hierarchy ""dir"" and all its .txt files to ""dir_txt""",find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents
list the details of all the directories in the current folder,find . -type d -exec ls -ld {} \;
Find all files under trunk directory and upload them to https://PATH_TO_NEXUS/trunk/,find trunk -type f -exec curl --user user:pass --ftp-create-dirs -T {} https://PATH_TO_NEXUS/{} \;
"Find files/directories named 'sar' under '/usr', '/bin', '/sbin' and '/opt' directory tree",find /usr /bin /sbin /opt -name sar
"find all the files ending with "".coffee"" in the current folder and search for the first occurence of the word ""re"" in each line",find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \;
"Find all files under ""/path"" that do not contain a ""."" and append "".jpg"" to their file name","find /path -type f -not -name ""*.*"" -print0 | xargs -0 rename 's/$/$1.jpg/'"
"Search the current directory for files whose names start with ""messages."" ignoring SVN files","find \( -name 'messages.*' ! -path ""*/.svn/*"" \) -exec grep -Iw uint {} +"
find all files & dircetiry in current directory which  have .tmp extension and delete them .,"find . -type f -name ""*.tmp""  -exec rm -rf {} \;"
search for all regular/normal files in the current folder and display the number of lines in the file,find . -type f -print0 | xargs -0L1 wc -l
search for a shell script in the current folder and display the current folder path,find . -name onlyme.sh -exec pwd \;
"Search the regular files of the current directory tree for string ""foo""","find . -type f -exec grep ""foo"" '{}' \;"
find all the files which have been changed after the modification of a file.,find -cnewer /etc/fstab
display all the regular files in the current folder which have the permission 777,find . -type f -perm 777
"Search the files from the current directory tree for ""chrome""",find . -exec grep chrome {} \;
Delete all .svn files/directories under current directory,find . -name .svn -exec rm -rf '{}' \;
Find files matching an exact set of permissions,find / -perm 644
Delete all files/directories taken by the glob pattern * except the ones with the name 'b',find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf '{}' ';'
"display all files in the folder /usr/src excluding those ending with "",v""","find /usr/src ! \( -name '*,v' -o -name '.*,v' \) '{}' \; -print"
"Search the files from the current directory tree for ""foo""",find . -exec grep foo {} +
List files in the current directory tree which have permissions rwx for user and rw for group and others,find . -perm 766 -exec ls -l {} \;
display all regular/normal files in the current folder which are not accessed in the last 7*24 hours,find . -type f -atime +7
Find target.out files starting from /starting/path and pass them as arguments to /path/to/simpleGrepScript.sh,find /starting/path -name target.out | xargs /path/to/simpleGrepScript.sh
Find and remove the .rhosts file in the /home directory tree,find /home -name .rhosts -print0 | xargs -0 rm
move all files in the current folder another folder and do not move the files in the sub folder,"find . -name ""*"" -maxdepth 1 -exec mv -t /home/foo2/bulk2 {} +"
find all instances of a file in current folder and display all errors apart from permission denied,"find . -name ""my.txt"" 2>&1 | grep -v ""Permission denied"""
Find all target files outside the current working directory with symbolic links in the current working directory,"find . -type l -exec readlink -f '{}' \; | grep -v ""^`readlink -f ${PWD}`"""
Get a list of all files in the /home directory tree and their coressponding inode numbers,"find /home -type f -printf ""%i@%p\n"""
find not case sensitive all directories that names are 'apt',"find  / -type d -iname ""apt"""
find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.,find . -atime +1 -type f -exec mv {} TMP \;
find all gzip files in a folder,"find /home/foo -name ""*.gz"""
find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today,find . -name \? -daystart -mtime +0 -mtime -3
Search the .java files from the current directory tree for TODO lines,"find . -name ""*.java"" -exec grep -Hin TODO {} \;"
"Copies all files like ""*FooBar*"" under the current directory to the '~/foobar' directory.",find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +
List all files/directories under current directory,find -ls
Delete all hidden files/directories under $some_directory including $some_directory,find $some_directory '.*' -delete
Delete 'string_to_find' from all files under current directory,find . -type f | xargs grep 'string_to_find' -sl | xargs perl -pi -w -e 's/string_to_find//g;'
List all files in /home/bozo/projects directory tree that were modified exactly one day ago.,find /home/bozo/projects -mtime 1
Find all files under /path and below executable by `group' or `other',find /path -perm /011
change the owner of all the files in the file system which belong to the user with the uid 999,find / -user 999 -exec chown NEWUSER {} \;
Search for first match of the regex 're' in all *.coffee files under current directory,find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \;
Change permissions to 644 for all regular files in and below the current directory,"find . -type f -print | sed -e 's/^/""/' -e 's/$/""/' | xargs chmod 644"
"Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/","find $DIR/tmp/daily/ -type f -printf ""%p\n"" | sort -rn | head -n 2 | xargs -I{} cp {} $DIR/tmp/weekly/"
"Find ""*.dat"" files recursively in the current directory, print the lines starting on line 5 to the console and save to ""concat.txt""","find . -type f \( -name ""*.dat"" \) -exec tail -n+5 -q ""$file"" {} + |tee concat.txt"
display all directories in the current folder,find -type d
Delete all files in the current directory.,find . -exec /bin/rm {} \;
find all the directories in current folder and do not search in sub directories and create the same directory structure in another folder,find . -maxdepth 1 -type d -print0 |
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll"" -type f"
delete all the empty files in the current directory,find . -empty -exec rm {}\;
Search the /home/bozo/projects directory tree for files modified within the last 24 hours,find /home/bozo/projects -mtime 1
"find files in the current directory and sub-directories, that changed within last hour",find . -cmin -60
"find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files",find . -mindepth 1 -mmin -60 | xargs -r ls -ld
Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them,"find ./ -type f -name ""$2"" -exec sed -i ""s/$3/$4/g"" {} \;"
Find files/directories under current directory that are modified exactly one hour ago,find . -mtime 1
Find all files/directories under current directory,find .
display all the regular/normal files in the current folder which have been modified after a specific time stamp and do not search in the sub directories,"find -maxdepth 1 -type f newermt ""$timestamp""'"
"search for text files in the directory ""/home/user1"" and copy them to the directory /home/backup",find /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents
display all normal/regular files in current directory,find . -type f -print0
Find and remove multiple files such as *.mp3 or *.txt under current directory,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
"Recursively search for all files not ending in "".xml"" under the current directory, append "".xml"" to the end of each file name",find . -type f \! -name '*.xml' -print0 | xargs -0 rename 's/$/.xml/'
search for the file test2 in the current folder,find -name test2
"Search for Subscription.java under current directory, and go to directory containing it.","cd ""$(find . -name Subscription.java -printf '%h\n')"""
Change permissions of all directories residing under and below ./debian to 755,find ./debian -type d | xargs chmod 755
sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days,"find .  -name ""*.txt"" -type f -daystart -mtime -91 -mtime +2 | xargs cat | sort | uniq"
Find files in the current directory tree whose status was changed within the last 60 minutes,find . -cmin -60
Find recursively all Emacs backup files in the current directory and remove them,find . -name '*~' | xargs rm
Find user daniel's files of type jpeg,find . -user daniel -type f -name *.jpg
Find all files/directories under /path/to/dir/* paths and print the timestamp along with their paths and stat them,"find /path/to/dir/* -printf ""%T@|%p|%l"" -exec stat -Lc ""|%Y.0000000000"" {} \;"
Find all files owned by user `comp',find / -user comp
"find all the directories with the name ""some-dir"" in the current folder and move them to another folder and do not search in subfolders","find ./ -maxdepth 1 -name ""some-dir"" -type d -print0 | xargs -0r mv -t x/"
"print all filenames of files under current dir containing 'foo', case-insensitive",find . -type f -exec grep -il 'foo' {} \;
find files which full path name like '*/*config' at current directory and print,find .  -path '*/*config'
"Find all files/directories in entire file system for which owner has at least read/write permissions, or the group has at least read permission, or others have at least read permission","find / -perm /u+rw,g+r,o+r"
display all the normal/regular files in the current folder which are empty,find . -type f -empty
"Remove files under /mnt/zip matching ""*prets copy"" with confirmation","find /mnt/zip -name ""*prefs copy"" -print0 | xargs -0 -p /bin/rm"
Count the number of unique file extensions in the current directory tree,find . -type f | sed -e 's/.*\.//' | sed -e 's/.*\///' | sort | uniq -c | sort -rn
Find recursively all regular files in the current directory skipping hidden files and directories matching pattern '.?*',find -name '.?*' -prune -o \
Find all directories under minimum 2 levels down the mydir directory,find mydir -mindepth 2 -type d
delete all the text files in the current folder.,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
Print content of each file under the current directory followed by that file name,find . -type f -exec cat {} \; -print
find all the files in the current folder which have executable permission to all the users and display the ten files,find . -perm /a=x | head
Search the xargstest/ directory recursively for files matching pattern 'file??',find xargstest/ -name 'file??'
"Print the /proc directory tree, ignoring the PID-process things",find /proc -type d | egrep -v '/proc/[0-9]*($|/)' | less
Execute `echo' for each file found,find . | xargs -n 1 echo
"find all the text files in the current folder starting with ""somefiles-""","find . -name ""somefiles-*-.txt"" -type f"
Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension,"find . -regextype sed -regex ""./test[0-9]\{2\}.txt"""
"Find files in the current directory tree that match ""pattern"" and run ""git diff"" on them","find . -name ""pattern"" | xargs git diff --"
List all files/directories under current directory,find | perl -lne 'print quotemeta' | xargs ls -d
"display all the files in the current folder which have the word ""bills"" in their name",find . -name '*bills*' -print
find all the html files in current folder and replace old string with new string,find . -name '*.html' -print0 | xargs -0 perl -pi -e 's/oldstring/newstring/g'
Print out the contents of all *.txt files in the home directory,find ~ -name '*.txt' -print0 | xargs -0 cat
Find all files/directories that were modified more than 2 days ago and redirect the list to ~/output.file,"find . -mtime +2 | perl -pe 's{^}{\""};s{$}{\""}' > ~/output.file"
Get the sizes  of all files under dir2 directory,find dir2 ! -type d |xargs wc -c
Find all files in the current directory tree with size bigger than 5 MB and sort them by size,find ./ -size +5M -type f | xargs -r ls -Ssh
"Find all files recursively which end in "".php""","find . -name ""*.php"" -print"
find all the html files in the current folder,"find . -name ""*.html"""
find all the files in the folder /opt which have been modified between 20 to 50 days ago,find /opt -mtime +30 -mtime -50
"Search the .sh files in the current directory tree for string ""ksh""","find . -name ""*.sh"" | xargs grep ""ksh"""
Use multiple -exec command in find . Find all .txt files & grep banna in .txt files .,"find . -name ""*.txt"" -exec echo {} \; -exec grep banana {} \;"
Counts the number of lines in *.php and *.inc files in a current folder and subfolders.,find . -name '*.php' -o -name '*.inc' | xargs wc -l
Recursively finds latest modified file in a directory,"find . -type f -print0 | xargs -0 stat -f ""%m %N"" | sort -rn | head -1 | cut -f2- -d"" """
"Remove all directories called ""test"" from the current directory tree","find -path ""*/test/*"" -delete"
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them,find MyApp.app -name Headers -type d -delete
Search the `images' directory tree for regular files,find images/ -type f
find all the directories in current folder and delete them,find . -type d -delete
Print the list of files and directories of the /etc directory,find /etc/. ! -name . -prune
find all readable files,find / -readable
"Print all filenames in /usr/src except for those that are of the form '*,v' or '.*,v'",find /usr/src -not \ '{}' \; -print
Search the /path directory tree for files that do not have a valid user or group,find /path -nouser -or -nogroup
"Recursively change the owner of all ""*.txt"" files under ""/mydir"" to ""root""","find /mydir -type f -name ""*.txt"" -execdir chown root {} ';'"
Find all files/directories with '.js' extension under current directory tree excluding paths that contain the directory './directory',"find -name ""*.js"" -not -path ""./directory/*"""
"find all the html, javascript and text files in the current folder","find . -type f -name ""*.htm*"" -o -name ""*.js*"" -o -name ""*.txt"""
Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end,"find /etc -maxdepth 1 -name ""*.conf"" | tail"
"remove all the ""core"" files in the current folder which have not been changed in the last 4 days.",find . -name core -ctime +4 -exec /bin/rm -f {} \;
Find all files/directories under current directory,find | xargs
Search the current directory recursively for regular files modified 2 days ago,find . type -f -mtime 2
"Find all regular files under and below /home/admin/public_html/, and change their permissions to 644",find . /home/admin/public_html/ -type f -exec chmod 644 {} \;
Replace all spaces with underscores in directory paths under current directory.,"find -name ""* *"" -type d | rename 's/ /_/g'"
Find all regular files under test directory,find test -type f
Find all *.plist files/directories under current directory,find . -name \*.plist
"List the regular files of the current directory tree that contain string ""texthere""","find -type f -exec grep -l ""texthere"" {} +"
Find all directories under current directory and set read & execute permission for group and other for these files,find . -type d -print0 | xargs -0 chmod go+rx
count lines of C or C++ or Obj-C or Java code under the current directory,find . \ -print0 | xargs -0 wc
display the manual page of find,man find
Print the list of all directories under the current directory and below,find ./ -type d -print
"renames all "".htm"" files to "".html"" files","find . -name ""*.htm"" -exec mv '{}' '{}l' \;"
"find all the directories with the name ""uploads"" in current folder",find . -type d -name 'uploads'
"display list of all the hidden files in the directory ""/dir/to/search/""","find /dir/to/search/ -name "".*"" -ls"
search for all the regular files in the folder /home which have the permission 077,find /home -type f -perm 0777 -print
Update timestamps of all files in entire filesystem which are not newer than /tmp/timestamp,find / ! -newer /tmp/timestamp -exec touch {} \;
delete all the tmp files  in the /tmp folder,"find /tmp -name ""*.tmp"" | xargs rm"
find all the text files in the home directory,find ~/ -name '*.txt'
Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed,file_changed=$(find . -depth \( -wholename \./\.\* \) -prune -o -mtime -1 -print | cpio -oav)
"Find all files named ""filename""","find -name ""filename"""
create a zip file of all the files in some directory,find $directory -type -f -execdir zip -j $ZipFileName {}\;
"Recursively finds all ""*.pas"" and ""*.dfm"" files and prints strings with ""searchtext"" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number.","find . -type f \( -name ""*.pas"" -o -name ""*.dfm"" \) -print0 | xargs --null grep --with-filename --line-number --no-messages --color --ignore-case ""searchtext"""
Find SGID files,find / -perm +2000
Find all *.py files/directories under current directory,find . -name \*.py -print
Find all regular files in and below the home directory that have been modified in the last 90 minutes,find ~ -type f -mmin -90
Find all *.jpg files under current directory,find . -name *.jpg
Search the current directory tree for regular files omitting directory `omit-directory',find . -name omit-directory -prune -o -type f
Recursively delete all files/folders named '.svn' in a current folder.,find . -name .svn -delete
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" -exec rm {} \;"
display all the regular/normal files in the current directory,find . -type f
"find all files in the file system with the permissions 777 and having the word ""filename"" in their name.","find / -perm 777 -iname ""filename"""
Search for files greater than 20MB in the entire file system and display the path and file size,"find / -type f -size +20M -exec ls -lh {} \; | awk '{ print $NF "": "" $5 }'"
"Search the system for regular files whose names are ""filename"" ignoring the case","find / -type f -iname ""filename"""
Search  all files & directoy from root directory which  are greater then 100M and delete them .,find /  -size +100M -exec rm -rf {} \;
Find all dir* files/directories under parent,find parent -name dir*
"Search the current directory tree for the files with extension ""trc"" and remove them if they are more than three days old","find . -name ""*.trc"" -ctime +3 -exec rm {} \;"
Fiind and remove multiple files such as *.mp3 or *.txt,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
display a long list of all the jpg files in the home folder,find ~ -iname '*.jpg' -exec ls {} \;
Get the disk space used by all *.txt (case insensitive) files/directories under current directory,"find . -name ""*.txt"" -print0 |xargs -0 du -ch | tail -n1"
count all the regular files that are present in a directory,find . -type f | wc -l
Find all directories named '.texturedata' under '/path/to/look/in/' directory tree,find /path/to/look/in/ -type d -name '.texturedata'
Find all files under /path and below writable by `group' and `other',find /path -perm -022
Find files and directories modified in last 24 hours,find . -mtime 1
"find all the files in the current folder with the name ""test-a"" and move them to the folder test-10. execdir runs the command in the directory where the file is found.",find ~ -type f -name test-a -execdir mv {} test-10 \;
Find all MP3 files in the home directory tree that were modified in the last 24 hours,find ~ -type f -mtime 0 -iname '*.mp3'
Delete all .svn subdirectories under current directory,"rm -rf `find . -type d -name "".svn""`"
Find all files/directories under current directory that were accessed more than 25 but less than 35 minutes ago,find -amin +25 -amin -35
find all the files that are modified in the last 1 day,find  -mtime -1
find all the empty directories in current folder and delete them,find ./ -empty -type d -delete
Measure the disk space taken up by all *.txt files in the current directory tree,"find . -name ""*.txt"" -print0 |xargs -0 du -ch"
Recursively find the latest modified file in the current directory,find . -type f | xargs ls -ltr | tail -n 1
display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled.,find / -type f \ -exec ls -l {} \;
"display only the file names of all the files which end with "".deb""","find . -name '*.deb' -printf ""%f\n"""
Display a long listing of all regular files that are less than 50 bytes in size under '/usr/bin' directory tree,find /usr/bin -type f -size -50c -exec ls -l '{}' ';'
Find files newer than start.txt but not newer than end.txt,find ./ -newer start.txt -and ! -newer end.txt
find all jpg files in the current folder,"find . -name ""*.jpg"""
"Change string ""searc"" to ""replace"" in all files in directory hierarchy",find . -type f -exec sed -i 's/searc/replace/g' {} \;
"List regular files in current directory with read, write and execute permission for all users and also show the permissions",find . -type f  -perm a=rwx -exec ls -l {} \;
"find from / a file called ""expect"", suppressing any error messages",find / -name expect 2>/dev/null
"list in long format all files from / whose filename ends in ""jbd"", not descending into directories that are not readable while searching, and not descending into directories on other filesystems",find / -mount \! -readable -prune  -o  -path /dev -prune  -o  -name '*.jbd' -ls
display all empty files in the current folder,find . -size 0k
Get only the latest version of the file 'filename' under current directory,find . -name 'filename' | xargs -r ls -tc | head -n1
"Copy all "".php"" files in ""projects/"" directory tree to ""copy/"" preserving directory hierarchy",find projects/ -name '*.php' -print | cpio -pdm copy/
Remove files whose names match regular expression '^.*/[A-Za-z]+-[0-9]+x[0-9]+\.[A-Za-z]+$' from the current directory tree,find -regex '^.*/[A-Za-z]+-[0-9]+x[0-9]+\.[A-Za-z]+$' | xargs echo rm -f
display all directories in the folder Symfony,find Symfony -type d
"Find all files named ""filename"" in the current directory tree, not descending into ""FOLDER1"" directories",find . '' -print
Find all the files that were modified more than one day ago,find . -mtime +1
display all normal / regular files in current folder in reverse order,find . -type f | tac
Look in /home/dm and below for files with 'uniform' in their names,"find /home/dm -name ""*uniform*"""
Copy all files that match 'FooBar' in their paths under current directory tree to the '~/foo/bar' directory,"find . | grep ""FooBar"" | tr \\n \\0 | xargs -0 -I{} cp ""{}"" ~/foo/bar"
Test if a file named 'file' in the current directory is more than 1 hour old,find file -chour +1 -exit 0 -o -exit 1
"same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command",find . -name core -ok rm {} \;
Find directories modified in last 7 days,find . -mtime -7 -type d
Find all files that are modified in last 3 days,find . -type f -mtime -3
"delete all files that have the extension ""bam"" in current directory","find . -name ""*.bam"" | xargs rm"
Find all *gz files under asia and emea directory,"find asia emea -type f -name ""*gz"""
Change permissions for all PHP files under the current directory tree to 755,"find . -name ""*.php"" -exec chmod 755 {} \;"
"Find all files under current directory, calculate their md5sum",find . -type f -print0 | parallel -0 -X md5sum
change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file,find -gid 1000 -exec chown -h :username {} \;
Find files in the current directory tree whose size is less than 24000 bytes,find . -size -24000c
Locate files whose status was changed less than 1 day ago,find . -ctime -1 -print
Search the /tmp directory tree for files owned by user `ian',find /tmp -user ian
Find all files/directories with spaces in their names under ~/Library directory,find ~/Library -name '* *'
Search only for regular files,find -type f
list all regular files which path is not dir1 or dir2,find dir -not \ -type f
"Find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names",find /basedir/ \( -iname '*company*' -and \( -iname '*.txt' -or -iname '*.html' \) \) -print0
"search for the files ""foo.txt"" in the current folder and rename it to foo.xml",find -name foo.txt -execdir rename 's/\.txt$/.xml/' '{}' ';'
Find files in entire file system that are writable by group or other,"find / -perm /g=w,o=w"
"Write the list of all files on the system to ""masterfilelist.out""",find  /   -print > masterfilelist.out
display all files in the current folder and do not search in the sub directories,find . -maxdepth 0
count the lines of java code for all the java files in the current directory,"find . -name ""*.java"" -print0 | xargs -0 wc"
search all the files in the current folder using regex excluding those that are present in the folder test,"find . -name test -prune -o -regex "".*/my.*p.$"""
"Find all directories under and below /home/admin/public_html/, and change their permissions to 755",find /home/admin/public_html/ -type d -exec chmod 755 {} \;
Find all files/directories under current directory tree with '.old' extension,find . -name ”*.old” -print
find all the files that have been modified in the last 4 days  and copy them to folder.,find . -mtime 4 -daystart -exec cp -a {} /home/devnet/fileshare\$ on\ X.X.X.X/RECOVER/ \;
Find all files under current directory and run /tmp/clever.sh for each of them with each file path as an argument,find . -type f -exec /tmp/clever.sh {} \;
Find all *.mp4 files under /foo/bar and move them to /some/path,find /foot/bar/ -name '*.mp4' -exec mv -t /some/path {} +
find not case sensitive all directories that names are 'apt',"find  / -type d -iname ""apt"""
Find all files/directories under test directory,find test
find all the files in the current folder that have been modified in the last 7 days,find -mtime -7 -daystart
Find all files/directories following symbolic links under current directory tree that are owned by 'root' user,find . -follow -uid 0 -print
"Recursively search for all files with names ending with ""_test.rb"", renaming them to end with ""_spec.rb"", using at most 1000000 characters per command.","find . -name ""*_test.rb"" | xargs -s 1000000 rename s/_test/_spec/"
Find all files files under the current directory except *.txt,find . -maxdepth 1 -type f -not -regex '.*\.txt'
Recursively removes all files like '*.pyc' of '*.pyo' in a current folder without prompting.,"find . -type f -name ""*.py[c|o]"" -exec rm -f {} +"
Give all files in the /path/to/base/dir tree read privileges,find /path/to/base/dir -type f -print0 | xargs -0 chmod 644
Find all the files in the current directory recursively whose permissions are 777,find . -type f -perm 0777 -print
Find all regular files in the current directory tree and count them,find -type f -printf '.' | wc -c
find all the files  that were changed within the last 24 hours,find / -ctime -1
"find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled",find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
Find all files and directories and count them,find ./ | wc -l
Find the most recently changed files in a subtree,find . -type f -printf '%TY-%Tm-%Td %TT   %p\n' | sort
find not case sensitive all directories that names are 'apt' and display details,"find  / -type d -iname ""apt"" -ls"
display all the files in the current folder which have been accessed in the last 60 minutes,find . -amin -60
display all the files in the current folder along with the change time and display file names of the last 10 changed files,"find . -type f -printf ""%C@ %p\n"" | sort -rn | head -n 10"
Find files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days and print them with null character appended to their paths,"find ""${DIR_TO_CLEAN?}"" -type f -mtime +${DAYS_TO_SAVE?} -print0"
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find's -ls option,find ./ -daystart -mtime -3 -type f  ! -mtime -1 -exec ls -ld {} \;
sort based on size and display top ten largest normal/regular files in the current folder,find . -type f -exec ls -s {} \; | sort -n -r | head -10
"Search the current directory tree for .rb files ignoring the ""./vendor"" subdirectory","find . -name '*.rb' ! -wholename ""./vendor/*"" -print"
"Count the *.html files residing in the /usr/src directory tree and containing string ""foo""","find /usr/src -name ""*.html"" | xargs grep -l foo | wc -l"
"display all the files in the folder ""/Users/Me/Desktop"" which belong to the user ""popo"" and which have the permission 777",find /Users/Me/Desktop -user popo -perm 777
Convert all m4a sound files in a directory and its subdirectories to mp3 files,"find . -type f -name '*.m4a' -exec bash -c 'avconv -i ""$0"" ""${0/%m4a/mp3}""' '{}' \;"
List the unique file extensions of all files under the current directory,find . -type f | grep -o -E '\.[^\.]+$' | sort -u
Run 'git pull' in every subdirectory of the current directory,find . -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} pull \;
Find all the files in file system which are accessed in last 1 hour,find / -amin -60
"List all regular files residing in the current directory tree and containing string ""/bin/ksh""",find . -type f -print | xargs grep -li 'bin/ksh'
Check if a specific directory exists and has setgid bit set recursively.,"#!/bin/bash

directory=""/path/to/directory""

if [ -d ""$directory"" ] && [ $(find ""$directory"" ! -perm -2000) ]; then
    echo ""Directory exists and has setgid bit set""
else
    echo ""Directory either does not exist or does not have setgid bit set""
fi"
find all the files in the file system which have been changed in the last 24 hours.,find / -ctime -1
Set permissions to 700 for directories under media/,find media/ -type d -exec chmod 700 {} \;
Print the file sizes along with their paths for all *.txt  files/directories under current directory tree,"find . -iname ""*.txt"" -exec du -b {} +"
search for all the foo.txt files in the current folder and move them to another location,find . -name foo.txt -print0 | xargs -0  -I{} mv {} /some/new/location/{}
"Measure the execution time of the command: find /usr/src -name ""*.html"" -exec grep -H ""foo"" {} ';' | wc -l","time find /usr/src -name ""*.html"" -exec grep -H ""foo"" {} ';' | wc -l"
Find files under /some/path that are not executable,find /some/path -type f ! -perm -111 -ls
Find all  'custlist*' files under current directory,find . -name custlist\*
Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/' directory with new names constructed by prepending 'copy' in their names,"find  /home/mine -iname ""*.png"" -printf ""%P\n "" | xargs  -I % -n1 cp %  /home/mine/pngcoppies/copy%"
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago,find -maxdepth 1 -type f -mtime -1
Find a.out and object files in the current directory tree,find .  -print
Find all files in the current directory tree and replace string $1 with string $2 in them,"find ./ -type f -exec sed -i ""s/$1/$2/"" {} \;"
"Remove all files named ""filename"" from the current directory tree, ignoring directory ""FOLDER1""",find . -name FOLDER1 -prune -o -name filename -delete
Print a listing of the `other' directory,"find other -maxdepth 1 -printf ""%P\n"""
"find for the word ""dba_2pc_pending"" in all the files of current fodler having the word ""sql"" in their name",find . -print|grep sql|xargs grep -i dba_2pc_pending
Locate files that reside in the home directory and have not been accessed in the past 30 days,find $HOME -atime +30
Find all *.php  and *.js files  under /home/jul/here excluding  /home/jul/here/exclude/* paths,"find /home/jul/here -type f \ ! -path ""/home/jul/here/exclude/*"""
display all the regular files in current folder,find . -type f
display the count of regular/normal files in the current folder do not search in sub directories,find . -maxdepth 1 -type f |wc -l
Delete empty directories,find . -type d -empty -delete
List all SGID and SUID files in entire file system,find / -type f \ -ls
"display all the files in the current folder excluding those that are present in the folder ""secret""",find . \ -o -print
Find all the files which are modified in last 1 hour,find / -mmin -60
display all files in the current folder which do not belong to the user john,find . ! -user john
find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files,find . -type f -iname '*.CR2' -print0 | xargs -0 -n 1 -P 8 -I {}
Find all empty directories recursively starting from the current one and delete them,find . -type d -empty -delete
display the three largest files by size in current folder,find . -type f -exec ls -s {} + | sort -n -r | head -3
List all regular files modified more than 61 days,find -type f -mtime 61 -exec ls -ltr {} \;
Find all .txt files in the current directory tree and edit them with `vim',"find . -name ""*.txt"" | xargs vim"
find all files named `linux' on the system,find / -name linux
Search the directory tree given as variable $dir for regular files,find $dir -type f
"Find all .py files in the current directory except ""setup.py"" and those beginning with ""test_""",find . -maxdepth 1 -mindepth 1 \
find a file in current folder and discard the errors,find /. -name 'toBeSearched.file' 2>/dev/null
Find all files under current directory and change their permission to 644,find . -type f -exec chmod 644 {} \;
search a url in all regular/normal files in a folder.,find ./ -type f -exec grep https://www.ksknet.net {} \;
Find all files that were not accessed in the past 100 days,find /home -atime +100
"Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string ""debug (""","find /srv/www/*/htdocs/system/application/ -name ""*.php"" -exec grep ""debug ("" {} \; -print"
"Find all loadable modules for current kernel, whose name includes ""perf""",find /lib/modules/`uname -r` -regex .*perf.*
find all the normal/regular files in the current directory which have been modified in the last 24 hours,find . -mtime -1 -type f -print
"search for the file ""process.txt"" in the current directory","find . -name ""process.txt"""
Give the location of every hard link to file1 in the /home directory tree,find /home -xdev -samefile file1 | xargs ls -l
Recursively removes all files like any-cased '*.pyc' in a current folder.,find . -iname '*.pyc' -print0 | xargs -0 --no-run-if-empty  rm
"Search the current directory tree for symlinks whose contents match pattern ""*sysdep.c""",find . -lname '*sysdep.c'
Find all mysong.ogg files/directories under your home directory,find $HOME -name 'mysong.ogg'
"List all files in the ""test"" directory tree except those with '/invalid_dir/' in the pathnames",find test -print | grep -v '/invalid_dir/'
display all the jpg files in the current folder and do not search in sub directories,find . -maxdepth 1 -mindepth 1 -iname '*.jpg' -type f
find all files in the current folder that have a single letter in their name and have not been modified today,find . -name \? -mtime +0
display all the files in the user folder which have been modified after the files /tmp/stamp$$,find /usr -newer /tmp/stamp$$
Get a list of directories owned by group ID 100,find / -type d -gid  100
"Make a new directory ""new-dir"" in every directory in the current working directory non-recursively","find . -maxdepth 1 -type d | xargs -I ""{x}"" mkdir ""{x}""/new-dir"
Kill the processes of user `myuser' that have been working more than 7 days,find /proc -user myuser -maxdepth 1 -type d -mtime +7 -exec basename {} \; | xargs kill -9
Find all directories recursively starting from / and count them,find / -type d | wc -l
"display all files in the current folder which end with extension ""myfile"" followed by two digits",find . -regex '.*myfile[0-9][0-9]?'
display all normal/regular files in current folder in sorted order,find . -type f print0 | sort -r
Create symlinks to all  /home/folder1/*.txt files and 'folder1_' directory with the same name in a target directory named '+',"find /home/folder1/*.txt -type f -exec ln -s {} ""folder1_"" +\;"
Find all 2*.data files/directories under jcho directory,find jcho -name 2*.data
find all the empty in the current folder do not search in sub directories,find . -maxdepth 1 -type d -empty
Find all *foo* files/directories under current directory and copy them to /your/dest,"find . -name ""*foo*"" | sed -e ""s/'/\\\'/g"" -e 's/""/\\""/g' -e 's/ /\\ /g' | xargs cp /your/dest"
Remove all files with a txt extension under current directory,"find . -type f -name ""*.txt"" | xargs    -I {} ksh -c ""echo deleting {}; rm {}"""
Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory,find -maxdepth 3 -mindepth 3 -type f -iname '*.jpg' -exec rename -n 's/jpg$/jpeg/i' {} +
tar all the regular java files to myfile.tar,"find . -type f -name ""*.java"" | xargs tar cvf myfile.tar"
Counts total lines in PHP and JS files.,"find . -name '*.js' -or -name '*.php' | xargs wc -l | grep 'total'  | awk '{ SUM += $1; print $1} END { print ""Total text lines in PHP and JS"",SUM }'"
Find recursively the latest modified .zip file in the current directory,"find . -name ""*zip"" -type f | xargs ls -ltr | tail -1"
"Return 0 if at least one ""abc"" file in the current directory tree contains text ""xyz""",find . -name 'abc' -type f -exec grep -q xyz {} +
Remove files that are greater than 1MB in size under current directory,find . -type f -size +1M -exec rm {} +
"find all directories with the name ""lib64"" in the usr folder and replace space with ':'",find /usr -name lib64 -type d|paste -s -d:
search for all the files in current folder and display all the file names separated by space,"find . | awk '{printf ""%s "", $0}'"
Find all directories under '/nas' directory tree,find /nas -type d
"Find all *.c files under and below the current directory that contain ""wait_event_interruptible""",find . -name \*.c -exec grep wait_event_interruptible {} /dev/null \;
"Find symlinks under and below the ""test"" directory and replace them with the content of the linked files",find test -type l -exec cp {} {}.tmp$$ \; -exec mv {}.tmp$$ {} \;
recursively look for files ending in either .py or .py.server,find . \
Search the .java files from the /Applications/ directory tree for TODO lines,"find /Applications/ -name ""*.java"" -exec grep -i TODO {} +"
display all the mp4 and flv files in a folder along with their timestamps in the sorted order of time,find /storage -type f \ -printf '%T@ %p\0' | sort -zn)
List the unique parent directories of all .class files found in the entire filesystem,find / -name *.class -printf '%h\n' | sort --unique
"Print the names and sizes of regular files residing in the ""tmp"" directory tree","find tmp -type f -printf ""%s %p\n"" | awk '{sub(/^[^ ]+/,sprintf(""f %10d"",$1))}1'"
Assign permissions 755 to directories in the current directory tree,find . -type d -print0 | xargs -0 chmod 755
remove all the files in the present directory which have space in their name.,"find . -name ""* *"" -exec rm -f {} \;"
find all files in the current folder which are bigger than 10bytes,find . — size +10 -print
Print 'Empty dir' if $some_dir is empty,"if find ""`echo ""$some_dir""`"" -maxdepth 0 -empty | read v; then echo ""Empty dir""; fi"
"Find all regular files in the current directory tree and search them for ""example""",find -type f -print0 | xargs -r0 grep -F 'example'
Find recursively all empty directories in the current directory,find -type d -empty
Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path,find /foo/bar -name '*.mp4' -print0 | xargs -0 mv -t /some/path {}
List all *.txt files under current directory that match 'foo=' in their file information,"find . -name ""*.txt"" -type f -print | xargs file | grep ""foo="" | cut -d: -f1"
Find all files of the user with UID=1000,find -uid 1000
"Remove all directories called ""test"" from the current directory tree",find . -name test -type d -exec rm -r {} \;
Find files/directories writable by group and others under the /path directory,"find /path -perm -g+w,o+w"
Find all *.c files under /home,"find /home -name ""*.c"""
Print and recursively remove the alphabetically last directory in the current directory,find -mindepth 1 -maxdepth 1 -type d | cut -c 3- | sort -k1n | tail -n 1 | xargs -r echo rm -r
Find all *.txt files/directories under current directory and execute the python script hello.py for each of them with the file path as an argument to the script,"find . -name ""*.txt"" | python hello.py"
Make a directory structure same as the current directory tree under /tmp/tar_root directory,for i in `find . -type d`; do mkdir -p /tmp/tar_root/`echo $i|sed 's/\.\///'`; done
Move all *$lower1* files/directories under current directory to paths formed by replacing the match of $lower1 with $lower2 in their paths,"find . -name ""*$lower1*"" -exec bash -c 'mv ""$1"" ""${1/$2/$3}""' -- {} $lower1 $lower2 \;"
Find all files/directories that are owned by user 'dave' under current user's home directory tree,find ~ -user dave -print
"Find all files under current directory, calculate their md5sum and print each of the hash and file name to filename-hash.md5 files","find . -type f | while read f; do g=`md5sum $f | awk '{print $1}'`; echo ""$g $f""> $f-$g.md5; done"
"search in the current folder for the file with the name ""test""",find . -name test
find all the text files in the home folder,"find ~ -name ""*.txt"" — print"
find file named foo.txt under current directory.,find . -name foo.txt
Find all files/directories in current directory and execute multiple ANDed commands  for each file,find . -exec cmd1 \; -exec cmd2 \;
Find all directories in maximum 2 levels down the /tmp directory,find /tmp -maxdepth 2 -mindepth 1 -type d
Find all files under current directory,find -type f
display all the empty files in the folder /opt,find /opt -type f -empty
"find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once","find / \ , \  \"
search for the word text in all the python files in the current folder,"find . -iname '*py' -exec grep ""text"" {} \;"
prints the names of all files in the directory tree rooted in /usr/src whose name ends with ‘.c’ and that are larger than 100 Kilobytes.,find /usr/src -name '*.c' -size +100k -print
Find all .txt files under the current directory and below,find -name \*.txt
Remove all files with the .c extension in the current directory tree,"find . -name ""*.c"" | xargs rm -rf"
Find all 400 permission files under /data directory with null character as the delimiter,find /data -type f -perm 400 -print0
find files in current directory that names are game,find . -name game
Print a list of all filepattern-*2009* files/directories under data/ to filesOfInterest.txt file,find data/ -name filepattern-*2009* -print > filesOfInterest.txt
copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize.,"find /raid -type d -name "".local_sd_customize"" -ok cp /raid/04d/MCAD-apps/I_Custom/SD_custom/site_sd_customize/user_filer_project_dirs {} \;"
Find all files/directories in all paths expanded by the glob pattern *,find *
Delete all the 'test' directories from all directories under maximum 1 level down the current directory that contain directories named 'test' and 'live',"find -maxdepth 1 -type d -exec sh -c ""cd {} && [ -d test ] && [ -d live ] && rm -rvf test "" {} \;"
Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago,find $LOCATION -name $REQUIRED_FILES -type f -mmin +360 -delete
display the amount of disk space used by all the log files in the folder /usr/local/apache/logs/,"find /usr/local/apache/logs/ -type f -name ""*_log""|xargs du -csh"
"Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with ""autumn"".",find . -user daniel -type f -name *.jpg ! -name autumn*
Search the system for the file 'myfile' ignoring permission denied errors,find . -name myfile |& grep -v 'Permission denied'
Check if the directory tree whose name is given as variable $somedir contains no regular files,"find ""$somedir"" -type f -exec echo Found unexpected file {} \;"
Find root's Ruby files accessed in the last two minutes,find /apps/ -user root -type f -amin -2 -name *.rb
"Search for occurrences of string ""main("" in the .c files from the current directory tree","find . -name ""*.c"" -print | xargs grep ""main("""
"Search the files from the current directory tree for ""foo""",find . -exec grep foo {} \;
find all the files in the current folder that end with the word bar,find -name *bar
"Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx","find . -perm u=rwx,g=rx,o=rx"
"Remove all .sh files in the current directory tree whose names begin with ""new""","find . -name ""new*.sh"" -exec rm -f '{}' \;"
Find all *.txt files/directories in entire file system,"find / -name ""*.txt"""
Find all *.gz files/directories under asia and emea directory,find asia emea -name \*.gz -print0 | xargs -0
"Find all TXT files in the current directory and copy them to directory ""$HOME/newdir""","find ""$HOME"" -name '*.txt' -type f -not -path ""$HOME/newdir/*"" -print0 | xargs -0 cp -t ""$HOME/newdir"""
List root's regular files with permissions 4000,find / -type f -user root -perm -4000 -exec ls -l {} \;
Find all files under /somefolder matching the extended case insensitive regex '\./$' in their paths,find -E /somefolder -type f -iregex '\./$'
"Find all files named ""file.ext"" within the current folder and print the path where each one is located","find `pwd` -name ""file.ext"" -exec dirname {} \;"
find the path of a specfic video file in the current directory,find . -name foo.mp4 | sed 's|/[^/]*$||'
replace the name php_admin_flag to #php_admin_flag in all the .htaccess files in the folder /home/nobody/public_html,"find /home/nobody/public_html -type f -name .htaccess -exec replace ""php_admin_flag"" ""#php_admin_flag"" -- {} \;"
find all files in the current directory do not display the files which are not readable,find . ! -readable -prune
Find all regular files that reside in the current directory tree and were last modified more than 1 day ago,find . -type f -mtime +1
find all pdf files in the current folder,find . -name “*.pdf” -print
"Search for all files in the current directory recursively whose names begin with ""Linkin Park""","find . -name ""Linkin Park*"""
Copy all .png files from the home directory tree to imagesdir/,find ~/ -name *.png -exec cp {} imagesdir \;
"List all directories in current directory, works even if they have weird names or names starting with a dash.","find -maxdepth 1 -type d | awk -F""./"" '{print $2}'"
Find all files under images directory,find images -type f
Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]',find /dev/sd*[a-z] | wc -l
List all files/directories under current directory,find -ls
display all the files in the folder /home which do not belong to the group test,find /home -not -group test
Find and clear UTF-8 files with BOM,find . -type f -exec sed '1s/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
display all instances of the .profile file in the entire file system,find / -name .profile -print
"Print every found file like '*.cfg' under '/path/to/files/' directory followed by its content, and wait 2 seconds after each printed file",find /path/to/files -type f -name \*.cfg  -print -exec cat {} \; -exec sleep 2 \;
Remove trailing white spaces from all files under current directory ignoring directories wtih *.git*  in their paths and keep backups of the originals,"find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E ""s/[[:space:]]*$//"""
delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command,find /tmp/ -type f -mtime +1 -exec rm {} +
display all the files in the folders /etc /srv excluding the paths /etc/mtab and  /srv/tftp/pxelinux.cfg,find /etc /srv \( -path /srv/tftp/pxelinux.cfg -o -path /etc/mtab \)  -prune -o -print
display a list of all files in the folder passed as argument to a script,find $@ -ls
Create symlinks to all  /home/folder1/*.txt files with the same name in current directory,find /home/folder1/*.txt -type f -exec ln -s {} \;
Exclude directory from find . command,find . -name '*.js' | grep -v excludeddir
Find all files in the current directory tree whose pathnames match pattern '*/1/lang/en.css',find . -path ‘*/1/lang/en.css’ -print
find all the header files in /usr/include which have been modified in the last 400 days,"find /usr/include -type f -mtime -400 -name ""*.h"""
search for a word in all the files in the current directory and display the list of matched files.,find . -type f -exec grep -l 'needle' {} \;
Find and print the names of all files found in the current directory and all of its sub-directories.,find .
find the ten biggest files,"find /home -type f -exec du -s {} \; | sort -r -k1,1n | head"
Find files by type,find -type type_descriptor
"Recursively search for all directories containing ""foo""  under the current directory, renaming them to replace ""foo""  with ""Bar""",find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +
find all text files in the current directory and compress them to a cpio file,find . -name '*.txt' | cpio -pdm /path/to/destdir
Find all files/directories named 'photo.jpg' under current directory tree,find -name photo.jpg
Find all .txt files in the user's home directory and below.,find ~/ -name '*.txt'
Find all files under /somefolder matching the extended case insensitive regex '\./(.*\.error.*|second.*log|.*FFPC\.log)$' in their paths,find -E /somefolder -type f -iregex '\./(.*\.error.*|second.*log|.*FFPC\.log)$'
"Remove all files except the ones listed in ""MANIFEST""",find -type f -printf %P\\n | sort | comm -3 MANIFEST - | xargs rm
"show all the files in the current folder excluding those from the directories whose name starts with ""git""",find . -type d -name '.git*' -prune -o -type f -print
create a list of all files in all subdirectories,find . -type f -exec md5 {} \;
Delete empty files and print their names,find . -empty -delete -print
display all directories in current folder excluding those that are present in .git folder,find . -iregex '.*/.git/.*' -prune -o -type d -name 'CVS'
Create a script to find and delete all backup files older than a certain number of days.,"#!/bin/bash

find . -name '*.bak' -mtime +$1 -delete
echo ""Old backup files deleted."""
Find & Substitute Only 2nd Occurrence of a Word Using sed s//2 in all .txt files,"find . -type f -name ""*.txt"" -exec sed 's/Linux/Linux-Unix/2' thegeekstuff.txt"
"search for the file job.hostory in the folder ""/data/Spoolln""",find /data/SpoolIn -name job.history
Find recursively the latest modified file in the current directory,find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'| sort -n | tail -n1
Counts lines in each of *.php files in current folder with subfolders and prints total count as well.,find . -name '*.php' | xargs wc -l | sort -r
Construction with additional '-exec true' to be used if both commands need to run regardless of their success or failure.,"find . -name ""*.txt"" \ -exec grep banana {} \;"
list files in /u/bill that were last read from 2 to 6 minutes ago,find /u/bill -amin +2 -amin -6
Find all directories under minimum 1 level down the  $GIVEN_DIR directory with null character as the delimiter,"find ""$GIVEN_DIR"" -type d -mindepth 1 -print0"
find file named foo.txt under root / directory.,find / -name foo.txt
Find all the files named 'vimrc' anywhere on the system,find / -name vimrc
Find recursively all files under current directory tree that contain a colon in the filename,find . -name \*\:\*
Print content of all files found regarding seach options '[whatever]',find [whatever] -exec cat {} \;
Move all *.php~  files under current directory to /mydir,"for D in `find . -iname ""*.php~""`; do mv ${D} /mydir; done"
Find and remove zero bytes files from user's directories .,find /usr/* -size 0c -exec rm {} \;
"find all the regular/normal files in the folder ""myfiles"" which have the permission 647.",find /myfiles -type f -perm -647
Find all files and directories starting from the current directory and excluding hidden files and directories,find . \( ! -regex '.*/\..*' \) | sed 's/^..//'
Find regular files in the current directory tree that have any executable bits set,find -L . -type f \
Find all files on the system that are world writable,find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \;
search for a word in all the regular/normal files in the entire filesystem. ( + is used to give more than one file as input to the grep command.,find / -type f -exec grep -i 'the brown dog' {} +;
searches through the /usr directory for the regular  file named 'Chapter1*',"find /usr -name ""Chapter*"" -type f"
Find all files under /path/to/base/dir and change their permission to 644,find /path/to/base/dir -type f -exec chmod 644 {} +
"find all the files starting with ""config"" in the folder Symfony",find Symfony -iname '*config*';
Find files in the current directory tree whose permissions are 775,find .  -perm 775
find all the mp3 files in the home folder which have been modified today,find ~ -type f -mtime 0 -iname '*.mp3'
Remove all tmp/*.mp3 files,find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs -n1 rm
Add group write permission to all files in the current directory,find . -maxdepth 0 -type f -exec chmod g+w {} ';'
Find directories named `doc' in /usr and below,find /usr -name doc -type d
Find files/directories under /tmp smaller than 100 bytes,find /tmp -size -100c
display all the files in the user folder which have been modified after the files /tmp/stamp$$,find /usr -newer /tmp/stamp$$
"find all directories with the name ""lib64"" in the usr folder and replace space with ':'",find /usr -name lib64 -type d|paste -s -d:
Print the list of files modified within a fortnight ago removing the leading ./ from the file names,find .  -mtime -14 | sed -e 's/^\.\///'
Search for files only that end with .php and look for the string $test inside those files,find . -name \*.php -type f -exec grep -Hn '$test' {} \;
Find all PHP files under current directory,find . -type f -name *.php
Search for aaa in all files under current directory and count the number of matches,find . -type f -exec grep -o aaa {} \; | wc -l
change permissions of files older than 30 days,find /path/to/directory -type f -mtime +30 -exec chmod 644 {} +
List all files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 | xargs -r ls -l
Remove all vmware-*.log files under current directory,"find . -name ""vmware-*.log"" -exec rm '{}' \;"
find for lighttpd in /var,find /var -name lighttpd
Find all files/directories named 'query' under current directory,"find -name ""query"""
change the permission of all the normal/regular files to 644 in the current folder,find -type f -exec chmod 644 {} \;
"Copy the current directory tree to '/path/to/destination/dir' preserving permissions, timestamp and ownership",find . | cpio -pdumv /path/to/destination/dir
Set permissions to 700 for directories under media/,find media/ -type d -exec chmod 700 {} \;
display all the symbolic links in the current folder,find . -type l
List all files in the current directory tree that were modified 60 minutes ago,find . -mmin 60 -print0 | xargs -0r ls -l
find all the files (under root file system /) that were updated in the last 24 hours,find / -mtime -1
find all files read less than 1 minute ago,find . -amin -1
Change the permission to 0644 for all files under current directory,find . -type f -exec chmod 0644 {} \;
Find all files/directories in maximum 1 level down the current directory which do not have only read permission for 'other',find . -maxdepth 1 ! -perm  -o=r
Set permissions to 700 for every subdirectory of the current directory,find . -mindepth 1 -type d -print0 | xargs -0 chmod -R 700
Find all files under current directory excluding hidden directories,find -name '.?*' -prune -o \( -type f -print0 \)
"Find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in ""*/systemctl""","find /usr/sbin /usr/bin -lname ""*/systemctl"""
Find all syslog directories under /var/log directory,"find /var/log -name ""syslog"" -type d"
find al the tmp directories in the current directory and create a dump of it,find . -type d -name tmp -prune -o -print | cpio -dump /backup
search for the regular/normal file java in the entire file system excluding search in the directories share and those starting with 10_Recommended and discard all the errors,find / \ -prune -o -type f -name java -print 2>/dev/null
Find all directories under /home/me,find /home/me -type d
Find mysong.ogg anywhere under the home directory,find $HOME -name 'mysong.ogg'
find all the files in the current directory which have the size 40 bytes in the current disk partition.,find . -size -40 -xdev -print
Print a sorted list of the extensions of the regular files from the current directory tree,find . -type f | perl -ne 'print $1 if m/\.$/' | sort -u
"Find *.pdf files in the PDFs directory tree that contain text ""perry sound"" and ""October 26, 2004""","find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext ""{}"" - | grep -l -Z -i --label=""{}"" ""perry sound"" | xargs -0 -I{} grep -i -l --label=""{}"" ""October 26, 2004"" ""{}""' \;"
display all the files ending with .c in the current folder,find . -name \*.c -print0
Delete files with inode number 782263 under current directory,find . -inum 782263 -exec rm -i {} \;
Print the names and sizes of all regular files from the current directory tree,"find . -type f -printf ""%f %s\n"""
Count total number of lines in all *.txt file in cuuent directory .,find .  -type f  -name '*.txt' -exec wc -l {} \; | awk '{total += $1} END{print total}'
"Create a symbolic link in the current directory for each file under the directories matching ""../[12][0-9][0-9]""",find ../[12][0-9][0-9][0-9] -type f -exec ln -s {} \;
Find all directories under current directory and change their permission to 700,find . -type d -exec chmod 700 {} \;
displays all files in the current directory,find .
"display all the regular/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 )",find ~/ -daystart -type f -mtime 1
search for the directory testdir in the folder /home,find /home -type d -name testdir
Change permission to 755 for all directories under $d directory tree,"find ""$d/"" -type d -print0 | xargs -0 chmod 755"
Find the sizes of only directories under current directory sorted by size and redirect the output to dir-sizes.txt,find . -type d -print0 | xargs -0 -n1 du -sk | sort -rn > dir-sizes.txt&
Change permissions of all regular files from the current directory tree to 644,find . -type f -exec chmod 644 {} +
Find regular files which have 644 permission,find . -perm 644 -type f -exec ls -l {} \;
dispaly a long listing of all the files in the current folder which have been modified in the last 14 days,find . -mtime -14 -ls
"List all *.c, *.h and *.cpp files under current directory",find . -type f \ -exec ls {} \;
copy all the mp3 files from current folder to another folder,find . -name '*.mp3' -exec cp -a {} /path/to/copy/stuff/to \;
search for a word in all the files in the current directory and display the file paths relative to the current directory,find . -exec grep -l foo {} +
"Search all files in the current directory tree for ""SearchString"", ignoring .html files and skipping .svn directories",find . \( -name '*.svn*' -prune  -o ! -name '*.html' \) | xargs -d '\n' grep -Hd skip 'SearchString'
Remove all core dump files from user's home directory,find ~/ -name 'core*' -exec rm {} \;
"Search the current directory tree for regular files whose names match regular expression "".+-[0-9]+x[0-9]+\.jpg""","find . -type f -regex "".+-[0-9]+x[0-9]+\.jpg"""
"Remove trailing spaces, replace tabs with spaces, replace Windows CRLF with Unix LF  in all *.java, *.xml and *.css files under current directory excluding ./vendor directory and its contents",find . -path ./vendor -prune -o \  -exec gsed -i -E 's/\t/    /' \{} \; -exec gsed -i -E 's/[[:space:]]*$//' \{} \; -exec gsed -i -E 's/\r\n/\n/' \{} \;
Find all 'test' directories in the current directory tree and remove them,find . -name test -type d -print0|xargs -0 rm -r --
Remove all files with '.js' extension from the 'js' directory tree,"find ./js/ -type f -name ""*.js"" | xargs rm -f"
Find all files and directories that do not match the pattern given as the $controlchars variable,"find . ! -name ""$controlchars"""
"search for all ""tif"" images in current folder",find . -name '*.tif ' -print
"display all files in current folder, with each file name displayed twice on same line","find . | xargs -I{} printf ""%s%s\n"" {} {}"
"Find recursively all files whose names begin with ""foo""","find . -name ""foo*"""
Find all files/directories named 'document' in maximum 4 levels down the '/usr' directory,find /usr -maxdepth 4 -name document -print
Set 644 permission to all regular files under current directory,chmod 644 `find -type f`
"Find recursively all files whose names ends with ""foo""","find . -name ""*foo"""
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers,find . -name '*.axvw' -print0 | xargs -0 grep -n 'some string'
"Search the /Path/bar* directories recursively for files matching pattern ""file_name*""","find /Path/bar* -name ""file_name*"""
Search the current directory recursively for text files containing at least one character,find -type f -exec grep -Iq . {} \; -and -print
Find all the files in entire file system  which are modified 50 days back.,find / -mtime 50
Find files that were modified in less than 1 minute ago,find / -mmin -1
Print all filenames under /proc and below,find /proc -exec ls '{}' \;
find all the php files,find -name '*.php'
"find all the cpp(C++ source files), java, header files in the current directory",find . -name *.cpp -o -name *.h -o -name *.java
create a backup of all the files which have been modified in the last 48 hours,find source/directory -ctime -2 | cpio -pvdm /my/dest/directory
Rename all *.jpg files to *.jpg$.jpg files under current directory by appending the parent directory name at the beginning of their names,"find . -name '*.jpg' -exec sh -c 'mv ""$0"" ""$(basename $)-${0%.JPG}$.jpg""' {} \;"
list *.bmp and *.txt files under the /home/user/Desktop directory.,find /home/user/Desktop -name '*.bmp' -o -name '*.txt'
Find all regular files with '.txt' extension excluding 'README.txt' files under current directory tree,"find . -type f -name ""*.txt"" ! -name README.txt -print"
Find files that are empty,find -empty -type -f
Find files/directories under current directory and print them,find . -print0 | xargs    -0 echo
"Find all regular files under current directory tree, prepend '#' at the beginning of the lines that contain 'abc' in those files and modify them in-place",find . -type f -exec sed -i ‘s/.*abc.*/#&/’ {} \;
Find all files/directories named 'vimrc' in the entire filesystem,find / -name vimrc
Run 'chmod 0644' on all files in the current directory tree,find . -type f -exec chmod 0644 {} \;
Print the files to which symbolic links in the current directory point,find . -type l -print | xargs ls -ld | awk '{print $10}'
List recursively all files and directories in /var/www and pass the result to the `more' pager,find /var/www | more
Find all regular files in the current directory tree ignoring directory ./source/script,find . -path ./source/script -prune -o -type f -print;
remove all the pdf files in the current folder and do not delete those in the sub folders,"find . -name ""*.pdf"" -maxdepth 1 -print0 | xargs -0 rm"
Delete all broken symbolic links under '/usr/ports/packages' directory tree,find -L /usr/ports/packages -type l -exec rm -- {}	+
Run script `fixname.sh' for each regular file from the current directory tree,find . -type f -exec sh fixname.sh {} \;
"List regular files in current directory with read, write and execute permission for all users and also show the permissions",find . -type f  -perm 777 -exec ls -l {} \;
List files under current directory according to their size in descending order,find . -type f -exec ls -s {} \; | sort -n -r
"Find all regular files with permissions 777 under and below /home/user/demo/, and change their permissions to 755",find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \;
find files under the current directory containing a space in the filename and delete them,"find . -name ""* *"" -exec rm -f {} \;"
Find all files/directories that are owned by user 'wnj' and are newer than 'ttt' by modification time in the entire filesystem,find / -newer ttt -user wnj -print
change the ownership of all regular/normal files in the current directory,find . -type f -print0 | xargs -0 chown username
remove all the core files in the temp file after user confirmation,find /tmp -name core -type f -print0 | xargs -0 /bin/rm -i
List .c files in the current directory,"find . \( ! -name . -prune \) -name ""*.c"" -print"
"search for the file ""process.txt"" in the current folder (case insensitive search)",find . -iname 'process.txt' -print
sort and display top 11 files along with the last access date for all the files in the file system,"find / -type f -printf ""\n%AD %AT %p"" | head -n 11 | sort -k1.8n -k1.1nr -k1"
Find all the files without permission 777 in the file system,find / -type f ! -perm 777
"search for the directory ""ora10"" in the entire file system","find / -type d -name ""ora10"""
delete all the empty files in the current directory,find . -empty -exec rm {}\;
Find all *.java files in the current directory tree,find . -name  \*.java
find all the files that are modified in the last 7 days,find -daystart -mtime -7
Search for ERROR in all btree*.c files under current directory,grep ERROR $(find . -type f -name 'btree*.c')
Find all files/directories under .. directory and copy them to ~/foo/bar,find .. -exec cp -t ~/foo/bar -- {} +
list regular file which file name end with 'cache' 'xml' or 'html' in current directory,find . -type f \
Find all *.jpg files/directories under current directory,find . -name '*.jpg'
Recursively find the latest modified file in the current directory and print the modification time and filename,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" "" | sed 's/.*/""&""/' | xargs ls -l"
search for all the .o files in the current directory which have permisssions 664 and print them.,find . -name *.o -perm 664 -print
Find SQL files with text `expression',"find . -name ""*.sql"" -print0 -type f | xargs -0 grep ""expression"""
Scan every file in /etc for IPV4 addresses.,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
Prints total count of lines of all files in a current folder and subfolders.,find . -type f -exec wc -l {} \; | awk '{ SUM += $0} END { print SUM }'
Change permissions to 644 of multiple regular files with permissions 755,find . -type f -perm 755 -exec chmod 644 {} \;
Remove all libGLE* files from the current directory tree,find . -name libGLE* | xargs rm -f
"Compare each .xml file under the current directory with a file of the same name in ""/destination/dir/2""",find . -name *.xml -exec diff {} /destination/dir/2/{} \;
"Find all files modified on the 7th of June, 2007, starting from the current directory",find . -type f -newermt 2007-06-07 ! -newermt 2007-06-08
"find all the files in the current folder with the name ""test-a"" and move them to the folder test-10",find ~ -type f -name test-a -exec mv {} test-10 \;
Find regular files which have 644 permission,find . -perm 644 -type f -exec ls -l {} \;
find all regular/normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes,find . \ -and ! -type d -and -mmin -30
"Find files containing string ""#!/bin/ksh"" and append their names and matching strings to /tmp/allfiles",find . -type f -execdir /usr/bin/grep -iH '#!/bin/ksh' {} \; | tee /tmp/allfiles
list all the sqlite files in the current folder,"find ./ -name ""*.sqlite"" -ls"
Find all regular files under '/home/john' directory tree that start with 'landof' in their names,"find /home/john -name ""landof*"" -type f -print"
Search the home directory tree for all .txt files,find ~/ -name '*.txt'
"Search the current directory recursively for .sh files whose names begin with ""new""","find . -name ""new*.sh"""
"Find all *.jpg  files under maximum 2 levels down the temp/images/* paths and run `mogrify -resize 100x100"">"" -quality 80 -compress JPEG -monitor -strip` with the file paths as arguments","find temp/images/* -maxdepth 2 -iname ""*.jpg"" -print0 | xargs -0 mogrify -resize 100x100"">"" -quality 80 -compress JPEG -monitor -strip"
display the filenames which do not have begin with dot (.),find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\n'
Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago,find -maxdepth 1 -type d -mtime -1
List the .py files which reside in the current directory tree and whose parent directory contains a Makefile,find . -name '*.py' -exec bash -c 'test -f $/Makefile' -- {} \; -print
Show the number of lines for each PHP file in the current directory tree,"find . -type f -name ""*.php"" -exec wc -l {} +;"
Search the /home/test directory tree for directories and files called '.ssh',find /home/test -name '.ssh'
Find all files/directories under current directory and print their paths,find . -exec echo {} +
Search the current directory recursively for files last modified within the past 24 hours ignoring paths ./es* and ./en*,find . -mtime 0 | grep -v '^\./en' | grep -v '^\./es'
Copy all .patch files from the current directory tree to patches/,find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches/
display all the directories in specific path  excluding those that are present in a path and save the ouput to a file,find $x -type d -wholename '*' ! -wholename */@eaDir* > /tmp/mediaindex/$nn.dir
Search the .java files from the /Applications/ directory tree for TODO lines,"find /Applications/ -name ""*.java"" -exec grep -i TODO {} \;"
Get a list of all files in the /home directory tree and their coressponding inode numbers,"find /home -type f -printf ""%i@%p\n"""
"Compress every file in the current directory tree that matches ""*cache.html"" and keep the original file","find . -type f -name ""*cache.html"" -exec sh -c ""gzip < {} > {}.gz"" \;"
Find all 777 permission regular files and use chmod command to set permissions to 644,find / -type f -perm 0777 -print -exec chmod 644 {} \;
"Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with ""autumn"".",find . -user daniel -type f -name *.jpg ! -name autumn*
Open all .java files in the current directory tree in the vim editor,find . -name '*.java' | xargs vim
Find files bigger than 20 megabytes in the home directory tree,find ~ -size +20M
"display all the files in the folder ""/Users/Me/Desktop"" which have read permission to them",find /Users/Me/Desktop -readable
Find all files/directories under _CACHE_* directories,find _CACHE_*
Recursively finds all '*.pdf' files in a current folder and removes them.,"find . -name ""*.pdf"" -exec rm {} \;"
Search for files specifying the maximum depth of the search,find -maxdepth num -name query
Search /usr/local recursively for directories whose names end with a number 0-9,find /usr/local -type d -name '*[0-9]'
Recursively compresses all files within $2 folder.,find $2 -type f -exec bzip2 {} \;
"Print a sorted list of directories from the ~/Music tree containing files whose names begin with ""cover.""",find ~/Music/ -iname 'cover.*' -printf '%h\n' | sort -u
Print sed commands that would replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree,find /myprojects -type f -name '*.cpp' -print0 |    xargs -0 echo sed -i 's/previousword/newword/g'
Find all files and directories starting from the current directory and excluding hidden files and directories,find . \ | sed 's/^..//'
find all the files in the current folder and display adding quotations to each file,"find . -exec echo -n '""{}"" ' \;"
Measure the disk space taken up by all *.txt files in directory trees folder1 and folder2,find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1
Find all SGID set files under current directory and show a few lines of output from the beginning,find . -perm /g+s | head
Locate files not owned by any user or group,find / -path /proc -prune -o -nouser -o -nogroup
"sort each file in the bills directory, leaving the output in that file name with .sorted appended",find bills -type f | xargs -I XX sort -o XX.sorted XX
"change the permissions of all the directories in the folder ""/path/to/someDirectory"" to 755",sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755
Get the actual find exectuable path,which find
display all the ip addresses in all the files that are present in /etc folder,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
"Search for files/directories which have read and write permission for their owner, and group and only read permission for others",find . -perm -664
"Find all regular files under $FOLDER directory tree that start with '"".' and end with '""' in their names and were modified in less than $RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $SKIP_FILE","find ${FOLDER} -type f ! -name \"".*\"" -mtime -${RETENTION} | egrep -vf ${SKIP_FILE}"
Search the current directory tree for executable regular files,"find . -type f -executable -exec file {} \; | grep -wE ""executable|shared object|ELF|script|a\.out"""
"search for the word ""methodNameHere"" in all the python files in the folder ""/mycool/project/"" and display color on the matched lines in the output","find /mycool/project/ -type f -name ""*.py"" -print0 | xargs -I {} -0 grep -H --color ""methodNameHere"" ""{}"""
Show manual page of find,man find
Find and show all files on the system that are larger than 900 MB,find / -size +900M
Count all the mp3 files in the music user's home and subdirs.,find ~music -type f -iname *.mp3 | wc -l
Check if a specific file exists and has been modified in the last 24 hours.,"#!/bin/bash

file=""/path/to/file""

if [ -e ""$file"" ] && [ $(find ""$file"" -mtime -1 | wc -l) -gt 0 ]; then
    echo ""$file has been modified in the last 24 hours""
else
    echo ""$file does not exist or has not been modified in the last 24 hours""
fi"
"Update timestamps of all regular files (ie. excluding directories, symlinks, sockets, etc.) under /your/dir",find /your/dir -type f -exec touch {} +
Find all *.ogg  files/directories under your home directory that are greater than 100MB in size,find $HOME -iname '*.ogg' -size +100M
find files in current folder using name patterns and sort the display the file names in the sorted order,"find . -name ""S1A*1S*SAFE"" | rev | awk -F '/' '{print $1}' | rev | sort -t _ -k 5"
"List .html files in the current directory tree that contain string ""base\-maps"" but do NOT contain string ""base\-maps\-bot""","find . -name ""*.html"" -exec grep -lR 'base\-maps' {} \; | xargs grep -L 'base\-maps\-bot'"
Search every directory except the subdirectory excluded_path for a regular file 'myfile',find / -path excluded_path -prune -o -type f -name myfile -print
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents,find /data/SpoolIn -name job.history -exec grep -l FAIL {} \+ | wc -l
Remove all non-hidden files in the current directory tree,"find -name ""*"" | xargs rm -f"
find in the entire file system for the file mysql,sudo find / -name mysql -print
Find all files called wp-config.php in the /var/www directory and below,find /var/www/ -name wp-config.php
"search for the file ""dok.txt"" in the kat folder and if it sis present then print the echo statement","find kat -name dok.txt -exec bash -c 'echo -e ""\nAutor: Jan Kowalski"" >> {}' \;"
Find empty files under test directory,find test -empty
search for all regular/normal files in the current folder and display the number of lines in the file,find . -type f -print | xargs -L1 wc -l
find all the php files in current folder and search for multiple patterns in these files and display the file names,"find -name '*.php' -exec grep -in ""fincken"" {} + | grep TODO | cut -d: -f1 | uniq"
use find -exec with multiple commands regardless of their success or failure,"find . -name ""*.txt"" \ -exec grep banana {} \;"
show the list of all the files in the current folder which have been modified within the 24 hours,find . -mtime 0 -print
"Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths","find . -type f -printf '%T@ %p\n' | sort -n | tail -10 | cut -f2- -d"" """
"Find all files named ""file.ext"" in the current directory tree and print the path names of the directories they are in","find . -name ""file.ext"" -execdir pwd ';'"
"Find all files in the current directory tree containing ""foo"" in their names",find . -print | grep -i foo
"Archive any files changed in the last day from ""remote_host"" to ""local_dir""",rsync -av remote_host:'$(find logs -type f -ctime -1)' local_dir
Find all .txt files in the current directory tree and save their path names to /tmp/logfile,find /full/path/to/dir -name '*.txt' -print0 | xargs -0 >/tmp/logfile
"Report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days",find /mydir1 /mydir2 -size +2000 -atime +30 -print
Search the .java files from the current directory tree for TODO lines,"find . -name ""*.java"" -exec grep -Hin TODO {} \;"
Find all files/directories  under  /eserver6 directory and follow symlinks if needed,find /eserver6 -L
display all the directories in the current folder excluding those that are present in the aa directory tree,find . -type d -name aa -prune -o -print
Delete all files/directories under current directory,find -delete
display the three largest files by size in current folder,find . -type f -exec ls -s {} + | sort -n -r | head -3
Find all directories under current directory and run  /path/to/script.sh for each of them,find . -type d -exec /path/to/script.sh \{} \;
find a 'fool.scala' named regular file under /opt /usr /var those directories.,find /opt /usr /var -name foo.scala -type f
"Find all `doc.txt' files in the current directory tree printing ""found"" for each of them","find ./ -name doc.txt -printf ""found\n"""
Find all file1 and file9 files/directories under current directory,find . -name file1 -or -name file9
"Find all files under /path/you/need, calculate their md5sums and redirect the results to checksums.md5",find /path/you/need -type f -exec md5sum {} \; > checksums.md5
Find all identical files in the /usr directory tree that are bigger than 10000 bytes and write the result to usr.dups,find /usr -type f | samefile -g 10000 >usr.dups
find file which name like 'foo.*' in current directory.,"find . -name ""foo.*"""
List all your files including everything in sub-directories,find ~
Search the current directory recursively for regular files last accessed more than 2 days ago,find . type -f -atime +2
"find all the "".mov"" files in the current folder and give it as an input to the myffmpeg.sh script file","find . -iname ""*.mov"" -exec /path/to/myffmpeg.sh {} \;"
Remove trailing whitespaces in TXT files from the current directory tree,"find . -iname '*.txt' -type f -exec sed -i '' 's/[[:space:]]\{1,\}$//' {} \+"
"Move all files in the current directory tree that match ""some_pattern"" to ""target_location""",find . -name some_pattern -print0 | xargs -0 -I % mv % target_location
run somecommand with one argument for each file recursively in /path that matches 'pattern',find /path -name 'pattern' -exec somecommand {} \;
Find all the files which are modified 50 days back,find / -mtime 50
Calculate and show md5 sums for every files under current directory tree,find . | xargs md5sum
Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$'  in their names,find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
"Search recursively through /mydir, outputting only the base  name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash.",find /mydir | xargs -I{} basename {}
Move *wp-admin/index.php files under /var/www/  to ./index_disabled,find /var/www/ -path '*wp-admin/index.php' -exec mv {} $(dirname {})/index_disabled
find  symbolic link file that name match  '*sysdep.c',find . -lname '*sysdep.c'
Move all directories from the `sourceDir' directory tree to the `destDir' directory,"find sourceDir -mindepth 1 -type d  -exec mv -t destDir ""{}""  \+"
find *.txt files in the current directory and sub-directories,"find -name ""*.txt"" 2>>/dev/null"
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" -delete"
Recursively changes group ownership of every folder in a current directory to the name of that folder.,"find . -type d | sed -e 's/^\.\///g' | awk '{print $1, $1}' | xargs chgrp"
dispaly a list of all the files in the file system which belong to a specific user  and exclude searching in the folder proc,find / -path /proc -prune -o -user <account> -ls
Find all files/directories under '/directory_path' directory tree that have been modified within the last day,find /directory_path -mtime -1 -print
"Search all the regular files in the current directory tree for ""example""",find -type f -print0 | xargs -r0 grep -F 'example'
display all the files in the home folder that have been modified in the last 7*24 hours,find $HOME -mtime -7
Find all *.rpm files/directories under current directory,find . -name '*.rpm'
Find all files/directories named 'myfile' under your home directory,find ~ -name myfile
find all the files in the current directory which have the size 40 bytes in the current disk partition.,find . -size -40 -xdev -print
Find all files under /home/username/public_html/themes and set their permission to 640,find /home/username/public_html/themes -type f -exec chmod 640 {} +
"Change permissions of all files ending in "".php"" under the current directory to 755 and print a count of modified files","find . -name ""*.php"" -exec chmod 755 {} \; -exec /bin/echo {} \; | wc -l"
Count the number of all directories under current directory non-recursively,find . -mindepth 1 -maxdepth 1 -type d | wc -l
Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes,"find /etc -name ""*.conf"" -mmin -30"
Print 'Since -printf is an action the implicit -print is not applied\n' for every file named 'file' found under current directory tree,find -name file -printf 'Since -printf is an action the implicit -print is not applied\n'
Find all directories under current directory and set their permission to 755,find -type d exec chmod 755 {} +
List files larger than 9MB residing in the current directory and below,find . -size +9M
find dirctory files which modification time is  7 days ago,find . -mtime -7 -type d
search for a word in all the php files in the current folder and display the count of all matching lines.,find . -name \*.php -type f -print0 | xargs -0 -grep -Hn '$test' | wc -l
Remove all files named `junk' and `dummy',find . \ -exec rm '{}' \;
display the name of all directories in the current folder and do not search in sub directories,find . -type d -maxdepth 1 -exec basename {} \;
display all files in the current folder while discarding the errors save the output to a file,find . 2>/dev/null >files_and_folders
search for files in a directory and check the validity of a command by giving the  file as input,find … -print0 | xargs -0 -n1 invalid_command
search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to /path/tonew/dir,find . -type f -iname ‘HSTD*’ -daystart -mtime 1 -exec cp {} /path/to new/dir/ \;
search for all the foo.txt files in the current folder and move them to another location,find . -name foo.txt -print0 | xargs -0  -I{} mv {} /some/new/location/{}
"Change permissions of all regular files in the ~/dir_data directory tree in accordance with mode `a-x,u+w'","find ~/dir_data -type f -exec chmod a-x,u+w {} \;"
Find all 15MB files,find / -size 15M
find all the empty directories in the current folder,find . -type d -empty
Find all files/directories under '/etc' directory tree that have been modified after '/etc/motd',find /etc -newer /etc/motd
Find all *.gz files/directories under asia and emea directory,find asia emea -name \*.gz
"search all the "".sh"" files in the /usr folder and follow the symbolic links to their original file",find /usr -follow -name '*.sh'
"Search the *.txt files from the current directory tree for ""string""","find . -name ""*.txt"" -print0 | xargs -0 egrep 'string'"
List all files in the current directory tree including those that may contain spaces in their names,"find . -print0 | xargs -0 -l -i echo ""{}"";"
Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files,"find $d -type f -exec chmod ug=rw,o= '{}' \;"
Find how many files are in a path,find . -type f -exec basename {} \; | wc -l
Find all files in your home directory and below that are smaller than 100M.,find ~ -size -100M
"Find all files under current directory whose file type description contains ""image"", display only path to each file.",find . -type f -exec file {} \; | awk -F: '{if ($2 ~/image/) print $1}'
Find SGID files,find / -perm +2000
"Find regular files under / that contain ""string"" and clear out their contents",find / -maxdepth 1 -xdev -type f|xargs grep -l 'string'| xargs perl -pi -e 's/.//g'
"Change all files in ""~"" which are owned by the group ""vboxusers"" to be owned by the user group ""kent""",find ~ -group vboxusers -exec chown kent:kent {} \;
"display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours",find /mydir1 /mydir2 -size +2000 -atime +30 -print
Find all regular files under '/directory_path' directory tree that have been modified within the last day,find /directory_path -type f -mtime -1 -print
Find all files/directories under _CACHE_* directories,find _CACHE_*
Search for files whose size is between 100 kilobytes and 500 kilobytes,find . -size +100k -a -size -500k
"Search all regular files in the current directory tree for ""string""",find . -type f | xargs -d '\n' grep string
Search for files which are writable by somebody,find . -perm /222
display all the header files  and cpp files in the current folder,find . -regex '.*\.\'
"Remove any file containing string ""GUI""",find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
"Search all *.c files from the current directory tree for ""hogehoge""",find . -name \*.c -print0 | xargs -0 grep hogehoge /dev/null
display all the regular/normal files in current folder,find . -type f -print0
Find all the .c files in the current directory tree that contain the string ‘stdlib.h’,find . -name '*.c' | xargs grep 'stdlib.h'
Search for 'specific string' in all files matching the name pattern '“*.[txt|TXT]”' under current directory tree,find . -name “*.[txt|TXT]” -print | xargs grep “specific string”
Find all directories recursively starting from / and count them,find / -type d | wc -l
Save the list of directories modified a fortnight ago to `deploy.txt' removing the leading ./ from the file names,"find . -type d -mtime 14 | sed -e 's,^\./,,' > deploy.txt"
replace a word in all the regular/normal files in the current folder,find . -type f -print0 | xargs -0 sed -i 's/Application/whatever/g'
Find all regular files with space in their names under current directory and rename them by replacing all spaces with _,"find -name ""* *"" -type f | rename 's/ /_/g'"
List all regular files in and below the home directory that were modified more than 5 years ago,find ~ -type f -mtime +1825 |xargs ls -l
List all directories and subdirectories,find . -type d
"Create symbolic links in the current directory for all files under ""bar1"" that are not directories and do not end in "".cc""",find bar1 -name '*foo*' -not -type d -not -name '*.cc' -exec ln -s $PWD/'{}' bar2/ \;
Delete all files in the current directory tree whose names end with ~,"find . -name ""*~"" -delete"
"find all the "".mov"" video files in the current folder and convert them to flv using ffmpeg. print0 is used to handle files with newline in their names","find . -iname ""*.mov"" -print0 | xargs -0 -i sh -c 'ffmpeg -i {} -f flv `basename {}`'"
Find files/directories writable by group and others under the /path directory,find /path -perm -022
Find all files with '.conf' extension under '/etc' directory going into at most 2 level deep and show the last 10 of them,"find /etc -maxdepth 2 -name ""*.conf"" | tail"
"Find all JPG files under the ""$SOURCE"" directory and below","find ""$SOURCE"" -type f -iname '*.jpg'"
"search for the file "".user.log"" in a folder",find /nfs/office -name .user.log -print
Find all php files in a directory,"find . -type f -name ""*.php"""
"Move the directory named ""some-dir"" and residing under the current one to x/","find ./ -maxdepth 1 -name ""some-dir"" -type d -print0 | xargs -0r mv -t x/"
find all the normal/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them,find . -type f -mtime -1 -exec ls -l {} \;
List all files under current directory with their sizes and paths,find . -type f -printf '%s %p\n'
"delete all the "".bak"" or swap files in kat folder",find kat -type f \ -delete
See the word count of every *.txt file in the home directory,find ~/ -name '*.txt' -print0 | xargs -0 wc -w
"force delete all the directories the folder ""test folder""",find 'Test Folder' -type d -print0 | xargs -0 rm -rf
Change permssions of *.cgi files under directories htdocs and cgi-bin to 755,"find htdocs cgi-bin -name ""*.cgi"" -type f -exec chmod 755 {} \;"
Find the 5 largest regular files in the Downloads folder of tecmint's home directory.,find /home/tecmint/Downloads/ -type f -exec du -Sh {} + | sort -rh | head -n 5
search for text files in the folder /home/you which have been modified in the last 60*24 hours and display their contents,"find /home/you -iname ""*.txt"" -mtime -60 -exec cat {} \;"
"find all the regular/normal files in the folder /travelphotos which are bigger than 200KB and which do not have the word ""2015"" in their name","find /travelphotos -type f -size +200k -not -iname ""*2015*"""
Find all regular files that reside in the current directory tree and were last modified more than 7 days ago,find . -type f -mtime +7
Find all files/directories under current directory tree whose paths match the pattern '*ACK*1'  (case insensitive),"find . -iwholename ""*ACK*1"""
Search in current directory downwards all files whose owner is aa1 and grop is grp .,find .  \ -print
List all regular files in the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f -exec ls -l {} +
"search for the file ""foobar.txt"" in the folder ""/home/mywebsite""","find /home/mywebsite -type f -name ""foobar.txt"""
"Will run checksums recursively from the current directory, and give back grouped filenames of all identical checksum results.","find ./ -type f -print0 | xargs -0 -n1 md5sum | sort -k 1,32 | uniq -w 32 -d --all-repeated=separate | sed -e 's/^[0-9a-f]*\ *//;'"
delete all the log files in the current folder,find ./ -name '*.log' | xargs rm
Find all files under /usr/tom that matches the extended regex '*.pl| *.pm'   in their names and also matches the regex <PATTERN> in their contents,find /usr/tom | egrep '*.pl| *.pm' | xargs cat | grep <PATTERN>
Removes all empty folders under '/path/to/the/folder' path.,find /path/to/the/folder -depth -type d -print0 | xargs -0 rmdir
Find files with extension .conf in the /etc directory tree,"find /etc -name ""*.conf"""
find all the directories in the home folder do not search in sub directories,find /home -maxdepth 1 -type d
List .log files from the current directory tree,"find . -name ""*.log"" -exec echo {} \;"
"Find files in the current directory tree whose names match regular expression ""^.*~$\|^.*#$""","find -regex ""^.*~$\|^.*#$"""
Compress all files under current directory tree with gzip,find . -type f -print0 | xargs -0r gzip
update the permission of all the files in the folder /u/netinst to 500,find /u/netinst -print | xargs chmod 500
Find all files/directories named 'findcommandexamples.txt'  in the entire filesystem,find  / -iname findcommandexamples.txt
Find files under current directory that contains the string '/bin/ksh',find . -type f -print | xargs    grep -il 'bin/ksh'
Find file `Chapter1' on the system,find / -name Chapter1 -type f -print
"find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt",find /opt \ -size +300000k -a -size -5000000k
Find all files/directories that contain the string literal '`$VERSION`' in their names under current directory tree,find . -name '*`$VERSION`*'
"search all the files in the folder ""myfiles"" which have the word ""blue"" in their name",find /myfiles -name '*blue*'
Find recursively the latest modified file in the current directory,find . -type f | xargs ls -ltr | tail -n 1
Move files from $sourcePath to $destPath that have not been modified in the last 10 days,"find $sourcePath -type f -mtime +10 -name ""*.log"" -exec mv {} $destPath \;"
display all the regular files in the current folder and do not search in sub folders,"find ""$dir"" -maxdepth 1 -type f"
Remove the file with inode number 752010,find -inum 752010 -exec rm {} \;
Print the path to all *.so files under current directory and search for mysymbol in their symbol tables,"find . -type f -print -exec sh -c ""readelf -s {} | grep mysymbol"" \;"
"Recursively counts non-blank lines in all files in a current folder, that match regex '\.php|\.as|\.sql|\.css|\.js', but skip folders './pma', './blog', './punbb', './js/3rdparty' and files like '*.svn'.",find . -path './pma' -prune -o -path './blog' -prune -o -path './punbb' -prune -o -path './js/3rdparty' -prune -o -print | egrep '\.php|\.as|\.sql|\.css|\.js' | grep -v '\.svn' | xargs cat | sed '/^\s*$/d' | wc -l
Find all files/directories not with the name 'query_to_avoid' under current directory,"find \! -name ""query_to_avoid"""
Find recursively all regular files changed within the last 5 minutes starting from directory b,find b -type f -cmin -5
display all the ip addresses in all the files that are present in /etc folder,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n' | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
"Search all files in the current directory tree, except GIT files, for ""string-to-search""","find . -name .git -prune -o -print | xargs grep ""string-to-search"""
Find all files/directories under current directory with a Depth-First search,find dir -depth
"Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes.",find /usr -type d -name My\ Files -exec rsync -avR '{}' /iscsi \;
Move all *.log files under $sourcePath that were modified more than 10 days ago to a zip archive $zipFile with only file names,"find $sourcePath -type f -mtime +10 -name ""*.log"" | xargs zip -jmT $zipFile -@"
"Append all regular files modified in the last 24 hours to the ""$archive.tar"" tar archive","find . -mtime -1 -type f -print0 | xargs -0 tar rvf ""$archive.tar"""
Find all files/directories under current directory,find -print
search all jpg images in current folder and rename them,"find . -type f -name ""*.jpg"" -print0 | xargs -0 rename ""s/Image_200x200_(\d{3})/img/"""
find all the text files in the folder /home/calvin and do not search beyond 2 levels,find /home/calvin/ -maxdepth 2  -name “*.txt”
show all files in the current directory and all subdirectories,find . -print
Find all files/directories under current directory that were accessed 30 minutes ago,find -amin 30
"search for the file ""process.txt"" in the entire file system",find / -iname 'process.txt' -print
List the largest file in long list format of all the files under the current directory,find . -type f -ls | sort -nrk7 | head -1 #unformatted
"search all the "".sh"" files in the /usr folder and follow the symbolic links to their original file",find /usr -follow -name '*.sh'
"find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .",find . \( -name a.out -o -name '*.' -o -name  'core' \) -exec rm {} \;
"Process each file beginning with ""file"" in the current directory as an argument to ""bash script.sh""",find -type f -maxdepth 1 -name 'file*' -print0 | sort -z | xargs -0 bash script.sh
"Recursively finds all files and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.",find ./ -type f -exec grep -H 'text-to-find-here' {} \;
"Find all TXT files in the current directory and copy them to directory ""$HOME/newdir""","find ""$HOME"" -name '*.txt' -type f -print0 | sort -zu | xargs -0 cp -t ""$HOME/newdir"""
Find directories named `doc' in /usr and below,find /usr -name doc -type d
"Recursively add "".jpg"" to all files in the current directory tree",find . -type f -exec mv '{}' '{}'.jpg \;
Find all files in and below all subdirectories of the current directory,find . -mindepth 2
"search all mp3 files in the folder ""/home/you"" which have been modified yesterday","find /home/you -iname ""*.mp3"" -daystart -type f -mtime 1"
search for files which are writable by either their owner or their group,"find . -perm /u+w,g+w"
find all the perl files in the current folder and search for a pattern,find . -name '*.pl' | xargs grep -L '^use strict'
update the permission of all the php files in current directory and save the output to a file,find . -name '*.php' -exec chmod 755 {} \; | tee logfile.txt
display all normal/regular files in current directory,find . -type f
Create a script to monitor file system changes and send an alert if any changes are detected.,"#!/bin/bash

if [ ""$(find /var/log -mmin -5)"" ]; then
    echo ""File system changes detected in /var/log directory."" | mail -s ""File System Changes Alert"" user@example.com
fi"
Find all files in $dir directory without going into sub-directories,"find ""$dir"" -maxdepth 1 -type f"
Find all files that belongs to group 'root' under / directory and show a few lines of output from the beginning,find / -group root | head
find for a word in all the regular files in the current directory,find . -type f -exec grep -li '/bin/ksh' {} \;
Search the current directory recursively for regular files last accessed less than 2 minutes ago,find . type -f -amin -2
Find all 755 permission regular files under current directory tree,find . -type f -perm 755
Find all files in the current directory tree and count them,find | wc -l
Search /etc for files modified within the last 10 minutes,find /etc -type f -mmin -10
Find files named 'core' in or below the directory /tmp and delete them,find /tmp -depth -name core -type f -delete
Find all *.dbf files/directories in entire file system,"find / -name ""*.dbf"""
"Find regular files named ""expression -and expression"" under and below /dir/to/search/",find /dir/to/search/ -type f -name 'expression -and expression' -print
Find directories in the current directory tree whose names are 33 characters in length,"find . -type d -name ""?????????????????????????????????"""
"Find files named core in or below the directory /tmp and delete them. Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces.",find /tmp -name core -type f -print | xargs /bin/rm -f
Delete all files with ' .o' extension in the entire filesystem,"find project / src / -name ""* .o"" -exec rm -f {} \;"
Find all read-only files,find / -perm /u=r
find all the files in the file system which have been accessed in the last 1 day,find / -atime -1
find all the java script files in a folder and give them as input to a jar,"find ./js/ -type f -name ""*.js"" -exec java -jar compiler.jar --compilation_level SIMPLE_OPTIMIZATIONS --js '{}' --js_output_file '{}'.compiled \;"
display all the files in the folder /etc /srv excluding those that are present in the path of ./srv/tftp/pxelinux.cfg* and /etc/mtab,"find /etc /srv \! -path ""./srv/tftp/pxelinux.cfg*"" -a \! -name /etc/mtab"
"display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files  to ""peter"",""peter""",find /home/peter -nouser -exec ls -l {} \; -ok chown peter.peter {} \;
display all the files in the current folder in a single line separated by null command,sudo find . -print0
"Make a new directory ""new-dir"" in every directory in the current directory tree","find . -type d | xargs -I ""{x}"" mkdir ""{x}""/new-dir"
find files which do not have all permissions to all the users in the current directory,find . -type f ! -perm 777 | head
Find all *.jpg files/directories under current directory,find . -name '*.jpg'
"Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \"".*/$now.*\""  and save the output in file $FILE_LIST","find $TARGET_DIR -regextype posix-extended -regex \"".*/$now.*\"" -fprint $FILE_LIST"
search for perl files in the folder /users/tom,"find /users/tom -name ""*.pl"""
Search the current directory tree for all .java files newer than the file build.xml,find . -name '*.java' -newer build.xml -print
Find all regular files that reside in the current directory tree and were last modified more than 4 days ago,find . -type f -mtime +4
Find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/,mv $(find $ -type f) ../shp_all/
find all javascript files under the current folder,find . -name '*.js'
Find all files/directories named $something under current directory,"find -name ""$something"""
Find files owned by nonexistent groups,find / -nogroup -print
Add read and execute permission to every directory under the current directory,find . -type d -exec chmod +rx {} \;
Display all files in the folder home which are owned by the group test.,find /home -group test
"Remove all regular files with extensions php, css, ini, txt from directory tree /old/WordPress/","find /old/WordPress/ -type f -regex "".*\.\"" -exec rm {} \;"
Recursively removes all files in a 'path' folder but 'EXPR' files.,find [path] -type f -not -name 'EXPR' | xargs rm
"Remove all ""core"" files that were last changed more than 4 days ago from the current directory tree",find . -name core -ctime +4 -exec /bin/rm -f {} \;
"find all files in the file system which belong to the user pat and having the word ""filename"" in their name.","find / -user pat -iname ""filename"""
searching for all files with the extension mp3,find / -name *.mp3
Recursively finds and compresses all files in a current folder with 4 parallel processes.,find . -type f -print0 | xargs -0 -n1 -P4 bzip2
Find all files/directories named 'my.txt' in the entire filesystem,"find / -name ""my.txt"""
Find regular files in the current directory tree that have all executable bits set,find -L . -type f -perm -a=x
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir,find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir
Show version information of the find utility,find -version
"find all the files ending with "".mkv"" in a folder and send them as an argument to a shell script","find /volume1/uploads -name ""*.mkv"" -exec /tmp/rename.sh \{\} \;"
"list all files under the current directory, writing the output to the file files_and_folders, suppressing all error messages.",find . 2>/dev/null > files_and_folders
find  case-insensitive StringBuffer in all *.java files,"find . -type f -name ""*.java"" -exec grep -il string {} \;"
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place,find /myprojects -type f -name *.cpp -print0 | xargs -0 sed -i 's/previousword/newword/g'
Find all directories under /home/username/public_html/themes and set their permission to 750,find /home/username/public_html/themes -type d -exec chmod 750 {} +
Find all *text files/directories under current directory,"find -name ""*text"""
Find all *.jpg files in Cam2/2013* paths and send the contents to a ffmpeg command to create a video file,"find Cam2/2013* -name ""*.jpg"" -print0 | xargs -0 cat | ffmpeg -f image2pipe -framerate 30 -vcodec mjpeg -i - -vcodec libx264 -profile:v baseline -level 3.0 -movflags +faststart -crf 19 -pix_fmt yuv420p -r 30 ""Cam2-2013-30fps-19crf.mp4"""
Find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern '/tmp/test/*',find /tmp/test/* -daystart -mtime -0
Find and remove multiple files such as *.mp3 or *.txt under current directory,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
Find the most recently changed files in a subtree,find . -type f -printf '%TY-%Tm-%Td %TT   %p\n' | sort
Copies all files like '*.txt' under the current directory to the './tmp/' directory.,"find . -type f -name '*.txt' | sed 's/'""'""'/\'""'""'/g' | sed 's/.*/""&""/'  | xargs -I{} cp -v {} ./tmp/"
count the total number of lines that are present in all the normal/regular files,find . -type f -exec wc -l {} \; | awk '{total += $1} END{print total}'
find all files that names are dir-name-here,"find / -name ""dir-name-here"""
Find directories owned by user news with permissions 775,find / -user news -type d -perm 775 -print
"display all regular files in current folder excluding search in the directories that are ending with ""git,svn""",find . \( -type d -regex '^.*/\.\$' -prune -false \) -o -type f -print0
Delete all .svn subdirectories under current directory,"rm -rf `find . -type d -name "".svn""`"
Find out all files owned by user vivek,find / -user vivek
"display all the regular/normal files in the folder ""/home/user/demo"" which have the permission 777.",find /home/user/demo -type f -perm 777 -print
Remove recursively Emacs backup files in the current directory,find . -name '*~' -print0 | xargs -0 rm
"Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext
Find all *.zip files under current directory and unzip them in the same directory as the files,"find . -name '*.zip' -exec sh -c 'unzip -d ""`dirname \""{}\""`"" ""{}""' ';'"
"Find all *.txt files under current directory, change their permission to 666 and copy them to /dst/ directory",find . -name \*.txt -exec chmod 666 {} \; -exec cp {} /dst/ \;
Find all files/directories that contain 'packet'  in their names excluding directories that are bigger than 1500 bytes in size,"find . -iregex "".*packet.*"" ! -type d -size +1500c"
"Find all *.page  files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output",find . -iname *.page -exec ~/t.sh {} \; | sort
"Find .java files in the current directory tree that contain 'TODO', and print their names","find . -name ""*.java"" -exec grep -Hin TODO {} + | basename `cut -d "":"" -f 1`"
Find all regular files in minimum 1 level down the $dir directory,"find ""$dir"" -mindepth 1 -type f"
display all the files  in the current folder which have colon in their name,"find . -name ""*:*"""
Find all directories under '/var/www' directory tree excluding '/var/www/web-release-data' and '/var/www/web-development-data' directories and their sub-directories,"find /var/www -type d \( ! -wholename ""/var/www/web-release-data/*""  ! -wholename ""/var/www/web-development-data/*"" \)"
Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories,find . -not \( -name .svn -prune -o -name .git -prune \) -type f -exec sed -i 's/[:space:]+$//' \{} \;  -exec sed -i 's/\r\n$/\n/' \{} \;
Find all files/directories under current directory,find -print
Print the cp commands that would be required to copy all *.data files under /source_path to /target_path by appending the parent directory names in the source paths to the beginning of each of the target file names,"find /source_path -name \*.data  | while read -r filename; do printf ""print version: cp %s %s\n"" ""${filename}"" ""$(printf ""%s\n"" ""${filename}"" | sed ""s/^.*[/]\[/]\$/\/target_path\/\1_\2/"")""; done"
display all the files in current folder which are bigger than 10KB,find . -size +10k
Find all directories in /path/to/dir/ without going into sub-directories,find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d
"find all jpg files in the folder which are in the path ""/201111/"" and sort them based on name","find */201111/* -name ""*.jpg"" | sort -t '_' -nk2"
"Recursively finds all files and prints only names of files that contain ""word"" and suppressing error messages .",find . | xargs grep 'word' -sl
display all the files in the entire file system,"find / -name ""*"" — print"
find all the files that have been changed exactly 24 hours ago,find . -ctime 1 -type f
find all the files in the current directory whose size is equal to exactly 126MB.,find . -size 126M
Search the /path directory tree for files missing g+w and o+w bits,find /path ! -perm /022
Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories,"find . -type f -exec chmod ug=rw,o= {} \;"
Search the current directory tree for all files except SVN ones,find . -not -iwholename '*.svn*'
Change permissions to 755 for all directories in the /path/to/dir directory tree,find /path/to/dir -type d -exec chmod 755 {} \;
tar all files in the current folder and ask for user confirmation before creating the tar ball,find . -ok tar rvf backup {} \;
find files which have all permissions to all the users in the current directory,find . -type f -perm 0777 -print
"Calculate the total disk usage for each "".jpg"" file on the system and prepend the system host name to the output","find ""$PWD"" / -iname '*.jpg' -exec du -s {} + | sed ""s/^/$(hostname): /"""
Find all files starting from / that belong to user1,find / -user user1
Delete files with inode number specified by [inode-number] under current directory,find . -inum [inode-number] -exec rm -i {} \;
display top 11 files along with the last access date for all the files in the file system,"find / -type f -printf ""\n%AD %AT %p"" | head -n 11"
Search in the current directory and all sub-directories except ./D and any further sub-directories also named D for the file named hi.dat,$ find . \ -o -name hi.dat
search for all the files in the folder /home which have sticky bit set and have the permissions 553,find /home -perm 1553
Find all files/directories under minimum 2 level down the current directory and set their permission to 700,find . -mindepth 2 | xargs chmod 700
"Move all files matching patterns ""*.old"", "".old"", "".*.old"" from the current directory to directory ""../old/""",find . ! -name . -prune -name '*.old' -exec mv {} ../old/ \;
show all the directories in the current folder,find . -type d
"Calculate the md5sum of each "".py"" file under ""/path/to/dir/"", sort the output, and calculate the md5sum of that","find /path/to/dir/ -type f -name ""*.py"" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"
"Replace all occurrences of word ""foo"" with ""bar"" in *.c and *.h files from the current directory tree",find -name '*.[ch]' -exec sed -i 's/\<foo\>/bar/g' {} +
"copy the entire contents of the current directory to another directory, while preserving the permissions, times, and ownership of every file and sub-directory",find . | cpio -pdumv /path/to/destination/dir
"Copy the directory hierarchy from ""original"" to ""new""",find original -type d -exec mkdir new/{} \;
Fint all *.txt files/directories in entire file system without descending to other file system and without error reporting,"find / -name  ""*.txt"" -xdev 2> /dev/null"
Find all '*~' files under current directory,find ./ -name '*~'
"find regular files whose filename is ""your_pattern"", suppressing all error messages.","find / -type f -name ""your_pattern"" 2>/dev/null"
find  files which full path name is foo/bar under foo directory and print,find foo -path foo/bar -print
"Search for ""#define"" in all files in the current directory, excluding backup files *~, *.orig, *.bak","find . -maxdepth 1 ! -regex '.*~$' ! -regex '.*\.orig$' \     ! -regex '.*\.bak$' -exec grep --color ""#define"" {} +"
Search  in current directory downwards all files whic  have permission 777 .,find . -perm 777 -print
"Find all directories under and below directory ""folder_name"", and change their permissions to 775",find folder_name -type d -exec chmod 775 ‘{}’ \;
Truncate all non-empty regular files under the current directory,find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i cp /dev/null {}
"delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename "".svn""",find . -iname .svn -print0 | xargs -0 rm -rf
change cgi files to mode 755,"find htdocs cgi-bin -name ""*.cgi"" -type f -exec chmod 755 {} \;"
Find all directories under /path/to/base/dir and change their permission to 755,find /path/to/base/dir -type d -print0 | xargs -0 chmod 755
find regular file named foo.txt under root / directory.,find / -name foo.txt -type f -print
find all files in the current folder which are of size 0 bytes.,find . -type f -empty
display long listing of all the regular hidden files in the folder Musica,"find Música/* -type f -name "".*"" -exec ls -l {} \;"
Find all .java files under and below the current directory,find . -name '*.java'
"display all the home folder which end with the extension ""sxw"" and which have been accessed in the last 3*24 hours and which belong to the user bruno","find /home -type f -name ""*.sxw"" -atime -3 -user bruno"
display all the normal/regular files in the current folder,find . -type f
remove all text files from the current folder,"find -name ""*.txt"" | xargs rm"
Count the number of files/directories with '.php' extension under current directory tree and change the permissions to 755,"find . -name ""*.php"" -exec chmod 755 {} \; -exec /bin/echo {} \; | wc -l"
Copy a file xyz.c to all the .c files present in the C directory and below,"find ./C -name ""*.c"" | xargs -n1  cp xyz.c"
"find all the regular/normal files in the current folder which belong to the user ""sedlav""",find . -user sedlav -type f
Show files in /home owned by group `test',find /home -group test
List all files under current directory matching the regex '.*\',find . -type f -regex '.*\' -exec ls {} \;
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive  of all the files found,"find var/log/ -iname ""anaconda.*"" -exec tar -rvf file.tar {} \;"
List all files/directories in entire file system,find / -print
"display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set",find / -path /proc -prune -o -type f -perm +6000 -ls
"Search the current directory tree for files whose name is "".note"", case insensitive",find . -iname '.note'
Remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago,find $backup_path/*.sql -mtime +5 -exec rm -f {} \;
display all the directories in the current folder excluding those that are present in the aa directory tree,find . -type d -name aa -prune
find all the files in the home folder which are empty,find ~ -empty
Remove files from the home directory tree that were last accessed more than 100 days ago,find ~ -atime +100 -delete
Move all files/directories under current directory to ~/play,find . | xargs -I'{}' mv '{}' ~/play/
"Find all the .mp3 files in the music folder and pass to the ls command, -print0 is required if any filenames contain whitespace","find ./music -name ""*.mp3"" -print0 | xargs -0 ls"
Convert directory of files from dos to unix,"find . -type f | while read file; do sed -e 's/^M//g' -i ""$file""; done"
search for files having python in filename,find / -name '*python*'
Search the current directory tree for symbolic links to files matching pattern '*/test*',find -P . -lname '*/test*'
"Find all files/directories under '/usr/share/data' directory tree that match the posix extended regex "".*/20140624.*"" in their paths and save the list to '/home/user/txt-files/data-as-of-20140624.txt'","find /usr/share/data -regextype posix-extended -regex "".*/20140624.*"" -fprint /home/user/txt-files/data-as-of-20140624.txt"
find all files in current folder which are bigger than 1 MB and move them to another folder,find . -size +1M -print0 | xargs -0 -I '{}' mv '{}' files
Find all regular files starting from level 3 of directory tree ~/container and move them one level up,"find ~/container  -mindepth 3 -type f  -execdir mv ""{}"" $(dirname ""{}"")/.. \;"
find files in /u/bill directory which are access an 2 to 6 minutes ago,find /u/bill -amin +2 -amin -6
change the owner and group of all the normal/regular files in the current folder and /home/admin/data/ to admin & admin,find . /home/admin/data/ -type f -exec chown admin.admin {} \;
Search for 'string-to-find' in all files under current directory tree and show the matched lines with their filenames,find . -exec grep -H string-to-find {} \;
Delete all files/directories named 'FILE-TO-FIND' under current directory tree,"find . -name ""FILE-TO-FIND"" -exec rm -rf {} \;"
List all .gif files in the current directory tree,find . -name *.gif -exec ls {} \;
"Count the total number of lines in all HTML files under /usr/src that contain string ""foo""","find /usr/src -name ""*.html"" -execdir /usr/bin/grep -H ""foo"" {} ';' | wc -l"
Find and remove all .core files,"find / -name ""*.core"" -print -exec rm {} \;"
Print a detailed list of all regular files from the current directory tree,find . -type f -ls
"List all regular files matching the name pattern ""$1*""  under '/usr', '/bin', '/sbin' and '/opt' directory tree","find /usr /bin /sbin /opt -name ""$1*"" -type f -ls"
"Find files that are writable by the user, the group, or both under the current directory",find . -perm +220  -exec ls -l {} \; 2> /dev/null
List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject',find . -type f -print0 | xargs -0 grep -il '^Subject:.*unique subject'
"Recursively finds string with text ""foo"" in all files of a current folder.","find ./ -type f | xargs grep ""foo"""
Find all files under path_to_dir,find path_to_dir -type f
display all files in current folder which are bigger than 1 MB,find . -size +1M
Remove regular files in the current directory tree,find . -type f -print0 | xargs -0 -n1 echo rm | sh -x
Find all files/directories named 'apt' in the entrie filesystem,"find  / -name ""apt"""
Find all pdf files under /dir/containing/unsigned with null character as the delimiter,find /dir/containing/unsigned -name '*.pdf' -print0
find all the regular/normal files in the /path folder and delete them,find /path -type f -exec rm '{}' \;
delete all text files in the home folder after user confirmation,"find $HOME/. -name ""*.txt"" -ok rm {} \;"
search for all the text files in the folder /home/calvin/ and save the output to  /tmp/search.log,find /home/calvin/ -name “*.txt” > /tmp/search.log
"Counts all files in a current folder and in subfolders one-level lower, and sort folder list by number of files within.",find . -maxdepth 1 -type d -print0 | xargs -0 -I {} sh -c 'echo  $ {}' | sort -n
"Search all files in the current directory tree whose names end in ""1"" for string ""1""","find . -name ""*1"" -exec grep ""1"" {} +"
List files in the current directory and below except for GIT files,find . -not -iwholename '*/.git/*'
Find all files/directories under current directory tree whose paths match the pattern '*ACK*1',"find . -iwholename ""*ACK*1"""
display all text files in the folder /tmp/1,"find ""/tmp/1"" -iname ""*.txt"""
Print extended file information for regular files found under the home directory whose names start with my,find . -name 'my*' -type f -ls
Find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning,find / -cmin -60 | head
Remove all .mpg files in the /home/luser directory tree,find /home/luser -type f -name '*.mpg' -exec rm -f {} \;
Search the home directory tree for files matching pattern '*.txt',find ~ -name *.txt
"Search the current directory tree for *.wav files that have ""export"" in their pathnames","find -type f -name ""*.wav"" | grep export"
Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter,find /mnt/naspath -name .snapshot -prune -o \( -type f -mtime 0 -print0 \)
find all the jpg files in the current folder and resize them to 50% of their original size,"find . -name ""*.JPG"" -exec convert {} -resize 50% {} \;"
Find all image.pdf files/directories under ./polkadots,find ./polkadots -name 'image.pdf'
display all the text files in the temp folder,find /tmp -name *.txt
Find files and directories modified in last 24 hours,find . -mtime 1
"search for the word ""slrn"" in all the files in the current folder",find ./ -exec grep -q 'slrn' '{}' \; -print
"Search the current directory tree for files containing ""album"" and ""vacations"" in their names and not containing ""2015""","find . -name ""*album*"" -a -name ""*vacations*"" -a -not -name ""*2015*"""
ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours,find /mydir -atime +100 -ok rm {} \;
"Remove all regular files from the current directory tree whose names do not end with ""ignore1"" or ""ignore2""",find . -type f -not -name '*ignore1' -not -name '*ignore2' | xargs rm
Find all files/directories named modules under current directory and list them twice,find . -name modules \! -exec sh -c 'find -name modules' \;
"list all regular files under the directory ""$directory""",find $directory -type f -name '*'
"search for the file ""process.txt"" in the entire file system","find / -name ""process.txt"""
"Search the files from the current directory tree for ""chrome""",find . | xargs grep 'chrome'
Find all files/directories under current directory with null character as the delimiter,find . -print0
find all files that were modified between 90 to 100 days ago in home directory and delete then .,find /home -type f -mtime +90 -mtime -100  -exec rm  {} \;
Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $EXCLUDE/* paths,"find /home/jul/here -type f -iname ""*.php"" ! -path ""$EXCLUDE/*"" -o -iname ""*.js"" ! -path ""$EXCLUDE/*"""
Change permissions to 0755 for all directories in the /path directory tree,find /path -type d -exec chmod 0755 {} \;
Count the number of total files and folders under current directory tree,find . -print0 | tr -cd '\0' | wc -c
Print the first line of every file matching pattern 'file?B' in the xargstest/ directory tree,find xargstest/ -name 'file?B' | sort | xargs head -n1
display all html files in current folder and replace some pattern in all these files,"find -name ""*.htm"" | while read file; do sed ""s|<title>sometext</title>|<title>${file##*/}</title>|g"" -i $file; done"
Find files/directories named 'photo.jpg' in the entire filesystem,find / -name photo.jpg
Find all files/directories named 'file' without descending into directories with the same name under current directory tree,find -name file -prune
Change the group of all directories  under current directory tree to a group with the same name as the directory name,"find . -type d | sed -e 's/\.\///g' | awk '{print $1, $1}' | xargs chgrp"
"Find all files, starting from / but ignoring removable media, whose names end with "".rpm""","find / -xdev -name ""*.rpm"""
Create a script to find and delete all directories older than a certain number of days in a directory.,"#!/bin/bash

find . -type d -mtime +$1 -delete
echo ""Old directories deleted."""
"Search all .c and .h files in the current directory tree for string ""e""","find . -name ""*.[ch]"" -exec grep --color -aHn ""e"" {} \;"
find  files which full path name is foo/bar under foo directory and print,find foo -path /tmp/foo/bar -print
Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here,find root -name '*.rmv' -type f -exec cp {} /copy/to/here \;
Find all files and directories in the current directory recursively that contain spaces in their names,find . -name '* *'
Find all directories in directory tree `httpdocs',find httpdocs -type d
"Compress all files not ending in "".gz"" in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago","find $PATH_TO_LOGS -maxdepth 1 -mtime +$SOME_NUMBER_OF_DAYS -exec sh -c ""case {} in *.gz) ;; *)  gzip '{}' ;; esac;"" \;"
List subdirectories in the current directory,"find . -maxdepth 1 -type d -exec ls -ld ""{}"" \;"
Compresses all '*.xml' files under current directory with 'bzip2' utility.,find -name \*.xml -print0 | xargs -0 -n 1 -P 3 bzip2
"Remove the first 13 characters of each "".txt"" filename in the ""/tmp"" directory tree and number the output",find /tmp -type f \( -name '*.txt' \) |cut -c14- | nl
Find out all files owned by user vivek,find / -user vivek
"Delete all the files found in the current directory tree whose names begin with ""heapdump""",find . -name heapdump* -exec rm {} \ ;
find all the regular files in the current folder which have specific word in their name and force delete all these files and save the log to the file log_del.txt,find ./ -type f -name '*.c*' -print0 | xargs -0 rm -rf &>> log_del.txt
Search the current directory tree for regular files that were modified $FTIME days ago,find . -type f -mtime $FTIME
find all directory list which have empty list in /tmp directory,find /tmp -type d -empty
"Find all files whose names do not begin with ""zsh"" on ext3 file systems",find / -fstype ext3 -name zsh -ls 2> /dev/null
Find all files/directories under current directory with 'foobar' (case insensitive) in their names and copy them to ~/foo/bar,"find . -iname ""*foobar*"" -exec cp ""{}"" ~/foo/bar \;"
Search the current directory recursively for MOV files,find . -iname *.mov
Remove all files from the current directory tree whose names contain whitespaces,"find . -name ""* *"" -exec rm -f {} \;"
Display a list of files with sizes in decreasing order of size of all the regular files under '/your/dir' directory tree that are bigger than 5 MB in size,find /your/dir -type f -size +5M -print0 | xargs -0 ls -1Ssh
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""",find . -name '*.java' -mtime +7 -print0 | xargs -0 grep 'swt'
Find files matching regular expression regexp,find . | xargs grep regexp
Rename all .txt files to .bak in the current directory tree,"find . -name ""*.txt"" | sed ""s/\.txt$//"" | xargs -i echo mv {}.txt {}.bak | sh"
"Print only the line ""foo///"" given two empty directories foo and bar",find foo/// bar/// -name foo -o -name 'bar?*'
Find all *.java files under current directory containing the string 'String',"find . -name ""*.java"" -exec grep ""String"" {} \;"
Remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago,find $backup_path/* -name *.sql -mtime +30 -exec rm {} \;
search the entire file system and save all the core file paths into a file,find / -name core -print | xargs echo > /tmp/core.log
Counts lines in each of *.php files in current folder with subfolders and prints total count as well.,find . -name '*.php' | xargs wc -l | sort -r
Find all symbolic links under '/some/directory' tree,find /some/directory -type l -print
Remove all *.doc files from the current directory tree,"find . -name '*.doc' -exec rm ""{}"" \;"
"Set permissions to ug=rwx,o= for directories under the $d directory tree","find $d -type d -exec chmod ug=rwx,o= '{}' \;"
"List path/filename of all PHP files under current directory whose file type description or path/name contains ""CRLF""","find . -type f -iname ""*.php""  -exec file ""{}"" + | grep CRLF"
find all the files which are of size 0 bytes.,find . -type f -empty
"Save the list of all subdirectories of the current directory up to depth level 2 as ""dirlist""",find -maxdepth 2 -type d -ls >dirlist
Find all *.xml.bz2 files under current directory,find . -name \*.xml.bz2
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under /home/www and below",find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
change owner of all files into current directory except  files named as  './var/foo*' to user www-data,find . -not -iwholename './var/foo*' -exec chown www-data '{}' \;
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way,find -d MyApp.app -name Headers -type d -print0 | xargs -0 rm -rf
"display all files in the current directory excluding those that are present in the directories whose name starts with ""efence"" and do not search in the sub directories","find * -maxdepth 0 -name ""efence*"" -prune -o -print"
Find all files/directories in current directory and execute myscript for each of them,find . -exec myscript {} \;
find all the normal/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them,find . -type f -mtime -1 -exec ls -l {} \;
List all files in the current directory tree except for those in the ./src/emacs directory,find . -path './src/emacs' -prune -o -print
Find directories in the /path directory tree whose names are 33 characters in length,"find /path -type d -printf ""%f\n"" | awk 'length==33'"
"find all the files in current folder which end with "".bak"" or "".backup"" which have not been accessed in the last 30 days and delete the files if they exist",find .  -type f -atime +30 -exec csh -c 'if  rm $1' '{}' ;
search for all empty directories in the folder /home,find /home -type d -empty
"List all files/directories under current directory matching the posix-egrep type regex "".+\.(c|cpp|h)$"" in their names excluding the paths */generated/* and */deploy/*",find . -regextype posix-egrep -regex '.+\.(c|cpp|h)$' -not -path '*/generated/*' -not -path '*/deploy/*' -print0 | xargs -0 ls -L1d
"Find string ""STRING"" in files residing in the current directory tree, case insensitive","find . -type f -print | xargs grep -ni ""STRING"""
Find all links to path/to/file,find -L -samefile path/to/file
"Find the ""*.foo"" files in the current directory tree that are not under "".snapshot"" directories",find . -name .snapshot -prune -o -name '*.foo' -print
Search for first match of the regex 're' in all *.coffee files under current directory,find . -name \*.coffee -exec awk '/re/ {print;exit}' {} \;
Search the current directory tree for regular files omitting directory `omit-directory',find . -name omit-directory -prune -o -type f  -print
Find '.git' directories in directory tree /path/to/files and print the pathnames of their parents,find /path/to/files -type d -name '.git' -exec dirname {} +
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar,find . | grep FooBar | xargs -I{} cp {} ~/foo/bar
Find all files/directories whose names start with 'readme' (case insensitive) under '/usr/share/doc' directory tree,find /usr/share/doc -iname readme\*
Find all files under /somefolder matching the case insensitive regex '\(.*error.*\)\|\(^second.*\log$\)\|\(.*FFPC\.log$\)' in their paths,find /somefolder -type f | grep -i '\(.*error.*\)\|\(^second.*\log$\)\|\(.*FFPC\.log$\)'
Archive the entire file system into tarfile.tar.bz2,find / -print0 | xargs -0 tar cjf tarfile.tar.bz2
find all files having certain word in its name in the current folder,"find . -name ""*bsd*"" -print"
Find all regular files in the current directory and its subdirectories.,find . -type f
"Find regular files under and below /path that match pattern ""???-???_[a-zA-Z]*_[0-9]*_*.???""","find /path -type f -name ""???-???_[a-zA-Z]*_[0-9]*_*.???"""
Find all *.dbf files/directories in entire file system discarding errors and print their sorted and unique parent directory paths,find / -name \*.dbf -print0 2>/dev/null | xargs -0 -n1 dirname | sort | uniq
display a long listing of all the normal/regular files in the current folder,find . -type f -print0 | xargs -0 ls -l
Find all files in the file system with the SUID bit,find / -perm -u+s -print
Find all directories under current directory tree that match the case insensitive regex '^\./course\*[0-9]$' in their paths,find . -type d -iregex '^\./course\*[0-9]$'
"find the file ""dateiname"" in the entire file system ( case insensitive search)","find / -iname ""Dateiname"""
Find all executable files under current directory and show a few lines of output from the beginning,find . -perm /a=x | head
Find all files/directories containing 'farm' in their names under '/usr/share' directory tree,find /usr/share -name '*farm*'
"display all the files in the current folder except those whose name is ""PERSONAL""",find . -name PERSONAL -prune -o -print
display all the users in the current folder which do not belong to the user root,find . ! -user root
Find all regular files in the current directory tree that are not readable by all,find -type f ! -perm -444
"Find files in and below the current directory whose names begin with ""not"" and remove one of them",find . -name not\* | tail -1 | xargs rm
Recursively finds all '*.pdf' files in a current folder and removes them.,"find . -name ""*.pdf"" -print0 | xargs -0 rm"
"Recursively finds in all folders but ""./output/*"" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.","find .  \( ! -path ""./output/*"" \) -a \( -type f \) -a \( ! -name '*.o' \) -a \( ! -name '*.swp' \) | xargs grep -n soc_attach"
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/home/www' directory tree and modify them in-place,find /home/www -type f -name '*.cpp'  -exec sed -i 's/previousword/newword/g' '{}' \;
delete all the log files which have not been modified in the last 5 days after user confirmation,"find . — name ""*.LOG"" — mtime +5 -ok rm {} \;"
display long listing of all files in the current directory whose size is 24 or 25 bytes.,find . -size -26c -size +23c -ls
Search  in current directory downwards all files whose owner is aa1 or whose name is myfile .,find . \ -print
display all the files in the current folder which have been modified between two dates,find . -newermt “Sep 1 2006” -and \! -newermt “Sep 10 2006”
find all the mp3 files in the file system,"find / -iname ""*.mp3"" -print"
"Find all files called ""INPUT.txt"" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak",find . -type f -name INPUT.txt -print0 | xargs -0 -I {}  sed -i.bak '/^#/d' {}
Find all directories under /home/me,find /home/me -type d
Count the toal number of lines in all .py files in current directory tree,find . -name *.py -exec wc -l {} \; | awk '{ SUM += $0} END { print SUM }'
"Search directory /home/ABCD recursively, starting from one level below, for regular files",find /home/ABCD/ -mindepth 1 -type f -print
"Find all files in the current directory tree with extension .html and replace all occurences of ""php"" with ""html"" inside them","find ./ -type f -name *"".html"" | xargs sed -i ""s/php/html/g"""
Find all the regular files in $DIR directory tree which have not been modified in the last 450 days and delete them,find $DIR -type f -mtime +450 -exec rm {} \;
"Recursively finds file some_file_name.xml file and prints strings with ""PUT_YOUR_STRING_HERE"" preceding each found string with file name.",find . -type f -name some_file_name.xml -exec grep -H PUT_YOUR_STRING_HERE {} \;
Delete all files/directories older than 48 hours in /path/to/files* paths,find /path/to/files* -mtime +2 -delete
Delete all filename* files under /dir directory,"find /dir -name ""filename*"" -type f -delete"
Find & calculate total number of caractor  in all .txt file from current directory,find .  -type f  -name '*.txt' -exec wc -c {} \; | awk '{total += $1} END{print total}'
display list of all the files in the current directory,find | xargs ls
"Search the current directory tree for all files matching pattern ""*.rb""","find . -name ""*.rb"""
Copies file 'index.html' to each top-level directory in the current directory beginning with 'd'.,find . -mindepth 1 -maxdepth 1 -type d| grep \/a |xargs -n 1 cp -i index.html
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3,"find / -iname ""*.mp3"" -type f | xargs -I '{}' mv {} /mnt/mp3"
Find recursively the latest modified file in the current directory,find . -type f | xargs ls -ltr | tail -n 1
"change the current working directory to ""B"" and display all the files in that folder and append the output to the file ""tmp.txt""",cd B && find . >> ../tmp.txt
Find all .gif files in the /var/www directory tree,find /var/www -name *.gif
"Find all directories named ""D"" in the current directory tree",find ./ -type d -name 'D'
"Search the current directory tree for the files with extension ""trc"" and remove them if they are more than three days old","find . -name ""*.trc"" -ctime +3 -exec rm -f {} \;"
Find a directory named 'project.images' in the entire filesystem,"find  / -type d -name ""project.images"""
Find all the files named 'vimrc' anywhere on the system,find / -name vimrc
Locate OGG files under the home directory smaller than 100 megabytes,find $HOME -iname '*.ogg' -type f -size -100M
Find all files under minimum 1 level down the current directory,find .  -mindepth 1 -type f
find all directories with the name root in the entire file system.,find / -type d -name root
Find all .gz archives in the current directory tree and check if they are valid,"find ""*.gz"" -exec gunzip -vt ""{}"" +"
Find all regular files on the system whose size is greater than 20000k,find / -type f -size +20000k
"search for the file ""abc"" in the current folder or display all the directories",find . -name abc -or -type d
Search the ~ and `Music' directory trees for .mp3 files,find ~ Music -name '*.mp3'
Locate all the hard links of file `passwd',find / -samefile passwd
Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf ',"find /var/www/html/ -type d -name ""build*"" | sort | tail -n +5 | xargs -I % echo -rf %"
Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them,"find ""$DIR"" -type f \! -newer ""$a"" \! -samefile ""$a"" -exec rm {} +"
Find all symbolic links under '/proc/$pid/fd' directory tree with name pattern '$save_path/sess_\*' and update their timestamps,"find ""/proc/$pid/fd"" -ignore_readdir_race -lname ""$save_path/sess_\*"" -exec touch -c {}"
"Search the ~/Books directory recursively for regular files named ""Waldo""",find ~/Books -type f -name Waldo
search for the file filename in the entire file system,find / -name filename
Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree,"find /mnt/zip -name ""*prefs copy"" -print | xargs rm"
Replace all spaces with underscores in file paths under current directory.,"find -name ""* *"" -type f | rename 's/ /_/g'"
Find all file in current directory with have .c extenstion & have 777 permission . delete then,"find . -name ""*.c"" -a  -perm -777 | xargs rm -rf"
search for MP3 files in the current folder and subfolders except in dir1 subfolder.,"find ! -path ""dir1"" -iname ""*.mp3"""
show all the files in the folder /etc which have been modified in the last 24 hours,find /etc -mtime -1
find all files that were modified between 90 to 100 days ago in home directory and delete then .,find /home -type f -mtime +90 -mtime -100  -exec rm  {} \;
Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree,"find . -iname ""*.txt"" -exec du -b {} +"
List files in the current directory,find . \
Find all hard links to file1 under /home directory,find /home -xdev -samefile file1
Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name,find . -print -name SCCS -prune
"Search the *.pdf files from directory tree PDFs/ for text ""perry sound"", ignoring the case, and print the list of matched files","find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext ""{}"" - | grep -l -i --with-filename --label=""{}"" --color ""perry sound""' \;"
Print all directories under $root appending a :  at the end of each path,find $root -type d -printf '%p:'
Find all thumb.png files in the temps/ directory tree,"find temps/ -name ""thumb.png"""
display list of all the files in the current directory,find -print0 | xargs -0 ls
Search the system for files and directories owned by group `managers',find / -group managers -print
find all the wav files in the current folder and do not search in the sub directories,find . -name '*.wav' -maxdepth 1
Delete all regular files named 'IMAGE1806.jpg' under current directory tree,find . -type f -name 'IMAGE1806.jpg' -delete
find all the files in the current folder and display adding quotations to each file and replace spaces with new line,"find $PWD -exec echo -n '""{}"" ' \; | tr '\n' ' '"
Archive all filepattern-*2009* files/directories under data/ into 2009.tar,find data/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar
display a list of all java or jsp files in the current folders,find . \ -type f -ls
find all the files that were modified yesterday in the current directory.,find . -daystart -ctime 0 -type f
display all the text files  in the current folder,"find . -name ""*.txt"" -print"
Find all regular files under $d directory tree and change their permissions to 777,"find ""$d/"" -type f -print0 | xargs -0 chmod 777"
Search the current directory tree for files executable by at least someone,find . -type f \ -exec test -x {} \; -print
find all the php files in the current folder,find . -name “*.[php|PHP]” -print
Find all regular files in and below the home directory that have been modified in the last 90 minutes,find ~ -type f -mmin -90
Find broken symlinks,"find ./ -follow -lname ""*"""
find symbolic links with pattern` '*sysdep.c',find . -lname '*sysdep.c'
show the disk use of all the regular/normal files in the current folder which are bigger than 50MB,find . -type f -size +50000k | xargs du -sh
Find all the files which were modified 50 days ago,find / -mtime 50
"Delete files in the DIR directory tree whose names begin with ""2015"" and contain ""album"" or ""picture""",find DIR \( -name 2015\* -a \ \) -delete
Search for 'Text To Find' in all regular files under current directory tree and show the matched files,"find ./ -type f -exec grep -l ""Text To Find"" {} \;"
create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours,find \ -a -ctime -30 -exec ln {} /var/www/obsolete \;
"find all files and directories under the current directory and display the inode of each one, using the stat command on FreeBSD/OSX",find . -print0 | xargs -0 stat -f '%i '
display all the regular files in the current folder that are exactly 10KB,find . -type f -size 10k
find all the normal/regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them,find . -type f -atime -1 -exec ls -l {} \;
Find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with /proc in their paths,"find $1 -name ""$2"" | grep -v '/proc' | xargs grep -Hn ""$3"" {} \;"
Find all files/directories named 'articles.jpg' under '/home/username/public_html/images' directory tree,"find /home/username/public_html/images -name ""articles.jpg"""
List *.txt files residing in the current directory tree,find . -name *.txt -exec ls {} ;\
Find all empty directories in minimum 2 levels down the root directory,find root -mindepth 2 -type d -empty
"Search the home directory for files whose names begin with ""test""","find ~ -name ""test*"" -print"
"remove all ""Foo*"" files under current dir","find . -type f -name ""Foo*"" -exec rm {} \;"
"Find all directories that do not contain ""main.cpp""",diff <(find . -exec readlink -f {} \; | sed 's/\(.*\)\/.*$/\1/' | sort | uniq) <(find . -name main.cpp  -exec readlink -f {} \; | sed 's/\(.*\)\/.*$/\1/' | sort | uniq) | sed -n 's/< \(.*\)/\1/p'
Check if directory $some_dir is empty,"find ""$some_dir"" -prune -empty -type d | read && echo empty || echo ""not empty"""
Recursively finds all '*.pdf' files in a current folder and removes them.,find . -name '*.pdf' -exec rm {} +
"change owner of the files into directory ""/mydir"" with "".txt"" extension to user root","find /mydir -type f -name ""*.txt"" -execdir chown root {} ';'"
find all files in the folder /path/to/dir which have been modified between two dates,find /path/to/dir -newermt yyyy-mm-dd ! -newermt yyyy-mm-dd -ls
"find all the files in the folder ""/mp3-collection"" which are bigger than 10MB excluding those that start with the word Metallica","find /mp3-collection -size +10000k ! -name ""Metallica*"""
"Find all files in the current directory аргумент and its sub-directories with the optional constraints of опция_поиска, значение and/or значение.",find аргумент [опция_поиска] [значение] [значение]
find all the files in the current folder which have been changed in the last 60 minutes,find . -cmin -60
change the ownership of all the files in the file system from edwarda to earnestc,"find / -user edwarda -exec chown earnestc ""{}"" \;"
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins,"find ./ -name ""*.dat"" -type f -cmin +60 -exec basename {} \;"
find all files in the file system which have no user and no group,find / -nouser -nogroup
Search for 'DOGS' in all files with '.txt' extension under ~/documents and also print the file names,find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \; -print
Find the empty directories and files under current directory,find -empty
search for a word in all the regular files in the current folder without traversing the sub directories .,find -maxdepth 1 -type f | xargs grep -F 'example'
find  file which case-insensitive name is too in currect directory,find . -iname foo
"Search the home directory tree for files last modified less than 2 days ago or newer than file ""filename""",find ~/ -mtime -2 -o newer filename
Find regular non-hidden files containing 'some text' in their names,find . -not -path '*/\.*' -type f -name '*some text*'
"Update the archived copy of the home directory, ""alldata.tar""",find ~/ -newer alldata.tar -exec tar uvf alldata.tar {} ;
"Recursively removes all files like '*.pyc' in a current folder, printing info message about each action.","find . -name ""*.pyc"" | xargs -I {} rm -v ""{}"""
Search directories /res/values-en-rUS and /res/xml for XML files,find /res/values-en-rUS /res/xml -iname '*.xml'
"find the file ""MyCProgram.c"" in the current folder","find -iname ""MyCProgram.c"""
display the count of number html files in the current folder,"find . -name ""*.html"" -print | xargs -l -i wc {}"
search for all the directories in a folder and limit the search to current folder and give them as input to the python script,find /stuff/* -type d -maxdepth 1 -print0 | xargs -0 script.py
"Search for file ""file"" between level 2 and 3 of the directory tree",find -mindepth 2 -maxdepth 3 -name file
"List in detail all *.txt files in the current directory tree, omitting paths ./Movies/*, ./Downloads/*, and ./Music/*","find . -type f -name ""*.txt"" ! -path ""./Movies/*"" ! -path ""./Downloads/*"" ! -path ""./Music/*"" -ls"
Search the current directory recursively for files writable for `others',find . -perm -o+w
"list in long format all files from / whose filename ends in ""jbd"", not descending into directories that are not readable while searching.",find / \! -readable -prune -o -name '*.jbd' -ls
find all the files  that were updated in the last 24 hours,find / -mtime -1
"search for all the files in the current folder which have spaces, save the output of a file and save the long listing of these files to a log file","find . -name ""filename including space"" -print0 | tee my_teed_file | xargs -0 ls -aldF > log.txt"
FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines,find . -type f -print0 | egrep -iazZ '(\.txt|\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'
Remove all *.mp3 files in tmp directory but not in it's subdirectories,find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs    -n1 rm
recursively look for files ending in either .py or .py.server,"find . \( -name ""*.py"" -o -name ""*.py.server"" \)"
find all teh script files in a directory,"find /home/john -name ""*.sh"" -type f -print"
find for lighttpd in /var,find /var -name lighttpd
"find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names",find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'
Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories,"find $d -type d -exec chmod ug=rwx,o= '{}' \;"
Creae a tarball 'files.tar.gz' containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05,"find . -type f -name ""*"" -newermt 2013-12-04 ! -newermt 2013-12-05 | xargs -I {} tar -czvf files.tar.gz {}"
change html files to mode 644,"find /usr/local -name ""*.html"" -type f -exec chmod 644 {} \;"
Print the list of all subdirectories of the current directory,find . -maxdepth 1 -mindepth 1 -type d
find all files in the entire file system whose size is more than 100MB,find / -size +100M
Locate symbolic links in /usr and below,find /usr -type l
"List files cart1, cart2, ..., cart6 in directory ~/junk",find ~/junk  -name 'cart[1-6]' -exec ls -l {} \; 2> /dev/null
Show the list of files modified less than a minute ago,find / -mmin -1 -print
Find all regular files under test directory,find test -type f
"find all the files starting with ""config"" in the folder Symfony",find Symfony -name '*config*';
Delete all .log files older than 7 days within a directory.,"#!/bin/bash

find /path/to/your/directory -name '*.log' -type f -mtime +7 -delete"
"search in the home folder for all the files with the name ""monfichier""",find /home/ -name monfichier
"take all files in the directory "" /path/to/files"" and provide them as input to the script file truncate.sh",find /path/to/files -exec truncate.sh {} \;
"Search the /root directory recursively for the regular file named ""myfile"" ignoring ""work"" directories",find /root/ -name 'work' -prune -o -name myfile -type f -print
"display all symbolic links in the folder ""myfiles""",find /myfiles -type l
Find all the SGID bit files whose permissions set to 644,find / -perm 2644
Find all files/directories under current directory and count the number of lines for the output,find |wc -l
"List all php files below current directory whose full pathname name does not include ""libs"", ""tmp"", ""tests"", or ""vendor"", sorted by number of lines, letting the user page interactively through the output.","find . -name '*.php' -print0 | xargs -0 wc -l | sort -nr | egrep -v ""libs|tmp|tests|vendor"" | less"
Find all files/directories under current directory and print their paths,find . -exec echo {} +
show all the mp3 files in the folder /home,find /home -type f -name '*.mp3'
Remove files that are less than 1MB in size under <directory>,find <directory> -type f -size -1M -print0  | xargs -0 rm
display the version of find command,find --version
"Find files starting with the word ""file"" in the current directory tree, ignoring the case","find . -iname ""file*"""
Find all empty directories under current directory,find . -type d -empty
"generates a list of all files beneath the current directory whose filename DOES NOT end in .html, so it matches files like *.txt, *.jpg, and so on.","find . -type f -not -name ""*.html"""
"Show all files in user's home directory that have read, write and execute permissions set for user, group and others.",find ~ -perm 777
Find all files in the /home/myuser directory recursively that are older than 7 days,find /home/myuser -mtime +7 -print
"Remove files named ""core"" from the /work directory tree and write their names to /dev/stderr (the standard error","find /work \( -fprint /dev/stderr \) , \( -name 'core' -exec rm {} \; \)"
Create a script to monitor system root user file changes in specific directories and send an alert if any changes are detected in those directories.,"#!/bin/bash

critical_dirs=""/etc /root""

for dir in $critical_dirs; do
    changes=$(find $dir -cmin -60)
    if [ -n ""$changes"" ]; then
        echo ""File changes detected in directory $dir for root user."" | mail -s ""Root File Change in Critical Directory Alert"" user@example.com
    fi

done"
Count the number of regular files in directory tree ${DIRECTORY} that contain a vowel in their names,find ${DIRECTORY} -type f -print | sed -e 's@^.*/@@' | grep '[aeiouyAEIOUY]' | wc -l
Rename all directories under current directory by replacing all occurrences of 'Foo'  with 'Bar' in their names,find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +
find all the files in the current folder which have been modified after the file disk.log,find . -newer disk.log -print
Find all file.ext files/directories under present working directory and print . for each of them,"find `pwd` -name ""file.ext"" -exec echo $(dirname {}) \;"
Find all files/directories under $something directory,find $something
Remove all libGLE* files from the current directory tree,find . -name libGLE* | xargs rm -f
Search the /path directory tree for files matching pattern '*.foo',find /path -name '*.foo'
Remove empty directories from directory tree /srv/${x},find /srv/${x} -type d -empty -exec rmdir {} \;
Find all *.mov  files under current directory and execute /path/to/myffmpeg.sh with each file path as its argument,"find . -iname ""*.mov"" -exec /path/to/myffmpeg.sh {} \;"
Unhide all hidden files in the current directory,"find . -maxdepth 1 -type f -name '\.*' | sed -e 's,^\./\.,,' | sort | xargs -iname mv .name name"
display all the html files in the current folder,find . -name \*.html
search for the word echo all the bash files in the current folder,"find . -name ""*.bash"" |xargs grep ""echo"""
create a gzip of all the files in the current folder excluding the already gzipped files,gzip `find . \! -name '*.gz' -print`
display all the empty files in the folder /opt (file size 0 bytes),find /opt -type f -empty
find all regular/normal files in the current folder that have been modified in the last 120 hours,find -mtime -5 -type f -print
Count the number of regular files in the current directory that contain a vowel in their names,"find . -maxdepth 1 -type f -iname '*[aeiouy]*' -printf "".\n"" | wc -l"
display all the java script files in a folder,find src/js -name '*.js'
Look for files with wide open permissions,find . -type f  -perm 777 -exec ls -l {} \;
Find all the files in file system which are modified more than 50 days back and less than 100 days,find / -mtime +50 –mtime -100
Find all *.rb  files under current directory and count their line numbers,"find . -name ""*.rb"" -type f | xargs wc -l"
"Print all unique file paths under ""dir1"" compared to ""dir2""",comm -23 <(find dir1 | sed 's/dir1/\//'| sort) <(find dir2 | sed 's/dir2/\//'| sort) | sed 's/^\//dir1/'
Search the /path directory tree for files lacking the group writable bit,find /path ! -perm /020
Recursively find the latest modified file in the current directory,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" """
"show all .cpp, .c, .h, .hpp files in the folder ~/src",find ~/src -type f \( -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' \) -exec echo {} \;
"display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word ""file""",find . \( -type d -name aa -prune \) -o \( -type f -name 'file*' -print \)
Find all files under /home/username/public_html/sites/all/themes and set their permission to 640,find /home/username/public_html/sites/all/themes -type f -exec chmod 640 {} +
"Find all regular files under current directory non-recursively that have execute permission set for all (user, group and other)",find . -maxdepth 1 -type f -perm -uga=x
change the group of all directories in the current folder,find . -type d -exec chgrp usergroup {} \;
display all the header files  and cpp files in the current folder,find . -name \*.h -print -o -name \*.cpp -print
Find all files under /home that belong to user tecmint,find /home -user tecmint
"search for the regular/normal file ""foo.bar"" and force delete it","find /home -name foo.bar -type f -exec rm -f ""{}"" ';'"
list regular files under the current directory ending in .mbox putting a null between each file found,find . -type f -wholename \*.mbox -print0
Find files in the current directory and below that are 2000 kB in size,find . -size 2000k -print
find all the file which name  end with c or h and content contain 'thing',find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing
"Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them",find ~/code -type d | sed '/\/\\./d' | tr '\n' ':' | sed 's/:$//'
Unpack all *.gz archives in the current directory tree,find . -name '*.gz' -print0 | xargs -0 gunzip
display all the html files in the current folder that have been modified in the last 7*24 hours,"find . -mtime -7 -name ""*.html"" -print"
find all regex  '\./[a-f0-9\-]\{36\}\.jpg' files,find . -regex '\./[a-f0-9\-]\{36\}\.jpg'
Find files matching `.ssh*' and append their anmes to file `ssh-stuff',find / -name .ssh* -print | tee -a ssh-stuff
Find files under '/travelphotos' directory tree which are bigger than 200KB and do not have 2015 in their names,"find /travelphotos -type f -size +200k -not -iname ""*2015*"""
display list of all the regular/normal files in the home folder which are bigger than 512 kb,find /home/ -type f -size +512k -exec ls -lh {} \;
Print the list of files modified in the last 24 hours.,"#!/bin/bash

find /path/to/your/directory -type f -mtime -1"
display the contents of all the regular/normal files in the entire file system with the name dummy and discard all the errors,find / -type f -name dummy 2>/dev/null -exec cat {} \;
display all the files in the file system which belong to the group lighttpd,find / -group lighttpd -print
Find files newer than start.txt but not newer than end.txt,find ./ -newer start.txt -and ! -newer end.txt
find all the links in the current folder which are broken,find /target -type l -xtype l
Find all files/directories owned by user 'joebob' under '/some/directory' directory tree,find /some/directory -user joebob -print
Find all python files  in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile',"find ""$topdir"" -name '*.py' -printf '%h\0' | xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\n' | sort -u"
Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name  in their names,"find ../../$name-module -name 'Name*' -type f -exec bash -c 'mv ""$1"" ""${1/Name/$Name}""' -- {} \;"
"Move the directory named ""some-dir"" and residing under the current one to x/","find ./ -maxdepth 1 -name ""some-dir"" -type d -print0 | xargs -0r mv -t x/"
"find files in the current directory and sub-directories, that were accessed within last hour",find -amin -60
Find all directories named 'mydir' under 'local' and '/tmp' directory tree,find local /tmp -name mydir -type d -print
find all sqlite files in the current directory.,"find ./ -name ""*.sqlite"""
"change the word ""GHBAG"" to ""stream-agg"" in all the file names in current folder which have the word ""-GHBAG-"" in their name",find . -name '*-GHBAG-*' -exec bash -c 'mv $0 ${0/GHBAG/stream-agg}' {} \;
"Find all files under current directory with their size and paths, reverse sort them numerically, then print first 4 entries","find -type f -printf ""%s %p\n"" | sort -nr | head -n 4"
"finds all directories named CVS, and deletes them and their contents.",find . -type d -name CVS -exec rm -r {} \;
"Find all regular files that were modified more than 60 days ago under '/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps","find /path-to-directory -type f -mtime +60 -printf ""%T@ %p\n"" | sort"
Find files larger than 50k,find . -size +50k
Find all directories in maximum 2 levels down the /tmp/test directory,find /tmp/test/ -maxdepth 2 -mindepth 1 -type d
"Search the current directory tree for regular files that contain ""string""",find . -type f -print0 | xargs -0 grep string
Set permissions to 755 for every subdirectory of the current directory,find  . -type d -mindepth 1 -print -exec chmod 755 {}/* \;
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories,"find ""$1"" -perm -u+x -print0 | xargs chmod g+x"
find all the log files in the file system which are present in the current partition,"find / -xdev -name ""*.log"""
Find files that do not have a listing in the /etc/passwd or /etc/group in the file system,find / -nouser -o  -nogroup
Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories,find . -inum 211028 -exec mv {} newname.dir \;
search for the file test.txt in the folders /home and /opt,find /home /opt -name test.txt
"display all normal/regular files in the folder ""$ORIG_DIR""","find ""$ORIG_DIR"" -name ""*"" -type f"
Find files under current directory without descending into other file systems and append a null character at the end of each paths,find -x . -type f -print0
Count the number of .java files in all folders rooted in the current folder,"find . -name ""*.java"" | wc -l"
Find all files/directories under /myfiles that were modified 2 days ago,find /myfiles -mtime 2
Find all *.txt files/directories under your home directory,find ~/ -name '*.txt'
display all files in the current folder,find . -print
"Search the current directory for HTML files whose names begin with ""a""",find . -maxdepth 1 -name a\*.html
Find all the Sticky Bit set files whose permission are 551 in the file system,find / -perm 1551
Find all files on the system that are larger than 600 MB,find / -size +600M -print
find all the files in the current folder and display them in the sorted order of their name,find . | sort
Find files that match the executable bit for owner or group,find -type f -perm /110
Compare the files in 'FOLDER1' and 'FOLDER2' and show which ones are indentical and which ones differ,"find FOLDER1 -type f -print0 | xargs -0 -I % find FOLDER2 -type f -exec diff -qs --from-file=""%"" '{}' \+"
"Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path",find /path -perm 777
Find and print all PDF files in the current directory and its sub-directories except for any found in the ./pdfs directory.,"find . -name ""*.pdf"" -print | grep -v ""^\./pdfs/"""
Find files not matching shell pattern '*/vendor/*',find . -not -wholename '*/vendor/*
Find `string' in all *.java files ignoring the case of that string,"find . -type f -name ""*.java"" -exec grep -il string {} \;"
"recursively copy files by file extension, preserving directory structure",find -type f -name \*.txt -exec install -D {} /dest/path/{} \;
Find all files/directories under /export/home/someone directory in a remote host  and upload the files/directories to ftp://somehost/tmp/,"ssh someone@somehost ""cd /export/home/someone && find . -name '*' -print| xargs -n1 curl -u someone:password ftp://somehost/tmp/ -vT"""
Search directories /path/to/directory/folder{1..50} for .txt files,find /path/to/directory/folder{1..50} -name '*.txt'  2>/dev/null
"Search all files in the current directory tree that are named ""whatever"" for ""you_search_for_it""",find -name whatever -exec grep --with-filename you_search_for_it {} \;
display a long listing of all files in the entire file system which are bigger than 1MB,find / -size +1000k -exec ls -l {} \; -print
find  js file which name is not  'glob-for-excluded-dir'  under current directory.,find . -name '*.js' -\! -name 'glob-for-excluded-dir' -prune
"display all the ""C"" files in the current folder","find . -name ""*.c"""
find all the regular/normal files in the current folder and do not search in the sub directories,find . -maxdepth 1 -type f
Print the pathnames of all files from the /tmp/dir1 directory tree,find /tmp/dir1 -exec echo {} \;
Find all SUID set files in the file system,find / -perm /u=s
find the type of all the regular/normal files in the current folder (plus takes bulk of files as input to the file command),find . -type f -exec file {} \+;
display all the text files  in the current folder,"find . -name ""*.txt"" -print"
Find grub.conf files in entire file system,find / -name grub.conf
create a soft link of the files in the folder /media/movies which have been modified in the last 30 days,find /media/Movies -type f -mtime -30 -exec ln -s {} /media/Movies/New/ \;
Print the list of files and directories of the /etc directory,find /etc   ! -name /etc
Delete all matches to the regex '^.*iframe bla bla bla.*$' in all the php files under current directory tree and modify the files in-place,find ./ -type f -name \*.php -exec sed -i ’s/^.*iframe bla bla bla.*$//g’ {} \;
"display all the files in the current folder which are present in the path ""./sr*sc""",find . -path './sr*sc'
display the count of total number of non empty files in the current folder,find . -type f -not -empty | wc -l
search for all xml files in some directory,"I'm assuming you only want to zip files that match names in $Namese. In your script, try replacing the find command with:  export Namese  find /var/tmp/ -type f -name '*.xml'"
"Finds strings having text ""searched-string"" in all files recursively in a current folder.","find . | xargs grep ""searched-string"""
Search the system for the file “testfile.txt”,"find / -name ""testfile.txt"""
Search for 'foo' in all regular files under 'sources' directory tree and show the matched lines with filenames,find sources -type f -exec grep -H foo {} +
Find all files in and below all subdirectories of the current directory,find . -mindepth 2
"create a sub shell and search for regular/normal file with the name ""myfile"" in the entire file system and discard all the errors","sh -c ""find / -name myfile -type f -print 2> /dev/null"""
"find all the directories in the file system which begin with ""man""",find / -type d -name 'man*' -print
Delete all empty directories in the current directory tree,find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
"search for the file ""myfile"" in the current folder and display all errors apart from permission denied error",find . -name myfile |& grep -v 'Permission denied'
Delete all files not owned by valid users,find / -nouser | xargs -0 rm
"Search the files in the current directory tree for lines containing string ""vds admin""","find . -exec grep -i ""vds admin"" {} \;"
"Search the current directory tree for files and directories whose names do not end in ""exe"" and ""dll""",find . | grep -v '$'
search for all regular/normal files in current folder and display all the files which contain 16 lines,find . -type f -print0 | xargs -0 grep -cH '.' | grep ':16$'
search for files which are writable by either their owner or their group,"find . -perm /u=w,g=w"
Get the actual find exectuable path,which find
"Find CSS files omitting results containing ""CVS""","find . \! -path ""*CVS*"" -type f -name ""*.css"""
display all the directories in the folder /usr/share,find /usr/share -type d
"Find file names *blast* in specfied directory, case insensitive","find /usr/local -iname ""*blast*"""
Search for 'some string' in all *js files under current directory and show the matched lines with line numbers,find . -name '*js' -exec grep -n 'some string' {} \;
Find all the SUID files in the current directory tree,find . -perm /u=s
Find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/.,find /etc/ -mtime -30 | xargs -0 cp /a/path
Find all files/directories named 'foo' under current directory tree without descending into directories named 'foo',find . -name foo -type d -prune -o -name foo
"Search the current directory tree for all files matching either pattern ""*.rb"" or pattern ""*.py""","find . -name ""*.rb"" -or -name ""*.py"""
"Search the home directory tree for .tar.gz files newer than file ""filename""",find ~/ -name *.tar.gz -newer filename
Search the current directory tree for regular files that can be read by noone,find -type f ! -perm -444
Find all regular files under '/directory_path' directory tree that have been modified within the last day,find /directory_path -type f -mtime -1 -print
"Find all files in the current directory tree, except GIT files",find -type f -name .git -prune -o -print
display a long listing of all the files in the /var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names,find /var -size +10000k -print0 | xargs -0 ls -lSh
search for all the perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified 8-10 days ago.,"find /nas/projects/mgmt/scripts/perl -mtime 8 -mtime -10 -daystart -iname ""*.pl"""
Print a sorted list of the extensions of the regular files from the current directory tree matching pattern '*.???',"find . -type f -name ""*.???"" | awk -F. '{print $NF}' | sort -u"
"find all the ""passwd"" files in the entire file system",find / -iname passwd
Find all files that belongs to user Tecmint under /home directory,find /home -user tecmint
Find all files under dir and calculate their md5sum and save the output to dir.md5,find dir -type f -exec md5sum {} + > dir.md5
Find files that have been modified within the last month and copy them somewhere,find /etc/ -mtime -30 | xargs -0 cp /a/path
Find file names *blast* in specfied directory,"find /usr/local -name ""*blast*"""
Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories,"find . -type d -name files -exec chmod ug=rwx,o= '{}' \;"
Find all files under current directory and append a null character at the end of each of their paths,find -type f -print0
Search directories called ' backup ' from /usr directory downwards and print them.,find /usr -type d -name backup -print
List the directory paths of all file.ext files under present working directory,"find . -name ""file.ext"" -execdir pwd ';'"
Copy *.txt files from the dir/ directory tree along with their parent directories,find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents
Find all files/directories under minimum 1 level down the $FOLDER directory and sort them,"find ""$FOLDER"" -mindepth 1 | sort"
"Search all Python files in the current directory tree for string ""import antigravity""","find . -name ""*.py"" | xargs grep 'import antigravity'"
Delete all regular files that have not been modified in the last 31 days under '/path/to/junk/files' directory tree,find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \;
Search the current directory for files whose names start with my,find . -name 'my*'
Find all *.txt  files of user root under / directory and show a few lines of output from the beginning,"find / -user root -iname ""*.txt"" | head"
Print a list of all duplicate filenames in the current directory tree if there is no white space in filenames,"find . |sed 's,\/\$,\1/\2\t\1/\L\2,'|sort|uniq -D -f 1|cut -f 1"
Find all files/directories that start with 'screen'  in their names under user's home directory tree,"find ~ -iname ""screen*"""
Find all 100MB+ files and delete them,find / -size +100M -exec rm -rf {} \;
Locate all *.csv files under the current directory tree separating the file names with zeroes,"find . -name ""*.csv"" -print0"
Change permissions to 644 for all files showing the respective chmod command,find ./ -type f -print0 | xargs -t -0 chmod -v 644
Calculate md5 sum of the md5 sum of all the sorted files under $path,"find ""$path"" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"
Find all .sh files in the current directory tree and remove them,"find . -name ""*.sh"" -print0 | xargs -0 rm -rf"
"display files ending with "".ext"" in current folder which are present in the file ""foo""",find . -type f -name \*.ext | xargs grep foo
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago,find -daystart -mtime +0
Find all regular files that reside in the current directory tree and were last modified more than 3 days ago,find . -type f -mtime +3
"search for regular/normal file with the name ""myfile"" in the entire file system and discard all the errors",find / -name myfile -type f -print 2> /dev/null
List all files in maximum 2 levels down the current directory,find . -maxdepth 2  -type f -exec ls -l {} \;
find all the files in the current folder that have been modified exactly 24*3 hours ago,find ./ -mtime 3
Find all symbolic links containing 'javaplugin' in their names under '/usr' directory tree,find /usr/ -lname *javaplugin*
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory,find . -name $1 -type f -exec grep -i $2 '{}' \;
Find all directories in the /path/to/base/dir tree,find /path/to/base/dir -type d
print all files in the directories except the ./src/emacs directory,find . -wholename './src/emacs' -prune -o -print
find all empty files in home directory,find ~ -empty
find all the perl files in the current folder and search for a pattern,find . -name '*.pl' | xargs grep -L '^use strict'
Find all *.java files under current directory and change their encoding to utf-8 from cp1252,"find . -type f  -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 ""$1"" > converted && mv converted ""$1""' -- {} \;"
find all files that have been modified yesterday,find /some/dir -mmin -$((currtime + )) -a -mmin +$()
find all the normal/regular files in the current directory which have been modified in the last 24 hours,find . -mtime -1 -type f -print
"search for a folder junk in the home directory and create files cart1, cart2, cart3 ... cart6 in the folder junk. Discard all the errors.","find ~/junk -exec touch ~/junk/cart{1,2,3,4,5,6} {} \; 2> /dev/null"
Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files.,find . -not -empty -type f -exec ls -s {} \; | sort -n  | head -5
Find all files/directories under current directory that were modified later than /reference/file,find . -newer /reference/file
Display the number of regular files under current directory tree,find . -type f -exec echo {} \; | wc -l
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir,find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +
Search for first match of the regex 're' in all *.coffee files under current directory and print the file names,"find . -name \*.coffee -exec awk '/re/ {print FILENAME "":"" $0;exit}' {} \;"
list all javascipts file expect files under proc folder,find . -type d -name proc -prune -o -name '*.js'
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f -ls
"Recursively search through directory ""test"" in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory.",find ~/test -type d -exec basename {} \;
"Copy all files below the current directory whose names contain ""foobar""  to directory foo/bar/ in user's home directory.","find . -iname ""*foobar*"" -exec cp ""{}"" ~/foo/bar \;"
Measure the disk space taken up by all *.txt files in directory tree /home/d,"find /home/d -type f -name ""*.txt"" -printf ""%s\n"" | awk '{s+=$0}END{print ""total: ""s"" bytes""}'"
Find all regular files that reside in the current directory tree and were last modified 1 day ago,find . -type f -mtime 0
List all non-empty files under under current directory,find . -type f ! -size 0
Copy all files/directories excluding *.flac files under current directory to /media/wd/network_sync/music directory,"find . -type f -iname ""*.flac"" -o -print0 -iname ""*.mp3"" -print0 -o -iname ""*.wav"" -print0 -o -iname ""*.aac"" -print0 -o -iname ""*.wma"" -print0 | while read -d $'\0' file; do cp -ruv ""$file"" ""/media/wd/network_sync/music/$file""; done"
"display files in current folder ending with ""pdf"" or ""PDF""",find . -name '*.pdf' -or -name '*.PDF'
search for all regular/normal files in the current folder and display the number of lines in the file,find . -type f -print | xargs -L1 wc -l
Remove files whose names start with `Foo',"find . -type f -name ""Foo*"" -exec rm {} \;"
Recursively removes all files in a current folder but '*txt' files.,find . -type f -not -name '*txt' | xargs rm
Find all hidden files,"find /tmp -type f -name "".*"""
change permission of all the files in the entire file system which have the permissions 777.,find / -type f -perm 0777 -print -exec chmod 644 {} \;
Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them,"find . -type f -exec grep ""/usr/bin/perl"" {} \; -ls"
"Remove all files from the current directory tree whose names do not end with "".tex"" or "".bib""","find . | egrep -v ""\.tex|\.bib"" | xargs rm"
"Print the names and sizes of regular files residing in the ""tmp"" directory tree","find tmp -type f -printf ""%s %p\n"" | awk '{sub(/^[^ ]+/,sprintf)}1'"
Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days,find . -type f -mtime -7 -print -exec cat {} \; | tar cf - | gzip -9
Search the /usr/bin directory tree for regular files accessed more than 100 days ago,find /usr/bin -type f -atime +100
Find files/directories named 'filename' in the entire filesystem,find / -name filename -print
find all the files in the folder /home which are exactly of size 10MB,find /home -size 10M
"find all the undo files in the current folder and display the toal lines, words, characters",find ./ -name *.undo | xargs wc
Find all * * regular files under current directory,"find .  -type f -name ""* *"""
Count total number of lines in all *txt files  in current directory,wc -l `find . -type f -name '*.txt' `
Print a sorted list of the subdirectories of ~/Music,find ~/Music/ -maxdepth 2 -mindepth 2 -type d | sort
Find all files/directories that start with 'onlyme' in their names under maximum 2 levels down the current directory,find . -maxdepth 2 -name 'onlyme*'
Find all executable files under {} and reverse sort them,find {} -type f -depth 1 -perm +0111 | sort -r
"Search for ""whatever"" in all files under /dir directory ensuring white space safety in filenames",find /dir -type f -print0 | xargs -0i cat {} | grep whatever
"Find files in the current directory tree that match pattern ""*sub*""","find ./ -name ""*sub*"""
Find all files in entire file system which are larger than 20000KB,find / -type f -size +20000k
display all files in the current folder,find .
Find files owned by nonexistent users,find / -nouser -print
"Find all directories under and below /home/admin/public_html/, and change their permissions to 755",find /home/admin/public_html/ -type d -exec chmod 755 {} \;
"Remove the regular files from the current directory tree that were last modified on November, 21","find -type f -newermt ""Nov 21"" ! -newermt ""Nov 22"" -delete"
Find all files/directories with space in their names under current directory,find . -name '* *'
delete all text files in the entire file system,"find / -type f -name ""*.txt"" -print | xargs rm"
Find all PNG and JPG files and append them to archive `images.tar',find . \ -print -exec tar -rf images.tar {} \;
long list al the files in the current directory which have read permission to the group,find . -perm -g=r -type f -exec ls -l {} \;
Find all files/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes,find /var/log/crashes -name app-\*\.log -mmin -5
display in a list of all the files that are bigger than 10KB in current folder,find . -size +10k -ls
Find all image.pdf files/directories under ./polkadots with null character as the delimiter,"find ./polkadots -name ""image.pdf"" -print0"
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -type f -mmin -60 -print0 | xargs -r0 ls -l
Find all *foo* files/directories under current directory and copy them to /your/dest,"find . -name ""*foo*"" | sed -e ""s/'/\\\'/g"" -e 's/""/\\""/g' -e 's/ /\\ /g' | xargs cp /your/dest"
Show what content owned by root has been modified within the last day,find /etc/ -user root -mtime 1
"search for the word ""redeem reward"" in all the regular/normal files in the current folder and discard all the errors",find . -type f -exec grep -i “redeem reward” {} \; -print 2>/dev/null
"Find all files called ""file1.txt"" that reside under and below /home/wsuNID/",find /home/wsuNID/ -name file1.txt
"List all paths to files or directories under ""/data/"" that start with ""command-"" and end with ""-setup"", sort the result by the version number specified between ""command-"" and ""-setup""","find /data/ -name 'command-*-setup' | sort -t - -V -k 2,2"
"Search all .pdf files  from directory tree ~/.personal/tips for ""hot""","find ~/.personal/tips -type f -iname ""*.pdf""  -exec pdftotext '{}' - ';'  | grep hot"
Get the sizes  of all files under dir1 directory,find dir1 ! -type d |xargs wc -c
change the permission of all php files in current folder. Plus symbol at the end is used to give multiple files as input to the chmod command,"find . -name ""*.php"" -exec chmod 755 {} +"
find all the links in the current folder and following it to the pointed path,find -L /target -type l
find all the database files in the folder /var/named,find /var/named -type f -name *.db
"display only the file names of all the files which end with "".deb""","find . -name '*.deb' -printf ""%f\n"""
Find all files in directory tree /tmp/foo and pass them as arguments to script /tmp/echoargs,find /tmp/foo -exec /tmp/echoargs {} +
"Find all directories under the current directory that is on the same filesystem, execute ""/tmp/count_em_$$"" with the directory as an argument, sort the result numerically from least value to greatest value",find . -mount -type d -print0 | xargs -0 -n1 /tmp/count_em_$$ | sort -n
Find all .java files  under current directory,find . -print | grep '\.java'
Search the file system for regular files whose pathnames are shorter than 25 characters,find / -type f|awk -F'/' '{print $NF}'| awk 'length($0) < 25'
all .jpg or .png images modified in the past week,find . -mtime -7 \
"Find all .c, .h files in the current directory tree and search them for string ""expr""",find . -name '*.[ch]' | xargs grep -E 'expr'
find  files which  full path name is /tmp/foo/bar under foo directory and print,find foo -path /tmp/foo/bar -print
"Search the .VER files from the current directory tree for string ""Test_Version='","find . -name ""*.VER"" -exec grep 'Test_Version=' '{}' ';' -print;"
Find recursively all empty directories in the current directory,find -type d -empty
Find directories owned by user news with permissions 775,find / -user news -type d -perm 775 -print
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files,"find .  -type f -name ""CDC*"" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \;"
change the permissions of all the directories in the current folder,chmod 751 `find ./ -type d -print`
delete all the files in the file system which belong to the user edwarda after user confirmation,"find / -user edwarda -ok rm ""{}"" \;"
find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories.,find /home/pankaj -maxdepth 1 -cmin -5 -type f
Find the oldest *.sql file under current directory,find . -name \*.sql | xargs \ls -1rc | tail -7 | head -1
"Find all files under current directory whose file type description contains ""image"", display only path to each file.",find . -type f -exec file {} \; | awk -F: '{ if ($2 ~/[Ii]mage|EPS/) print $1}'
Find all files more than 700 megabytes,find / -size +700M
Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory,find -maxdepth 3 -mindepth 3 -type f -iname '*.jpg' -exec rename -n 's/jpg$/jpeg/i' {} +
"find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt",find /opt \( -name error_log -o -name 'access_log' -o -name 'ssl_engine_log' -o -name 'rewrite_log' -o  -name 'catalina.out' \) -size +300000k -a -size -5000000k
Find all TXT files on the system and copy them to /tmp/txt,find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt
"display table of files with their name, owner, and size in bytes.",find . -printf 'Name: %f Owner: %u %s bytes\n'
Find all regular files matching the name pattern '*.?htm*' under '/srv/www' and '/var/html' directory tree,"find /srv/www /var/html -name ""*.?htm*"" -type f"
Print the current directory,find -prune
Find all executable files under current directory and reverse sort them,find . -perm -111 -type f | sort -r
Find all directories under current directory tree that match the case insensitive regex '^\./course\([0-9]\.\)*[0-9]$' in their paths,find . -type d -iregex '^\./course\([0-9]\.\)*[0-9]$'
Search for first match of the case insensitive regex 're' in all *.coffee files under current directory and print the file paths along with the matches,find . -print0 -name '*.coffee'|xargs -0 grep -m1 -ri 're'
find  directory which case-insensitive name is too in currect directory,find . -iname foo -type d
Create a report of the contents of a USB drive mounted at find /path/to/drive,"find /path/to/drive -type f -exec file -b '{}' \; -printf '%s\n' | awk -F , 'NR%2 {i=$1} NR%2==0 {a[i]+=$1} END {for (i in a) printf(""%12u %s\n"",a[i],i)}' | sort -nr"
Find *.c and *.h files under the current directory tree skipping hidden directories and files,find . \( -path '*/.*' -prune -o ! -name '.*' \) -a -name '*.[ch]'
Find recursively all files changed within the last 5 minutes starting from directory b,find b -cmin -5
Find regular non-hidden files containing 'some text' in their names,find . -not -path '*/\.*' -type f -name '*some text*'
Dispaly the latest version of Joomla in various folders,find /home/*/public_html/ -type f \ -print0 -exec perl -e 'while  { $release = $1 if m/ \$RELEASE\s+= ..;/; $dev = $1 if m/ \$DEV_LEVEL\s+= ..;/; } print qq;' {} \;
Find all file.ext files/directories under /home/kibab directory and print . for each of them,find /home/kibab -name file.ext -exec echo . ';'
Remove junk files modified more than 31 days ago recursively,find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \;
Find all symbolic links containg 'vim' in their names under '/usr/bin' directory tree,find /usr/bin -name '*vim*' -type l
Find all *weservice*  files under current directory and restart the services provided by them,find -iname '*weservice*'|xargs -I {} service {} restart
"display all the regular files in the current folder that are modified after the file ""file.log""",find . -type f -newer file.log
List files in the current directory,find . \( ! -name . -prune \)
"Find all files under the current directory that are not the same file as ""/home/nez/file.txt""",find . -maxdepth 1 -not -samefile /home/nez/file.txt
Search the current directory tree for files that are less than 50kb,find . -size -50k
Pass all the files from the current directory tree as arguments to a single 'echo' command,find . -exec echo {} +
find files in /dir/path/look/up directory that names are dir-name-here,"find /dir/path/look/up -name ""dir-name-here"""
Find all .gz archives in the current directory tree and check if they are valid,find . -name *.gz -exec gunzip '{}' \;
find files which modification time is  7 days ago,find . -mtime -7
List all regular files in the current directory tree modified within the last 24 hours,find . -mtime 0 -type f -ls
Find files with a question mark in their names and save the output as a file,find . -name \*\\?\* > output.txt
find all the text files in the current folder,"find . — name ""*.txt"" — print"
List all files in entire file system owned by the user wnj and are newer than the file ttt,find / -newer ttt -user wnj -print
Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago,find . -type f  -mtime +7 | tee compressedP.list | parallel compress
Find files belonging to the given owner,find /path/to/search -user owner
List all regular file owned by root with permissions 4000,find / -type f -user root -perm -4000 -exec ls -l {} \;
Rename all directories under current directory by replacing all occurrences of 'Foo' (case insensitive) with 'Bar' in their names,find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +
find all the files within your home folder accessed more than 100 days ago,find ~ -atime 100
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them,find MyApp.app -name Headers -type d -delete
find all the xml files in a directory and pass it as an argument to a jar,find /dump -type f -name '*.xml' | parallel -j8 java -jar ProcessFile.jar {}
"Create a copy of the current working directory structure in the usr/project directory,",find . -type d -print|sed 's@^@/usr/project/@'|xargs mkdir
Delete all files/directories named test under maximum 2 level down the current directory,"find . -maxdepth 2 -name ""test"" -exec rm -rf {} \;"
find all empty files in /tmp directory .,find /tmp -type f -empty
"Find all files/directories in entire file system for which owner has read/write/execute permissions, or the group has at least execute permission, or others have at least execute permission",find / -perm /711
Find all CSS files that do something with HTML ID #content,"find . -name ""*.css"" -exec grep -l ""#content"" {} \;"
"search for the "".git"" folder in the current folder and run the git pull request",find . -name .git -type d -execdir git pull -v ';'
display a long listing of all the temp files whose size is 0 bytes and which have not been accessed in the last 10 days,find /tmp -size 0 -atime +10 -exec ls -l {} \; > /tmp/checkold.txt
Remove trailing whitespaces from all regular non-hidden files in the current directory tree,find . -type f -name '*' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
convert all text files in the current folder from dos to unix format,find . -name *.txt | xargs dos2unix
"Compress each file in all directories matching pattern ""*.1""",find *.1  -exec tar czf '{}.tgz' '{}' --remove-files \;
"find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group",find / -path /proc -prune -o -nouser -o -nogroup
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files,"find .  -type f -name ""CDC*"" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \;"
Find all files that were last accessed more than 7 days ago under /home,find /home -atime +7
"Find the largest original "".gz"" file in the current directory tree",find . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'
"Finds all files like ""mylog*.log"" newer than $2 and archives them with bzip2.","find . -type f -ctime -$2 -name ""mylog*.log"" | xargs bzip2"
Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago,find $backup_path/* -mtime +30 -exec rm {} \;
compare each C header file in or below the current directory with the file /tmp/master,find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'
Find all .jpg files in the current directory and below.,find . -name “*.jpg”
Find all files in /dir1 and print only the filenames,find ./dir1 -type f -exec basename {} \;
"Search the current directory recursively for files containing ""needle text""","find . -type f -print0 | xargs -0 grep -IZl . | xargs -0 grep ""needle text"""
find all files with pattern` '*.mp3',find / -name *.mp3
Find all regular files in /usr/bin modified less than within the last 10 days,find /usr/bin -type f -mtime -10
Find all files/directories with '.log' extension that belong to the group 'adm' under '/var/log' directory tree,"find /var/log -group adm -name ""*.log"""
Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers,"find . \ -print0 | xargs -0 grep -Hin ""joomla"""
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them,find . -mtime +180 -exec du -ks {} \; | cut -f1 | awk '{total=total+$1}END{print total/1024}'
Search the current directory tree for directories,"find ""$PWD"" -type d"
calculate the disk usage for all the files which have been modified in the last 24 hours in ~/tmp folder and display the file sizes,find ~/tmp -mtime 0 -exec du -ks {} \; | cut -f1
Find all *.ext files/directories under current directory and print their path and parent directory path,"find /path -type f -name ""*.ext"" -printf ""%p:%h\n"""
Find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths,"find /home/feeds/data -type f -not -path ""*def/incoming*"" -not -path ""*456/incoming*"""
Remove all files with a txt extension under current directory,"find . -type f -name ""*.txt"" | xargs    -i ksh -c ""echo deleting {}; rm {}"""
display the count of all the files in the current folder,find . -print | wc -l
Compress all *.img files using bzip2,"find ./ -name ""*.img"" -exec bzip2 -v {} \;"
"Find files/directories under /users/tom that matches both the pattern ""*.pl"" and  ""*.pm""","find /users/tom -name ""*.pl"" -name ""*.pm"""
Find all files/directories under current directory tree with '.old' extension,find . -name ”*.old” -print
Search for 'some string' in all *js files under current directory and show the matched lines with line numbers,find . -name '*js' | grep -n  'some string'
Move all files from the `sourceDir' directory tree to the `destDir' directory,"find sourceDir -mindepth 1 -exec mv ""{}"" --target-directory=destDir \;"
Find all files under current directory and print only the filenames,find . -type f -execdir echo '{}' ';'
"Find all files whose names end with ""macs"" in and below the current directory",find -name '*macs'
Search the ~ and `Music' directory trees for .mp3 files,find ~ Music -name '*.mp3'
List all non-hidden files in ~/junk,"find ~/junk   -name ""*"" -exec ls -l {} \;"
Find all .gz archives in the /path/to/dir directory tree,"find /path/to/dir -name ""*.gz"" -type f"
"search for a file ""file"" in current folder and display all instances of this file",find -name file -print
Find all files/directories named 'testfile.txt' under current directory tree,find . -name testfile.txt
Rename file ~/junk/cart1 to ~/junk/A,find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \;
Search the /path directory tree for files missing g+w or o+w bits,find /path ! -perm -022
Find all files/directories under current /export/home/someone directory and upload them to ftp://somehost/tmp/,find /export/home/someone -exec curl -u someone:password -vT {} ftp://somehost/tmp/
"Gives longest '*.php' files with line count first, and excludes directories with ""libs"", ""tmp"", ""tests"" and  ""vendor"" in their paths.","find . -name '*.php' | xargs wc -l | sort -nr | egrep -v ""libs|tmp|tests|vendor"" | less"
find httpd.conf file in /etc directory,"find /etc -name ""httpd.conf"""
Find all of the hidden files in the current directory and its sub-directories.,"find . -type f -name "".*"
search for text files in the current folder which have write access to others,find . -type f \
delete all the directories empty directories in the current folder,find . -type d -empty -delete
"Removes resursively all files and folders named ""Thumbs.db"", ignoring case distincts.","find . -iname ""Thumbs.db"" -print0 | xargs -0 rm -rf"
Counts total lines in PHP and JS files.,"find . -name '*.js' -or -name '*.php' | xargs wc -l | grep 'total'  | awk '{ SUM += $1; print $1} END { print ""Total text lines in PHP and JS"",SUM }'"
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories,"find . -maxdepth 1 -name ""*.jpg"" -size -50k | xargs rm -f"
"Unzip all "".gz"" files in the current directory tree to their respective directories","find . -name ""*.gz"" -execdir gunzip '{}' \;"
Search the current directory tree for files matching regular expression '.*myfile[0-9][0-9]?',find . -regex '.*myfile[0-9][0-9]?'
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago,find -mtime +0
remote copy all text files from one location to another,find .  -name '*.txt' -exec rsync -R {} path/to/dext \;
Find all broken symlinks under current directory,"find . -type l -exec sh -c ""file -b {} | grep -q ^broken"" \; -print"
"delete all the ""wmv"" ""wma"" files in the currnet folder,",find . \( -name '*.wmv' -o -name '*.wma' \) -exec rm {} \;
Print the list of files and directories of the current directory,find . ! -name . -prune
"Find files patching ""pattern""","find . -name ""pattern"" -print"
Print the file names along with their sizes under current directory tree,"find . -type f -printf ""%f %s\n"""
change the permissions of all regular/normal files in the file system,chmod 640 `find ./ -type f -print`
find all files in the current folder which have not been changed in the last 48 hours,find ./ -daystart -ctime +2
List subdirectories in the current directory,"find . -maxdepth 1 -type d -exec ls -ld ""{}"" \;"
Find files under /etc/apache-perl that are modified more recently than /etc/apache-perl/httpd.conf,find /etc/apache-perl -newer /etc/apache-perl/httpd.conf
"Search for files greater than 20MB in the entire file system, sort them according to size in ascending order and display the path and file size","find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null | awk '{ print $NF "": "" $5 }' | sort -nk 2,2"
List *.txt files under current directory that have 'mystring' in their name,find . -name *.txt | egrep mystring
delete all text files in the home folder after user confirmation,"find $HOME/. -name ""*.txt"" -ok rm {} \;"
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,find . -name foo.mp4 -exec dirname {} \;
Search for the string 'device' in all regular files in the entire filesystem,"find / -type f -print | xargs grep ""device"""
"search for the files with the name ""temp"" and which have not been accessed in the last 7*24 hours in the /usr folder",find /usr -name temp -atime +7 -print
find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB,find . -atime +7 -size +20480 -print
Find and clear UTF-8 files with BOM,find . -type f -exec sed '1s/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir,find . -type d -mtime -0 -print0 | xargs -0 mv -t /path/to/target-dir
Print a list of all files/directories under current directory in myfile.sh file,find . -print >myfile.sh
Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories,find . -not \ -type f -exec sed -i 's/[:space:]+$//' \{} \;  -exec sed -i 's/\r\n$/\n/' \{} \;
Find all .txt files except README.txt,"find . -type f -name ""*.txt"" ! -name README.txt -print"
Find files/directories in entire file system that were accessed in less than a day ago,find / -atime -1
find all the files that have been modified since the last time we checked,find /etc -newer /var/log/backup.timestamp -print
Find all SGID files,find / -perm /g=s
Remove all .mpg files in the /home/luser directory tree,find /home/luser -type f -name '*.mpg' | xargs rm -f
"display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to ""peter"",""peter""",find /home/peter -nouser -exec ls -l {} \; -ok chown peter.peter {} \;
"Recursively search through directory ""test"" in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory.",find ~/test -type d -exec basename {} \;
Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename,find dir -type f -print0 | xargs -r0 sed -i 's/ *$//'
Find all filenames ending with .c in the current directory tree,"find -name ""*.c"""
Find all the files which are changed in last 1 hour,find / -cmin -60
Find all *.txt files/directories under current directory,find . -name '*.txt'
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\n',find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tm %p\n'
Search for all .mp3 files in the /mnt/usb directory tree,"find /mnt/usb -name  ""*.mp3"" -print"
Removes all empty folders within $DELETEDIR folder.,"find ""$DELETEDIR"" -mindepth 1 -depth -type d -empty -exec rmdir ""{}"" \;"
"find all the files in the current folder and display those that are not present in the list ""file.lst""",find . | grep -vf file.lst
Find all catalina* files/directories under /path/to/search/in,find /path/to/search/in -name 'catalina*'
Find all files/directories under '/var/log' directory tree that bave been modified today,find /var/log -daystart -mtime 0
Get the disk space used by all *.txt  files/directories under folder 1 and folder2,find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1
Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree,"find ""$DIR"" -type f -exec grep -q ""$SEARCH"" {} + ;"
Find all hidden files under current directory and remove them excluding the files specified in /tmp/list_files,"find . -iname "".*"" -exec bash -c ""fgrep {} /tmp/list_files >/dev/null || rm -i {}"" \;"
"Removes resursively all files and folders named "".DS_Store"".","find . -name "".DS_Store"" -print0 | xargs -0 rm -rf"
Rename all *.jpg files to *.jpg$.jpg files under current directory,"find . -name '*.jpg' -exec sh -c 'mv ""$0"" ""${0%.JPG}$.jpg""' {} \;"
Execute `echo' for each file found,find . | xargs -n 1 echo
display a long listing of all the directories in the current folder,find . -type d -exec ls -algd {} \;
display list of all the files in the current folder which are empty.,find . -size 0 -ls
search for files having python in filename,find / -name '*python*'
Find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size.,find . -atime +7 -o -size +20480 -print
Find all the files/directories under '/usr/local' directory tree which have been modified within the last day,find /usr/local -mtime -1
change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.,"find . \ , \"
"Find all directories recursively starting from / and skipping the contents of /proc/, and count them",find / -path /proc -prune -o -type d | wc -l
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time,"find / -type f -name ""*"" -newermt ""$newerthan"" ! -newermt ""$olderthan"" -printf ""%T+\t%p\n"" | sort | awk '{print $2}'"
find all the files in the current folder which are bigger than 1MB,find . — size +1000k -print
Find all files that are exactly 50 bytes,find / -size 50c
Delete all directories found in $LOGDIR that are more than a work-week old,find $LOGDIR -type d -mtime +5 -exec rm -rf {} \;
find all jpg files in the current folder,"find . -name ""*.jpg"""
"display all the C, CPP, Header files in the kat folder","find kat -type f \( -name ""*.c"" -o -name ""*.cpp"" -o -name ""*.h"" \)"
display all the regular files in the current folder and do not search in sub folders,"find ""$dir"" -maxdepth 1 -type f"
find the ten biggest files,"find /home -type f -exec du -s {} \; | sort -r -k1,1n | head"
Find all files in the /home/ directory tree that were last accessed more than 7 days ago,find /home -atime +7
display a long listing of all the files in the home folder which are bigger than 200MB,find /home -size +200M -exec ls -sh {} \;
Find all files/directories with case insensitive name pattern $TARGET that are located in minimum 10 level down the current directory,find -mindepth 10 -iname $TARGET
Show the subdirectories of the current directory,find . -maxdepth 1 -type d -print | parallel echo Directory: {}
Delete all __temp__* files/directories under current directory tree,find . -name __temp__* -exec rm -rf '{}' \;
Move all files from the `sourceDir' directory tree to the `destDir' directory,find sourceDir -mindepth 1 -print0 | xargs -0 mv --target-directory=destDir
Locate all *.csv files under the current directory tree,"find . -name ""*.csv"" -print"
display all the text and pdf files in the current folder,"find . -regex "".*\$"""
Count the toal number of lines in all .py files in current directory tree,find . -name *.py -exec wc -l {} \; | awk '{ SUM += $0} END { print SUM }'
Delete all files/directories named 'sample'  under '/home/user/Series/' directory tree as super user,sudo find /home/user/Series/ -iname sample -print0 | sudo xargs -0 rm -r
Replaces any occurences of '*favicon.ico*' in any subfolder with file '/root/favicon.ico'.,find . | grep favicon\.ico | xargs -n 1 cp -f /root/favicon.ico
search for a word in all the shell scripts in the current folder and display the matched files.(case insensitive search in grep commad),"find . -type f -name ""*.sh"" -exec grep -il landoflinux {} \;"
find all the regular/normal files in the current direcoty which have not been accessed in the last 30 days.,find . -type f -atime +30 -print
Search the current directory tree for directories,"find ""$PWD"" -type d"
display all files in current folder excluding text files,"find . ! -name ""*.txt"""
Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory,find {} -name 'upvoter-*' -type f -or \( -type l \) -maxdepth 1 -perm +111
Print a listing of the `other' directory,$ find other -maxdepth 1
"Find the files that have ""644"" permissions and modify them to have ""664"" permissions",find . -type f -perm 644 -exec chmod 664 {} \;
"display all the "".c"" files in the current directory",find . -name \*.c -print
"Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them.",find . -depth -type f -not -name *.itp -and -not -name *ane.gro -and -not -name *.top -exec rm '{}' +
"Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding ""*_ocr.pdf"" files","find /somepath -type f -iregex "".*\.(pdf\|tif\|tiff\|png\|jpg\|jpeg\|bmp\|pcx\|dcx)"" ! -name ""*_ocr.pdf"" -print0"
Find all .sql files in the current directory recursively and print their path names separated by zeroes,find . -name '*.sql' -print0
Run an awk program on every TXT file found in the current directory tree,"find . -name '*txt' -print -exec awk 'BEGIN {nl=1 ;print FILENAME} $9 !="""" {if (nl<11) { print $0 ; nl = nl + 1 }}' {}  \;"
Search for 'magic' in all regular files under current directory tree,"find . -type f | xargs grep ""magic"""
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3,"find / -iname ""*.mp3"" -type f | xargs -I '{}' mv {} /mnt/mp3"
"display long listing of all the files in the folder ""/myfiles""",find /myfiles -exec ls -l {} ;
"Change all directories under ""./bootstrap/cache/"" to owner ""apache"" and group ""laravel""",sudo find ./bootstrap/cache/ -type d -exec chown apache:laravel {} \;
Remove all CVS directories from the current directory tree,find . -name 'CVS' -type d -exec rm -rf {} \;
"Search level 3 of the current directory tree for the directories whose pathnames contain ""New Parts""","find -mindepth 3 -maxdepth 3 -type d | grep ""New Parts"""
"Search the current directory tree for *.c and *.asm files, ignoring the case",find . -type f \
Show the number of lines for each .php and .phtml file in the current directory tree,"find . -type f \( -name ""*.php"" -o -name ""*.phtml"" \) -exec wc -l {} +;"
display all the regular/normal files in the current directory,find . -type f
Search /var/log for logs larger than 10 megabytes,find /var/log -size +10M -ls
"Copy the entire contents of the current directory preserving ownership, permissions, and times",find . | cpio -pdumv /path/to/destination/dir
"Find all files in the current directory tree whose names are ""YourProgram"", change to the directories they are in, and execute them","find $ -name YourProgram -exec dirname {} \; | while read d; do cd ""$d"" && ./YourPrgram; done"
search  all block spacial files called backup from /usr directory downwards and print them .,find /usr -type b -name backup -print
Search the /usr/ directory tree for files newer than file /tmp/stamp,find /usr -newer /tmp/stamp
"find all files ending with ""js.compiled"" in current folder","find . -type f -name ""*.js.compiled"""
Search core files in current direcory and delete .,find . -name core -exec rm {} \;
Show the subdirectories of the current directory,find . -maxdepth 1 -type d -print | xargs echo Directories:
Change permissions to 0755 for all directories in the /path directory tree,"find /path -type d -exec chmod 0755 ""{}"" \;"
List all *.txt files under current directory that contains the regex 'pattern',find . -type f -name '*.txt' -exec egrep -l pattern {} \;
"display all the files in the current folder which are present in the path ""./sr*sc""",find . -path './sr*sc'
Find all *.m4a files under /home/family/Music directory,find  /home/family/Music -type f -name '*.m4a' -print0
Print the first 10 files or directories found in the /tmp directory tree by `find',find /tmp  | head
Set 644 permission to all regular files under current directory,find . -type f -print0 | xargs -0 chmod 644
display all the regular/normal files in the current folder excluding the files with the name mmm,find . -name mmm -prune -o -type f -print
"Remove files in the current directory tree whose names match pattern ""file?""","find . -name ""file?"" -exec rm -vf {} \;"
"Find all python files under current directory tree, save the list to 'output.txt' and search for 'something' in those files",find . -name '*.py' | tee output.txt | xargs grep 'something'
Find all empty directories in minimum 2 levels down the root directory,find root -mindepth 2 -type d -empty
Find all directories under minimum 1 level down the current directory excluding  directories  that start with a .  in their names,find . -mindepth 1 -name '.*' -prune -o \
"Search the current directory tree for files matching sed regular expression '.*myfile[0-9]\{1,2\}'","find . -regextype sed -regex '.*myfile[0-9]\{1,2\}'"
change the permissions of all regular/normal files in the current directory,find . -type f -exec chmod 664 {} \;
Find files under /tmp that are larger than 10KB and smaller than 20KB,find /tmp -size +10k -size -20k
display the name and size of all the regular/normal files  in the current folder which are bigger than 50MB,"find . -type f -size +50000k -exec ls -lh {} \; | awk '{ print $9 "": "" $5 }'"
"Search the current directory tree for files containing ""sh"" in their names","find . -name ""*sh*"""
rename all the spaces in mp3 files to underscore,find . -type f -iname “*.mp3″ -exec rename “s/ /_/g” {} \;
List all files in /home/bozo/projects directory tree that were modified exactly one day ago,find /home/bozo/projects -mtime 1
Delete all empty directories and directories that contain only empty directories under current directory,find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} `;`
Remove files from the file system that are owned by nobody,find / -nouser -exec rm {} +
Find all empty files in the current directory and delete them,find . -maxdepth 1 -type f -empty -delete
display all the .sh scripts in the folder /usr,find /usr -name '*.sh'
Search the /dir directory tree for files whose names match regular expression '.*2015.*\',find /dir -regex '.*2015.*\'
display all files in current folder excluding current folder,find . \! -name '.'
Copy all files named 'script.sh' in directory 'olddir' to directory 'newdir',"find olddir -name script.sh -printf ""%p\0"" -printf ""newdir/%P\0"" | xargs -0L2 cp -n"
Find all *.mp4 files under /foo/bar and move them to /some/path,find /foo/bar -name '*.mp4' -print0 | xargs -I{} -0 mv -t /some/path {}
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.,find . -name '*.pdf' -print
"Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.",find . -perm 664
"Find all files in the `work' directory tree, pass them to grep and search for ""profit""","find ./work -print | xargs grep ""profit"""
Find all directories under minimum 1 level down the current directory and set their permission to 755,find  . -type d -mindepth 1 -print -exec chmod 755 {}/* \;
display all files in the current folder,find .
List .log files from the current directory tree,"find . -name ""*.log"" -exec echo {} \;"
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -print | xargs /bin/rm
find all the *.conf files under /  redirecting error messages to /dev/null,"find / -name ""*.conf"" 2>>/dev/null"
"renames all "".htm"" files to "".html"" files","find . -name ""*.htm"" -exec mv '{}' '{}l' \;"
Find all .jpg files in the current directory and below,find -name '*.jpg
Delete all empty directories in minimum 1 level down the directory 'directory',find directory -mindepth 1 -type d -empty -delete
find all the fles that have .ssh in the end and redirect the output to ssh-stuff,find / -name .ssh* -print | tee -a ssh-stuff
Remove all files under $DIR that were accessed more than 5 days ago,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
"Find all your jsp's, map them to your localhost webserver, and invoke a wget (fetch) on them",find -name \*.jsp | sed 's/^/http:\/\/127.0.0.1/server/g' | xargs -n 1 wget
"Search the current directory tree recursively for the regular file named ""myfile"" ignoring ""work"" and ""home"" directories",find .  \  -prune -o -name myfile -type f -print
"force delete all the directories the folder ""test folder""",find 'Test Folder' -type d -print0 | xargs -0 rm -rf
"Search the ~/Books directory recursively for files named ""Waldo""",find ~/Books -name Waldo
"change the permissions of the directories from 777 to 755 in the folder ""/var/www/html""",find /var/www/html -type d -perm 777 -print -exec chmod 755 {} \;
Find files/directories modified within the last hour under current directory,find . -mtime -1
find all files in current folder which are more than 300MB,find . -size +300M
find all js files under the build direcotry except build/external and build/log directory.,find build -not \ -not \ -name \*.js
"Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission","find . -type f -exec chmod u+r-wx,g+rw-x,o-rwx {} \;"
"Compress all files in the ""$FILE"" directory tree that were last modified 30 days ago",find $FILE -type f -mtime 30 -exec gzip {} \;
List all *.ogg files under your home directory along with their size,find $HOME -name '*.ogg' -type f -exec du -h '{}' \;
Search for all zero-byte files and move them to the /tmp/zerobyte folder,find test -type f  -size 0 -exec mv {} /tmp/zerobyte \;
"Create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces.",find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html
Find all *.p[lm] files under /users/tom directory that matches both the regex '->get(' and '#hyphenate' in their contents,find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'
Find Flash videos stored by browsers on a Mac,find /private/ 2>/dev/null | grep /Flash
"search for the file ""abc"" in the current folder or display all the directories",find . -name abc -or -type d
Find all directories under current directory tree that were modified $FTIME days ago,find . -type d -mtime $FTIME
"Create a symbolic link in target directory ""$tmpdir"" for each file under the current directory",find $PWD -type f -exec ln -st $tmpdir {} +
"Copy the current directory tree to ""newdirpathname"" preserving directory hierarchy",find ./ -depth -print | cpio -pvd newdirpathname
force delete all the files in the current folder expect xml files,find . | grep -v xml | xargs rm -rf {}
Find all regular files under '/usr/bin' directory tree that are less than 50 bytes in size,find /usr/bin -type f -size -50c
"discard all the errors and search for the file ""program.c"" in the entire file system",find / -name 'program.c' 2>/dev/null
Search the ./in_save directory for regular files and view the result using pager `more',find ./in_save/ -type f -maxdepth 1| more
Find all broken symlinks under current directory,find -type l -xtype l
remove all the regular/normal files in the temp folder and do not delete in the sub folders,find /tmp -maxdepth 1 -type f -delete
Rename all *.jpg files under current directory by appending parent directory name at the beginning of their names,"find . -name '*.jpg' -exec bash -c 'd=""${1%/*}""; mv ""$1"" ""$d/$d-${1##*/}""' - '{}' \;"
Prints total count of lines of all files in a current folder and subfolders.,find . -type f -exec wc -l {} \; | awk '{ SUM += $0} END { print SUM }'
List the largest file prefixed by its size in bytes of all files under the current directory,find . -type f -name '*.gz' -printf '%s %p\n'|sort -nr|head -n 1
Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them,"find . -type f -exec grep ""/usr/bin/perl"" {} \; -ls"
"find all the directories  with the name ""c"" in the current folder which are at least 3 levels deep and which are not present in the path ""/p/"".",find -mindepth 3 -type d ! -path '*/p/*' -name c -print
Set 644 permission to all regular files under current directory,chmod 644 `find . -type f`
search for a word in all the files in the current directory and display the list of matched files.,find . -type f -exec grep -l 'needle' {} \;
find directory which case-insensitive name is foo in current directory.,find . -iname foo -type d
search for a word in all c files in the current folder,find . -name '*.c' | xargs grep 'stdlib.h'
Get files that last had their meta information changed more than 3 days ago,find / -ctime +3
"change the permission of all the normal/regular files from 777 to 755 in the folder ""/home/user/demo""",find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \;
Show a listing of files not modified in over 20 days or not accessed in over 40 days,find /mydir \(-mtime +20 -o -atime +40\) -exec ls -l {} \;
Find writable regular files in the current directory,find .  -maxdepth 1 -type f -writable
Truncate all non-empty regular files under the current directory,"find . -type f -maxdepth 1 -not -empty -print0 | xargs -0i sh -c ""cat /dev/null > \""{}\"""""
"Provide a list of all the files edited today to pr, and pipe pr's output to the printer",pr -n 'find . -type f -mtime -1 -print'|lpr
find all the files in the current folder which are readable,find . -readable
search for a word in all the java files in the current directory,"find . -name ""*.java"" | xargs grep ""Stock""  find . -name ""*.java"" | xargs grep ""Stock""  find . -name ""*.java"" | xargs grep ""Stock""  find . -name ""*.java"" | xargs grep ""Stock""  find . -name ""*.java"" | xargs grep ""Stock""   find . -name ""*.java"" | xargs grep ""Stock"
"Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.","find /       \ , \              \"
List all leaf directories  under current directory,find . -type d -links 2
List all files in /home/bozo/projects directory tree that were modified within the last day,find /home/bozo/projects -mtime -1
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid',"find \! -name ""query_to_avoid"""
display a long listing of all the files in the current directory,find . -name  * -exec ls -a {} \;
"Copy all files below the current directory whose names contain ""FooBar"" to directory foo/bar/ in user's home directory.",find . | grep FooBar | xargs -I{} cp {} ~/foo/bar
ERROR - this is for DOS,"ping -n 1 %ip% | find ""TTL"""
display the long listing detials of all the files in the folder junk which is in home folder.,"find ~/junk   -name ""*"" -exec ls -l {} \;"
find all files in the current folder which have been modified after a specific time stamp and do not search in the subfolders;,"find -maxdepth 1 -type f newermt ""$timestamp""'"
Exclude directory from find . command,find . -path ./misc -prune -o -name '*.txt' -print
"Copies all files like ""*foo*"" under the current directory to the '/your/dest' directory.","find . -name ""*foo*"" | sed -e ""s/'/\\\'/g"" -e 's/""/\\""/g' -e 's/ /\\ /g' | xargs cp /your/dest"
Find all the files in entire file system which are greater than 50MB and less than 100MB.,find / -size +50M -size -100M
find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1,find . -name \? -daystart -mtime +0 -mtime -3
Find files matching regular expression regexp,find . | xargs grep regexp
find all files in the file system which have not been accessed in the last 2 days,find / -atime +2
Find a 400 permission file under /data directory,find /data -type f -perm 400 -print -quit
"Search the current directory tree for files without ""test"" in their path names","find . -not -regex "".*test.*"""
Find all files/directories named 'pattern' under current directory tree,"find . -name ""pattern"" -print"
display the count of all the directories present in a folder,find /mount/point -type d | wc -l
find all symbolic links in the current folder,find -type l
Find all *.gz files/directories under asia and emea directory,find asia emea -name \*.gz -print0 | xargs -0
"Prefix all files and folders in the current directory with ""PRE_""",find * -maxdepth 0 ! -path . -exec mv {} PRE_{} \;
Delete all __temp__* files/directories under current directory tree,find . -depth -name '__temp__*' -exec rm -rf '{}' \;
"Find the largest original "".gz"" file in the current directory tree",find . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'
List empty directories in the current directory tree,find . -depth -empty -type d
display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago,find . -mmin 60 -print0 | xargs -0r ls -l
Prints line count of each file within current directory.,find . -type f -print | xargs -L1 wc -l
find all js files which path neither ./dir1 nor ./dir2 nor  ./dir3,find . -name '*.js' -not \
find all the text files in current folder and change the extension of these files and move them to another folder,"find . -name ""*.txt"" | xargs -I{} sh -c 'base=$ ; name=${base%.*} ; ext=${base##*.} ; mv ""$1"" ""foo/${name}.bar.${ext}""' -- {}"
Delete all files with indoe number $inum under current directory tree,find . -inum $inum -exec rm {} \;
search in the current directory for any file named Chapter1.txt,find . -name Chapter1 -type f
search for *.log files starting from / (root) and only in the current file system,"find / -xdev -name ""*.log"""
"Remove all files with names like ""vmware-*.log"" from the current directory tree",find . -name vmware-*.log | xargs rm
"find all the directories in the current folder which begin with the words ""kt"" and end with a digit",find . -regex './kt[0-9] '
Find files/directories named 'TEST_3' under current directory tree,find -name TEST_3
"search for the word ""put"" in all the files in the current folder which have the word ""bills"" in their name and display the matched line along with the filename.","find . -name '*bills*' -exec grep -H ""put"" {} \;"
Find all empty files starting from the current directory and delete them,find . -type f -empty -print0 | xargs -0 /bin/rm
Print the largest 20 files under current directory,find . -type f -printf '%s %p\n' | sort -rn | head -20
Find all *.texi files in /usr/local/doc,find /usr/local/doc -name '*.texi'
"Search the directories given as arguments to the Bash script for files whose name is not ""ss""",find $@ -not -name ss
Find all files/directories containing the case insensitive string something' in their names under current directory tree,find . -iname '*something*'
Find files in the /var/log folder which were modified an hour or more ago,find /var/log/ -mmin +60
Find all empty files under a certain path,find /tmp -type f -empty
search for a word in all the files in the current directory,find . | xargs grep 'chrome'
"Search the current directory tree for regular files whose names match regular expression "".+-[0-9]+x[0-9]+\.jpg""","find . -type f -regex "".+-[0-9]+x[0-9]+\.jpg"""
Find all files starting from the current directory which are smaller than 100MB,find . -size -100M
Find all 15MB files,find / -size 15M
Find all 'test' directories in the current directory tree,find -type d -a -name test
find all the files in the entire file system that have been modified exactly  50 days ago,find / -mtime 50
"Find all files and directories whose names end in "".rpm"", ignoring removable media, such as cdrom, floppy, etc.",find / -xdev -name \*.rpm
"Search for ""LOG"" in jsmith's home directory tree",find ~jsmith -exec grep LOG '{}' /dev/null \; -print
"Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time","find . -type f -printf ""%C@ %p\n"" | sort -r | head -n 10"
Find files in the current directory tree which have permissions rwx for user and rw for group and others,find . -perm 766
Print extended file information for regular files found under the home directory whose names start with my,find . -name 'my*' -type f -ls
"Find files/directories named 'sar' under '/usr', '/bin', '/sbin' and '/opt' directory tree",find /usr /bin /sbin /opt -name sar
display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter,find . -name \? -mtime -1
list all javascipts file which whole name does not contain excludeddir,find . -name '*.js' | grep -v excludeddir
Find all regular files with permissions 777 under and below /home/user/demo/,find /home/user/demo -type f -perm 777 -print
Delete all files in the /myDir directory tree that were last modfied 7 days ago,find /myDir -mindepth 1 -mtime 7 -delete
find all the xml files in a directory and pass it as an argument to a jar,find /dump -type f -name '*.xml' -exec java -jar ProcessFile.jar {} \;
Search the ./in_save directory for regular files and view the result using pager `more',find ./in_save/ -type f -maxdepth 1| more
display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins,find . -maxdepth 1 -name '*.dat' -type f -cmin +60 -exec basename {} \;
Find a single file called tecmint.txt and remove it,"find . -type f -name ""tecmint.txt"" -exec rm -f {} \;"
Find all regular files in the current directory and its subdirectories.,find . -type f
search for all the files in the current folder which are bigger than 10KB and display them biggest file,find . -size +10k -exec ls -ls {} \+ | sort -n | tail -1
Search for .pdf files,find / -name '*.pdf'
Search the current directory recursively for regular files last changed less than 2 days ago,find . type -f -ctime -2
Change permissions to 644 for all regular files under the /path/to/dir/ tree,find /path/to/dir/ -type f -print0 | xargs -0 chmod 644
Print the list of files in directory /tmp/a1 recursively,find /tmp/a1
find all the normal/regualar files in the current folder which have a size of 10KB and display a long listing details of them.,find . -type f -size +10000 -exec ls -al {} \;
Search for files in your home directory which have been modified in the last twenty-four hours,find $HOME  -mtime 0
find all files  that names are 'apt',"find  / -name ""apt"""
"Split all files in the directory tree ""/dev/shm/split/"" into files of at most 1000 lines each and use the filename as the prefix",find /dev/shm/split/ -type f -exec split -l 1000 {} {} \;
Delete all empty subdirectories in and below directory/,find directory -mindepth 1 -type d -empty -delete
Find all files under current directory and change their permission to 600,find . -type f -exec chmod 600 {} \;
Find all files/directories under current directory tree whose names start with '' followed by two digits and end with '.txt' extension,"find . -regex "".*/[0-9][0-9]\.txt"""
List all files in the current directory tree invoking xargs only once,find . -type f -print | xargs ls -l
"Replace all occurrences of ""foo_fn"" with ""bar_fn"" in the files named ""foo_fn"" from the current directory tree",find . -name foo_fn exec sed -i s/foo_fn/bar_fn/g '{}' \;
Force delete all the regular/normal files in the current folder and do not search in the sub folders,find . -maxdepth 1 -type f -exec rm -f {} \;
"Remove all .sh files in the current directory tree whose names begin with ""new""","find . -name ""new*.sh"" -exec rm -f '{}' \+"
Remove all regular files under $DIR directory tree that were accessed more than 5 days ago,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
display all the directories in the current folder excluding those that are present in the folder secret,find . -name secret -type d -prune -o -print
Find all files with '.jpg' extension in the current directory ignoring sub-directories and archive them to a file named jpeg.tgz,"find . -maxdepth 1 -iname ""*.jpg"" | xargs tar -czvf jpeg.tgz"
Find all files/directories under current directory tree whose paths start with './sr' and end with 'sc',find . -path './sr*sc'
Show the list of files that are owned by user wnj or are newer than file `ttt',find / \ -print
"Replace spaces with underscores in the names of all files and directories in the ""/tmp"" directory tree","find /tmp/ -depth -name ""* *"" -execdir rename "" "" ""_"" ""{}"" "";"""
"Set the permissions of all directories inside the current directory tree to ug=rwx,o=","find . -type d -name files -exec chmod ug=rwx,o= '{}' \;"
find all files in the current folder which end with macs,find -name '*macs'
Create a script to monitor file system integrity and send an alert if any changes are detected.,"#!/bin/bash

baseline_checksum=""baseline_checksum.txt""
current_checksum=""current_checksum.txt""

# Create baseline checksum if it doesn't exist
if [ ! -f ""$baseline_checksum"" ]; then
    find / -type f -exec md5sum {} + > ""$baseline_checksum""
    exit 0
fi

# Compare current checksum with baseline
md5sum -c --quiet ""$baseline_checksum""
if [ $? -ne 0 ]; then
    echo ""File system integrity compromised.""
    # Send alert here
fi"
Search for '“foobar”' in all files starting with '‘' and ending with '’' and contain '.' in their names in the entire filesystem and display only the matched files,find / -name ‘*.*’ -exec grep -il “foobar” {} \;
"search for the word ""slrn"" in all the files in the current folder",find ./ -exec grep -q 'slrn' '{}' \; -print
"Remove all 'a.out', '*.o', and 'core' files in the current directory tree",find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
Find all files/directories ignoring *~ files/directories without descending into .snapshot directory with null character as the delimiter,find . -name .snapshot -prune -o \( \! -name *~ -print0 \)
find  files which full path name is /tmpfoo/bar under foo directory and print,find foo -path /tmp/foo/bar -print
change the permission of all directories in current folder to 755.,find . -type d -exec chmod 755 {} \;
"find a.out, *.o and core files under the current directory and sub-directories and delete them.",find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
"Find all files in the current directory tree whose size is greater than 1MB, and move them to the ""files"" folder with confirmation",find . -size +1M -ok mv {} files \+
Find all files/directores under /etc filter them by searching for 'test' in their name and run the file command on each of them,find /etc -print0 | grep -azZ test | xargs -0 file
"list all files under the current directory, redirecting error messages to the output, filtering out lines containing the text ""permission denied"" and writing the output to a file called files_and_folders",find . 2>&1 | grep -v 'permission denied' > files_and_folders
Show files in maximum 1 level down the current directory that were modified less than 1 day ago from today,less `find -maxdepth 1 -type f -daystart -mtime -1`
Find all *.md files in entire file system and convert them to HTML  files,"find / -name ""*.md"" -type f -exec sh -c 'markdown ""$0"" > ""$0.html""' {} \;"
Find all .txt files in the current directory tree and edit them with `vim',"find . -name ""*.txt"" | parallel -Xj1 --tty vim"
"Replace spaces with underscores in the names of all files and directories in the ""/tmp"" directory tree","find /tmp/ -depth -name ""* *"" -execdir rename 's/ /_/g' ""{}"" \;"
List directories under current directory,find . -type d
List the names of the directories in current directory without going into sub-directories,"find . -mindepth 1 -maxdepth 1 -type d -printf ""%P\n"""
Search the current directory tree for regular files omitting directory `omit-directory',find . \( -name omit-directory -prune -o -type f \) -print
Find all files/directories that are newer than 'ttt' by modification time or owned by the user 'wnj' in the entire filesystem,find / \ -print
Search for 'string-to-find' in all files under current directory tree matching the regex 'filename-regex.\*\.html' in their paths and show the matched lines along with the filenames,find . -regex filename-regex.\*\.html -exec grep -H string-to-find {} \;
Remove all regular files found in and below /path,find /path -type f -print | xargs rm
"Removes all files from current folder but 5 newest ones, ignoring folders in a files list.",find . -maxdepth 1 -type f | xargs -x ls -t | awk 'NR>5' | xargs -L1 rm
Find recursively the latest modified file in the current directory,find . -type f -print0 | xargs -0 ls -ltr | tail -n 1
Find all *.txt files on the vfat file system,"find / -name  ""*.txt"" -fstype vfat 2> /dev/null"
"display a long listing of all the files that begin with the name ""Metallica"" in the entire file system",find / -name 'Metallica*' -exec ls -l {} \;
Find all *.php files under current directory and change their permission to 644,find . -type f -name '*.php' -exec chmod 644 {} \;
Find all directories named $1 under $HOME directory tree and remove them,find $HOME -type d -name $1 -exec echo {} ';'  -exec rm -rf {} ';'
"Prefix all files and folders in the current directory with ""PRE_""",find * -maxdepth 0 ! -path . -exec mv {} PRE_{} \;
display all the directories in the current folder excluding those that are present in the aa directory tree,find . -type d -name aa -prune -o -print
Find all *.jpg files under current directory and print only duplicate names,find . -name \*.jpg -exec basename {} \; | uniq -d
Find broken symlinks in current directory,find -L -type l
Print the list of files in the current directory tree skipping Git files,find . -path './.git' -prune -o -type f
Find all *.txt files under /foo and print their total size,"find /foo -name ""*.txt"" -exec du -hc {} + | tail -n1"
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions,"find / -maxdepth 1 -xdev -type f -exec grep -i ""stringtofind"" -q ""{}"" \; -print0 | xargs -0 sed '/./d'"
Counts the number of lines in *.php and *.inc files in a current folder and subfolders.,find . -name '*.php' -o -name '*.inc' | xargs wc -l
Find all .zip files starting from the current directory which are owned by user tommye,"find . -type f -user tommye -iname ""*.zip"""
Search the current directory recursively for .m4a files,find . -type f -iname *.m4a -print
"Search the ./bin directory recursively for files called ""cp""",find ./bin -name “cp”
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play,"find /tmp/ -ctime -1 -name 'x*' -exec sh -c '   exec mv ""$@"" ~/play/' sh {} +"
"Find all files and directories last modified less than a day ago and copy to ""../changeset"" creating directories as needed",find * -mtime -1 -daystart -print0 | cpio -pd0 ../changeset
"Search the files from directory tree ""dirname"" for string ""foo""",find dirname  -print0 | xargs -0 grep foo
find all files in the folder /etc which have been modified after /tmp/foo,find /etc -newer /tmp/foo
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths,"find ""$STORAGEFOLDER"" -name .todo -printf '%h\n'"
display all the files in current folder which have been changed in the last 24 hours,find . -ctime -1 -print
"display all php,xml and phtml files in current folder",find . -name '*.php' -o -name '*.xml' -o -name '*.phtml'
"Search the .cs files of the current directory tree for string ""content pattern""","find ./ -type f -iname ""*.cs"" -print0 | xargs -0 grep ""content pattern"""
"list all js files under currect directory exculde the directory which path contain ""/path/to/search/exclude_me"" or name isexclude_me_too_anywhere",find /path/to/search                    \   -type d                               \     \                                 \     -prune                              \   -o                                    \   -type f -name '*\.js' -print
"Find all files & directory which have write permission for group , remove the permission from group",find . -perm -20 -exec chmod g-w {} ;  or  find . -perm -20 -print | xargs chmod g-w
"search for all the files in the current folder which start with ""my""",find . -name 'my*'
Find all files on the system that are world writable,find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \;
archive all the normal/regular files in the current directory which have been modified in the last 24 hours.,"find . -mtime -1 -type f -exec tar rvf ""$archive.tar"" '{}' \;"
"Recursively finds file some_file_name.xml file and prints strings with ""PUT_YOUR_STRING_HERE"" preceding each found string with file name.",find . -type f -name some_file_name.xml -exec grep -H PUT_YOUR_STRING_HERE {} \;
"Search the current directory tree for files without ""test"" in their path names","find . -not -regex "".*test.*"""
"display all the regular files in the current folder excluding those that are present in the path ""git""","find . -path ""*.git"" -prune -o -type f -print"
Counts number of *.php files in a current folder and subfolders.,find . -name '*.php' | wc -l
Move all directories from the `sourceDir' directory tree to the `destDir' directory,find sourceDir -mindepth 1 -type d  -print0 | xargs -0 mv --target-directory=destDir
Remove all files under $DIR that were accessed more than 5 days ago,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
Print a list of JPG files residing in the current directory tree,find . -name “*.jpg”
Find all *.ini files,find . -name *.ini
Return the files that are newer than file `myfile',find / -newer myfile
"Print the path names of all regular .rb files prefixing them with string ""Hello, ""","find . -name ""*.rb"" -type f | xargs -I {} echo Hello, {} !"
Find all files in the current directory tree that are not newer than some_file,find . ! -newer some_file
Find List empty directories,"find -maxdepth 1 -type d | sort | while read -r dir; do n=$; let n--; if [ $n -eq 0 ]; then printf ""%4d : %s\n"" $n ""$dir""; fi; done"
Find all files/directories under '/etc' directory tree that have been modified after '/etc/motd',find /etc -newer /etc/motd
run ls command on files found,"find . -name ""*.pl"" -exec ls -ld {} \;"
"create symbolic links in directory ""/your/dest/dir/"" to all files located in ""/your/source/dir/"" and have filename extension ""txt.mrg""",find /your/source/dir/ -iname '*.txt.mrg' -exec ln -s '{}' /your/dest/dir/ \;
Delete files in $DIR_TO_CLEAN older than $DAYS_TO_SAVE days,"find ""$DIR_TO_CLEAN"" -mtime +$DAYS_TO_SAVE -exec rm {} \;"
Find recursively the latest modified file in the current directory,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" """
Find all dir* files/directories under parent,find parent -name dir*
List all .svn files/directories under current directory,find . -name .svn -exec ls {} \;
"find the file ""filename.txt"" in the entire file system",find / -name filename.txt -print
find all the configuration files in /etc folder along with the last access & modification time,"find /etc -name ""*.conf"" -printf ""%f %a, %t\n"""
Find the total size of *.jpg files within the current directory tree,find . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'
Find all directories under /path/to/Dir and set their permission to 755,sudo find /path/to/Dir -type d -print0 | xargs -0 sudo chmod 755
"Find directory ""your/dir"" if it is empty",find your/dir -prune -empty -type d
list files in /usr modified after the time which /tmp/stamp$$ modified,find /usr -newer /tmp/stamp$$
delete all the log files in the current folder,find ./ -name '*.log' | xargs rm
Remove all *~ files under current directory with confirmation prompt,find . -name '*~' -ok rm {} \;
Print out the names and types of all files in the current directory tree,"find . -printf ""%y %p\n"""
"Find ""*201512*"" regular files in /home/myhome/data/ARCHIVE/ and move them to /home/myhome/ARCHIVE/TempFolder/",find /home/myhome/data/ARCHIVE/. -name . -o -type d -prune -o -name '*201512*' -print | xargs -i mv {} /home/myhome/ARCHIVE/TempFolder/.
"Search the directories given as arguments to the Bash script for files whose name is not ""ss""",find $@ -not -name ss
Find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750,find /home/mywebsite/public_html/sites/all/modules -type d -exec chmod 750 {} +
"Find all leaf directories that include only one occurrence of ""modules""",find -regex '.*/modules\' \! -regex '.*/modules/.*/modules\' -type d -links 2
find all text files which have extra extensions in the current folder,find . -name '*.text' -exec $SHELL -c '[ ! -f ${1%.*} ]' $SHELL '{}' ';' -print
Find recursively all Python files in the current directory tree and count the number of lines in them,find . -name '*.py' | xargs wc -l
Find all directories at level 3 of directory tree $from_dir,find $from_dir -mindepth 3 -maxdepth 3 -type d
Look for SGID files and directories,find / -perm /g=s
find files in /dir/path/look/up directory that names are dir-name-here,"find /dir/path/look/up -name ""dir-name-here"""
find all text files in current folder and delete them,"find . -name "".txt"" -exec rm ""{}"" \;"
change the permissions of all the directories  to 775 in the current folder,find . -type d -exec chmod 775 {} \;
find all the files in the current folder which have been modified after a specific timestamp and save the output to a file,find -newer timestamp-file -type f > list-of-files
"Recursively search for all regular files below directory ""dir1"" in currentd directory, and output the name of each, without any containing directories.",find ./dir1 -type f -exec basename {} \;
Find all *.txt and *.json files in current directory,"find . -type f \( -name ""*.txt"" -o -name ""*.json"" \)"
Find all $2 files in $1 path and search for the regex expanded by $3 in those files,"find $1 -name ""$2"" -exec grep -Hn ""$3"" {} \;"
"Searche JSP's for ""TODO"" lines and append them all to a file with a header showing what file they came from","for f in `find -name \*.jsp` ; do echo ""==> $f"" >> out.txt ; grep ""TODO"" $f >> out.txt ; done"
"Calculate the md5 sum of every "".py"" file in directory tree ""/path""","find /path -type f -name ""*.py"" -exec md5sum ""{}"" +;"
find all the directories in the current directory which dont have the execute permission.,find -type d ! -perm -111
"Recursively change the owner and group of all files in the current directory to ""apache""","find . -maxdepth 1 -not -name ""."" -print0 | xargs --null chown -R apache:apache"
change the ownership of all the files in the file system from edwarda to earnestc,find / -user edwarda -print | xargs chown earnestc
display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2.,find . -maxdepth 1 -type f | xargs -I ‘{}’ sudo mv {} /directory1/directory2
Find all directories named postgis-2.0.0 under / directory,"sudo find / -type d -name ""postgis-2.0.0"""
Find all Perl source code files,"find . -name ""*.pl"""
Change permissions to 644 of multiple regular files with permissions 755,find . -type f -perm 755 -exec chmod 644 {} \;
"List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago replacing the $CURR_DIR path string to './'","find ${CURR_DIR} -type f \( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \) -printf ""./%P\n"""
Remove all files/directories in the current directory without '.git' and '.gitignore',find -mindepth 1 -depth -print0 | grep -vEzZ '(\.git|/\.gitignore$)' | xargs -0 rm -rvf
Find SUID files,find / -perm +4000
"Search for all files named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.",find . -iname foo -type f
"search for the directory ""config"" in the current folder and change directory to it","cd `find . -name ""config""`"
"display all the files in the current folder excluding those that are present in the folder ""secret""",find . \( -name 'secret' -a -prune \) -o -print
"Search all files and   directories either of the directory /home/oracle and  /home/databse which  contain the ""zip""  anywhere in the files or directory name .",find /home/oracle /home/database -name '*zip*'
Find all first occurrences of directories named '.texturedata' under '/path/to/look/in' directory tree,find /path/to/look/in/ -type d -name '.texturedata' -prune
"The cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories.",find . | cpio -pdumv /path/to/destination/dirrectory
Find all symbolic links containing 'javaplugin' in their names under '/usr' directory tree,find /usr/ -lname *javaplugin*
display long listing of top ten biggest regular/normal files in the folder /usr/share/man,find /usr/share/man/ -type f -exec ls -S {} + 2>/dev/null | head
find all the files ending with undo in the current folder and calculate the total size of these files,"find . -name ""*.undo"" -ls | perl -lane '$t += $F[6]; END{print $t}'"
Run ipython nbconvert with all the file/directory paths under current directory as arguments,find | xargs ipython nbconvert
"Find files whose pathnames contain ""string"" and print these pathnames replacing 'search string' with 'new string'",find . |xargs grep search string | sed 's/search string/new string/g'
"Search the current directory tree for the files with extension ""trc"" and remove them if they are more than three days old","find . -name ""*.trc"" -ctime +3 -exec rm -f {} \;"
finda ll the files in the current folder that are modified today.,find ~ -type f -mtime 0 -ls
find all the files in the entire file system which have been modified in the last 48 hours,find / -mtime -2 -print
Find empty regular files in /dir and its subdirectories,find /dir -type f -size 0 -print
find all CSS files under currenty directory and use sed to edit them,"find . -name ""*.css"" -exec sed -i -r 's/#\b/#0F0/' {} \;"
Find a directory named 'project.images' in the entire filesystem and show it in long listing format,"find  / -type d -name ""project.images"" -ls"
"find all the files that have been modified in the last 7 days,",find . -mtime -7 -print
Find all the files in entire file system  which are accessed 50 days back,find / -atime 50
Find all .rpm files and change their permissions to 755,find / -name *.rpm -exec chmod 755 '{}' \;
Display a long listing of all regular files with 0777 permission under current directory tree,find . -perm 0777 -type f -exec ls -l {} \;
"find regular files under the current directory, whose name ends in .mbox and using awk run multiple system commands to rename each matched file, to the same name without .mbox at the end","find . -wholename \*.mbox | awk '{new=$0; gsub(""\.mbox$"", """", new) ; system(""mv \"""" $0 ""\"" \"""" new ""\"""") }'"
"Find all files whose names end with ""~"" in the /home/peter directory tree, following symlinks, and delete them",find -L /home/peter -name *~ |xargs rm
find all the mp3 files in the current folder and move them to another folder,"find . -name ""*.mp3"" -exec mv {} ""/Users/sir/Music//iTunes/iTunes Media/Automatically Add to iTunes.localized/"" \;"
find all the text files in the current folder,"find . -name ""*.txt"" -print"
"Compare each .xml file under the current directory with a file of the same name in ""/destination/dir/2""",find . -name *.xml -exec diff {} /destination/dir/2/{} \;
search for the pattern in all the regular/normal files in the entire file system,find / -type f -print0 | xargs -0 grep -i pattern
"Search the .py files residing in the current directory tree for ""something""","find . -name ""*.py"" -type f -exec grep ""something"" {} \;"
find all the files that are modified in the last 1 day,find  -mtime -1
find all files named `linux' on the system,find / -name linux
"search for all the directories in the current folder, do not search in sub folders and run the 'pwd' command in all these directories","find . -maxdepth 1 -type d \ -exec bash -c ""cd '{}' && pwd"" \;"
Show find's version,find --version
Find all *.swp files/directories under current directory,"find . -name ""*.swp"""
Find all files/directories named 'query' under current directory,"find -name ""query"""
"Remove all files named ""filename"" from the current directory tree, ignoring directory ""FOLDER1""",find . -name FOLDER1 -prune -o -name filename -delete
"show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories",find . -maxdepth 1 -name \*.txt -print0 | grep -cz .
search for a word in all the files in the entire filesystem and display the matched fline along with the file name,find / -type f -exec grep -Hi 'the brown dog' {} +
"Search the ""katalogi"" directory tree for files named ""wzorzec""",find katalogi -name wzorzec
find all text files in the current folder,"find -name ""*.txt"""
display all the directories in the folder /var and do not go beyond 2 levels during search,find /var -maxdepth 2 -type d;
Search the current directory tree for .aux files,"find . -name "".aux"""
"Find all files/directories in entire file system that have  ""write"" bit set for either the owner, the group, or others","find / -perm /u+w,g+w,o+w"
Locate all passwd files on the system,find / -name passwd
"Recursively find the latest modified ""zip"" file in the current directory","find . -name ""*zip"" -type f | xargs ls -ltr | tail -1"
Finds all files in a '/path' folder and prints long listing for them.,find /path -type f -exec ls -l \{\} \;
Find all OGG files in the home directory that are at most 20 megabytes in size,find $HOME -iname '*.ogg' ! -size +20M
Search  in current directory downwards all files whose size is 10 blocks .,find .  -size 10 print
"Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time","find . -type f -printf ""%C@ %p\n"" | sort -rn | head -n 10"
"find all the files in the /usr folder which have modification date less than or equal to the file ""/FirstFile""",find /usr ! -newer /FirstFile -print
Find all *.ps files under $STARTDIR and run ps2pdf for each files with the file path as a argument,find $STARTDIR -name '*.ps' -print | sed -e 's/.ps$//' | xargs -l -i  ps2pdf \{}.ps
Find all regular files that were modified $FTIME days ago under current directory tree,find . -type f -mtime $FTIME
"find all the "".sh"" files in the current folder ( case insensitive search)",find -iname *.SH
find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1,find . -name \? -mtime -1
find all the core files in the temp folder and force delete them,find /tmp -name core -type f -print | xargs /bin/rm -f
find all files in the current directory and sub-directories that were accessed after modifying /etc/hosts,find -anewer /etc/hosts
Find all files under current directory that were modified less than 1 day ago,find -mtime -1
Remove recursively Emacs backup files in the current directory,find . -name '*~' -print0 | xargs -0 rm
Search in the current directory and all sub-directories except ./D for the file named hi.dat.,find . \ -o -name hi.dat
"Search the current directory tree for all regular files matching pattern ""*.rb""","find . -name ""*.rb"" -type f"
Find all *.txt files except for those on other file systems,"find / -name  ""*.txt"" -mount 2> /dev/null"
find not case sensitive all directories that names are 'project.images',"find  / -type d -iname ""project.images"" -ls"
Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours,find $LOGDIR -type d -mtime -1 -exec compress -r {} \;
Execute the file utility for each file found under /etc and below,find /etc -print0 | xargs -0 file
Find regular files in the current directory tree that are called FindCommandExamples.txt and remove them,"find . -type f -name ""FindCommandExamples.txt"" -exec rm -f {} \;"
"Find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755",find /var/www/html -type d -perm 777 -print -exec chmod 755 {} \;
List all unique parent directories of .class files found under the current directory,find -name '*.class' -printf '%h\n' | sort -u
Find all files/directories under current directory and print their paths,find . -exec echo {} \+
Find all .gif files in the /var/www directory tree that are between 5 kB and 10 kB in size,find /var/www -name *.gif -size +5k -size -10k
Delete all empty files/directories under test directory,find test -depth -empty -delete
Search the current directory tree for files named 'Subscription.java',find . -name 'Subscription.java'
"Replace all the mathes to regex '<script type=""text\/javascript"" charset=""utf-8"" src=""file.js""><\/script>.*' with '<script type=""text\/javascript"" charset=""utf-8"" src=""file2.js""><\/script>' in all HTML files under $DIR directory tree modifying the files in-place","find $DIR -type f -name '*.html' -exec sed -i 's/.*<script type=""text\/javascript"" charset=""utf-8"" src=""file.js""><\/script>.*/<script type=""text\/javascript"" charset=""utf-8"" src=""file2.js""><\/script>/g' {} \;"
Find '.git' directories in directory tree /home/madhu/release/workspace,find /home/madhu/release/workspace -type d -name '.git'
List all files in /home/bozo/projects directory tree that were modified within the last day,find /home/bozo/projects -mtime -1
"Find all *.txt files under the current directory whose names are not ""File.txt""",find . -maxdepth 1 -type f -name '*.txt' -not -name File.txt
Display a long listing of all the regular files under current directory tree that are newer than ‘Apr 18 23:59:59 EDT 2013’ and older than ‘Apr 20 00:00:00 EDT 2013’ by modification time,find . -type f -newermt ‘Apr 18 23:59:59 EDT 2013’ ! -newermt ‘Apr 20 00:00:00 EDT 2013’ -exec ls -l ‘{}’ \;
Search the current directory tree for regular files that can be read by noone,find -type f ! -perm -444
find all executable files,find / -executable
List files in the current directory and below except for GIT files,find . -not -iwholename '*/.git/*'
Find files/directories that are owned by the user 'syslog' in entire filesystem,find / -user syslog
Find all 1US* files/directories under current directory,find . -name '1US*'
find all files in current folder which are bigger than 1 MB and move them to another folder,find . -size +1M -exec mv {} files \+
"display a long list of all the directories which have files ending with "".todo""","find ""$STORAGEFOLDER"" -name .todo -printf '%h\n' | uniq | xargs ls -l"
"find all the normal/regular files in the folder ""pathfolder"" which are 2 levels deep, excluding all hidden files and display the count",find pathfolder -mindepth 2 -maxdepth 2 -type f -not -path '*/\.*' | wc -l
Find all files/directories that contain the string literal '`$VERSION`' in their names under current directory tree,find . -name '*`$VERSION`*'
Fix files to default permissions 644,find . -type f -exec chmod 644 {} \;
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found,cd $(find . -name Subscription.java | xargs dirname)
"Calculate the md5sum of each "".py"" file under ""/path/to/dir/"", sort the output, and calculate the md5sum of that","find /path/to/dir/ -type f -name ""*.py"" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"
Search for 'mystring' in all *.txt files under current directory,"find . -name ""*.txt"" -exec egrep mystring {} \;"
"Change permissions of all files ending in "".php"" under the current directory to 755 and print a '+' for each file",find . -name '*.php' -exec chmod 755 {} \; -exec echo '+' \;
find all files with the first letter “e” or “f” and last one x in /usr/bin directory:,find /usr/bin -name [ef]*x
Find all *.ps files under $STARTDIR,find $STARTDIR -name '*.ps' -print
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.,find . -name '*.pdf' -print
find all files beneath the current directory that begin with the letters 'Foo' and delete them.,"find . -type f -name ""Foo*"" -exec rm {} \;"
Find all files/directories with '.what_to_find' extension under current directory tree and show the list by excluding paths that contain 'excludeddir1' and 'excludeddir2',find . -name '*.what_to_find' | grep -v exludeddir1 | grep -v excludeddir2
"Search for the extended regex expanded by""$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1"" in the decompressed contents of the /var/log/apache2/access*.gz files that are newer than ./tmpoldfile and older than ./tmpnewfile","find /var/log/apache2/access*.gz -type f -newer ./tmpoldfile ! -newer ./tmpnewfile \ | xargs zcat | grep -E ""$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1"" -c"
find all the cpp files in the current folder,find . -iname '*.cpp' -print
Remove all files under /home/user/Maildir/.SPAM/cur,find /home/user/Maildir/.SPAM/cur -type f -exec rm '{}' +
Delete all regular files with inode number 314167125 under current directory tree,find . -type f -inum 314167125 -delete
check the file type of all the regular/normal files in the current directory and save the output to the file /tmp/filetypes.log,find . -type f -exec file {} \; > /tmp/filetypes.log
Find all *.ogg  files/directories in entire file system,sudo find / -iname '*.ogg'
display all the files in the file system which are smaller than 20 bytes,find / -size 20
"Search directories /opt, /usr, /var for regular file foo",find /opt /usr /var -name foo -type f
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"" | xargs ls -lrt | awk print '$9'"
"search for all the directories ending with "".mp3"" in the file system and move them to the folder /mnt/mp3","find / -iname ""*.mp3"" -type d -exec /bin/mv {} /mnt/mp3 \;"
"Find recursively all regular files in the current directory whose names contain "".""",find . -type f -a -name '*.*'
Find files named 'core' in or below the directory /tmp and delete them,find /tmp -depth -name core -type f -delete
Find files in the /var/log folder which were modified modified 2 weeks ago,find /var/log/ -mtime +7 -mtime -8
display all normal/regular files in current directory,find . -type f -print0
"split all files in directory ""posns "" into pieces per 10000 lines",find posns -type f -exec split -l 10000 {} \;
find all the regular/normal files in all the directories in the /some/dir and delete them,find /some/dir -type d -exec find {} -type f -delete \;
display the type of all the regular/normal files in the entire file system,find / -type f -print | xargs file
Find all files that were last accessed more than 7 days ago under /home,find /home -atime +7
Find all directories in entire file system which are larger than 50KB,find / -type d -size +50k
Delete all files with 128128 inode number under current directory tree,find . -inum 128128 | xargs rm
Find all *.ogg (case insensitive) files/directories in entire file system,sudo find / -iname '*.ogg'
Find all OGG files in the home directory that are at most 20 megabytes in size,find $HOME -iname '*.ogg' ! -size +20M
"display all the files ending with "".foo"" including those that are in the directory "".snapshot"", this is the wrong way of using prune.",find . \ -print
Remove all .mpg files in the /home/luser directory tree,"find /home/luser -type f -name '*.mpg' | tr ""\n"" ""\000"" | xargs -0 rm -f"
"find the file ""myfile.txt"" in the folder /home/user/myusername/",find /home/user/myusername/ -name myfile.txt -print
Remove empty directories from directory tree /srv/${x},find /srv/${x} -type d -empty -exec rmdir {} \;
"Searches through the /usr/local directory for files that end with the extension .html. When these files are found, their permission is changed to mode 644 (rw-r--r--).","find /usr/local -name ""*.html"" -type f -exec chmod 644 {} \;"
Find all files/directories  under  /eserver6 directory and follow symlinks if needed,find /eserver6 -L
Search the directory tree given as variable $dir for regular files,find $dir -type f
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*,find -mtime 0 -not \( -name '*.swp' -o -path './es*' -o -path './en*' \)
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.,find . -perm 777 -a -mtime 0 -a -print
force delete all the regular/normal files in the current folder,find . -type f -exec rm -fv {} \;
Find symbolic links in directory /etc and below,find /etc -type l
find all png images in the current folder and convert the to jpg images. print0 is used to handle the files which have new lines in their names,"find . -name ""*.png"" -print0 | xargs -0 mogrify -format jpg -quality 50"
Move all 10*jpg files under /path to 2010*jpg files under the same directory,"find /path -type f -name ""10*jpg"" | sed 's/.*/mv &/' | sed 's/mv \\/& \120\2/' | sh"
"Calculate the md5 sum of the sorted list of md5 sums of all "".py"" files under ""/path/to/dir/""",find /path/to/dir/ -type f -name *.py -exec md5sum {} + | awk '{print $1}' | sort | md5sum
Find files that were modified more than 7 days ago but less than 14 days ago and archive them,find . -type f -mtime +7 -mtime -14 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
Find all files/directoires that were modified more than 3 days ago under $dir directory tree,find $dir -mtime +3
Search for files only that end with .php and look for the string $test inside those files,find . -name \*.php -type f -exec grep -Hn '$test' {} \+
Count the number of directories under directory '/directory/' non-recursively,find /directory/ -maxdepth 1 -type d -print| wc -l
Find all files/directories under current directory tree that have modified in the last 2 days and contain 'blah' (case insensitive) in their names,find . -iname '*blah*' \( -type d -o -type f \) -mtime -2
Find all empty files starting from the current directory and delete them,find . -type f -empty -print0 | xargs -0 /bin/rm
Display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size,find $dir -type -f size +$size -print0 | xargs -0 ls -1hsS
Find all symbolic links containing 'vim' in their names uder '/usr/bin' directory tree,find /usr/bin -name '*vim*' -type l
Check if a specific directory exists and has the correct permissions recursively.,"#!/bin/bash

directory=""/path/to/directory""
permissions=""755""

if [ -d ""$directory"" ] && [ $(find ""$directory"" ! -perm $permissions) ]; then
    echo ""Directory exists with correct permissions""
else
    echo ""Directory does not exist or has incorrect permissions""
fi"
change the owner of all the files in folder /u/netinst to netinst,find /u/netinst -print | xargs chown netinst
display all text files in the folder /home/you which have been modified in the last 60*24 hours,"find /home/you -iname ""*.txt"" -mtime -60 -print"
"search in the current folder for the file ""myletter.doc""",find . -name myletter.doc -print
"search for all the jpg files in the folder ""/mnt/hda1/zdjecia/test1/"" and copy these files to the folder  /mnt/hda1/test/<same name as the found file>",find /mnt/hda1/zdjecia/test1/ -iname “*.jpg” -type f -exec cp {} -rv /mnt/hda1/test{} ‘;’
Search directory $dirname for regular files and save the result to $tempfile,find $dirname -type f  > $tempfile
"copy all the files with the extension "".type"" from one folder to a target directory","find ""$sourcedir"" -type f -name ""*.type"" | xargs cp -t targetdir"
"Save the list of files in the home directory tree whose names begin with ""Foto"" to `results.txt'",find ~ -name 'Foto*' > results.txt
Search directory trees /usr/local/man and /opt/local/man for files whose names begin with 'my',find /usr/local/man /opt/local/man -name 'my*'
find all files  that names are 'apt' and display detailed list,"find  / -name ""apt"" -ls"
List the unique parent directories of all .class files found in the entire filesystem,find / -name *.class -printf '%h\n' | sort --unique
Find all files/directories under current directory tree whose paths match the regex 'filename-regex.\*\.html',find . -regex filename-regex.\*\.html
Find every JavaScript file in the wordpress directory,find wordpress -maxdepth 1 -name '*js'
Find all sample*_1.txt files/directories under current directory and print 'program  sample*-out sample*_1.txt sample*_2.txt' for each of them,"find . -name ""sample*_1.txt"" | sed -n 's/_1\..*$//;h;s/$/_out/p;g;s/$/_1.txt/p;g;s/$/_2.txt/p' | xargs -L 3 echo program"
create a tar ball of current directory,tar cvf - `find . -print` > backup.tar
Print the names of all files and directories in the current directory tree,find .
Find all files with name ending with .txt and display only the filenames without full paths,"find ./ -name ""*.txt"" | rev | cut -d '/' -f1 | rev"
Search  all directory from /usr downwards for files whose inode number is 1234 and print them .,find /usr -inum 1234 -print
Show manual for the find command,man find
display a long listing of all the files in the /var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names,find /var -size +10000k -print0 | xargs -0 ls -lSh
Delete all files with 128128 inode number under current directory tree,find . -inum 128128 | xargs rm
delete all the php files in the folder /var/www,find /var/www/*.php -type f -exec rm {} \;
Find all directories under /path whose names are 33 characters long,"find /path -type d -printf ""%f\n"" | awk 'length==33'"
Look for files that have SUID or SGID set,find / -perm +6000 -type f
Remove regular files changed more than 15 days ago from the /tmp directory tree,find /tmp/ -ctime +15 -type f -exec rm {} \;
Find and delete all core files in the user's home directory and below.,find ~/ -name 'core*' -exec rm {} \
List all files/directories with spaces in their names under ~/Library directory,find ~/Library -name '* *' -exec ls {} \;
Search for 'DOGS' in all files with '.txt' extension under ~/documents and also print the file names,find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \; -print
Get the total size of all files under dir1 directory,"find dir1 ! -type d -printf ""%s\n"" | awk '{sum += $1} END{printf ""%f\n"", sum}'"
display all the files in the current folder which have been modified in the last 5*24 hours,find . -mtime -5
Find the top level directories that contain a 'bin' directory in it or in one of it's sub-directories and print a sorted list to file b,"find . -type d -name bin | cut -d/ -f1,2 | sort > b"
Find files/directories in entire file system that have been modified in the last minute,find / -mmin -1
Search for files that were accessed less than 5 days ago.,find -atime -5
get all files in a current directory modified in the last day and a half,find . -mtime -1.5 | xargs tar --no-recursion -czf myfile.tgz
Find recursively the latest modified file in the current directory,"find . -type f -print0 | xargs -0 stat -f ""%m %N"" | sort -rn | head -1 | cut -f2- -d"" """
"List all regular files residing in the current directory tree and containing string ""/bin/ksh""",find . -type f -print | xargs grep -li 'bin/ksh'
Change permissions to 644 for all regular files under and below /path/to/someDirectory/,find /path/to/someDirectory -type f -print0 | xargs -0 sudo chmod 644
Find all build* directories under /var/www/html/ and reverse sort them,"find /var/www/html/ -type d -name ""build*"" | sort -r"
"Replace the occurrences of ""HOGE"" with ""MOGA"" once per each line of the files from the current directory tree, keeping a backup copy of every touched file","find . -type f -print0 | xargs -0 sed -i.bak -e ""s/HOGE/MOGA/"""
Find all files under $dir,find $dir -type f
Search the /mnt/raid/upload directory tree for files that have been modified within the last 7 days,find /mnt/raid/upload -mtime -7 -print
Find all broken symlinks under current directory,find -L . -type l
find the oldest normal file in the current directory,find . -type f -print0 | xargs -0 ls -ltr | head -n 1
Delete the oldest file with '.tgz' or '.gz' extension under '/home/backups' directory tree,ls -tr $(find /home/backups -name '*.gz' -o -name '*.tgz')|head -1|xargs rm -f
find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.,find . -atime +1 -type f -exec mv {} TMP \;
find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified,find -cnewer /etc/fstab
Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory,find /home -iname tecmint.txt
Archive the list of 1st level subdirectories in /fss/fin to /fss/fi/outfile.tar.gz,"tar -czf /fss/fi/outfile.tar.gz `find /fss/fin -d 1 -type d -name ""*"" -print`"
Find files with a question mark in their names,find . -name \*\\?\*
Search for all files with the same inode number 41525360,find . -follow -inum 41525360
"Search all *.c files from the current directory tree for ""hogehoge""",find . -name \*.c -print0 | xargs -0 grep hogehoge /dev/null
"display all the files  in the current folder excluding those which are present in ""./src/emacs"" folder",find  .  -path  './src/emacs'  -prune  -o -print
"Find all .java files whose name contains ""Message""",find . -print | grep '.*Message.*\.java'
"Count the total number of lines in all HTML files under /usr/src that contain string ""foo""","find /usr/src -name ""*.html"" -execdir /usr/bin/grep -H ""foo"" {} ';' | wc -l"
resize all the jpg images in the current folder to the size 300x300,find . -iname '*.jpg' -print0 | xargs -I{} -0 -r convert -resize 300x300 {} $outdir/{}
List all files/directories under $dir_name with size $sizeFile and print them according to the format string  '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n',find $dir_name -size $sizeFile -printf '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n'
Find all files/directories named 'apt' in the entrie filesystem,"find  / -name ""apt"""
List files/directories at least three levels down the directory tree,"find / -mindepth 3  -name ""*log"""
Find files/directories under current directory that matches 'projects/insanewebproject' in their paths,find -ipath 'projects/insanewebproject'
Delete files older than 31 days,find ./ -mtime +31 -delete
find all files in current folder which are bigger than 1 MB and move them to another folder,find . -size +1M -exec mv {} files \+
Find all files in the /home/ directory tree that are owned by bob,find /home -user bob
Find all *.py files under current directory,"find . -type f -name ""*.py"""
find all the backup files in the current folder and delete them,"find . -type f -name ""*.bak"" -exec rm -f {} \;"
Change permissions to 0755 for all directories in the /path directory tree,find /path -type d | xargs chmod 0755
"Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \"".*/$now.*\"" (where $now is a variable) and save the output in file $FILE_LIST","find $TARGET_DIR -regextype posix-extended -regex \"".*/$now.*\"" -fprint $FILE_LIST"
Search for all files not newer than file /tmp/t,find / -not -newer /tmp/t
"Find all files under current directory whose file type description contains ""image"", display only path to each file.",find . -type f -exec file {} \; | grep -o -P '^.+: \w+ image'
display long listing of all the files in the root folder which are bigger than 3KB,find / -dev -size +3000 -exec ls -l {} ;
Search for case insensitive pattern 'search for me' in all files that match the name pattern '*.[!r]*' under current directory tree,"find . -name ""*.[!r]*"" -exec grep -i -l ""search for me"" {} \;"
display all the hidden files in the folder /home,"find /home -name "".*"""
Find all files residing in /home/dm/Video or below that were changed less than 7 days ago,find /home/dm/Video -mtime -7
Find files/directories in entire file system that have been modified in the last minute,find / -mmin -1
find all the backup files in the current folder and delete them,"find . -type f -name ""*.bak"" -exec rm -f {} \;"
Recursively removes all folders named '.svn' in a current folder.,find . -type d -name .svn -print0|xargs -0 rm -rf
display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems,find / -nogroup \( -fstype jfs -o -fstype jfs2 \) -ls
Search directories called ' backup ' from /usr directory downwards and print them.,find /usr -type d -name backup -print
force delete all the files which have not been accessed in the last 240 hours in the temp folder,find /tmp/* -atime +10 -exec rm -f {} \;
"Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444",find . \( -name 1.txt -o -name 2.txt -o -name 3.txt \) -print|xargs chmod 444
Find all regular files in the entire filesystem that belong to the group 'users',find /  -type f -group users
search for multiple files in the current folder,find . -name photoA.jpg photoB.jpg photoC.jpg
"Search the current directory tree for files whose name is "".note"", case insensitive",find . -iname '.note' | sort -r
Count the number of files in the current directory and below,find . -type d -exec basename {} \; | wc –l
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" | xargs rm"
Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree,find /path/to/look/in/ -type d -name '.texturedata' -prune -print0 | xargs -0 chmod 000
find all files in the home folder that are modified in the last 7 days,find $HOME -mtime -7
Find regular files modified less than 14 days ago stripping ./ from each file name,find . -type f -mtime -14 | cut -b 3- > deploy.txt
Find all .svn directories under current directory and delete them,"find . -type d -name "".svn"" -print | parallel rm -rf"
"Find all directories in the current directory tree with ""music_files"" in their names",find . -type d -iname \*music_files\*
Find all files/directories in directories/files taken from the glob pattern '/folder/path/*' recursively that have not been modified in the last 2 hours and delete them,find /folder/path/* -mmin +120 -delete
"search for a word in all the files with the extension ""ch"" in the current folder",find -name '*.[ch]' | xargs grep -E 'expr'
"Print the list of files in the home directory tree whose names begin with ""Foto""",find ~ -name 'Foto*'
Search the bla directory recursively for *.so files,"find bla -name ""*.so"""
Find all the files whose name is tecmint.txt in the current directory,find . -name tecmint.txt
Locate all .txt files in and below the current directory,"find . -name ""*.txt"""
"Search for occurrences of string ""main("" in the .c files from the current directory tree","find . -name ""*.c"" -print | xargs grep ""main("""
"Remove sequence like '\xEF\xBB\xBF' from first string of every '*.js' file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.",find . -iname *.js -type f -exec sed 's/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
List all files with their paths that have identical content.,find * -type f | xargs md5sum | sort | uniq -Dw32
Get the total sizes of all files under current directory,find . -type f -printf '%p %s\n'  | awk '{sum+=$NF}END{print sum}'
Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.,find PATH_TO_FOLDER -maxdepth 1 -type f -exec bzip2 -zk {} \;
find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.,find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
"show all the "".acc"" files in the folder /home",find /home -type f -name '*.aac'
"Search all .java files residing in the current directory tree and modified at least 7 days ago for string ""swt""",find . -name '*.java' -mtime +7 -print0 | xargs -0 grep 'swt'
Prints line count of each file within current directory.,find . -type f -print | xargs -L1 wc -l
get all files in a current directory modified in the last day,find . -mtime -1 | xargs tar --no-recursion -czf myfile.tgz
delete all the mp3 files in the home folder,find /home/ -exec grep -l “mp3” {} \; | xargs rm
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,"find ./ -name ""foo.mp4"" -printf ""%h\n"""
"search for the word ""mysql"" in all the files in the current containing the word ""notes"" in their name","find . -iname ""*notes*"" | xargs grep -i mysql"
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/",find -iname “*.c” -exec grep -l ‘main(‘ {} \; -a -exec cp {} test1/ \;
Search the current directory recursively for files last modified within the past 24 hours,find . -mtime 0
display all the regular/normal files in the current folder which have been modified in the last 24 hours,find . -mtime 0 -type f
display all hidden files in the current folder,"find . -type f -name "".*"""
Find all php files under current directory,"find . -type f -name ""*.php"""
Find all files/directories under current directory tree that contain 'pattern' in their names,"find -name ""*pattern*"""
List all *.txt files/directories under current directory,"find . -name ""*.txt"" -exec $SHELL -c 'echo ""$0""' {} \;"
"Search regular files from the /path/to/dir directory tree for lines that contain ""_START"" and are enclosed in lines ""@GROUP"" and ""@END_GROUP""","find /path/to/dir -type f -exec sed '/@GROUP/,/@END_GROUP/!d' {} \; | grep '_START'"
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions,find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \;
display all the regular/normal files in the /root folder which are bigger than 500MB,"find /root -type f -size +500M -printf ""The %p file is greater than 500MB\n"""
display all the files in the file system which are smaller than 20 bytes,find / -size 20
"listing of the files starting from home dir, that have size 50k or less and have extention html.""",find . \  -name '*.html' \    -exec  ls -l {} \;  2> /dev/null
Find *.html files in the current directory tree that were last modified more than 7 days ago,"find . -mtime +7 -name ""*.html"" -print"
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found,cd `find . -name Subscription.java | xargs dirname`
Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago,find $LOCATION -name $REQUIRED_FILES -type f -mmin +360 -delete
display all directories in the entire file system,find / -type d -print
Print the names of all files in /some/directory and its subdirectories recursively whose MIME type is video,find /some/directory -type f -exec file -N -i -- {} + | sed -n 's!: video/[^:]*$!!p'
Find all *.txt files/directories under current directory,"find . -name ""*.txt"""
display all files in current folder which are bigger than 100KB but are less than 500KB,find . -size +100k -a -size -500k
Find all .zip files in the current directory tree,find . -depth -name *.zip
"find all files and directories under the current directory and display the filesize followed by the filename, using the stat command on FreeBSD/OSX","find . -type f -exec stat -f ""%z %N"" {} \;"
Find files smaller than 40 blocks skipping directories on other file systems,find . -size -40 -xdev -print
Create a tar archive with all *.java files under the current directory,"find . -type f -name ""*.java"" | xargs tar cvf myfile.tar"
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir,find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
"display all the files in the current folder which have been modified after the files ""/bin/sh""",find . -newer /bin/sh
change cgi files to mode 755,"find htdocs cgi-bin -name ""*.cgi"" -type f -exec chmod 755 {} \;"
find all normal/regular files in current folder and display them in sorted order,"find . -type f -ls | awk '{print $, $, $, $NF}'"
Find file1 in the level 1 directories and above,find -maxdepth 2 -name file1
"long list all the files in the curent folder starting with ""Tes""","find . -type f -name ""Tes*"" -exec ls -l {} \;"
Find all *~ files/directories under dir and  print an rm command for each of them for deletion,find dir -name \*~ | xargs echo rm
Search only for directories,find -type d
Delete all files under and below the current directory,find -mindepth 1 -delete
"Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically","find ""$FOLDER"" -type d -printf ""%T@\n"" | cut -f 1 -d . | sort -nr"
"recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number",find /data/bin/test -type d -mtime +10 -name '[0-9]*' -print | xargs rm -rf ;
List all files under and below the directory given as variable $FULFILLMENT,find $FULFILLMENT -ls
"Copies all files like ""*FooBar*"" under the current directory to the '~/foo/bar' directory.","find . -name '*FoooBar*' | sed 's/.*/""&""/' | xargs cp ~/foo/bar"
Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them,find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -exec rm {} \;
Perform a white space safe search for all files/directories under current directory,find . -print0 | xargs -0
Delete all files/directories older than 48 hours in /path/to/files* paths,find /path/to/files* -mtime +2 -delete
Find all files/directories under current directory with the null character as the delimiter,find -print0
Find all files/directories with '.js' extension under current directory tree without descending into './directory',find . -path ./directory -prune -o -name '*.js' -print
Search for aaa in all files under current directory and count the number of matches,find . -type f -exec grep -o aaa {} \; | wc -l
display all the files in the entire file system,find / -type f -exec echo {} \;
find all files that names are game,find / -name game
Print the empty directories and files under current directory,find -empty
Print all non-hidden files in the current directory and its subdirectories,find . -not -path '*/\.*'
searches through the /usr directory for the regular  file named 'Chapter1*',"find /usr -name ""Chapter*"" -type f"
"Finds string with text ""string to be searched"" in any cased files like ""*.cs"" recursively in a current folder.","find ./ -type f -iname ""*.cs"" -print0 | xargs -0 grep ""content pattern"""
Convert all DOS files under and below the current directory to the Unix format,find . -type f -print0 | xargs -0 -n 1 -P 4 dos2unix
Find all directories in the current directory tree that do not have `execute' permissions for anyone,find . -type d ! -perm -111
find all the files in the current folder which have been accessed in the last 24 hours,find . -type f -atime 1
"search for the file, filename.txt in the current folder",find . -iname filename.txt
Find files that have a modification time of a day ago,find / -mtime 1
find all files in current folder which are less than 300MB,find . -size -300M
List the files matching 'my key phrase' either in their names or contents,find | xargs -I {} bash -c '( || )'
Non-recursively finds all '*.pdf' files in a current folder and removes them.,"find . -maxdepth 1 -name ""*.pdf"" -print0 | xargs -0 rm"
Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names,find . -path ./.git -prune -o -not -name '*git*' -print |grep git
find all the video files which are bigger than 10 MB which have not been modified in the last 60 days but have been changed in the last 100 days in /tmp and /var/tmp folder home folders,find /tmp /var/tmp ~ -type f -size +10M -mtime +60 -ctime -100 -exec file -N -i -- {} + | sed -n 's!: video/[^:]*$!!p'
"find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar.",find ./ | grep -E 'foo|bar'
"Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, ignoring binary files.","find / -type f -exec grep -l ""text-to-find-here"" {} \;"
Find and remove all .txt regular files under the current directory and below,"find . -type f -name ""*.txt"" -exec rm -f {} \;"
Look for file `Chapter1' under /usr and /home,find /usr /home -name Chapter1 -type f
search for a file in a directory and pass it as an input to the script getLine,find $dir -type f -name $1 -exec getLine {} \;
Find and delete the file with inode number 1316256,find ./ -inum 1316256 -delete
display the count of number of files in the current folder,find | wc -l
Find all read-only files,find / -perm /u=r
List all zero-length files,find . -empty -exec ls {} \;
Find all files/directories under current directory and print them twice in each line,"find | xargs -i sh -c ""echo {} {}"""
Copy all *.data files under /source_path to /target_path,find /source_path -name *.data -exec cp {} /target_path \;
find all files in the file system whose size is exactly 2KB,find / -size 2048c
Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]',find /dev/sd*[a-z] | wc -l
Find all directories under current directory excluding those which match the regex /\. in their names,find . -type d | grep -v '/\.'
Find the top 5 small files,find . -type f -exec ls -s {} \; | sort -n  | head -5
Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.,find . -type f | egrep -v '\.bz2' | xargs bzip2 -9 &
Remove all *.log files from the current directory tree,find -name '*.log' -delete
delete all the broken symbolic links from the folder /usr/ports/packages,find -L /usr/ports/packages -type l -exec rm -- {} +
Search for the literal string 'v$process' in all files under current directory,find . -print|xargs grep v\$process
Find all regular files under '/usr/bin' directory tree that are less than 50 bytes in size,find /usr/bin -type f -size -50c
find all files in the current folder which have been modified in the last 24 hours,find . -mtime -1 -print
search for all xml files in current folder and display the copy command to copy them to another folder,"find . -name ""*.xml"" -exec sh -c 'echo ""cp $0 someWhereElse/$0""' {} \;"
Find all files that were modified later than ordinary_file in the current directory and its sub-directories.,find -newer ordinary_file
display all text files in current folder,"find . -name "".txt"""
"Search directory foo for files containing ""/tmp/foo/bar"" in their full names",find foo -path /tmp/foo/bar -print
Find all files that are exactly 50 bytes,find / -size 50c
find all files in the current folder that are not modified in the last 240 hours,find . -mtime +10 -print
Search the home directory tree for files modified less than a day ago,find $HOME -mtime -1
Search the current directory tree for regular files changed on the 10th of September,find ./ -type f -ls |grep '10 Sep'
"Remove all regular files with extensions php, css, ini, txt from directory tree /old/WordPress/","find /old/WordPress/ -type f -regex "".*\.\(php\|css\|ini\|txt\)"" -exec rm {} \;"
"Search the files from the current directory tree for ""foo""",find . -exec grep -l foo {} +
Find all files in entire file system which are larger than 20000KB and show file name/path followed by its size,"find / -type f -size +20000k -exec ls -lh {} \; | awk '{ print $8 "": "" $5 }'"
Locate all *.csv files under the current directory tree,"find . -name ""*.csv"" -print"
Search file aaa from current direcoty downwards and print it .,find . -name aaa -print
display all the regular files in the current folder that are bigger than 10KB,find . -type f -size +10k
"Locate all files in the current directory and below that have ""testfile"" in their names","find -name ""*testfile*"""
Show the list of files larger than 100 MB,find / -size +100M -print
Redirects time output to file.,{ time find / 2>/dev/null; } 2>time.txt
Find all *.texi files in /usr/local/doc,find /usr/local/doc -name '*.texi'
Show manual page of find utility,man find
Find all sample*_1.txt files/directories under current directory,"find . -name ""sample*_1.txt"""
"find any files or directories called "".svn"" under the current directory and run a long list on each one, displaying a line count of the resultant output.","find . -iname .svn -exec bash -c 'ls -l ""{}"" | wc -l' \;"
"Find files that are writable by the user, the group, or both",find plsql -type f  -perm /ug=rw -exec ls -l {} \; 2>/dev/null
change the permission of all the php files in the folder /var/www/ to 700,"find /var/www/ -type f -iname ""*.php"" -exec chmod 700 {} \;"
"Find files in and below the current directory whose names begin with ""not"" and remove one of them",find . -name not\* | tail -1 | xargs rm
"List and remove all regular files named ""core"" under /prog that are larger than 500k",find /prog -type f -size +1000 -print -name core -exec rm {} \;
find all the files in the entire file system whose size is greater than 20MB,find / -type f -size +20000k
finds all files modified within a certain time frame recursively,"find . -type f -newermt ""2013-06-01"" \! -newermt ""2013-06-20"""
find the count of all the regular files in a directory,find /usr -type f | wc -l
Find all /home/folder1/*.txt files and create symlinks appending '_CUSTOM_TEXT.txt' in their names,"find /home/folder1/*.txt -type f | awk -F '.txt' '{printf ""ln -s %s %s_CUSTOM_TEXT.txt\n"", $0, $1}' | sh"
find all the zip files in the current folder,find . -type f -name '*.zip'
Find regular files that are bigger than 500 MB in size under current directoryt tree,find . -type f -size +500M
Find all files that are set group ID to staff,find . -group staff -perm -2000 -print
"find all the png files in current folder which are present in the pattern list file ""search.txt""",find . -name '*.png' | grep -f <
Find all files/directories with 'my key phrase' in their names under current directory,find . -name '*my key phrase*'
"display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set",find / -noleaf -wholename '/proc' -prune -o -wholename '/sys' -prune -o -wholename '/dev' -prune -o -perm -2 ! -type l  ! -type s ! \ -print
display all files  expect directories in the current folder,find . ! — type d -print
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid',"find -not -name ""query_to_avoid"""
Find all files in the `sourceDir' directory,find sourceDir -mindepth 1 -maxdepth 1
"Counts lines in each *.cpp, *.c, *.h file.",wc -l `find . -type f \ -print`
find all files in the current directory which are bigger than 2MB,find -size +2M
Move all files/directories under current directory to ~/play,find . -exec mv '{}' ~/play/ \;
Search for files/directories which are writable by both their owner and their group,find . -perm -220
"List all files/directories under current directory using comma (,) as the delimiter for different fields in the output","find . -ls|awk 'BEGIN{OFS="",""}$1=$1'"
Remove `core' files whose status was changed more than 4 days ago,find `pwd` -name core -ctime +4 -execdir /bin/rm -f {} \;
find all the files in the entire file system that have been accessed exactly  50 days ago,find / -atime 50
display all files in current folder which have been modified in the last 60 minutes,find -mmin 60
"find regular files under the current directory, whose name ends in .mbox, piping the output to the GNU Parallel command that will rename each file to not have a file extension.",find . -type f -wholename \*.mbox | parallel mv {} {.}
Search for files greater than 20MB under your home directory (/home/user),find ~ -size +20M
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today,find -maxdepth 1 -type f -daystart -mtime -1
Find files by type,find -type type_descriptor
"Search *.txt files under and below /directory/containing/files for ""pattern_to_search""","find /directory/containing/files -type f -name ""*.txt"" -exec grep -H 'pattern_to_search' {} +"
Assign the alias rm100m to a find command that removes any .tar file larger than 100M.,"alias rm100m=""find / -type f -name *.tar -size +100M -exec rm -i {} \;"""
Locate all files named 'restore.php' in the current directory and 3 levels below,find . -maxdepth 4 -name 'restore.php'
Search for files/directories with the case insensitive pattern anaconda.* in /var/log directory and create an archive  of the last file found,find /var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \;
Find all .gz archives in the current directory tree,find . -name '*.gz'
Find text in whole directory tree,"find . -type f | xargs grep ""text"""
Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git',"find . -not -path ""*git*"" -not -name '*git*' |grep git"
find all files in home folder which have been modified after a timestamp,find ~ -newer /tmp/timestamp
Move all regular files under current directory to ./newdir,find ./ -type f -print | xargs    -i mv -f {} ./newdir
Find all files/directories with space in their names under $1 directory,find $1 -name '* *'
"Recursively search for all files with names ending with ""_test.rb"", renaming them to end with ""_spec.rb"", using at most 4 concurrent processes.","find . -name ""*_test.rb"" | xargs -P 4 rename s/_test/_spec/"
Find all files with '.txt'  extension under $dir directory non-recursively and sort them numerically,"find ""$dir"" -maxdepth 1 -type f -iname '*.txt' | sort -n"
Display long listing of all the files/directories owned by the user 'me' under '/tmp' directory tree,find /tmp -user me -ls
display all the java script files in a folder,find src/js -name '*.js'
"Find links that point to nothing To find links that point to nothing, use the perl interpreter with find, like this:",find / -type l -print | perl -nle '-e || print';
find all the empty in the current folder do not search in sub directories,find . -maxdepth 1 -type d -empty
"Recursively find all files in the directory ""posns"" and split each one into files of at most 10000 lines each",find posns -type f -exec split -l 10000 {} \;
Delete all directories in the TBD directory that were modified more than 1 day ago,find /TBD -mtime +1 -type d | xargs rm -f -r
Find all empty directories under $somedir and copy /my/configfile into those directories,"find ""$somedir"" -type d -empty -exec cp /my/configfile {} \;"
"Create a bzip2 archive of all .txt files from the ""dir"" directory tree",find dir/ -name '*.txt' | tar -c --files-from=- | bzip2 > dir_txt.tar.bz2
locate large files (> 100 MB) in /home/ for 'cleaning',find /home -type f -size +100M -print0 |xargs -0 rm
Count the number of lines in each .java file in the current directory tree,"find . -name ""*.java"" -exec wc -l {} \;"
Find all files under /home/username/public_html/sites/default/files and set their permission to 660,find /home/username/public_html/sites/default/files -type f -exec chmod 660 {} +
List all files in the /myfiles directory tree,find /myfiles -exec ls -l {} ;
"Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one.",find ~/ -atime +100 -exec rm -i {} \;
find the path of a specfic video file in the current directory,"find ./ -name ""foo.mp4"" -printf ""%h\n"""
Find all .txt files of user Tecmint under /home directory,"find /home -user tecmint -iname ""*.txt"""
Find & calculate total number of caractor  in all .txt file from current directory,find .  -type f  -name '*.txt' -exec wc -c {} \; | awk '{total += $1} END{print total}'
Find files larger than 100MB in /var/www and exclude files with /download/ in their path from the output,"find /var/www/ -type f -name ""*"" -size +100M -exec du -h '{}' \;|grep -v /download/"
find all the files in the entire file system that start with the word top and have 3 letters next to it.,find / -name 'top???'
Find all files/directories in directories/files taken from the glob pattern '/folder/path/*' recursively that have not been modified in the last 2 hours and delete them,find /folder/path/* -mmin +120 -delete
Search directory trees /usr/local/man and /opt/local/man for files whose names begin with 'my',find /usr/local/man /opt/local/man -name 'my*'
"find all posix-extended regex  ""[a-f0-9\-]\{36\}\.jpg"" files","find . -regextype posix-extended -regex ""[a-f0-9\-]\{36\}\.jpg"""
find all the regular/normal files in the current folder and rename them to html files,find main-directory -type f -exec mv -v '{}' '{}'.html \;
"Set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian","find lib etc debian -name ""*.sh"" -type f | xargs chmod +x"
Copy all .png files from the home directory tree to imagesdir/,find ~/ -name *.png -exec cp {} imagesdir \;
Find all *.tex regular files under current directory,"find . -type f -name ""*.tex"""
"display all scala files in the directory ""src/main""","find . -path ""*src/main*"" -type f -iname ""*\.scala*"""
find all executable files in /home directory.,find  /home -type f -perm /a=x
"List all files in the current directory tree that were last modified on the 3rd of March, 2010 or later","find -newermt ""mar 03, 2010"" -ls"
search for a function in all python files in the current folder,find . -name '*.py' | xargs grep some_function
"display all the directories in the current folder excluding those that have the name ""node_modules""","find . ! -name ""node_modules"" -type d"
"Find all files/directories in entire file system that have  ""write"" bit set for either the owner, the group, or others",find / -perm /a+w
Find all *.c files in /usr/src bigger than 100k,find /usr/src -name '*.c' -size +100k -print
remove all the files in the current folder which have not been changed in the last 30*24 hours,find ./ -ctime +30 -type f -exec rm -f {} \;
Delete files containing whitespaces,"find . -name ""* *"" -exec rm -f {} \;"
"find all the files in the home folder which end with "".tex""",find ~ -iname '*.tex'
"display a long list of all the directories which have files ending with "".todo""","find ""$STORAGEFOLDER"" -name .todo -printf '%h\n' | xargs ls -l"
Search the /myfiles directory tree for files last modified 2 days ago,find /myfiles -mtime 2
"Print a colon-separated list of all directories from the $root directory tree, except those matching pattern "".[a-z]*""","find ""$root"" -name "".[a-z]*"" -prune -o -type d -printf '%p:'"
Find recursively all regular .txt files in the current directory tree except README.txt,"find . -type f -name ""*.txt"" ! -name README.txt -print"
"Remove all files in and below the current directory whose names begin with ""not""",find . -name not\* | xargs -d '\n' rm
Print a sorted list of all .jpg files in the current directory and below,find -name '*.jpg' | sort -n
find all directories that names are 'apt' and display details,"find  / -type d -name ""apt"" -ls"
List all .svn files/directories under current directory,find . -name .svn -exec echo {} \;
display all the files in the usr folder and those that are in the path local,"find /usr/ -path ""*local*"""
Find all files matching pattern '.#*' in the current directory tree,find -iname '.#*'
"Search the files from the current directory tree for ""chrome""",find . -exec grep chrome {} \;
Change the ownership of all files in the current directory tree to myuser:a-common-group-name,find . -exec chown myuser:a-common-group-name {} +
Search for the string 'magic' in all regular files under current directory tree and display long listing of them,"find . -type f -exec grep ""magic"" {} \; -ls"
"Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories","find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;"
find all the text files that have modified in the last 2 days and not modified today,"find . -name ""*.txt"" -type f -daystart -mtime +0 -mtime -2"
display all the jpg files in the current folder which belong to the user nobody,find . -name *.jpg -user nobody
Delete all .pyc files in the current directory tree,"find . -name ""*.pyc"" | xargs rm -rf"
Find all *.mp3 files under current directory and run mplayer with these files,find . -name \*.mp3 -print0 | xargs -0 mplayer
"Create an empty file in each directory named ""mydir"" under current directory.","find . -type d -name ""mydir"" -print |  sed 's/$/\/abc.txt/g' | xargs touch"
"List all *.c, *.h and *.cpp files under current directory",find . -type f \( -name '*.c' -or -name '*.h' -or -name '*.cpp' \) -exec ls {} \;
List in detail regular files from the current directory tree whose names match Perl regular expression '\w+-\d+x\d+\.\w+$',find -type f |  grep -P '\w+-\d+x\d+\.\w+$' | sed -re 's//\\\1/g' | xargs ls -l
display all files in current folder,find .
Find all files you have modified in the last two days,find ~ -type f -mtime -2
"search for the directory ""mysql"" in the /etc folder",find /etc -name mysql -type d
Find all files in the current directory tree with size bigger than 5 MB and sort them by size,find ./ -size +5M -type f | xargs -r ls -Ssh
Recursively finds and compresses all files in the directory '/path/to/dir',find /path/to/dir -type f -exec bzip2 {} \;
find all the text files in the file system and search only in the disk partition of the root.,"find / -xdev -name ""*.txt"""
"Replace spaces with underscores in the names of all files and directories in the ""/tmp"" directory tree","find /tmp/ -depth -name ""* *"" -execdir rename "" "" ""_"" ""{}"" "";"""
find all the files in the current folder that have been accessed in today from the start of the day,find -daystart   -atime 0
Search for regular files of the user bluher in the file system,find / -type f -user bluher -exec ls -ls {}  \;
"Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time","find . -type f -printf ""%C@ %p\n"" | sort -r | head -n 10"
"Search the ""katalogi"" directory tree for files named ""wzorzec""",find katalogi -name wzorzec
search for all png files in a folder and copy them to another folder,"find /home/mine -iname ""*.png"" -exec sh -c 'cp $0 /home/mine/pngcoppies/copy/$0' {} \;"
Search the current directory and two levels below for file `teste.tex',find ~/ -maxdepth 3 -name teste.tex
"Create links for all files in the current directory tree that are more than 1000 days old in ""/home/user/archives""",find . -type f -mtime +1000 -print0 | cpio -dumpl0 /home/user/archives
Find all files under $root_dir,find $root_dir -type f
find  case-insensitive StringBuffer in all *.java files,"find . -type f -name ""*.java"" -exec grep -il string {} \;"
Find all php files in current directory and delete lines matching the regex '<\?php \/\*\*\/eval(base64_decode);.*\?>' in those files,"find . \ -exec grep -Hn ""<\?php /\*\*/eval(base64_decode);.*\?>"" {} \; -exec sed -i '/<\?php \/\*\*\/eval(base64_decode);.*\?>/d' {} \;"
search for a file using name patterns from the list of all the regular files in the folder project and save the output to the file Include.,find project -type f -print | egrep '$' > Include
"Search the ~/Books directory recursively for regular files named ""Waldo""",find ~/Books -type f -name Waldo
Find files/directories named 'photo.jpg' in the entire filesystem,find / -name photo.jpg
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions,"find / -maxdepth 1 -xdev -type f -exec grep -Zli ""stringtofind"" {} +"
Remove all regular files from the current directory tree that were modified a day ago,find . -type f -mtime 1 -exec rm {} +
change the permissions of all the regular files in the folder root_dir to 444,find root_dir -type f -exec chmod 444 {} \;
Search the *.code files from the current directory tree for string 'pattern',find . -name '*.code' -exec grep -H 'pattern' {} +
display all the regular/ normal files in a folder,find src/js -type f
"Remove all files in the current directory tree that have the name ""abc.xxx""",find . -name abc.xxx -exec rm {} \;
"sort each file in the bills directory, leaving the output in that file name with .sorted appended",find bills -type f | xargs -I XX sort -o XX.sorted XX
find all the files in the current folder which have execute permission to all the users,"find . -perm /u=x,g=x,o=x"
Search for the regex 'pattern_to_search' in all files under '/directory/containing/files' and show the matched lines as well as the file names,find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +
Find all directories in the current directory tree,find -type d
"Replace all occurrences of '2013 Magento Inc.' with '2012 Magento Inc.' in all files with '.php, '.xml' and '.phtml' extensions under current directory tree",find . -name '*.php' -print0 -o -name '*.xml' -print0 -o -name '*.phtml' -print0 | xargs -0 sed -i '' 's/2013 Magento Inc./2012 Magento Inc./g'
Compress files excluding *.Z files,"find . \! -name ""*.Z"" -exec compress -f {} \;"
Search for files/directories which are writable by either their owner or their group,find . -perm /220
List files ending in .html and residing in the current directory tree,"find . -name ""*.html"""
Find all the files under /tmp directory and show a few lines of output from the beginning,find /tmp  | head
change cgi files to mode 755 under htdocs or cgi-bin directories,"find htdocs cgi-bin -name ""*.cgi"" -type f -exec chmod 755 {} \;"
Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory,find /path/to/folders/* -type d -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \;
find all files under the current folder except dir1 dir2 dir3  folder,find . -type d \ -prune -o -print
change the permissions of all regular/normal files in the current directory,find . -type f | xargs chmod 664
"Search for ""pattern"" in all the .c files in the current directory tree","find . -name ""*.c"" | xargs grep pattern"
display all the files in current folder,find .
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under /home/www and below",find /home/www/ -type f -exec sed -i 's/subdomainA\.example.com/subdomainB.example.com/g' {} +
Find all files/directories which have been modified within the last day in the drectories/files taken from the glob pattern '/tmp/test/*',find /tmp/test/* -mtime -1
"Search the current directory for files whose names start with ""messages."" ignoring SVN, GIT, and .anythingElseIwannaIgnore files",find . -type f -print0 | xargs -0 egrep messages. | grep -Ev '.svn|.git|.anythingElseIwannaIgnore'
"Count the number of lines in all "".php"" files in the current directory tree",find . -name '*.php' -type f | xargs cat | wc -l
List all leaf directories  under current directory,"find -depth -type d | while read dir;  do [[ ! $prev =~ $dir ]] && echo ""${dir}"" ; prev=""$dir""; done"
Print a colon-separated list of all directories from the ~/code directory tree,find ~/code -type d | tr '\n' ':' | sed 's/:$//'
"Remove the .jpg files from the current directory whose names match regular expression "".+-[0-9]+x[0-9]+\.jpg""","find . -type f -regex "".+-[0-9]+x[0-9]+\.jpg"" -exec rm -rf {} \;"
Search the current directory tree for *bash* files,"find . -name ""*bash*"""
Search the current directory recursively for regular files last modified less than 2 days ago,find . type -f -mtime -2
Search the directory given as variable $backuppath recursively for files that were last modified less than 10 days ago and save the list of them to file.list,"find ""${backuppath}"" -mtime -10 > file.list"
Remove all files that contain the word GUI in entire file system,find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
"Find files owned by the ""shadow"" group",find / -group shadow
Find all your text files and page through them,"find . -name ""*.txt"" -print | less"
List all files/directories under current directory with 'FooBar' in their paths ensuring white space safety,find . -print0 | grep --null 'FooBar' | xargs -0
create a backup of all the files in the home folder on a partition and save the log to a file,find /home -depth -print | cpio -ov -0 /dev/rmt0 | tee -a tape.log
find all files in current folder which are bigger than 1MB,find ./ -size +1000k
Find all SUID files in entire file system,find / -perm +u=s
Removes all empty folders under current folder.,find . -type d -exec rmdir {}\;
find all the files in the current folder,"find . -print0 | xargs -0 -l -i echo ""{}"";"
"Remove all files from the current directory tree whose names end in ""~""",find -iname '*~' | xargs rm
"Find files in the current directory tree whose names begin with ""file"" and whose size is 0, and remove them",find . -name 'file*' -size 0 -print0 | xargs -0 rm
Remove all files that are not newer than Jul 01 by modification time,"find /file/path ! -newermt ""Jul 01"" -type f -print0 | xargs -0 rm"
Delete everything in the current directory,find -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf
Find all files under /var/www directory and set their permission to 644,sudo find /var/www -type f -print0 | xargs -0 chmod 644
Rename file ~/junk/cart1 to ~/junk/A,find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \;
"Search the current directory tree for regular files whose names end with ""keep.${SUFFIX}"", where $SUFFIX is a shell variable","find . -type f -name ""*keep.${SUFFIX}"""
Find all directories under current directory and set their permission to 775,find -type d | xargs chmod 775
"list symbolic links under the directory ""$directory"" using contents of the $IFS variable between output of each one","find $directory -type l -printf ""%p$IFS"""
Search for 'Processed Files' in all $srch*  files under current directory,"find . -iname ""$srch*"" -exec grep ""Processed Files"" {} \; -print"
List *.pl directories in the current directory tree,"find . -name ""*.pl"" -exec ls -ld {} \;"
Find files/directories under current directory and write them to a file as null terminated strings.,find -fprint0
"display all the files in the folder ""/Users/Me/Desktop"" which have read permission to them",find /Users/Me/Desktop -readable
Find all files/directories with '.js' extension under current directory tree without descending into  and ignoring './directory' completely,find . -not \ -name \*.js
"List the current directory recursively ignoring the ""dir1"" subdirectory",find . -path ./dir1\*  -o -print
Find file `Chapter1' on the system,find / -name Chapter1 -type f -print
Delete all hidden files under $some_directory,"find ""$some_directory"" -type f -name '.*' -exec rm '{}' \;"
Remove all empty directories within a directory.,"#!/bin/bash

find /path/to/your/directory -type d -empty -delete"
"display all scala files in the directory ""src/main""","find . -type f -path ""*src/main/*\.scala"""
find all the files in the folder .home/calvin which have been modified in th last 45 minutes,find /home/calvin/ -mmin -45
Find every file/directory under the directory /home owned by the user joe,find /home -user joe
display a long listing of all the files in the current folder which are bigger than 10KB,find . -size +10k -exec ls -lh {} \+
Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf ',"find /var/www/html/ -type d -name ""build*"" | sort | tail -n +5 | xargs -I % echo -rf %"
display long listing of all normal/regular files in the current directory which have been modified in the last 2 days.,"find . -mtime -2 -type f -name ""t*"" -exec ls -l '{}' \;"
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'
"Find recursively all files in /path that end in ""txt"" and copy them to /tmp/","find /path -type f -name ""*txt"" -printf ""cp '%p' '/tmp/test_%f'\n"" | bash"
"Show the mv commands that would rename the *.so files in the current directory tree prepending their names with ""lib""","find . -name ""*.so"" -printf ""mv '%h/%f' '%h/lib%f'\n"" | less -S"
display all the files in the current folder,find . -print
Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name,"find . -type d | sed -e 's/\.\///g' -e 's/\./avoid/g' | grep -v avoid | awk '{print $1""\t""$1}' | xargs chgrp"
display all the html files in the folder /var/www,"find /var/www -type f -name ""*.html"""
Execute COMMAND for all files and directories under the current directory tree,find . -print0 | xargs -0 COMMAND
Find all directories under mydir,find mydir -type d
Add the .abc suffix to the names of all *.txt regular files in the current directory tree,find . -type f -iname '*.txt' -print0 | xargs -0 mv {} {}.abc
find all readme files in a folder,find /usr/share/doc -name README
"Search the *.pdf files from directory tree PDFs/ for text ""perry sound"", ignoring the case","find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext ""{}"" - | grep -C 2 -i --with-filename --label=""{}"" --color ""perry sound""' \;"
Find all files named 'new' under current directory tree and display their contents,find . -name new -print -exec cat {} \;
"List the last entry of the numerically sorted list of all files and folders under ""/foldername""",find /foldername | sort -n | tail -1
"display all files in the directory ""dir"" which have been accessed in the last 60 minutes",find /dir -amin -60
Set permissions for files in `foldername' and its subdirectories to 644,"find foldername -type f -exec chmod 644 {} "";"""
find all the perl files in /var/www,"find /var/www/ -type f -name ""*.pl"" -print"
Find all files/directores under /etc and run the file command on each of them,find /etc -print0 | xargs -0 file
"search for directories in the folder ""test"" which end with 5 digits using regular expressions",find ./test -regextype posix-egrep -type d -regex '.*/[0-9]{5}$'
Print your/dir if it's empty,"find ""your/dir"" -prune -empty"
Recursively finds all bzip2 compressed files in a current folder and decompresses them.,"find ./ -iname ""*.bz2"" -exec bzip2 -d {} \;"
Print the 6th field  from the paths specified by ~/bin/FilesDvorak/.* files/directories,"find ~/bin/FilesDvorak/.* -maxdepth 0 | awk -F""/"" '{ print $6 }'"
Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter,find . -name .snapshot -prune -o \
Find all .sh files in the current directory tree and remove them,"find . -name ""*.sh""| xargs rm -rf"
"Find every directory under ""0001"" and make new directories replacing ""0001"" with ""0002"" at the beginning of their names.",find 0001 -type d | sed 's/^0001/0002/g' | xargs mkdir
List level 2 subdirectories of the current directory,find . -mindepth 2 -maxdepth 2 -type d -printf '%M %u %g %p\n'
find all java files in the current folder and search for the pattern REGEX,find . -name '*.java' -exec grep REGEX {} \;
Find all regular files 1 level down the $dir directory,find $dir -maxdepth 1 -type f
"Calculate the md5 sum of the contents of all files sorted in directory tree ""/path""",find /path -type f | sort -u | xargs cat | md5sum
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find /tmp -maxdepth 1 -name ""$USER.*"""
find all the files in current folder which have been updated in the last 60 minutes,find . -mmin -60
Search for files in your home directory which have been modified in the last twenty-four hours.,find $HOME  -mtime 0
"Search the files residing in the current directory tree whose names contain ""bills"" for ""put""","find . -name ""*bills*"" -print0 | xargs -0 grep put"
"find all the png files in current folder which are present in the pattern list file ""search.txt""",find . -name '*.png' | grep -f <
find all the files in the current directory which have been modified in the last 24 hours,find . -mtime 0
find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB,find . -atime +7 -o -size +20480 -print
display the contents of all the regular files in the current folder and save the output to out.txt,find . -type f | xargs cat > out.txt
Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _,"find /tmp/ -depth -name ""* *"" -execdir rename "" "" ""_"" ""{}"" "";"""
Find all directories under minimum 1 level down the  $GIVEN_DIR directory,"find ""$GIVEN_DIR"" -type d -mindepth 1"
Find all files under /path/to/Dir and set their permission to 644,sudo find /path/to/Dir -type f -print0 | xargs -0 sudo chmod 644
Find all directories in maximum 1 level down the current directory and remove the . entry from the output,find . -maxdepth 1 -type d | sed '/^\.$/d'
Find all 777 permission files in entire file system and set permissions to 644,find / -type f -perm 0777 -print -exec chmod 644 {} \;
search for the file picasso in the folder /home/calvin/ (case insensitive search),find /home/calvin/ -iname “picasso”
"find files in current folder ending with "".c"" or "".h"" or "".ch"" and search for a word in these files and enable color highlighting of the matched text","find . -name ""*.[ch]"" -exec grep --color -aHn ""e"" {} \;"
"Search for the string ""ERROR"" in all XML files in the current working directory tree","find . -name ""*.xml"" -exec grep ""ERROR"" /dev/null '{}' \+"
search for a word in all the regular/normal files in the current folder and display the filename along with the matched text,find . -type f -exec grep -l linux {} \;
create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours,"find \( -name ""*.htm"" -o -name ""*.html"" \) -a -ctime -30 -exec ln {} /var/www/obsolete \;"
"find all the files in the file system which belong to the groep ""users"" and with the name ""dateiname""","find / -group users -iname ""Dateiname"""
Find all *foo files/directories under current directory (error prone),find . name *foo
Find all files/directories named 'foo.bar' in the entire filesystem,find / -name foo.bar -print
Replace 'company' with 'newcompany' in all files under current directory,find ./ -type f -exec sed -i 's/company/newcompany/' {} \;
Runs `file' on every file in or below the current directory.,find . -type f -exec file '{}' \;
Look for files in the current directory tree to which the group users have full access,find . -perm -070 -print
Remove all files in the /myfiles directory tree that were accessed at least 30 days ago,find /myfiles -atime +30 -exec rm {} ;
Get a detailed list of all files on the system larger than 10MB,find / -size +10M -printf “%12s %t %h/%fn”
Search user1's home directory tree for *.bin files,find /home/user1 -name \*.bin
Find all files in  /mydir  and replace every occurrences of <string1> with <string2> in those files invoking sed as few times as possible,find /mydir -type f -exec sed -i 's/<string1>/<string2>/g' {} +
Find all directories whose name is root in / directory,find / -type d -name root
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=C,find sort_test/ -type f | env -i LC_COLLATE=C sort
list files in /usr modified after the time which /tmp/stamp$$ modified,find /usr -newer /tmp/stamp$$
Find all *.txt files/directories under current directory and execute process_one for each of them,"find . -name ""*.txt"" -print0 | xargs -0 -n 1 process_one"
Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago,find . -mmin -60 -mmin +5
Find all files under /home/username/public_html/sites/all/modules and set their permission to 640,find /home/username/public_html/sites/all/modules -type f -exec chmod 640 {} +
"Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.",find ~/ -type f -exec grep -H 'text-to-find-here' {} \;
Find all files in maximum 2 levels down the current directory,find . -maxdepth 2  -type f
Find all regular files in current directory and /home/www directory,find * /home/www -type f
Find files that were modified 7 days ago and archive them,find . -type f -mtime 7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
Search for 'example' in all regular files under current directory tree and also print the filenames,"find . -type f -exec grep ""example"" '{}' \; -print"
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count the number of lines in them containing ^M,find /usr/ports/ -name Makefile\* -exec grep `printf '\15'` -l '{}' '+' | wc -l
find file which case-insensitive name is foo in current directory.,find . -iname foo
"search for a files ""cart1"" in the folder junk which is in home folder and move the folder to ~/junk/A.",find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \;
"Search for the extended regex expanded by""$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1"" in the decompressed contents of the /var/log/apache2/access*.gz files that are newer than ./tmpoldfile and older than ./tmpnewfile","find /var/log/apache2/access*.gz -type f -newer ./tmpoldfile ! -newer ./tmpnewfile \ | xargs zcat | grep -E ""$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1"" -c"
change the permissions of all the regular/normal files in the current folder,sudo find . -type f -exec chmod 644 {} +
Find all SUID set files under current directory and show a few lines of output from the beginning,find . -perm /u=s | head
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f | xargs ls -l
"Set the setgid bit on all directories in the repository ""/git/our_repos""",find /git/our_repos -type d -exec chmod g+s {} +
find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names),"find ""somedir"" -type l -print0"
Remove trailing white spaces from all files under dir directory,find dir -type f -exec sed -i 's/ *$//' '{}' ';'
Change the user and group of all files and directories under /var/www to www-data:www-data,find /var/www -print0 | xargs -0 chown www-data:www-data
"search for all the jpg files in the folder ""/mnt/hda1/zdjecia/test1/"" and create a directory in /mnt/hda1/test with the same name as the mp3 file",find /mnt/hda1/zdjecia/test1/ -type f -iname ‘*.jpg’ -printf ‘%’h’\'”0″ | xargs -0 -I ‘{}’ mkdir -p /mnt/hda1/test/{} \;
"Find and uncompress all files in the current directory tree ending in "".csv.gz""",find . -name '*.csv.gz' -print0 | xargs -0 -n1 gzip -d
"Find all directories that do not contain ""main.cpp""",diff <(find . -exec readlink -f {} \; | sed 's/\\/.*$/\1/' | sort | uniq) <(find . -name main.cpp  -exec readlink -f {} \; | sed 's/\\/.*$/\1/' | sort | uniq) | sed -n 's/< \/\1/p'
Find all .txt files in the /home/user directory tree and copy them to /home/backup,find /home/user -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents
"Remove all files in the current directory tree that have the name ""abc.xxx""",find . -name abc.xxx -exec rm {} \;
"Find all files matching ""abc*"" in the current directory and append a column with ""OK""",find . -name 'abc*' -exec echo {}' OK' \; | column -t
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,find . -name foo.mp4 -printf '%h\n'
Delete the files under the current working directory with inode numbers specified on standard input,"xargs -n 1 -I '{}' find ""$"" -type f -inum '{}' -delete"
Counts all files in a current folder and subfolders.,find -type f -printf '\n' | wc -l
Print content of all files ending with '*.foo' in current directory recursively,find . -name '*.foo' -exec cat {} \;
Find all empty directories under current directory,find . -type d -empty
display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled.,find / -type f \( -perm -4000 -o -perm -2000 \) -exec ls -l {} \;
Recursively find all files ending with '*.txt' and print they names and content,find  . -name \*.txt -print -exec cat {} \;
remove all the regular/normal files in the temp folder and do not delete in the sub folders,find /tmp -maxdepth 1 -type f -delete
display the count of all the files in the current folder,find . -print | wc -l
"Search the current directory tree for files whose names end in ""rb"" or ""js""","find . -name ""*js"" -o -name ""*rb"""
create a backup of all the files in the file system which belong to the suer edwarda to the floppy,find / -user edwarda -print | cpio -ovBc > /dev/rfd0
"Recursively search for everything under the current directory, displaying human-readable file type description for each entry.",find . -exec file {} \;
List files smaller than 9kB residing in the current directory and below,find . -size -9k
Find all *.bmp files in the current directory tree and convert them to the JPEG format,find -name *.bmp -type f -exec convert '{}' '{}'.jpg \;
Get the disk space used by all *.txt (case insensitive) files/directories under folder 1 and folder2,find folder1 folder2 -iname '*.txt' -print0 | du --files0-from - -c -s | tail -1
Find all directories under $path,find $path -type d
search for files in current folder using name patterns,"find . -name ""S1A*1S*SAFE"""
find all regular file and create jw-htmlfiles.tar,"find . -type f -name ""*html"" | xargs tar cvf jw-htmlfiles.tar -"
"Find files named ""AssemblyInfo.cs"" in the current directory and below, and run ""git diff --name-status"" on them",find . -name AssemblyInfo.cs | xargs git diff --name-status --
Get a two column list of all regular .rb files residing in the current directory tree,"find . -name ""*.rb"" -type f -print0 | xargs -0 -n 2 echo"
Find all empty files in /tmp,find /tmp -type f -empty
Find all files/directories under current directory and print their paths,find . -exec echo {} \;
Check if a specific directory exists and has the correct owner and group recursively.,"#!/bin/bash

directory=""/path/to/directory""
owner=""owner""
group=""group""

if [ -d ""$directory"" ] && [ $(find ""$directory"" ! -user ""$owner"" -o ! -group ""$group"") ]; then
    echo ""Directory exists with correct owner and group""
else
    echo ""Directory does not exist or has incorrect owner or group""
fi"
"Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict'",find . -name '*.pl' | xargs grep -L '^use strict'
Find all 400 permission files under /data directory and print 'Modifying ' appended with file path for each of them,find /data -type f -perm 400 -exec echo Modifying {} \;
search for all the regular files in the folder /home which have the permission 077,find /home -type f -perm 0777 -print
"remove all ""Foo*"" files under current dir","find . -type f -name ""Foo*"" -exec rm {} \;"
"find the file ""httpd.log"" in the folder /home/web-server/",find /home/web-server/ -type f -iname httpd.log
Search the current directory tree for all files except SVN ones,"find .  ! -regex "".*[/]\.svn[/]?.*"""
Count the number of all directories under directory '/mount/point' non-recursively,find /mount/point -maxdepth 1 -type d | wc -l
Prints line count of each file within current directory.,find . -type f -print0 | xargs -0L1 wc -l
"Recursively finds files like 'example.com', ignoring case differences, and filters out files with 'beta' in path.",find -iname example.com | grep -v beta
Recursively find all files ending with '*.txt' and print they names and content,find  . -name \*.txt -print -exec cat {} \;
display all the normal/regular files in the current folder which are empty,find . -type f -empty
"Move all files matching case insensitive "".cpp"" in the current directory tree to ""./test/""",find . -type f -iname '*.cpp' -exec mv -t ./test/ {} \+
use find -exec with multiple commands,"find . -name ""*.txt"" -exec echo {} \; -exec grep banana {} \;"
Perform case insensitive search for *.gif files/directories under downloads directory,"find downloads  -iname ""*.gif"""
Recursively finds and compresses all files in a current folder with 4 parallel processes.,find . -type f -print0 | xargs -0 -n1 -P4 bzip2
Compress all files under /source directory tree using gzip with best compression method,find /source -type f -print0 | xargs -0 -n 1 -P $CORES gzip -9
Find all *.jpg files in */201111 paths,"find */201111 -name ""*.jpg"""
"Find files in the current directory tree whose names are of the form ""cxx_data.txt"" where xx is a number from 40 to 70","find . -regextype posix-egrep -regex ""./c(|70)_data.txt"""
display all the doc files in the current folder,find . -name '*.doc'
Rename all .jpg files to .jpeg under the current directory and below,find  | rename 's/\.jpg$/.jpeg/'
"search for the file in the entire file system which has the words ""filename"" in its name",find / -name ”*filename*”
Find all php files that belong to user 'takuya' and have been modified in the last 1 day,find -user takuya -name '*.php' -daystart -mtime -1
search for the file filename in the entire file system,find / -name filename
"Search the /root directory recursively for the regular file named ""myfile"" ignoring ""work"" directories",find /root/ -name 'work' -prune -o -name myfile -type f -print
find directories  that have been modified in the last seven days,find . -mtime -7 -type d
find all log files larger then 100MB  in /home directory and delete them .,find /home -type f -name *.log -size +100M -exec rm -f {} \;
Find an inode and remove,find . -inum 968746 -exec rm -i {} \;
find all the files under '/usr/local' directory tree which have been modified exactly 24 hours ago,find /usr/local -mtime 1
Find all files in the current directory tree and count them,find | wc -l
"Search regular files from the /path/to/dir directory tree for lines that contain ""_START"" and are enclosed in lines ""@GROUP"" and ""@END_GROUP""","find /path/to/dir -type f -exec sed '/@GROUP/,/@END_GROUP/!d' {} \; | grep '_START'"
Count the number of total files and folders under current directory tree,find . -print0 | tr -cd '\0' | wc -c
find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits.,"find . — name ""[a‑z][a‑z][0—9][0—9].txt"" — print"
"show all the files in the current folder excluding those from the directories whose name starts with ""git""",find . -type d -name '.git*' -prune -o -type f -print
display all the text files in current folder,"find . -name ""*.txt"" -printf ""%f\n"""
"Search through the /usr directory for all files that begin with the letters Chapter, followed by anything else.","find /usr -name ""Chapter*"" -type f"
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8,find sort_test -type f | env -i LC_COLLATE=en_US.UTF-8 sort
Locate all *.txt files in the current directory tree,"find . -name ""*.txt"""
Search the /home/pankaj directory for regular files whose status has changed within the last 5 minutes,find /home/pankaj -maxdepth 1 -cmin -5 -type f
display all the files in the current folder that have been modified in the last 24 hours,find  -mtime -1
Remove all *.tmp files from the /tmp directory tree,"find /tmp -name ""*.tmp"" | xargs rm"
display all the php files in the entire file system,"find / -name ""*.php"""
"find all the regular/normal files in the current folder which belong to the user ""sedlav""",find . -user sedlav -type f
Delete all broken symbolic links under '/usr/ports/packages' directory tree,find -L /usr/ports/packages -type l -exec rm -- {}	+
change the permissions of al the directories in the current folder,sudo find . -type d -exec chmod 755 {} +
Find all files under current directory and show their file information,find . -type f -exec file {} \;
"Search for ""Stock"" in all *.java files from the current directory tree","find . -name ""*.java"" | xargs grep ""Stock"""
Find all *.txt and *.json files in current directory,find . -type f \
"search for all the files ending with ""fits"" in the folder ""/store/01""","find /store/01 -name ""*.fits"""
Find all files/directories in entire file system more than 700 Megabytes,find / -size +700M
List all files/directories under current directory and redirect it to /tmp/files.txt,find . -ls > /tmp/files.txt
"Search the specified group for the given ""filename","find / -group users -iname ""filename"""
"List all .c and .h files in the current directory tree that contain ""thing""",find . -name '*.[ch]' | xargs grep -l thing
Search the home directory tree for files modified less than a day ago,find $HOME -mtime -1
find files in home directory which are modified yesterday,find ~/ -daystart -type f -mtime 1
Find all files under current directory,"find ""`pwd`"" -type f"
Delete all files with inode number 804180,find -inum 804180 -exec rm {} \
search for all the files in current folder and display all the file names separated by space,"find . | paste -sd "" """
list all links from / that point to nothing,find / -type l -print | perl -nle '-e || print';
find all the python files in the current folder and save the list to the file output.txt,"find . -name ""*.py"" -type f > output.txt"
Find all directories under htdocs directory and set their permission to 775,find htdocs -type d -exec chmod 775 {} +
Replace all ocurrences of '<title>' with 'sblmtitle\n<title>' in all the regular files with '.html' extension under current directory tree,find ./ -type f -name '*.html' | xargs sed -i 's/<title>/sblmtitle\n<title>/g'
Find all the files in entire file system  which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning,find / -mtime +50 -mtime -100 | head
"Find all files whose names end with ""~"" in the /home/peter directory tree, following symlinks, and delete them",find -L /home/peter -name *~ |xargs rm
Find all directories in the current directory tree that are not accessible by all,find -type d ! -perm -111
search for all the .o files in the current directory which have permisssions 664 and print them.,find . -name *.o -perm 664 -print
remove all the core files in the current directory,"/bin/find -name ""core"" — exec rm {} \;"
Find all *.plist files/directories under current directory,"find ./ -name ""*.plist"""
Find all README's in /usr/share,find /usr/share -name README
Search in the current directory and all sub-directories except ./D for the file hi.dat using the extending file-globbing features of the shell.,shopt -s extglob find ! -name hi.dat
delete all the regular files in the temp folder which have not been modified in the last 24 hours,find /tmp/ -type f -mtime +1 -delete
Print a list of all duplicate case insensitive filenames in the current directory tree,find . -type f | awk -F/ '{print $NF}' | sort -f | uniq -i -d
"Remove all files and directories in the /home directory tree whose names are ""Trash""",find /home -name Trash -exec rm {} \;
search for a word in all the files in the current directory,find . -type f -exec grep 'needle' {} \;
Find recursively all files under current directory tree that contain a colon in the filename,find . -name \*\:\*
Remove all libEGL* files from the current directory tree,find . -name libEGL* | xargs rm -f
Find all *.ogg  files/directories under your home directory,find $HOME -iname '*.ogg'
Search subdirectory `Linux' in the current directory for file `teste.tex',find -path './Linux/*' -name teste.tex
display all the normal/regular files in the directory FOLDER1,find FOLDER1 -type f -print0
search for a shell script in the current folder and display the current folder path,find . -name onlyme.sh -exec pwd \;
Search the /media/shared directory recursively for MP3 and OGG files,find /media/shared \
"find all directories in the current directory which have the name foo and do not have the extension ""bar""",find . -name '*foo*' ! -name '*.bar' -type d -print
Search for 'string' case insensitively in all files under current directory tree and show the matched lines with their filenames,"find . -name * | xargs grep -iH ""string"""
Find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex 'foo=' in their contents,"find . -not -name '*.png' -o -type f -print | xargs grep -icl ""foo="""
Find all directories under present working directory,find $PWD -type d
search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday,"find /nas/projects/mgmt/scripts/perl -mtime 1 -daystart -iname ""*.pl"""
"Set permissions to ug=rwx,o= for directories inside the ./default/files tree","find ./default/files -type d -exec chmod ug=rwx,o= '{}' \;"
Find all files/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes,find /var/log/crashes -name app-\*\.log -mmin -5
Find all *shp* files/directories under current directory,find . -name '*shp*'
Find files in the current directory tree whose size is less than 24000 bytes,find . -size -24000c
"search for all the files ending with "".bak"" in current folder which have not been accessed in the last 30 days and delete the file it it exists",find . -name '*.bak' -type f -atime +30 -exec csh -c 'test -s $1:r && rm $1' '{}' ;
Find all *.mp4 files under /working,find /working -type f -name '*.mp4'
Delete all empty directories under test directory,find test -depth -type d -empty -delete
find all the normal/regular files in /etc/sysconfig which have been accesses in the last 30 minutes,find /etc/sysconfig -amin -30 -type f
Count the number of directories in the current directory and below,find . -type f -exec basename {} \; | wc -l
find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday),find . -type f -daystart -mtime 1
find all files in a  directory with default depth size and compress them to lpicpio.2 file,find ~/lpi103-2/ -depth -print0 | cpio --null -o > ../lpicpio.2
Print content of all files found regarding seach options '[whatever]',find [whatever] -exec cat {} +
"find all the "".c"" files in the folder ""/home/you"" which have been accessed in the last 30*24 hours","find /home/you -iname ""*.c"" -atime -30 -type -f"
Delete all .svn files/directories under current directory,find . -name .svn |xargs rm -rf
Find all files that were last modified less than7 days ago under /home,find /home -mtime -7
Find all *.$input_file_type files/directories under $source_dir,"find ""$source_dir"" -name *.$input_file_type"
"Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to ""compressedP.list"", and compress no more than 10 at a time",find . -type f  -mtime +7 | tee compressedP.list | xargs -I{} -P10 compress {} &
Search the current directory and all of its sub-directories for the file 'file1'.,find . -name file1 -print
"Find all .rb and .yml files in the /some/path directory tree and replace ""some_phrase"" with ""replacement_phrase"" in them","find /some/path -name ""*rb"" -o -name ""*yml"" | xargs grep -sl ""some_phrase"" | xargs sed -i -e 's/some_phrase/replacement_phrase/g'"
List all files in /var/www and below that have changed in the last 10 minutes,"find /var/www -cmin -10 -printf ""%c %pn"""
Search the /tmp tree for files between 10kb and 20kb,find /tmp -size +10k -size -20k
Find all files that are set user ID to root,find . -user root -perm -4000 -print
Find all hidden (regular) files under /tmp,"find /tmp -type f -name "".*"""
Find all directories under 'test' directory tree that match the regex '[course*]' in their paths,"find test -regex ""[course*]"" -type d"
Search the home directory tree for video files,find ~ -type f -name '*.mkv' -o -name '*.mp4' -o -name '*.wmv' -o -name '*.flv' -o -name '*.webm' -o -name '*.mov'
change the permission of all php files in current folder,"find . -name ""*.php"" -exec chmod 755 {} \;"
delete all normal/regular files in the current folder which are empty,find . -type f -empty -delete
Get the total sizes of all files under current directory,find . -type f -printf '%p %s\n' | awk '{ sum+=$2}; END { print sum}'
List all files/directories under current directory using comma  as the delimiter for different fields in the output,"find . -ls|awk 'BEGIN{OFS="",""}$1=$1'"
search for mp3 files in the folder /mp3collection which are smaller than 5MB,find /mp3collection -name '*.mp3' -size -5000k
Execute md5sum command on files found by the find command,"find -iname ""MyCProgram.c"" -exec md5sum {} \;"
"Find all files/directories with '.xml' extension that start with 'log4j' in their names under '/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/' directory tree, search for files that contain the string 'CONSOLE' in their contents, then search for the string 'ASYNC' in the matched files and display the matched lines along with their filenames","find ""/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/"" -iname ""log4j*.xml"" | xargs -I % grep -ilr ""CONSOLE"" ""%"" | xargs -I % grep -H ""ASYNC"" %"
Find all regular files named 'Chapter1' under current directory tree,find . -name Chapter1 -type f -print
"Find all files in /tmp whose names begin with the current user's name followed by "".""","find /tmp -maxdepth 1 -name ""$USER.*"""
Find files/directories named 'file.txt' in the path '/usr/lib/important/',find / -path /usr/lib/important/*/file.txt
"Search the ""data"" directory tree for files matching pattern 'filepattern-*2009*' and save the result as 'filesOfInterest.txt'",find data/ -name filepattern-*2009* -print > filesOfInterest.txt
find all the xml files in the current folder which are present in the pattern text file,"find . -name ""*.xml"" -exec grep -HFf <(find . -name ""*.txt"" -printf ""%f\n"") {} \;"
display long listing of all files in the current directory whose size is 24 or 25 bytes  .,find . -size -26c -size +23c -exec ls -l '{}' \;
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them beginning with USE_RC_SUBR,find /usr/ports/ -name Makefile -exec grep ^USE_RC_SUBR '{}' '+' | wc -l
Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory,"find ""$path_to_folders"" -name 'm?' -type d -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \; -exec sh -c ""mv {}.mbox/*.emlx {}.mbox/Messages"" \;"
display all the files in the folder /home which do not belong to the group test,find /home ! -group test
"display all the files in the entire file system which begin with ""apache-tomcat""","find / -name ""apache-tomcat*"""
Find all PHP files under current directory that contain only one line,"find . -type f -name '*.php' -exec wc -l {} \; | egrep ""^\s*1\s"""
Find directories in the current directory (no sub-directories) and print them appended with a string literal 'Directory: ',"find . -maxdepth 1 -type d -print | xargs  -I ""^"" echo Directory: ""^"""
Find all files/directories under '/home/exampleuser/' directory tree whose names end with 'conf' and were modified exactly 3 days ago,"find /home/exampleuser/ -name ""*conf"" -mtime 3"
Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here,find root -name '*.rmv' -type f -exec cp {} /copy/to/here \;
Find all *.ogg files under the home directory ignoring the case,find $HOME -iname '*.ogg'
Find all files/directories with '.what_to_find' extension under current directory tree and show the list by excluding paths that contain 'excludeddir1' and 'excludeddir2',find . -name '*.what_to_find' | grep -v exludeddir1 | grep -v excludeddir2
Find all files under current directory with 755 permission and change their permission to 644,find . -type f -perm 755 -exec chmod 644 {} \;
Display the number of lines in all regular files under current directory tree and also show the total count,find . -type f -exec wc -l {} +
"Find all files named ""file.ext"" within the current folder and print the path where each one is located","find `pwd` -name ""file.ext"" -exec dirname {} \;"
find and image in current folder (case insensitive search),"find . -iname ""Articles.jpg"""
display all the files in the current folder which are in the path ending with the folder f,find .  -path '*f'
Calculate the total size of all *.jpg files in the directory tree,"find . -type f -iname ""*.jpg"" -ls | awk 'BEGIN {print ""0""}; {print $7, ""+""}; END {print ""p""}' | dc"
Recursively changes group ownership of every folder in a current directory to the name of that folder.,"find . -type d | sed -e 's/^\.\///g' -e 's/^\./avoid/g' | grep -v avoid | awk '{print $1""\t""$1}' | xargs chgrp"
Find files and directories newer than CompareFile under current directory,find . -newer CompareFile -print
Find files owned by no group,find / -nogroup
display ten files in the tmp directory,find /tmp  | head
display all the regular/normal files in the home folder that have been modified in the last 1 day,find ~/ -daystart -type f -mtime 1
Find all files in the home directory with open permissions,find ~ -perm 777
Find all regular files that start with stat,find . -type f –iname stat*
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,find . -name foo.mp4 -exec dirname {} \;
Delete all files with '.old' extension under current directory tree,find . -name “*.old” -print | xargs rm
Find all regular files named postgis-2.0.0 under current directory,"find . -type f -name ""postgis-2.0.0"""
find all the files in the home folder which have been modified in the last 24 hours,find $HOME -mtime -1
Search /var for files matching regular expression '.*/tmp/.*[0-9]*.file',find /var -regex '.*/tmp/.*[0-9]*.file'
"Search for all files in the current directory recursively whose names begin with ""Linkin Park""","find . -name ""Linkin Park*"""
display the list of all the normal files excluding hidden files which have been accessed in the last 500 days,find . -type f -not -name ‘.*’ -mtime +500 -exec ls {} \;
Find all the files/directories under user's home directory that do not belong to the user $USER,find ~ ! -user ${USER}
find all files in current folder which have been accessed exactly 10 minutes ago,find . -amin 10
Search for '“foobar”' in all files starting with '‘' and ending with '’' and contain '.' in their names in the entire filesystem and display only the matched files,find / -name ‘*.*’ -exec grep -il “foobar” {} \;
Print '-exec is an action so an implicit -print is not applied' for every file/directory found by the name 'file' under current directory tree,find -name file -exec echo '-exec is an action so an implicit -print is not applied' \;
Remove files in the current directory tree modified more than 31 days ago recursively,find . -type f -mtime +31 -print0 | xargs -0 -r rm -f
"add read,write permissions to all the files in the current folder which have the permission 600",find . -perm 600 -print | xargs chmod 666
Find how many directories are in a path,find . -type d -exec basename {} \; | wc -l
Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree,"find  /root -type f -iname ""*linux*"""
"search for the file, filename.txt in the folder /home",find /home -name filename.txt
"Find all files/directories in entire file system that have  ""write"" bit set for either the owner, the group, or others",find / -perm /a+w
Create script filesPermissions.sh that restores the original permissions of the regular files in the current directory tree,"find . -type f | xargs stat -c ""%a %n"" | awk '{print ""chmod ""$1"" ""$2}' > ./filesPermissions.sh"
"Find all *.c files under and below the current directory that contain ""wait_event_interruptible""",find . -name \*.c -print0 | xargs -0 grep wait_event_interruptible /dev/null
display all the files in the file system which are changed a minute ago,find / -newerct '1 minute ago' -print
Process all files matching pattern 'file*' and residing in the xargstest/ directory tree with script `myscript.sh',find xargstest/ -name 'file*' -print0 | xargs -0 myscript.sh
Find all files that belongs to group 'root' under / directory and show a few lines of output from the beginning,find / -group root | head
"force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name","find . -name ""*.c"" -print0 | xargs -0 rm -rf"
Search everywhere for hidden file `.profile',find / -name .profile
Find all empty files (zero byte files) in your home directory and its sub-directories.,find ~ -empty
find all gif files in the file system,"find / -name ""*gif"" -print"
Find files that are writable by both the “other” and the group,find plsql -type f  -perm -220 -exec ls -l {} \; 2>/dev/null
"display list of all the hidden directories in the directory ""/dir/to/search/""","find /dir/to/search/ -type d -iname "".*"" -ls"
Find *.html files in the current directory tree that were modified 7 days ago,"find . -mtime 7 -name ""*.html"" -print"
"Print the commands that would execute ""myfile"" on all .ogv files from the current directory tree",find ./ -name *.ogv -exec echo myfile {} \;
find all the files in the entire file system that have been modified between 50 to 100 days and display ten files,find / -mtime +50 -mtime -100 | head
"find all files in the file system having the name ""filename""","find / -iname ""filename"""
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories,find . -name foo.mp4 | sed 's|/[^/]*$||'
Find all .gz archives in the current directory tree and check if they are valid,find . -name '*.gz' | xargs gunzip -vt
Find all files/directories in maximum 1 level down the current directory which do not have only read permission for 'other',find . -maxdepth 1 ! -perm  -o=r
display all the files in the file system which belong to no user,find / -nouser -print
Exclude directory from find . command,find build -not \ -name \*.js
Change permissions to 700 for directories at the current level and deeper,find . -mindepth 1 -type d | xargs chmod 700
"Find the directories whose names contain ""New Parts"" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views","find -mindepth 3 -maxdepth 3 -type d -name ""*New Parts*"" -exec ln -s -t /cygdrive/c/Views {} \;"
display a long listing of all the files in the current folder,find . — type f -exec ls -1 {} \;
Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days,find /var/tmp/stuff1 -mtime +90 -delete &
Find all *.rb files/directories under current directory,find . -name \*.rb
Change permissions to 644 for *.html files under /usr/local,"find /usr/local -name ""*.html"" -type f -exec chmod 644 {} \;"
Find all files under /path/to/dir that were modified less than 7 days ago and show only first several lines of output,find /path/to/dir -type f -mtime -7 -print0 | xargs -0 ls -lt | head
List the directory paths of all file.ext files under present working directory,"find $PWD -name ""file.ext"" -exec sh -c 'echo $' ';'"
find all the files that have been modified in the last 60 minutes,find -mmin -60
Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree,find -type f  |  grep -P '\w+-\d+x\d+\.\w+$' | sed -re 's/(\s)/\\\1/g' | xargs rm
"Move all files from the current directory to ""targetdirectory""","find . ! -name . -prune -exec sh -c 'shift $1; mv ""$@"" targetdirectory/' 2 1 {} +"
Find all *shp* files/directories under current directory,find . -name '*shp*'
keep only read access to all the files in a directory.,find /path/to/dir/ -type f ! -perm 0644 -print0 | xargs -0 chmod 644
Find the total size of *.jpg files within the directory tree ./photos/john_doe,find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$
Search the file system for regular files whose names are shorter than 25 characters,"find / -type f -regextype posix-extended -regex '.*/.{1,24}$'"
Find files/directories that isn't owned by the user 'apache' under /var/www,find /var/www ! -user apache -print0 | xargs -0
find all files & dircetiry in current directory which  have .tmp extension and delete them .,"find . -type f -name ""*.tmp""  -exec rm -rf {} \;"
Find all read only files in  /home directory,find /home -type f -perm /u=r
"Find all directories named ""nasa""",find . -name nasa -type d
Find all *.java files under current directory,"find . -name ""*.java"""
"Find ""$i"" files under current directory and search for ""$SrchStr"" in those files","find . -name ""$i"" -type f -print | xargs egrep -n ""$SrchStr"" >/dev/null"
Find all regular non-hidden files in the current directory and its subdirectories,"find . -not -path '*/\.*' -type f \( ! -iname "".*"" \)"
remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder.,"find . -name '*[+{;""\\=?~<>&*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;"
Find recursively the latest modified file in the current directory,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" "" | sed 's/.*/""&""/' | xargs ls -l"
Run the find command with all shell positional arguments,"`which find` ""$@"" -print0;"
Delete all the .c files present in the current directory and below,"find . -name ""*.c"" | xargs rm -f"
find all the html files in current folder and replace some pattern in all these files,"find -type f -name '*.htm' -printf '%P\0%f\0' | xargs -0 -n2 sh -c 'fil=""${2/\.htm/}""; sed -i -e ""s;<title>.*</title>;<title>$fil</title>;"" $1' replace"
Find all *.txt files/directories under current directory and execute process_one for each of them,"find . -name ""*.txt -exec process_one {} "";"""
"display all normal/regular files in the folder ""pathfolder""",find pathfolder -type f
find all the swap files (files ending with ~) in the current folder and delete them,"find . -name ""*~"" -exec rm {} \;"
"Find all directories named CVS, and deletes them and their contents.",find . -type d -name CVS -exec rm -r {} \;
delete all files in $DIR that have not been accessed in at least 5 days,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
"Get the number of ""use"" statements in all PHP files, ordered","find . -type f -name ""*.php"" -exec grep --with-filename -c ""^use "" {} \; | sort -t "":"" -k 2 -n -r"
find .bmp or .txt files,find /home/user/Desktop -name '*.bmp' -o -name '*.txt'
"Find regular files named ""expression -or expression"" under and below /dir/to/search/",find /dir/to/search/ -type f -name 'expression -or expression' -print
"remove all the files in current folder which have the extension ""DS_Store""","find . -name "".DS_Store"" -exec rm {} \;"
Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here,"find root -name '*.rmv' -type f -exec cp --parents ""{}"" /copy/to/here \;"
Print 'Since -printf is an action the implicit -print is not applied\n' for every file named 'file' found under current directory tree,find -name file -printf 'Since -printf is an action the implicit -print is not applied\n'
"show the sum of disk used by all the files that belong to the user ""test1"" in the entire file system",find / -user test1 -exec du -sm {} \;|awk '{s+=$1}END{print s}'
List the largest file prefixed by its size in bytes of all files under the current directory,find . -type f -name '*.gz' -printf '%s %p\n'|sort -nr|head -n 1
"Search the /home/sdt5z/tmp directory tree for files named ""accepted_hits.bam""","find /home/sdt5z/tmp -name ""accepted_hits.bam"""
delete all the backup files in current directory,"find . -name ""*.bak"" -delete"
Find all empty files in the current directory and delete them,find . -empty -maxdepth 1 -exec rm {} \;
"find all regex ""./[a-f0-9\-]\{36\}\.jpg"" files","find . -regex ""./[a-f0-9\-]\{36\}\.jpg"""
Print the file paths and their sizes for all files under full_path_to_your_directory,find full_path_to_your_directory -type f -printf '%p %s\n'
List all *jsp and *java regular files found in the current directory tree,find . \ -type f -ls
Find all *.txt files/directories under current directory,"find . -name ""*.txt"""
find all files in the file system which are modified after the file /tmp/checkpoint,find / -newer /tmp/checkpoint
"Find CSS files omitting results containing ""CVS""","find . \! -path ""*CVS*"" -type f -name ""*.css"""
"Give rwx permissions to the user and group of the directory named ""files"" leaving others without any privileges","find . -type d -name files -exec chmod ug=rwx,o= '{}' \;"
"Find files named core in or below the directory /tmp and delete them. Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces.",find /tmp -name core -type f -print | xargs /bin/rm -f
Create a gzip archive file ($tarFile) of all *.log files under $sourcePath,"find $sourcePath -type f -name ""*.log"" -exec tar -uvf $tarFile {} \;"
"Remove files from the file system that are owned by nobody, asking the user before each removal",find / -nouser -ok rm {} \;
list regular file which file name is NOT end with '.html' in current directory in current directory,"find . -type f -not -name ""*.html"""
Find all files/directories with 664 permission under current directory tree,find -perm 664
List all regular files in entire file system,find / -type f -exec echo {} \;
Find all symbolic links under current directory that are not hard links,find . -type f -links 1 -print
"Find all files on the system whose names are 'composer.json' and search them for ""drush""",find / -name composer.json -exec grep -n drush {} /dev/null \;
List all regular files in and below the home directory that have been modified in the last 90 minutes,find ~ -type f -mmin -90 | xargs ls -l
"Search the CSS files found in the current directory tree for string ""foo""",find . -name \*.css -print0 | xargs -0 grep -nH foo
Find all directories by the name `httpdocs' on the system,find / -type d -name 'httpdocs'
Recursively removes all files and folders named '.svn' in a current folder.,find . -name .svn -exec rm -rf {} \;
replace a word in all the regular/normal files in the current folder(doesn't actually modify the original file just displays the replaced text),find . -type f -print0 | xargs -0 sed -i 's/Application/whatever/g'
List all regular files in and below the home directory that were modified more than 5 years ago,find ~ -type f -mtime +1825 |xargs -r ls -l
list all files in /home/bozo/projects directory tree that were modified within the last day,find /home/bozo/projects -mtime -1
Count the number of all directories under directory '/mount/point' non-recursively,find /mount/point -maxdepth 1 -type d | wc -l
Rename all *.html files under and below the current directory to *.var,find -name '*.html' -print0 | xargs -0 rename 's/\.html$/.var/'
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*',find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;
display a long list of all regular/normal files in the file system which belong to the root and with suid bit set,find / -type f -user root -perm -4000 -exec ls -l {} \;
Find all *.txt file and replace old word to new word with sed command,"find  . -type f -name ""*.txt"" -exec sed 's/TZ/MALAWI/g' {} \;"
Delete all MP3 files under /tmp,find /tmp -iname '*.mp3' -print0 | xargs -0 rm
unzip all zip files in current folder,find -name '*.zip' | xargs -n 1 unzip
Remove with prompting all files starting in /mydir that have not been accessed in over 100 days,find /mydir -atime +100 -ok rm {} \;
"display all symbolic links in the folder ""myfiles"" and follow them",find -L /myfiles
Find all files/directories under 'A' directory tree excluding the paths containing the directory 'a',"find A \! -path ""A/a/*"""
Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.,"find . -name ""*.php"" | xargs wc -l"
display all the html files in the current folder,"find . -name ""*.html"" -print"
find all html or cgi files in current folder,"find ./ -type f -iregex "".*\.html$"" -or -iregex "".*\.cgi$"""
Find all files/directories under $dir directory,"find ""$dir"""
search for the word error in all the xml files in the current folder,"find . -name ""*.xml"" -exec grep ""ERROR"" /dev/null '{}' \+"
Display all regular files under current directory tree ignoring files in './dir1' and './dir2' directories,find . -type f |sed '/.\/dir[12]\/[^/]*$/d'
display the count of total number of text files in the folder /home/you which have been modified in the last 60*24 hours,"find /home/you -iname ""*.txt"" -mtime -60 | wc -l"
"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","find $1 -name ""$2"" | grep -v '/proc' | xargs grep -Hn ""$3"" {} \;"
Open all .c files in the current directory tree in the vim editor,"find . -name ""*.c"" -print | vim -"
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir,find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.,find -type d -name a -exec rmdir {} \;
Find all xml files under current directory and archive them to .bz2 archives,find -name \*.xml -print0 | xargs -0 -n 1 -P 3 bzip2
Find all directories whose status were changed $FTIME days ago,find . -type d -ctime $FTIME
Find all .txt files except README.txt,"find . -type f -name ""*.txt"" ! -name README.txt -print"
Find all files/directories containing 'blah'  in their names that were modified in less than 2 days ago uder current directory tree,find . -iname '*blah*' -mtime -2
Find all files/directories named 'query' (case insensitive) under current directory tree,"find -iname ""query"""
Rename all *.jpg files to *.jpg$.jpg files under ../<dirname>  directory by appending the parent directory name at the beginning of their names,"find ../<dirname> -name '*.jpg' -exec sh -c 'mv ""$0"" ""$(basename $)-${0%.JPG}$.jpg""' {} \;"
Show version information of the find utility,find -version
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -mmin -60 -type f | xargs ls -l
change the directory to the last found folder in the directory 'a',cd `find a |sed '$!d'`
display all the files in the entire file system which are bigger than 10MB,find / -size +10000k
"display list of all the hidden directories in the directory ""/dir/to/search/""",find /dir/to/search -path '*/.*' -ls
Get the list of files owned by <userid>,find . -user <userid>
List all files in the current directory tree larger than 1000 kb,find . -size +1000k
find all the files in the current directory and print them excluding those that have the name SCCS.,find . -print -o -name SCCS -prune
display ten files in the current directory,find | head
Find all files/directories named 'date' under /usr,find /usr -name date
Find all executable files under the current directory and below,find . -perm /a=x
"search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file ""files.secure"".",find / \ -print | diff - files.secure
"find all the files in the current directory that have the word ""bash"" in their name","find . -name ""*bash*"""
Find files/directories writable by group or others under the /path directory,"find /path -perm /g+w,o+w"
Find all  'custlist*' files under current directory,find . -name custlist\*
"Find all files/directories under current directory excluding the paths that match the POSIX extended regex "".*def/incoming.*|.*456/incoming.*""","find . -regex-type posix-extended -regex "".*def/incoming.*|.*456/incoming.*"" -prune -o -print"
Search the .java files from the /Applications/ directory tree for TODO lines,"find /Applications/ -name ""*.java"" -print0 | xargs -0 grep -i ""TODO"""
display list of all the files in the /tmp folder,"find /tmp/ -exec ls ""{}"" +"
"display all the files only in the path ""./sr*sc""","find . -path ""./sr*sc"""
"Find files in the current directory tree whose names are of the form ""cxx_data.txt"" where xx is a number from 30 to 70",find . -regextype posix-egrep -regex '.\*c.\*'
"replace ""exp_to_find_for_replacement"" with ""exp_to_replace"" for all the files in the current folder",find -name ‘*exp_to_find_in_folders*’ -exec rename “s/exp_to_find_for_replacement/exp_to_replace/” {} \;
"Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding ""*""  before it's passed to find.",find . -name \*.pdf -print
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D',find /usr/ports/ -name pkg-plist\* -exec grep 'unexec.rmdir %D' '{}' '+' | wc -l
"Update the archived copy of the home directory, ""alldata.tar""",find ~/ -newer alldata.tar -exec tar uvf alldata.tar {} ;
Find and print the names of all files found in the current directory and all of its sub-directories.,find . -print
Locate all files named 'restore.php' in the current directory and 3 levels below,find . -maxdepth 4 -name 'restore.php'
find all the html files in the current folder and replace the end of each line with a pattern,find ./ -type f -name '*.html' | xargs sed -i '$s/$/<\/description>/'
Find all *.mp4 files under /foo/bar and move them to /some/path,find /foot/bar/ -name '*.mp4' -exec mv -t /some/path {} +
Find `string' in all *.java files ignoring the case of that string,"find . -type f -name ""*.java"" -exec grep -il string {} \;"
Find broken symlinks,"find ./ -follow -lname ""*"""
"Search the current directory tree for regular files lacking read permissions for user, group, or others",find . -type f ! -perm -444
"Find the files that have ""644"" permissions and modify them to have ""664"" permissions",find . -type f -perm 644 -exec chmod 664 {} \;
display a long listing of all the directories in current directory,find . -type d -ls
"Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/",find arch/x86/usr/sbin arch/x86/usr/X11R6/bin usr/sbin/ -type f | xargs chmod a+x
Get a two column list of all regular .rb files residing in the current directory tree,"find . -name ""*.rb"" -type f -print0 | xargs -0 -n 2 echo"
Find all the regular files in $DIR directory tree which have not been modified in the last 450 days and delete them,find $DIR -type f -mtime +450 -exec rm {} \;
Delete all files under $DESTINATION directory tree that were modified more than 7 days ago,find $DESTINATION -mtime +7 -exec rm {} \;
List all broken symlinks under the current directory with info on whether the links exist or not,find -L . -type l |xargs symlinks
find all the directories in the entire file system whose size is greater than 50KB,find / -type d -size +50k
find all the files in current folder which end with a speicifc regular expression and display their count,"find ./ -type f -regex "".*\.[JPGjpg]$"" | wc -l"
Find all files/directories ignoring *~ files/directories without descending into .snapshot directory with null character as the delimiter,find . -name .snapshot -prune -o \
Copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure,find . -type f -not -path '*/exlude-path/*' -exec cp --parents '{}' '/destination/' \;
"Find regular files under / that contain ""stringtofind"" and clear out their contents","find / -maxdepth 1 -xdev -type f -exec grep -i ""stringtofind"" -l {} \; -exec sed -i '/./d' {} \;"
"search for all the "".pyc"" files inthe current folder and remove them","find . -name ""*.pyc"" | xargs -i rm '{}"
Find all the files that were modified exactly one day ago,find . -mtime 1
Delete all files in the /myDir directory tree that were last modfied 7 days ago,find /myDir -mindepth 1 -mtime 7 -exec rm -rf {} \;
"display all the files in the folder ""/dev"" which belong to the user ""peter""","find /dev -user ""peter"" |more"
"Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg",find /Users/david/Desktop -type f \( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \)
List all files in the current directory tree that were last modified in March 2007,"find ! -newermt ""apr 01 2007"" -newermt ""mar 01 2007"" -ls"
Find all files under $dir,find $dir -type f
"Search the current directory recursively for files containing ""needle text""","find . -type f | xargs grep -I ""needle text"""
Find all executable upvoter-* files/symlinks under maximum 1 level down the {} directory,find {} -name 'upvoter-*' \ -maxdepth 1 -perm +111
Forcefully delete all files in the current directory,find . -name '*' | xargs rm
Count all the lines of all files with names ending with 'php' in current directory recursively,find -name '*php' | xargs cat | wc -l
find all text files in current folder and display all files that have the alphabet a in their name,"find . -name "".txt"" | grep a"
Print a list of symbolic links reachable from the current directory that do not resolve to accessible files,find -L. -type l
find all files in the current folder which have been accessed in the last 30 minutes,find . -amin -30
find all sqlite files in the current directory.,"find ./ -name ""*.sqlite"""
"For each .def file under the current directory, create an empty .def.out file with current timestamp.",find . -name '*.def' | sed 's/\/\1.out/' | xargs touch
List .conf files residing in the /etc/nginx/ directory tree,find /etc/nginx -name '*.conf' -exec echo {} ;
"Delete all empty directories in the ""test"" directory tree",find test -depth -type d -empty -delete
Search for 'text' in all regular files under current directory tree,"find . -type f -exec grep ""text"" {} /dev/null \;"
Remove all vmware-*.log files under current directory ensuring white space safety in filename,find . -name vmware-*.log -print0 | xargs -0 rm
Find and remove the file with inode number 782263 in the current directory tree,find . -inum 782263 -exec rm -i {} \;
display all the regular/normal files in the current directory which are atleast 2 levels deep,find . -mindepth 2 -type f
"find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files",find . -type f -ctime -3 | tail -n 5
"List the unique parent directories of all .class files found under ""/root_path""","find /root_path -type f -iname ""*.class"" -printf ""%h\n"" | sort -u"
"Removes all empty folders under path '/thepath', printing info message on each operation.",find /thepath -type d -empty -print0 | xargs -0 rmdir -v
Find all directories under current directory and change their permission to 500,find . -type d -exec chmod 500 {} \;
List all .svn files/directories under current directory,find . -name .svn -exec echo {} \;
Find *2011* files and grep for the string 'From: Ralph' in those files,find . -name '*2011*' -print | xargs -n2 grep 'From: Ralph'
Find broken links using the file command on each symlinks in the system and searching for the keword 'broken' with grep,find / -type l -print0 | xargs -0 file | grep broken
search for all html files in a folder and create a zip file of all these files,"find /your/path/ -type f -name ""*.html"" | xargs zip all_html_files.zip"
Find all files under /path and below writable by `group' or `other',"find /path -perm /g+w,o+w"
Find all files/directories with 'my key phrase' in their names under current directory and redirect the output to mylist.txt,find -name '*my key phrase*' > mylist.txt
display all the files in the current folder which have been modified between two dates,find . -newermt “Sep 1 2006” -and \! -newermt “Sep 10 2006”
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.,find . -perm 777  -mtime 0 -print
Get a sorted list of the longest line with line number for each file under current directory,"find . -iname '*.page' -exec awk '{if(length($0) > L) { LINE=NR;L = length($0)}} END {print L""|""FILENAME"":""LINE}' {} \; | sort"
Find things changed today,find /path/to/search -daystart -ctime -1
find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them,find . -type f -mtime 2 -mtime -3 -daystart -exec ls -l {} \;
find al the files which have been accesed in the last 6 days and display their details,find . -atime +6 -exec ll | more
"display all files ending with ""ini"" in current folder",find . -type f -name '*.ini'
"find all the normal/regular files in the folder ""pathfolder"" which are 2 levels deep, excluding all hidden files and display the count",find pathfolder -mindepth 2 -maxdepth 2 -type f -not -path '*/\.*' | wc -l
Look for files that have SUID or SGID set,find / -perm +6000 -type f
Find directories named `build',find . -type d -name build
"show all the "".acc"" files in the folder /home",find /home -type f -name '*.aac'
Find all files on the system that are world writeable,find / -perm -0002
"Find all directories named ""0"" in the current directory tree and create a tar archive of their RS* subdirectories","find . -type d -name ""0"" -execdir tar -cvf filename.tar RS* \;"
"search for pattern matched files in the current folder and subfolders exclude ""excluded path""","find ./ -type f -name ""pattern"" ! -path ""excluded path"" ! -path ""excluded path"""
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'
find all files in the current folder which have been modified after /etc/passwd,find -newer /etc/passwd
Append *.java files from the current directory tree to tar archive `myfile.tar',"find . -type f -name ""*.java"" | xargs tar rvf myfile.tar"
"force delete all the regular files with the name ""test.txt""",find /home -type f -name test.txt -exec rm -f {} \
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them,find ${userdir}/${i}/incoming -mtime +2 -type f -exec rm {} \;
Search the current directory tree for *.conf and *.txt files,"find . -type f \( -name ""*.conf"" -or -name ""*.txt"" \) -print"
Find all *.tex files/directories in maximum 2 levels down the current directory,find . -maxdepth 2 -name '*.tex'
Set permissions for all regular files under /var/www to 755,find /var/www -type f -print0 | xargs -0 chmod 644
Find all *.csv files under /foo/bar and move them to some_dir,find /foot/bar/ -name '*.csv' -print0 | xargs -0 mv -t some_dir
Find all files/directories under current directory that are greater than 10MB in size,find . -size +10M
display a long ilsting of all the files in the file system which are bigger than 1KB and which have not been modified in the last 30*24 hours,find / -size +1000 -mtime +30  -exec ls -l {} \;
Move all files from the `sourceDir' directory to the `destDir' directory,find sourceDir -mindepth 1 -maxdepth 1 -print0 | xargs -0 mv --target-directory=destDir
"Search the .css files in the /starting/directory tree for "".ExampleClass""",find /starting/directory -type f -name '*.css' | xargs -ti grep '\.ExampleClass' {}
find all the files in the entire file system that start with the word top and have 3 letters next to it.,find / -name 'top???'
display all regular/normal files in the folder Symfony,find Symfony -type f
Find all .sql files in the current directory recursively and print their path names separated by zeroes,find . -name '*.sql' -print0
Locate files not owned by any user or group,find / -path /proc -prune -o -nouser -o -nogroup
find all the files in the current folder which are writable,find . -writable
create a backup of all the files in the home folder on a partition and save the log to a file,find /home -depth -print | cpio -ov -0 /dev/rmt0 | tee -a tape.log
"display all files in the current folder which end with extension ""myfile"" followed by one digit or two digits","find . -\( -name ""myfile[0-9][0-9]"" -o -name ""myfile[0-9]"" \)"
Set 644 permission to all regular files under /path,find /path -type f -exec chmod 644 {} +;
"Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in "".log""","sudo find / -xdev -type f -size +100000 -name ""*.log"" -exec gzip {} \; -exec echo {} \;"
"Search all directories starting from the root directory for ""filename""","find / -iname ""filename"""
Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree,find /tmp -type f -name '*' -mtime +7 -print0 | xargs -0 rm -f
display a long listing of all the regular/normal files in the current folder along with their md5sum,"find . -type f -exec sh -c 'printf ""%s %s \n"" ""$"" ""$""' '' '{}' '{}' \;"
Find all the SGID files in the current directory tree,find . -perm /g+s
Search directory /Users/david/Desktop/ recursively for regular files,find /Users/david/Desktop/ -type f
find all '*.c' files under $HOME directory which context contains sprintf,find $HOME -name '*.c' -print | xargs grep -l sprintf
"find all the files starting with ""config"" in the folder Symfony",find Symfony -name '*config*';
Calculate md5 sum of the md5 sum of all the sorted files under $path,"find ""$path"" -type f -print0 | sort -z | xargs -r0 md5sum | md5sum"
Search for the files/directories that were modified more than an hour ago,find . -mtime +1
"Find all files in the level 6 subdirecotries of /usr/src and below, ignoring CVS files",find /usr/src -name CVS -prune -o -mindepth +6 -print
find all the files in the current folder and replace old string with new string,find . | xargs perl -p -i -e ‘s/something/else/g’
search for php files  in current directory and search for a word in all these files,"find -name '*.php' -exec grep -iq ""fincken"" {} \; -exec grep -iq ""TODO"" {} \; -print"
Find all files/directories under current directory bypassing file hierarchies in lexicographical order,find -s
"find foo, Foo, FOo, FOO, etc., but only dirs",find . -iname foo -type d
"display all files ending with ""ini"" in current folder",find . -type f -name '*.ini'
"Print the names and sizes of regular files residing in the ""tmp"" directory tree","find tmp -type f -printf ""f %s %p\n"" | awk '{sub(/^[^ ]+ +[^ ]/,sprintf)}1'"
find all the configuration files in the file system,"find / -name ""*.conf"""
find all files in the current folder that are not modified in the last 240 hours,find . -mtime +10 -print
Find all files/directories named file in minimum 4 levels down the current directory,find -mindepth 4 -name file
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory,find ${userdir}/${i}/incoming -mtime +2 -type f -ls
Find all files/directories with name pattern $nombre that are at most 2 levels down the $DIR_TEMPORAL and $DIR_DESCARGA directories and show only the file names  appended with '.torrent',"find ""$DIR_TEMPORAL"" ""$DIR_DESCARGA"" -maxdepth 2 -name ""$nombre"" -printf '%f.torrent\n'"
"search for the word ""mysql"" in all the files in the current containing the word ""notes"" in their name","find . -iname ""*notes*"" | xargs grep -i mysql"
"Find regular files named ""expression -and expression"" under and below /dir/to/search/",find /dir/to/search/ -type f -name 'expression -and expression' -print
Find all *.txt files of user Tecmint under /home directory,"find /home -user tecmint -iname ""*.txt"""
Delete recursively empty files named 'bad',find . -name bad -empty -delete
"Remove files cart4, cart5, cart6 in directory ~/junk",find ~/junk  -name 'cart[4-6]' -exec rm {}  \;
find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has,"find .  \( ! -path ""./output/*"" \) -a \( -type f \) -a \( ! -name '*.o' \) -a \( ! -name '*.swp' \) | xargs grep -n soc_attach"
find all the files in current directory of size exactly 6MB.,find . -size 6M
Display in an optimized way file status for all regular files in the current directory tree suppressing error messages,time find . -type f -exec stat {} + > /dev/null
"display the number of lines in all the "".c"" files in the current folder","find . -name ""*.c"" -print | xargs wc -l"
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2,find . -type d -regextype posix-egrep -regex '\./processor[[:digit:]]*/10\.'
Find all *.p[lm] files under /users/tom directory that matches both the regex '->get(' and '#hyphenate' in their contents,find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} + | xargs grep -l '#hyphenate'
Search for files specifying the minimum depth of the search,find -mindepth num -name query
Find all *.coffee files under /some/path and run 'perl /path/to/your/program' with all of the file paths as its arguments,find /some/path -name '*.coffee' -print0 | xargs -0 perl /path/to/your/program
Find all files/directories under current directory following symlinks if needed,find -L
Find a 400 permission file under /data directory,find /data -type f -perm 400 -print -quit
"Find all files under current directory with their size and paths, reverse sort them numerically, then print the first 4 entries by removing all matches to the regex [0-9]+\s from each line of the output","find -type f -printf ""%s %p\n"" | sort -nr | head -n 4 | sed -r 's/[0-9]+\s//g'"
"Print all filenames in /usr/src except for those that are of the form '*,v' or '.*,v'","find /usr/src -not \( -name ""*,v"" -o -name "".*,v"" \) '{}' \; -print"
find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified,find -cnewer /etc/fstab
Find all *stat files/directories under /usr,find /usr -name *stat
find all the files in the file system which have sticky bit enabled to the user,find / -perm -u+s
explicitly list all files in the current directory,find . -print
Find all files/directories in entire file system with 644 permission,find / -perm 644
Find files modified in the last 5 minutes starting from the current directory,find . -mmin -5
Print a detailed list of all files under and below the two directories given as variables $FULFILLMENT and $ARCH1,"find $FULFILLMENT $ARCH1 -exec stat -c '%i,%b,%A,%h,%U,%G,%y,%n' {} \;"
"Remove all ""core"" regular files in the /tmp/ directory tree",find /tmp -name core -type f -print | xargs /bin/rm -f
find all files  that names are 'apt' and display detailed list,"find  / -name ""apt"" -ls"
Remove trailing white spaces from all files under current directory ignoring .git and .svn directories,"find . -not \( -name .svn -prune -o -name .git -prune \) -type f -exec sed -i ""s/[[:space:]]*$//g"" ""{}"" \;"
Find all the SGID bit files whose permissions set to 644 in the file system,find / -perm 2644
display the name and size of all the regular/normal files  in the var/log folder which are bigger than 100MB,"find /var/log -type f -size +100000k -exec ls -lh {} \; | awk '{ print $9 "": "" $5 }'"
find all the text files in the home folder and display the first lines. Save the output to the file report.txt,find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
find all *.java files/directories under current directory,"find . -name  ""*.java"""
Look for *log files in directories at least three levels down the directory tree,"find / -mindepth 3  -name ""*log"""
force remove all the directories with the name logs in the folder /var/www,find /var/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \;
Find all *.pdf files under ./polkadots,"find ./polkadots -type f -name ""*.pdf"""
Look for *.jpg files on the system,find / -name “*.jpg”
Find all SUID files .,find /  -perm /u=s
Print ls output for all non-empty files under under current directory,find . -type f ! -size 0 -exec ls -l '{}' \;
"Search the regular files of the current directory tree for string ""whatever""",find . -type f | xargs grep whatever
List all files/directories under current directory using comma  as the delimiter for different fields in the output,find . -ls | awk '{printf}'
Print the first line of every file matching pattern 'file?B' in the xargstest/ directory tree,find xargstest/ -name 'file?B' | sort | xargs head -n1
Search for .pdf files,find / -name '*.pdf'
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago,find . -type f -mtime +0
"Search all the regular files from the current directory tree for ""search string""","find . -type f -print -exec grep --color=auto --no-messages -nH ""search string"" ""{}"" \;"
Find regular files whose names end in .JPG,"find . -type f -name ""*.JPG"""
Backup permissions of the files in the current directory tree,find -depth -printf '%m:%u:%g:%p\0' >saved-permissions
print all files in the current directory and all subdirectories,find . -print
Search for symlinks pointing to anywhere within /mnt/oldname/,find / -type l -lname '/mnt/oldname*'
List all files and directories from the current directory tree,find . -print | xargs ls
"Search all *.txt files under ~/documents for the word ""DOGS""",find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \; -print
Delete all files that have not been accessed in the last 30 days,find . -type f -atime +30 -exec rm {} \;
display all the jpg images in current folder,find . -type f -iregex '.*\.jpe?g'
"Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files","find dir1 dir2 dir3 -type f -name ""*.java"" -exec grep -il 'foo' {} \;"
search for all the c files in the current folder,find . -name \*.c -print
"Search the current directory recursively for files containing ""needle text""","find . -type f -exec grep -Iq . {} \; -and -print0 | xargs -0 grep ""needle text"""
Find 10 most recently changed files in the current directory tree,"find . -type f -printf ""%C@ %p\n"" | sort -rn | head -n 10"
Find links to any file that happens to be named `foo.txt',find / -lname foo.txt
Search for the string 'foo' in *.html files under /usr/src/linux directory,"grep foo `find /usr/src/linux -name ""*.html""`"
"show all directories in the current folder excluding those that are present in the sub directories of media, images and backups",find . -type d \( -name media -o -name images -o -name backups \) -prune -o -print
Find all the files without permission 777 in the file system,find / -type f ! -perm 777
"Search the *.cc files in the current directory tree for string ""xxx""","find . -name ""*.cc"" -print -exec grep ""xxx"" {} \;"
"Create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces.",find . -mindepth 1 -maxdepth 1 -type d| xargs -n 1 cp -i index.html
"Search the current directory tree for files and directories called ""test""",find . -name test -print
change the group of all regular/normal files in the current directory,find . -type f -exec chgrp usergroup {} \;
Prints total number of lines of all *.c files in a current folder and subfolders.,"find . -name '*.c' -print0 |xargs -0 wc -l|grep -v total|awk '{ sum += $1; } END { print ""SUM: "" sum; }'"
Find all regular files that reside in the current directory tree and were last modified more than 3 days ago,find . -type f -mtime +3
"Compress every file in the current directory tree that matches ""*cache.html"" and keep the original file","find . -type f -name ""*cache.html"" -exec gzip -k {} \;"
Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable,full_backup_dir=$(find . -depth \( -wholename \./\.\* \) -prune -o -mtime -1 -print)
"find all the files ending with ""mkv"" in current folder","find -name ""*.mkv"""
"Find all directories in the current one with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -maxdepth 1 -type d -iname ""*linkin park*"" -exec cp -r {} /Users/tommye/Desktop/LP \;"
find all files in current folder which are bigger than 1MB,find ./ -size +1000k
"Search the current directory recursively for files containing ""needle text""","find . -type f | xargs grep -I ""needle text"""
Count all directories in maximum 1 level down the current directory,find . -maxdepth 1 -type d -exec ls -dlrt {} \; | wc --lines
Remove all vmware-*.log files under current directory,find . -name vmware-*.log | xargs rm
Find symlinks in the current directory tree,find . -type l | xargs ls -ld
"Compress every file in the current directory tree that matches ""*cache.html"" and keep the original file","find . -type f -name ""*cache.html"" -exec gzip -k {} \;"
Find all files/directories under current directory that are 10MB in size,find . -size 10M
find all the files in the entire filesystem which belong to the user root and display the ten files.,find / -user root | head
find all regular/normal files in the current folder that have been modified in the last 120 hours,find -mtime -5 -type f -print
find all the files that have not been modified in the last 24 hours,find /tmp/test/* -mtime +1
find regular files which modification time is  7 days ago,find . -mtime -7 -type f
Search for directory foo ignoring case,find . -iname foo -type d
Find all files and directories that have been modified in the last seven days.,find . -mtime -7
Finds all folders that contain 'ssh' file and have 'bin' in path.,dirname `find / -name ssh | grep bin`
Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed,file_changed=$(find . -depth \ -prune -o -mtime -1 -print | cpio -oav)
Get the list of regular files in the current directory,"find . -mindepth 1 -maxdepth 1 -type f -print0 | xargs -0 -I {} echo ""{}"""
find all the files in the current folder and display them in the sorted order of their name,find . | sort
"delete all the normal files in the current directory whcih have the word ""gui"" in their content.",find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
Change the group to `temp' for all files in the current directory tree that belong to group `root',find . -group root -print | xargs chgrp temp
"display all files in current folder ending with ""~"" or ""#"" using regular expression","find -regex ""^.*~$\|^.*#$"""
find all the configuration files in the file system,"find / -name ""*.conf"""
find all the files that are not modified in the last 7 days,find -daystart -mtime +7
Search  in current directory downwards all files which  have not been accessed since last 7 days,find . -atime +7 -print
"find all the directories in the file system which have read, write and execute to all the users",find / \ -print
display all the regular/normal files in current directory,find . -type f
find the md5 sum of all the regular files in multiple folders and display them in sorted order,find teste1 teste2 -type f -exec md5 -r {} \; | sort
find all read me files in a folder,find /usr/share/doc -name README
Delete all .svn files/directories under current directory,find . -depth -name .svn -exec rm -fr {} \;
find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old,find . -mtime +30 -a -mtime -7 -print0
Remove all vmware-*.log files under current directory,"find . -name ""vmware-*.log"" -exec rm '{}' \;"
Find regular files that are bigger than 500 MB in size under current directoryt tree,find . -type f -size +500M
Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory,find  / -iname findcommandexamples.txt
Search /etc for files modified within the last day,find /etc -type f -ctime -1
Print the list of files modified in the last 24 hours sorted by size.,"#!/bin/bash

find /path/to/your/directory -type f -mtime -1 -exec du -h {} + | sort -hr"
find files in home directory which are modified yesterday,find ~/ -daystart -type f -mtime 1
Find all regular files in the current directory tree that have been modified within the last 10 minutes,find . –type f -mmin -10
Run your_command_here with all the files under /target/path as arguments,find /target/path -type f -print0 | xargs -0 your_command_here
Find all directories under ~/code excluding hidden directories and their subdirectories and replace all newlines with : in the output then remove the last :,find ~/code -type d | sed '/\/\\./d' | tr '\n' ':' | sed 's/:$//'
"Search the current directory tree for files and directories whose names begin with ""pro""",find . -name pro\*
Remove all *.log files from the current directory tree that have been gzipped,"find ./ -name '*.log' | xargs -I{} sh -c ""if [ -f {}.gz ]; then rm {}; fi"""
"Compress all files in the ""$FILE"" directory tree that were last modified 30 days ago",find $FILE -type f -mtime 30 -exec gzip {} \;
Print all files that exceed 1000 blocks and were modified at least a month ago,find / -size +1000 -mtime +30 -exec ls -l {} \;
Find all symlinks under current directory,find ./ -type l
Find the current directory and all its subdirectories.,find . -type d
Copy all files with '.png'  extension under '/home/mine' directory tree to '/home/mine/pngcoppies/copy.' directory,"find /home/mine -iname ""*.png"" -execdir cp {} /home/mine/pngcoppies/copy{} \;"
display the type of all the regular/normal files in the entire file system,find / -type f -print | xargs file
Search for the string 'nameserver' in all files under /etc,find /etc -type f -print0 2>/dev/null | xargs -0 grep --color=AUTO -Hn 'nameserver' 2>/dev/null
Find all the *.c files at any level of directory Programming under any 'src' directory,find ~/Programming -path '*/src/*.c'
list all the drectories present in the current directory and do not search in the sub directories.,find -maxdepth 1 -type d
Find files which were changed in the past 1 hour,find . -cmin -60
Calculate the md5 sum of the list of files in the current directory,find . -maxdepth 1 -type f | md5sum
Show a long listing of files not modified in over 20 days or not accessed in over 40 days,find /mydir \(-mtime +20 -o -atime +40\) -exec ls -l {} \;
list all CSS files  under the current directory,"find . -name ""*.css"""
"Find all .c and .h files in the current directory tree and search them for ""expr""",find -name '*.[ch]' | xargs grep -E 'expr'
Find files named 'fileName.txt' under '/path/to/folder' directory tree ignoring 'ignored_directory',"find /path/to/folder -name fileName.txt -not -path ""*/ignored_directory/*"""
find all the directories in the folder /raid with the extension local_sd_customize.,"find /raid -type d -name "".local_sd_customize"" -print"
display all regular/normal files which have been modified in the last 30 minutes,find -type f -and -mmin -30
Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames,find . -name '*.txt' -exec grep 'sometext' '{}' \; -print
"search for all regular files in the current directory which have the extension ""c"" or ""asm""",find . -type f \
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP, preserving path hierarchy","find . -type f -iname ""*linkin park*"" | cpio -pvdmu /Users/tommye/Desktop/LP"
"split all files in directory ""posns "" into pieces per 10000 lines",find posns -type f -exec split -l 10000 {} \;
Find all Lemon*.mp3 files under current directory and run mplayer with these files,find . -name 'Lemon*.mp3' -print0 | xargs -0 mplayer
Search for xception in all *auth*application* files under current directory and count the number of matches,"zegrep ""xception"" `find . -name '*auth*application*'` | wc -l"
Find the largest files in a particular location,"find /home/tecmint/Downloads/ -type f -printf ""%s %p\n"" | sort -rn | head -n 5"
find for a word in all the regular files in the current directory,find . -type f -print | xargs grep -li 'bin/ksh'
"display all files in the file system which are bigger than 50MB and having size ""filename"" in them","find / -size +50M -iname ""filename"""
"search for all the files in the folder /home/user1 which end with "".bin""","find /home/user1 -name ""*.bin"""
display a list of all the files  in the home folder which have been modified today,find ~ -type f -mtime 0 -ls
"Find all *.c files under and below the current directory that contain ""wait_event_interruptible""",find . -name \*.c -print | xargs grep wait_event_interruptible /dev/null
"Search for files whose name is ""filename"" and whose permissions are 777","find / -perm 777 -iname ""filename"""
Show manual of the find utility,man find
Find all *.txt files/directories under current directory,find . -name *.txt -print
"Make directories in ""/TARGET_FOLDER_ROOT/"" for each "".mov"" file in the current directory tree","find . -type f -iname \*.mov -printf '%h\n' | sort | uniq | xargs -n 1 -d '\n' -I '{}' mkdir -vp ""/TARGET_FOLDER_ROOT/{}"""
find files which full path name is /tmp/foo/bar under foo directory and print,find /tmp/foo -path /tmp/foo/bar -print
search for version in system.info files.,"find /home/*/public_html/ -type f -iwholename ""*/modules/system/system.info"" -exec grep -H ""version = \"""" {} \;"
Remove all tmp/*.mp3 files,find tmp -maxdepth 1 -name *.mp3 -print0 | xargs -0 rm
Look for all files whose names match pattern 'my*',find / -name 'my*'
Search the current directory tree for files executable by at least someone,find . -type f -perm +111 -print
Print all files and directories in the `.' directory tree skipping SCCS directories,find . -name SCCS -prune -o -print
find all the files ending with .mp3 or .jpg,find . \( -name '*.mp3' -o -name '*.jpg' \) -print
Find all *.sh files owned by user vivek,"find / -user vivek -name ""*.sh"""
"Search the current directory tree for regular files modified within the past 24 hours whose names do not end with "".DS_Store""",find . -mtime -1 ! -name '.DS_Store' -type f -exec basename {} \;
"Replace all occurrence of ""subdomainA.example.com"" with ""subdomainB.example.com"" in all files under the current directory and below ignoring SVN files",find . \ -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
Run the find command with all positional parameters,"find ""$@"
display all jpg files in the current folder,"find -iname ""*.jpg"""
display all files in the entire file system,find /
"search for files in the current folder which start with ""myfile""",find . -iname 'MyFile*'
Append all PNG and JPG files to tar archive 'images.tar',find . \ -print -exec tar -rf images.tar {} \;
Finds all folders that contain 'ssh' file and have 'bin' in path.,dirname `find / -name ssh | grep bin`
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar,find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +
Copies file 'index.html' to each top-level directory in the current directory beginning with 'd'.,find . -mindepth 1 -maxdepth 1 -type d| grep \/a |xargs -n 1 cp -i index.html
Remove trailing white spaces from all files under dir directory,find dir -type f -exec sed -i 's/ *$//' '{}' ';'
Find all files/directories under current directory and print their paths,find . -exec echo {} \+
"find all the png files in current folder which are present in the pattern list file ""search.txt""",find . -name '*.png' | grep -f <(sed s?^?/[0-9]_[0-9]_[0-9]_? search.txt)
Find all files under and below /dir that were accessed less than 60 minutes ago,find /dir -amin -60
Find all regular files under  $somedir directory and print each of their paths after a string literal 'Found unexpected file ',"find ""$somedir"" -type f -exec echo Found unexpected file {} \;"
search in the current directory for any file named Chapter1.txt,find . -name Chapter1 -type f
Find all directories under /myfiles directory,find /myfiles -type d
find all php files in the folder  /var/www/,"find /var/www/ -type f -iname ""*.php"" -print"
find all regular files in current directory and replace the word searc to replace in them.,find . -type f -exec sed -i 's/searc/replace/g' {} \;
Find all executable files under current directory and reverse sort them,find . -perm -111 -type f | sort -r
Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter,"find . -name ""*.$1"" -exec rm {} \;"
Find files and directories owned by xuser1 and change their ownership to user2,find . -user xuser1 -exec chown -R user2 {} \;
Find all *.gz files/directories under asia and emea directory,find asia emea -name \*.gz
Change the permission to 644 for all files under current directory,find . -type f | xargs -I{} chmod -v 644 {}
Find all files that matches both the case insensitive patterns *$1* and *$2* under /home/musicuser/Music/ directory and execute mplayer for each of them,"find /home/musicuser/Music/ -type f  -iname ""*$1*"" -iname ""*$2*"" -exec mplayer {} \;"
Find all files that belong to user root,find / -user root
Remove all files with a txt extension under current directory,"find . -type f -name ""*.txt"" -exec rm {} \; -print"
display the version of find,find --version
Find all *.gz files in the current directory and decompress them using gunzip,find . -name '*.gz' -print0 | xargs -0 gunzip
find all the file that have been modified in the last 3 days ( considers day starting not 24 hours ),find ./ -daystart -mtime -3
list regular file which file name end with '*.c' or '*.sh' in current directory,"find . -type f \( -name ""*.c"" -o -name ""*.sh"" \)"
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers,find . -name '*.axvw' -exec grep -n 'some string' {} +
Locate symlinks in directory trees lpi104-6 and research/lpi104-6,find lpi104-6 research/lpi104-6 -type l
Search directory tree $DIR for *.txt files,"find ""$DIR"" -name \*.txt"
"Find all .c and .C files in the current directory tree that contain ""main("" and copy them to directory test1/",find -iname “*.c” -exec grep -l ‘main(‘ {} \; -a -exec cp {} test1/ \;
"Move all files in the current directory tree that match ""some_pattern"" to ""target_location""",find . -name some_pattern -print0 | xargs -0 -I % mv % target_location
Find all hidden directories starting from the current directory,"find . -type d -name "".*"""
"Create symbolic links in the current directory for all files excluding ""CONFIGFILE"" located under ""/your/project"" directory tree",find /your/project -type f ! -name 'CONFIGFILE' -exec ln -s \{\} ./ \;
Replace all occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in all regular files under '/home/www' directory tree,find /home/www -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
Find all broken symlinks under current directory,find . -type l -xtype l
Find all directories under /path whose names are 33 characters long,"find /path -type d -printf ""%f\n"" | awk 'length==33'"
display all normal/regular files in current folder which have readable permission,find . -type f -readable
"find the file ""filename.txt"" in the entire file system",find / -name filename.txt -print
List all files in the current directory tree that were modified 60 minutes ago,find . -mmin 60 -print0 | xargs -0r ls -l
Remove all regular files in the current directory,find ./ -type f -exec rm -rf {} \;
Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories,find . -inum 211028 -exec mv {} newname.dir \;
find all files in etc which have been changed in the last 1 day,find /etc -daystart -ctime -1
Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.,find . -type f | egrep -v '\.bz2' | xargs bzip2 -9 &
"Find all files under relative/path/to/dir, calculate their md5sum and redirect the result to sums.md5",find relative/path/to/dir -type f -exec md5sum {} + > sums.md5
"Find files containing string ""#!/bin/ksh"" and append their names and matching strings to /tmp/allfiles",find . -type f -execdir /usr/bin/grep -iH '#!/bin/ksh' {} \; | tee /tmp/allfiles
Find all *.foo files under current directory and search for 'bar' in those files,find . -name '*.foo' -exec grep bar {} \;
Find all directories under foldername directory and set their permission to 755,"sudo find foldername -type d -exec chmod 755 {} "";"""
"display all instances of ""foo.cpp"" file in the current folder which are not in the sub directory tree "".svn""",find . -name 'foo.cpp' '!' -path '.svn'
find all the jpg files in a directory.,find /home -name '*.jpg
Search the current directory tree for TXT files skipping hidden ones,find . -type f \
Search  all directory from /usr downwards for files whose inode number is 1234 and print them .,find /usr -inum 1234 -print
list all javascipts file which whole name does not contain excludeddir,find . -name '*.js' | grep -v excludeddir
Delete all *.zip files under current directory that are older than 2 days,"find . -name ""*.zip"" -mtime +2 orint0 | xargs -0 rm"
find all the mp3 files in the home folder which have been modified today,find ~ -type f -mtime 0 -iname '*.mp3'
"Find the .groovy files outside the ""./target"" directory path","find .  -name ""*.groovy"" -not -path ""./target/*"" -print"
Find all files that were not accessed in the past 100 days,find /home -atime +100
display all the symbolic links in the current folder,find ./ -type l
Print all files on the system owned by group `name_of_group',find / -group name_of_group
"search for the directory ""ora10"" in the entire file system","find / -type d -name ""ora10"""
Change the group of all directories  under current directory tree to a group with the same name as the directory name,"find . -type d | sed -e 's/\.\///g' -e 's/\./avoid/g' | grep -v avoid | awk '{print $1""\t""$1}' | xargs chgrp"
search for the word LOG in all the files in the folder ~/jsmith,find ~jsmith -exec grep LOG '{}' /dev/null \; -print
Find all files/directories 1 level down the current directory and redirect the sorted output to file a,find . -maxdepth 1 | sort > a
remove all the core files in the home folder,find /home -name core -exec rm {} \;
Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them to /media/caca/extract/full$date.cpio,find . -depth \ -prune -o -print| cpio -aov > /media/caca/extract/full$date.cpio
Find files in the current directory tree that were accessed within the last 60 minutes,find . -amin -60
find all the text files in the current folder and do not  search in the sub directories,"find -maxdepth 1 -iname ""*.txt"""
find and delete all the empty directories in the current folder and all its sub directories too,find . -depth -empty -type d -delete
Find all files/directories that do not contain 'photo' in their names under current directory tree,"find . ! -name ""*photo*"""
list directories owned by group ID 100 in the file system,find / -type d -gid  100
search for soft links in current folder and display those links which are not pointed to files in current folder,"find . -type l -exec readlink -f '{}' \; | grep -v ""^`readlink -f ${PWD}`"""
"Locate all files in the current directory and below that do not have ""testfileasdf"" in their names","find -not -name ""*testfileasdf*"""
"Search directory /home/ABCD recursively, starting from one level below, for regular files",find /home/ABCD/ -mindepth 1 -type f -print
"This find command ignore the case when searching for file name , to ignore the case  in this example all .py & .PY file will search","find . -type f -iname ""*.py"""
Find all files/directories under '/etc' directory tree that are greater than 5MB and print their sizes and names,find /etc -size +5M -exec ls -sh {} +
Print the list of all files with setuid or setgid permissions within a directory.,"#!/bin/bash

find /path/to/your/directory -perm /6000"
"Print the path names of all regular .rb files prefixing them with string ""Hello, ""","find . -name ""*.rb"" -type f | xargs -I {} echo Hello, {} !"
find all the files in the folder /home which are bigger than 10MB and smaller than 50 MB,find /home -size +10M -size -50M
"find the regular/normal file ""myfile"" in the folder /root",find /root/ -name myfile -type f
search in current directory downwards all files whose size is less then 10 bytes,find .  -size -10c -print
search for the word foo in all the js files in the current folder,"grep -iH foo `find . -name ""*.js""`"
"Find all files in the current directory tree whose size is greater than 1MB, and move them to the ""files"" folder",find . -size +1M -print0 | xargs -0 -I '{}' mv '{}' files
List level 2 subdirectories of the current directory,find . -mindepth 2 -maxdepth 2 -type d -ls
"Find all files accessed on the 29th of September, 2008, starting from the current directory",find . -type f -newerat 2008-09-29 ! -newerat 2008-09-30
Remove files under current directory that contains white space in their name,"find . -name ""* *"" -exec rm -f {} \;"
display all the files  in the current folder excluding the perl files,"find . -not -name ""*.pl"""
"copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4",find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
Find all files under /path/to/base/dir and change their permission to 644,find /path/to/base/dir -type f -print0 | xargs -0 chmod 644
"find all the directories in the current folder which begin with the words ""kt"" and end with a digit",find . -regex './kt[0-9] '
Search the current directory tree for PHP files changed less than 14 days ago,find . -name *.php -ctime -14
find all the regular/normal files in the current directory which do not have the extension comment and and redirect the output to /tmp/list,"find . -type f \! -name ""*.Z"" \! -name "".comment"" -print | tee -a /tmp/list"
"Find all files in the `work' directory tree, pass them to grep and search for ""profit""","find ./work -print | xargs grep ""profit"""
"Find all files under the current directory whose filenames are not ""file.txt"", ignoring the case",find . -maxdepth 1 -not -iname file.txt
Find files associated with an inode,find . -inum 968746 -exec ls -l {} \;
Search for first match of the case insensitive regex 're' in all *.coffee files under current directory,find . -name \*.coffee -exec grep -m1 -i 're' {} \;
Show file type information for files in /usr/bin,find /usr/bin | xargs file
Find and delete all hard links in the /home directory to file1,find /home -xdev -samefile file1 -exec rm {} +
Sort all files/directories under current directory according to modification time and print only the recent 7 of them,"find -mindepth 1 -printf ""%T@ %P\n"" | sort -n -r | cut -d' ' -f 2- | tail -n +7"
Scan every file in /etc for IPV4 addresses while trying to elminate false positives.,find /etc -type f -exec cat '{}' \; | tr -c '.[:digit:]' '\n' | grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
find all teh script files in a directory,"find /home/john -name ""*.sh"" -type f -print"
Find all regular files that start with stat,find . -type f –iname stat*
Find all files/directories that contain 'target'  in their names under current directory no-recursively,"find -maxdepth 1 -iname ""*target*"""
"Search the regular files from directory tree 'directory_name' for ""word"" and print the names of the matched files",find directory_name -type f -print0 | xargs -0 grep -li word
display all text files in the folder /tmp/1,"find ""/tmp/1"" -iname ""*.txt"""
find all files which name contain 'foo' and path is not dir1 or dir2,"find ! -path ""dir1"" ! -path ""dir2"" -name ""*foo*"""
Remove all CVS directories from the current directory tree,find . -name 'CVS' -type d -exec rm -rf {} \;
delete all the backup files in current directory,"find . -name ""*.bak"" -delete"
Search folder /home/ABCD/ recursively for regular files,find /home/ABCD/ -type f -print
find all the php files in the current folder,find . -name \*.php
Find all the files which were accessed 50 days ago,find / -atime 50
"Rename all files matching ""access.log.<number>.gz"" incrementing <number>.",find -name 'access.log.*.gz' | sort -Vr | rename 's//$1+1/ge'
"Delete all the files found in the current directory tree whose names begin with ""heapdump""",find . -name heapdump*|xargs rm
"find all jpg,png,jpeg,pdf,tif,tiff,bmp and other image formats using regular expressions excluding those ending with ""_ocr.pdf""","find /somepath -type f -iregex "".*\."" ! -name ""*_ocr.pdf"" -print0"
List files larger than 10MB in the /var directory recursively,find /var/ -size +10M -exec ls -lh {} \;
display the list of all the text files present in the current directory excluding the search in certain paths.,"find . -type f -name ""*.txt"" ! -path ""./Movies/*"" ! -path ""./Downloads/*"" ! -path ""./Music/*"" -ls"
"display all files ending with "".ext"" in current folder and append the file contents of list.txt and sort them based on name and display only uniq items",find . -name \*.ext | cat - list.txt | sort | uniq -u
Find all regular files under current directory,find . -depth -type f -print
"Find target.txt files in the /base/path/of/proj/d‌​ata directory tree and pass them as arguments to simpleGrepScript.sh, saving the output as overallenergy.out",find /base/path/of/proj/d‌​ata -name target.txt | xargs simpleGrepScript.sh > overallenergy.out
Search the current directory recursively for regular files with the read permission set for everybody,find -type f ! -perm -444
Display all the files/directories under '/home/bozo/projects' directory tree that have been modified within the last day,find /home/bozo/projects -mtime -1
find all the javascript files in current folder using regular expressions,find . -regex '.+\.js'
Find all regular files under current directory tree whose names end with 'cache' or 'xml' or 'html',find . -type f \
Find all executable upvoter-* files (following symlinks) under maximum 1 level down the current directory,find -L -maxdepth 1 -name 'upvoter-*' -type f -perm /111
"Replace ""string1"" with ""string2"" in all regular files in the current directory tree",find ./ -type f -exec sed -i 's/string1/string2/g' {} \;
Find all files/directories named 'javac' under current directory,find . -name 'javac'
delete all the mp3 files in the home folder,find /home/ -exec grep -l “mp3” {} \; | xargs rm
"Add ""Line of text here"" on top of each *.py files under current directory",find . -name \*.py -print0 | xargs -0 sed -i '1a Line of text here'
"delete all the files which start with ""Tes"" in the current folder","find . -type f -name ""Tes*"" -exec rm {} \;"
Find all *.txt files that reside under and below /home/wsuNID/,"find /home/wsuNID/ -name ""*.txt"""
find all the regular/normal files in the current folder and rename them to html files,find main-directory -type f -exec mv -v '{}' '{}'.html \;
find all the files in the entire file system starting with the word top,find / -name 'top?????*'
search for swap files  in temp folder and remove them,find /tmp -name '*.swp' -exec rm {} \;
"display all the files ending with "".user"" in /var/adm/logs/morelogs/ and excluding all regular files","find /var/adm/logs/morelogs/* -type f -prune -name ""*.user"" -print"
display all regular/normal files in a directory,find $directory -type f
"Print the full path directory name of each ""file.ext"" found under the current directory","find . -name ""file.ext"" -execdir pwd ';'"
Move all *.data files/directories in $S directory to $S/data/ directory,"find ""${S}"" -name '*.data' -exec mv '{}' ""${S}/data/"" \;"
find all the files with the name september,find -iname september
Find all *.txt files under current directory and print their timestamps and paths,"find . -name ""*.txt"" -printf ""%T+ %p\n"""
"List the last modified file under ""$DIR""","find $DIR -type f -printf ""%T@ %p\n"" | sort -n | cut -d' ' -f 2 | tail -n 1"
create a tar ball of all pdf files in current folder,find . -name *.pdf | xargs tar czvf /root/Desktop/evidence/pdf.tar
Find all the files whose permissions are 777,find . -type f -perm 0777 -print
Locate symlinks in directory trees lpi104-6 and research/lpi104-6,find lpi104-6 research/lpi104-6 -type l
"Find all files, starting from / but ignoring removable media, whose names end with "".rpm""","find / -xdev -name ""*.rpm"""
"search for files with the name ""temp"" in the /usr folder",find /usr -name temp -print
"search for all the regular/normal files with the name ""access.log"" in the folder /var/www which are bigger than 100MB",find /var/www -type f -name «access.log*» -size +100M
"find all c, cpp files in current folder",find -regex '.*\.\'
"List all files in the current directory tree that were last modified on the 3rd of March, 2010 or later","find -newermt ""mar 03, 2010"" -ls"
Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names,find . -path ./.git -prune -o -not -name '*git*' -print |grep git
"find files in the current directory and sub-directories, that were accessed within last hour",find -amin -60
Find files and directories modified within the last 7 days,find . -mtime -7
force remove all the regular/normal files which begin with sess in the temp folder,find /tmp -type f -name sess* -exec rm -f {} \;
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory,"find /home/jassi/ -name ""aliencoders.[0-9]+"" | xargs ls -lrt | awk print '$9'"
find the md5 sum of all the regular files in multiple folders and display them in sorted order,find teste1 teste2 -type f -exec md5 -r {} \; | sort
View manual page of find utility,man find
Find all regular .mp3 files larger than 10M and delete them,find / -type f -name *.mp3 -size +10M -exec rm {} \;
Find all .gif and .jpg files in the /var/www directory tree,find /var/www -name *.gif -o -name *.jpg
"Replace ""firstWord"" with ""newFirstWord"", ""secondWord"" with ""newSecondWord"", ""thirdWord"" with ""newThirdWord"" in all XML files in the current directory tree","find -name ""*.xml"" -exec sed -s --in-place=.bak -e 's/firstWord/newFirstWord/g;s/secondWord/newSecondWord/g;s/thirdWord/newThirdWord/g' {} \;"
Look for *log files in directories at most three levels down the directory tree,"find / -maxdepth 3  -name ""*log"""
search for all the files in the folder /usr/bin which have not been accessed in the last 100*24 hours,find /usr/bin -type f -atime +100
"Find all files matching ""abc*"" in the current directory and append a column with ""OK""",find . -name 'abc*' -exec echo {}' OK' \; | column -t
"Search the current directory for all regular files executable by 'user', 'group', and 'others'",find . -maxdepth 1 -type f -perm -ugo=x
"Find all files/directories with 'my key phrase' in their names under current directory, search for 'my key phrase' in all files under current directory and print a sorted and unique list of output",{ find . -name '*my key phrase*'; grep -rl 'my key phrase' .; } | sort -u
find all files in the current folder which have been accessed in the last 30 minutes,find . -amin -30
Find all .less files in the current directory tree,find . -name *.less
display all the directories in the folder master-,find master -type d | sort
"display the html, javascript and text files in the current folder",find . -type f \ -print0 | xargs -0 -n1 echo
Find all filenames ending with .c in the /usr directory tree,"find /usr -name ""*.c"""
Find all files under $musicdir directory,"find ""$musicdir"" -type f -print"
Search the system for the file “testfile.txt” ignoring the case,"find / -iname ""testfile.txt"""
Creae a tarball 'files.tar.gz' containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05,"find . -type f -name ""*"" -newermt 2013-12-04 ! -newermt 2013-12-05 | xargs -I {} tar -czvf files.tar.gz {}"
Archive the directory structure under current directory into dirstructure.tar,find . -type d -print0 | tar cf dirstructure.tar --null --files-from - --no-recursion
find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory,find /media/New\ Volume/bhajans -maxdepth 1 -type d | xargs -0 mkdir -p
"Change permissions to u=rw,g=r,o= for all files in the current directory tree","find . -type f -exec chmod u=rw,g=r,o= '{}' \;"
"display all the files in the entire file system which begin with ""apache-tomcat""","find / -name ""apache-tomcat*"""
Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter,find . -name .snapshot -prune -o \( -type f -mtime 0 -print0 \)
"Check all .txt files whether they contain ""needle""","find . -type f -iname ""*.txt"" -print | xargs grep ""needle"""
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory,"find . -name ""$1"" -type f -exec grep -i ""$2"" '{}' \;"
Move all the .c files from the current directory tree to temp/,"find . -name ""*.c"" -print0 | xargs -0 -n1  -I '{}' mv '{}' temp"
copy all files which do not have execute permission to another folder,cp `find -perm -111 -type f` /usr/local/bin
find all 'js' suffix files  exclue the path *exclude/this/dir*' under current dirctory,find . -name '*.js' -not -path '*exclude/this/dir*'
"Find files containing string ""#!/bin/ksh"" and append their names and matching strings to /tmp/allfiles",find . -type f -print | xargs /usr/bin/grep -il 'bin/ksh' | tee /tmp/allfiles
Search the `research' directory and one level below for directories that are not owned by group `ian',find -L research -maxdepth 2 -type d ! -group ian
find all the files in the entire file system which have been modified in the last 5 days,find / -mtime -5 -print
Display all files in the folder home which are owned by the group test.,find /home -group test
Find writable regular files omitting those that contain sites/default/files in their names,find . -type f -writable | grep -v sites/default/files
"display a long list of all the files in the directory ""/mydir"" which have not been modified in the last 20*24 hours or which have not been accessed in the last 40*24 hours",find /mydir \(-mtime +20 -o -atime +40\) -exec ls -l {} \;
create a tar ball of all the jpg and png images in the current folder,"find . \( -iname ""*.png"" -o -iname ""*.jpg"" \) -print -exec tar -rf images.tar {} \;"
"display all directories in the folder ""/myfiles""",find /myfiles -type d
"find all files ending with ""js.compiled"" in current folder and rename them.","find . -name ""*.js.compiled"" -exec rename -v 's/\.compiled$//' {} +"
display all normal/regular files in current folder,find . -type f
"Print ""huzzah"" if directory ""/some/dir"" is empty","find /some/dir/ -maxdepth 0 -empty -exec echo ""huzzah"" \;"
Remove all files under current directory,find -exec rm '{}' +
"Search the *.c files residing in the current directory tree for string ""blash""",find . -name *.c -exec grep -n -e blash {} \;
search for all the files in the folder /data/images which are modified after /tmp/foo,find /data/images -newer /tmp/foo
"Search the current directory recursively for MOV files, following symlinks","find . -iname ""*.mov"" -follow"
Recursively finds all '*.pdf' files and folders in a current folder and removes them without prompting.,"find . -name ""*.pdf"" -print0 | xargs -0 rm -rf"
prints absolute file paths for files in current directory,find `pwd` -maxdepth 1
Run `fastqc' on all the fastqc files in the current directory tree,"find . -name ""*.fq""  -exec cat '{}' ';' | fastqc  /dev/stdin"
"Search the regular files of the current directory tree for string ""foo""","find ./ -type f | xargs grep ""foo"""
Find files whose data was modified within the given days of the month,find ./ -daystart -mtime -10 -and -mtime +1
force remove all the c files in the current folder,"find . -name ""*.c"" | xargs rm -rf"
"List the current directory recursively ignoring the ""dir1"" subdirectory",find . -path ./dir1\*  -prune -o -print
display a list of all the files  in the home folder which have been modified today,find ~ -type f -mtime 0 -ls
"Find the largest original "".gz"" file in the current directory tree","find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '$' | sort -n | tail -1"
"display all the file in the folder /home/david/ which start with the word ""index"" ( case insensitive search)",find /home/david -iname 'index*'
Change permissions to 644 of multiple files with permissions 755,find . -perm 755 -exec chmod 644 {} \;
Find all files/directories under current directory and set their permission to 775,find . -type f -exec chmod 775 {} \;
"Search the directories that match pattern '/path/to/directory/folder{?,[1-4]?,50}' for .txt files","find /path/to/directory/folder{?,[1-4]?,50} -name '*.txt'"
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive  of the last block of files sent to xargs,find var/log/ -iname anaconda.* | xargs tar -cvf file1.tar
Find all files under ./lib/app and sort them,find ./lib/app -type f | sort
"Delete all files named ""filename"" in the current directory tree, except those with paths ending in ""/myfolder/filename""","find . -name ""filename"" -and -not -path ""*/myfolder/filename"" -delete"
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions,"find / -maxdepth 1 -xdev -type f -exec grep -li ""stringtofind"" {} + | parallel sed ""'/./d'"" '{}'"
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.,find . -name 'cache*' -depth -exec rm {} \;
Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place,"find . -type f -maxdepth 1 -exec sed -i ""s/$P_FROM/$P_TO/g"" {} \;"
Save the list of files modified within a fortnight ago to `deploy.txt',find . -type f -mtime -14 > deploy.txt
replace the word apple with orange in all the files in the current folder,find ./ -exec sed -i 's/apple/orange/g' {} \;
Search the current directory recursively for regular files last changed more than 2 days ago,find . type -f -ctime +2
"Execute ""some_script"" on all files in the current directory tree",find -exec some_script {} \;
move all files in the current folder another folder and do not move the files in the sub folder,"find . -name ""*"" -maxdepth 1 -exec mv -t /home/foo2/bulk2 {} +"
Find all files and directories with permissions 664,find . -perm 664
find all the files in the entire file system which have been modified in the last 48 hours,find / -mtime -2 -print
"Finds all files with names like ""*.rm"" in a current folder, launches ffmpeg conversion for each one, and deletes source file after.","find . -type f -name ""*.rm"" -exec ffmpeg -i {} -sameq {}.mp3 \; -exec rm {} \;"
Counts all files in a current folder and subfolders.,find . -type f | wc -l
Create a bzip2 archive `dir_txt.tar.bz2' of all .txt files in the dir/ directory tree,find dir/ -name '*.txt' | tar -c --files-from=- | bzip2 > dir_txt.tar.bz2
"Print every file's type, name, and inode","find -printf ""%y %i %prn"""
search for the word text in all the python files in the current folder,"find . -iname '*py' -exec grep ""text"" {} \;"
display all the empty files in the entire file system,find / -size 0 -print
Find all files/directories under current directory tree that belong to user 'john',find . -user john
list all .c or .sh regular files.,"find . -type f \( -name ""*.c"" -o -name ""*.sh"" \)"
search for all the files having spaces in the current folder and save the output to the variable founddata,"founddata=`find . -name ""filename including space"" -print0`"
find all the backup files in the current folder and delete them after user confirmation,"find . -type f -name ""*.bak"" -exec rm -i {} \;"
"Find all files in the current directory tree whose names end with the suffix "".keep.$1"", where $1 is the first command line argument, and remove that suffix","find . -type f -name ""*.keep.$1"" -print0 | while IFS= read -r -d '' f; do mv -- ""$f"" ""${f%.keep.$1}""; done"
Search the /home/bozo/projects directory tree for files modified within the last 24 hours,find /home/bozo/projects -mtime 1
Search the current directory for PHP files,"find . -type f -name ""*.php"""
displays all the files in the current folder,find .
"display all the "".sh"" files in the current folder",find -name *.sh
display all the files in the current folder for the files which have been accessed in the last 24 hours,find . -type f -atime -1
find all files in the current folder which have been modified after /etc/passwd,find -newer /etc/passwd
display all the pdf files in a folder which start with a specific word along with their timestamp in sorted order of time and save output to a in remote server,"find ""/path/to/pdfs/"" -type f -name ""$1*.pdf"" -printf ""%TY/%Tm/%Td %TH:%TM %p\n""      | sort -n -k1.1,1.2 -k1.3,1.4 -k1.6,1.7 -k1.9,1.10 -k2.1,2.2 -k2.4,2.5 -k3  > remoteuser@remoteserver:/u/tmp/CustTmp/zzz_pdfs.txt"
Find all files larger than 20000k and print their names and sizes,"find / -type f -size +20000k -exec ls -lh {} \; | awk '{ print $8 "": "" $5 }'"
search for all the files in the folder /home which have sticky bit set and have the permissions 553,find /home -perm 1553
display all the regular/normal files in a folder,find ./subdirectory/ -type f
Delete all *.zip files under current directory that are older than 2 days,"find . -name ""*.zip"" -mtime +2 -print0 | xargs -0 -I {} rm {}"
find all files in the current directory excluding those that end with .js or have the words .min or console in their name,"find . -type f \( -name ""*.js"" ! -name ""*-min*"" ! -name ""*console*"" \)"
Count md5sum of all '*.py' files in a current folder with subfolders.,"find /path/to/dir/ -type f -name ""*.py"" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"
search for all the files in current folder and display all the file names separated by space,"find . | awk '{printf ""%s "", $0}'"
change the permissions of all the directories in the current folder,find . -type d | xargs chmod 2775
To descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option. This will avoid deleting nested directories:,"find .  -maxdepth 1 -type d -iname "".[^.]*"" -print0 | xargs -I {} -0 rm -rvf ""{}"""
Find all executable files,find / -perm /a=x
Copy all *.data files under jcho directory to files whose names are constructed by appending the parent directory names at the beginning of their names,"find jcho -name '*.data' | while read -r f; do cp ""$f"" ""$(echo ""$f"" | sed 's~\]*\)/\([^]*\)$~\1_\2~')""; done"
find all readable files,find / -readable
Force delete all files in the temp folder which have not been accesses in the last 240 hours,find /tmp/* -atime +10 -exec rm -f {} \;
display all directories in a folder,find /etc -type d -print
Check if a specific directory exists and has sticky bit set recursively.,"#!/bin/bash

directory=""/path/to/directory""

if [ -d ""$directory"" ] && [ $(find ""$directory"" ! -perm -1000) ]; then
    echo ""Directory exists and has sticky bit set""
else
    echo ""Directory either does not exist or does not have sticky bit set""
fi"
Find files under current directory without descending into other file systems and append a null character at the end of each paths,find -x . -type f -print0
find all empty files in /tmp directory .,find /tmp -type f -empty
"display all file in the home folder except "".c"" files","find $HOME -not -iname ""*.c"" -print"
Find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750,find /home/mywebsite/public_html/sites/all/modules -type d -exec chmod 750 {} +
"find all c, cpp files in current folder","find -name ""*.cpp"" -o -name ""*.c"""
Find recursively the latest modified file in the current directory,find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'| sort -n | tail -n1
Execute the 'echo' command on each file from the current directory tree individually,find . -exec echo {} \;
Generate UUIDs for the files from the current directory tree,"find -printf ""%P\0"" -exec uuid -v 4 \; | sort | awk -F'\0' '{ print $2 "" "" $1}'"
"Search for file ""file"" with minimum depth set to 4",find -mindepth 4 -name file
unsafed rm all file which name start with '#',find / -name '#*' -atime +7 -print | xargs rm
search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.,find . -group staff -perm -2000 -print
Get a list of files and directories in the current directory tree,find . -print0 | xargs -0 echo
count the total number of lines that are present in all the normal/regular files,find . -type f -exec wc -l {} \; | awk '{total += $1} END{print total}'
Find and remove multiple *.mp3 files,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
Clean directories and subdirectories of the temporary files generated during normal use,find . \ -exec rm {} \;
Search for broken symlinks,find -L -type l
Counts all files in a current folder and subfolders.,find `pwd` -type f -exec ls -l {} \; | wc -l
Run an awk program on every TXT file found in the current directory tree,"find . -name ""*.txt"" -print -exec awk '$9 != """" {print; if exit; }' {} \;"
Find all regular files in the current director and set their permissions to '644'.,find ./ -type f -exec chmod 644 {} \;
Search the entire system for SUID or SGID files,find / -path /proc -prune -o -type f -perm +6000 -ls
Find all regular files undee '/usr/bin' directoryt tree that are less than 50 bytes in size,find /usr/bin -type f -size -50c
"find all text files in the current folder excluding those that are presenti n the folder ""/svn"" and search for a pattern.",find . -name '*.txt' \! -wholename '*/.svn/*' -exec grep 'sometext' '{}' \; -print
Find all *.c files in /usr/src bigger than 100k,find /usr/src -name '*.c' -size +100k -print
"Find all .c, .h files in the current directory tree and search them for string ""expr""",find . -name '*.[ch]' | xargs grep -E 'expr'
Find all directories in 1 level down the current directory,find . -mindepth 1 -maxdepth 1 -type d
"Find all files/directories with 'my key phrase' in their names under current directory, search for 'my key phrase' in all files under current directory and print a sorted and unique list of output","{ find . -name '*my key phrase*'; grep -rl 'my key phrase' *; } | sed ""s/^\.\///"" | sort -u"
Remove files that are less than 1MB in size under current directory,find . -size -1M -exec rm {} \;
Find all files/directories named 'file1' under current directory tree,find . -name file1 -print
find all files in the current folder with the permission 777 and modify the permissions as 755.,find . -type f -perm 777 -exec chmod 755 {} \;
display all the normal/regular files in a directory,find $dir -type f -name $name -print
find all files in the file system which belong to no user or which have no user,find / -nouser
find the biggest files only (but not directories),find . -type f -exec du -Sh {} + | sort -rh | head -n 15
"Copy directory hierarchy from ""$sourceDir"" to ""$targetDir""","find ""$sourceDir"" -type d | sed -e ""s?$sourceDir?$targetDir?"" | xargs mkdir -p"
find all the regular/normal files in the /path folder and delete them,find /path -type f -print0 | xargs -0 rm
display a long listing of all files in the entire file system which are bigger than 1MB,find / -size +1000k -exec ls -l {} \; -print
"change the extension of all the "".abc"" files in the folder ""/the/path"" to "".edefg"" and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found",find /the/path -type f -name '*.abc' -execdir rename 's/\.\/\.abc$/version1_$1.abc/' {} \;
Find all directories under current directory,find . -type d
List files in the current directory and below that are exactly 1234 bytes in size,find . -size 1234c
find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1,find . -name \? -daystart -mtime +0 -mtime -3
find all files in the a direcotry which have been modified in exactly 1 day back,find /home/bozo/projects -mtime 1
List subdirectories in the current directory,find . -maxdepth 1 -type d -print0 | xargs -0 ls -d
"Search /some/directory for files that are owned by the user ""joebob""",find /some/directory -user joebob -print
Find *.java files under current directory and compress them to myfile.tar,"find . -type f -name ""*.java"" | xargs    tar rvf myfile.tar"
"Find all files and directories whose names end in "".rpm"", ignoring removable media, such as cdrom, floppy, etc.",find / -xdev -name \*.rpm
Find all the files which are greater than 50MB and less than 100MB,find / -size +50M -size -100M
Search for the literal string 'v$process' in all files under current directory,find . -print|xargs grep v\$process
"Find all files under ""/path"" that do not contain a ""."" and append "".jpg"" to their file name","find /path -type f -not -name ""*.*"" -print0 | xargs -0 rename 's/(.)$/$1.jpg/'"
Print the list of the subdirectories of the current directory,"find . -mindepth 1 -maxdepth 1 -type d -printf ""%P\n"""
"find all files in the file system which belong to the group users and having the word ""filename"" in their name.","find / -group users -iname ""filename"""
find all javascript files under the current folder,find . -name '*.js'
Find all directories under current directory,find . -type d
find the MyCProgram.c (case insensitive find) under the current directory and run the md5sum command against it,"find -iname ""MyCProgram.c"" -exec md5sum {} \;"
list all regular files which path is not dir1 or dir2,"find ! -path ""dir1"" ! -path ""dir2"" -type f"
Find all *.txt files under /foo and print their total size,"find /foo -name ""*.txt"" -exec du -hc {} + | tail -n1"
search for all the files in the current directory which have size greater than 10KB (approx) and less than 32KB(approx).,find . -size +10000c -size -32000c -print
Run your_command_here for each file found under /target/path with the file path as argument,find /target/path -type f -exec your_command_here \{\} \;
Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree,find /path/to/look/in/ -type d -name '.texturedata' -exec chmod 000 {} \; -prune
Find files owned by no user,find / -nouser
Search for the regex ... in the manual of the find command,man find | grep ...
"Search the current directory tree for a regular file named ""file_name""",find . -type f -name file_name
"change the permissions of all the files ending with ""fits"" in the folder ""/store/01""","find /store/01 -name ""*.fits"" -exec chmod -x+r {} \; \"
display all the files in the current folder along with the hidden files with the depth,"find . — name ""*"" — print -о -name "".*"" — print -depth"
change the ownership of all regular/normal files in the current directory,find . -type f | xargs chown username
Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last :,find ~/code -type d -name '[^\.]*' | tr '\n' ':' | sed 's/:$//'
recursively finds all files newer than a date,"find . -type f -newermt ""$"""
find all the files that have been modified in exactly 7*24 hours ago,find . -mtime 7
display all normal/regular files in current folder,find . -type f -print0
Find all regular files in the /path/to/base/dir tree,find /path/to/base/dir -type f
Unpack all *.gz archives in the current directory tree,find . -name '*.gz' -print0 | xargs -0 gunzip
List all files in the /var directory tree whose size is greater than 10 megabytes,find /var/ -size +10M -exec ls -lh {} \;
"display all the files in the home folder which belong to the suer ""bruno"" and end with "".sxw"" and have been accessed in the last 3*24 hours",find /home -type f -name *.sxw -atime -3 -user bruno
use regex with find command,find . -regextype posix-egrep -regex '\./[a-f0-9\-]{36}\.jpg'
Find all files/directories under current directory and print them with newline as the delimiter,find -print | xargs -d'\n'
Delete all .svn files/directories under current directory,find . -name .svn -exec rm -rf {} +
Find all '*~' files under current directory,find ./ -name '*~'
change the group of all the files which belong to the user edwarda to pubs,"find / -user edwarda -exec chgrp pubs ""{}"" \;"
find all the cpp files in current folder,"find -name ""*.cpp"""
"Search for ""YOURSTRING"" in all files under current directory",grep YOURSTRING `find .`
Search for empty files,find . -size 0k
Search for the regex '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' in all files under /etc,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
show all the regular/normal files in the folder /home/user/demo,find /home/user/demo -type f -print
Move all directories from the `sourceDir' directory tree to the `destDir' directory,find sourceDir -mindepth 1 -type d  -print0 | xargs -0 mv --target-directory=destDir
Run the find command with all shell positional arguments,"`which find` ""$@"" -print0;"
Find all *.rb files/directories under current directory,"find . -name ""*.rb"""
search for a shell script in the current folder and display the current folder path but search from the sub directories,find . -name onlyme.sh -execdir pwd \;
"Print every found file like '*.cfg' under '/path/to/files/' directory followed by its content, and wait 2 seconds after each printed file",find /path/to/files -type f -name \*.cfg  -print -exec cat {} \; -exec sleep 2 \;
find all headers file *.h in /nas/projects directory,"find /nas/projects -name ""*.h"""
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid',"find \! -name ""query_to_avoid"""
Find all files in $dir directory  and count them,"find ""$dir"" -maxdepth 1 -type f | wc -l"
Print a null delimited list of all *.emlx files/directories under /path/to/folders/ to filelist,find /path/to/folders/ -name \*.emlx -print0 > filelist
Search the /usr/bin directory tree for regular files modified or created less than 10 days ago,find /usr/bin -type f -mtime -10
List all regular files in the current directory tree,find . -type f -print0 | xargs -0 ls -l
Recursively removes all empty folders under current folder.,find . -depth -type d -empty -exec rmdir {} \;
Count the number of files/directories named file1 under current directory,find -name file1 | wc -l
Find files in the current directory tree that were accessed within the last 60 minutes,find . -amin -60
Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format,"find  / -type d -iname ""project.images"" -ls"
Find all empty files in the current directory and delete them,find . -type f -maxdepth 1 -empty -print0 | xargs -0 /bin/rm
Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths,"find ""$1"" -path ""*/.*"" -prune -o \( -type f -print0 \)"
Print and delete all directories named 'work' under '/usr/ports/' directory tree,find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
Find all directories starting from / that have permissions 777,find / -type d -perm 0777
Look for *.jpg files,find . -name “*.jpg”
Find SGID files,find / -perm +g=s
"Search the current directory tree for files whose names do not end in "".exe"" and "".dll""","find . -not -name ""*.exe"" -not -name ""*.dll"" -not -type d"
Search for 'js' in all files under current directory that match 'some string' in their names,find . | grep 'some string' | grep js
find all directories that names are 'project.images',"find  / -type d -name ""project.images"""
Search the directory tree given as variable $root_dir for regular files,find $root_dir -type f
"Find all *.jpg  files under maximum 2 levels down the temp/medium/* paths and run `mogrify -resize 428x270"">"" -quality 80 -compress JPEG -monitor -strip` with the file paths as arguments","find temp/medium/* -maxdepth 2 -iname ""*.jpg"" -print0 | xargs -0 mogrify -resize 428x270"">"" -quality 80 -compress JPEG -monitor -strip"
"find all files and directories under the current directory and display the inode of each one, using printf","find . -printf ""%i \n"""
remove all core files in the file system,"find / -name ""*.core"" -print -exec rm {} \;"
Search the current directory recursively for regular files last changed more than 2 days ago,find . type -f -ctime +2
List all *.txt files/directories under current directory,"find . -name ""*.txt"" -print"
"Find all directories in the current directory tree excluding hidden directories and create them in ""../demo_bkp""",find . -not -path \*/.\* -type d -exec mkdir -p -- ../demo_bkp/{} \;
display a long listing of all the normal/regular files in the current folder and do not search in the sub folders,find . -maxdepth 1 -type f -exec ls -l {} \; | less
Find all .core files on the system starting from / and delete them,"find / -name ""*.core"" -print -exec rm {} \;"
Compress all *.img files using bzip2,"find ./ -name ""*.img"" -exec bzip2 -v {} \;"
"Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names",find -type f -name 'error.[0-9]*' -o -name 'access.[0-9]*' -o -name 'error_log.[0-9]*' -o -name 'access_log.[0-9]*' -o -name 'mod_jk.log.[0-9]*'
Search the current directory tree for filenames matching the pattern '[mM][yY][fF][iI][lL][eE]*',find . -name '[mM][yY][fF][iI][lL][eE]*'
Find all *.axvw files/directories under current directory,find . -name '*.axvw'
Search the home directory tree for files owned by sam,find /home -user sam
Rename files from the current directory tree to the ASCII standard,"find . -type f -exec bash -c 'for f do d=${f%/*} b=${f##*/} nb=${b//[^A-Za-z0-9._-]/_}; [[ $b = ""$nb"" ]] || echo mv ""$f"" ""$d/$nb""; done' _ {} +"
Find all files that have the SUID bit set,find / -perm -u+s -print
Find all files under /path and below writable by `group' and `other',find /path -perm -go+w
Find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern '/tmp/test/*',find /tmp/test/* -daystart -mtime +1
Display all symlinks and their targets in the current directory,"find -P .  -maxdepth 1 -type l -exec echo -n ""{} -> "" \; -exec readlink {} \;"
Search the current directory tree for regular files changed less than 1 day ago,find . -type f -ctime -1
Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames,find . -name \*.html -exec grep -H string-to-find {} \;
"find all files in current folder having the name pattern ""some_pattern"" and move them to folder target_location (GNU VERSION)",find . -name some_pattern -print0 | xargs -0 -I % mv % target_location
Find all files name passwd in the root directory and all its sub-directories.,find / -name passwd
Search for 'whatIWantToFind' in all files under current directory,find . -exec grep whatIWantToFind {} \;
Create a script to find the oldest file in a directory.,"#!/bin/bash

find . -type f -printf '%T+ %p
' | sort | head -n 1"
"Find all files and directories in the current directory tree except those whose name is ""dirname"", case insensitive",find ./ -iname ! -iname dirname
find all the files in the filesystem which do not belong to any group,find / -nogroup -print
List all regular files from the current directory tree that were modified less than 60 minutes ago,find . -type f -mmin -60 -print0 | xargs -r0 ls -l
Find all files whose owner is `user1',find / -user user1
Convert *.au files to *.wav files using `sox',"find -type f -name '*.au' | awk '{printf ""sox %s %s\n"",$0,$0"".wav"" }' | bash"
Search the entire file system for .jpg files.,find / -name “*.jpg”
Display the number of regular files under current directory tree,find . -type f -print0 | tr -dc '\0' | wc -c
Find regular files in the current directory tree that have any executable bits set,find -L . -type f \( -perm -u=x -o -perm -g=x -o -perm -o=x \)
"Find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in ""*/systemctl""","find /usr/sbin /usr/bin -lname ""*/systemctl"""
Display all symlinks and their targets in the current directory tree,"find -P . -type l -exec echo -n ""{} -> "" \; -exec readlink {} \;"
"Create an empty file in each directory named ""mydir"" under current directory.","find . -type d -name ""mydir"" -print |  sed 's/$/\/abc.txt/g' | xargs touch"
Find files using file-name,"find -iname ""MyCProgram.c"""
Remove all regular files found in and below /path,find /path -type f -exec rm '{}' +
"Find files in the current directory tree that are named ""some_pattern"" and move them to directory ""target_location""",find . -name some_pattern -print0 | xargs -0 -i mv {} target_location
display all the html files in the current folder,find . -name \*.html
Search for hidden files non-recursively,find . -name '.?*' -prune
"display all the files in the current folder excluding those which are in the path of "".git""","find . ! -path  ""*.git*"" -type f -print"
Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files,"find $1 -path /proc -prune -o -name ""$2"" -print -exec grep -Hn ""$3"" {} \;"
"display long listing of all the files in the folder ""/myfiles""",find /myfiles -exec ls -l {} ;
Find suspicious PHP files,"find . -type f -name ""*.php"" -exec grep --with-filename ""eval(\|exec(\|base64_decode("" {} \;"
Delete all regular files named 'IMAGE1806.jpg' under current directory tree,find . -type f -name 'IMAGE1806.jpg' -delete
Search the system for *.rpm files ignoring removable media,find / -xdev -name \*.rpm
"find all the files in the file system which have the permission 777 and with the name ""dateiname""","find / -perm 777 -iname ""Dateiname"""
"Find all TXT files in the current directory and copy them to directory ""$HOME/newdir""","find ""$HOME"" -name '*.txt' -type f -print0 | xargs -0 cp -ut ""$HOME/newdir"""
display all files in current folder which have been modified in the last 60 minutes,find -mmin 60
Search the *.code files from the current directory tree for string 'pattern',find . -name '*.code' -exec grep -H 'pattern' {} +
display all normal/regular files in current folder,find . -type f -print0
change the permissions of mp3 files in the folder /var/ftp/mp3 to 644,find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \;
Delete empty regular files,find . -type f -empty -delete
"search for the files with the name ""temp"" and which have not been accessed in the last 7*24 hours in the /usr folder",find /usr -name temp -atime +7 -print
Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories,find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n' | sort | uniq | tr -d '\n'
display all files in current folder which are bigger than 1 MB,find . -size +1M
Find all files/directories under /var/log directory,find /var/log
find all the files in the current directory which end with orig,find . -name '*.orig'  -exec echo {} \ ;
"Create an empty file ""foo"" in each directory under the current directory containing a file named ""bar"".","find -name ""bar"" -execdir touch foo \;"
"Finds all files with names like ""*.rm"" in a '/home/me/download/' folder, launches ffmpeg conversion for each one, and deletes source file after.","find /home/me/download/ -type f -name ""*.rm"" -exec ffmpeg -i \{} -sameq \{}.mp3 \; -exec rm \{} \;"
find all the files in the home folder which have been modified in the last 24 hours,find $HOME -mtime -1
Find & Write Changes to a File and Print the Changes Using sed s//gpw,"find . -type f -name ""*.txt"" -exec sed -n 's/Linux/Linux-Unix/gpw output' thegeekstuff.txt"
Calculate MD5 sums for all regular files in the current directory tree,"find . -type f | while read f; do g=`md5sum $f | awk '{print $1}'`; echo ""$g $f""> $f-$g.md5; done"
Find all regular files under $SOURCE directory tree that were modified more than $KEEP days ago and show only the names without the paths,find $SOURCE -type f -mtime +$KEEP | sed ‘s#.*/##'
"Copy all "".php"" files in ""projects/"" directory tree to ""copy/"" preserving directory hierarchy",find projects/ -name '*.php' -print | cpio -pdm copy/
Find all files/directories in current directory and run the command 'command' on each of them invoking the command as few times as possible,find -exec command {} +
Find files smaller than 40 blocks skipping directories on other file systems,find . -size -40 -xdev -print
Print content of all files found regarding seach options '[whatever]',find [whatever] | xargs cat
Show manual page of find,man find
find files in the /usr/src directory with pattern` *.c  that larger than 100 Kilobytes,find /usr/src -name '*.c' -size +100k -print
Delete all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents,find /path/to/input/ -type f -exec grep -qiF spammer@spammy.com \{\} \; -delete
Find all empty directories under /tmp and below,find /tmp -type d -empty
converts all absolute symbolic links to relative symbolic links,"find . -lname ""`pwd`*"" -exec sh -c 'ln -snvf `python -c ""from os.path import *; print relpath(\""$\"",dirname)""` {}' \;"
find all the config files in the folder /home/pat,"find /home/pat -iname ""*.conf"""
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755,find . -type f -perm 777 -exec chmod 755 {} \;
Report all files in /mydir1 and /mydir2 larger than 2000 blocks and accessed in over 30 days,find /mydir1 /mydir2 -size +2000 -atime +30 -print
find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation,find . -size +1M -ok mv {} files \+
Display long listing of all the files/directories owned by the user 'me' under '/tmp' directory tree,find /tmp -user me -ls
"Search the current directory tree for .log files containing the string ""The SAS System"" on the first line",find . -name '*.log'  -type f  -readable  ! -size 0 -exec sed -n '1{/The SAS System/q0};q1' {} \; -print
"Display a long list of all the files/directories named "".todo"" under $STORAGEFOLDER directory tree",find $STORAGEFOLDER -name .todo  -exec ls -l {} \;
find all the files that are not modified in the last 7 days,find -daystart -mtime +7
Remove all files with the .c extension in the current directory tree,"find . -name ""*.c"" -print0 | xargs -0 rm -rf"
find and delete all the files in the entire file system whose size is greater than 100MB.,find / -size +100M -exec rm -rf {} \;
Find all /path/to/check/* regular files without descending into any directory,find /path/to/check/* -maxdepth 0 -type f
find all the files in the current directory which have the inode number 31246 and remove them.,find . -inum 31246 -exec rm [] ';'
Non-recursively finds all '*.pdf' files in a current folder and removes them.,"find -maxdepth 1 -name '*.pdf' -exec rm ""{}"" \;"
Find files/directories under current directory that matches './projects/insanewebproject' in their paths,find -ipath './projects/insanewebproject'
"display all the files ending with "".foo"" including those that are in the directory "".snapshot"", this is the wrong way of using prune.",find . \( -name .snapshot -prune -o -name '*.foo' \) -print
Find all the *.pl files (Perl files) beneath the current directory.,"find . -name ""*.pl"""
Search the system for *.rpm files ignoring removable media,find / -xdev -name \*.rpm
"display all the "".mov"" video files in the current folder in the format filename and folder path","find . -iname ""*.mov"" -printf ""%p %f\n"""
Find SUID files,find / -perm +u=s
Return all of the .conf files in Pat's user folder and subdirectories,"find /home/pat -iname ""*.conf"""
Find all the files whose name is FindCommandExamples.txt in the current working directory,find /root -name FindCommandExamples.txt
Find all *.rb files/directories under current directory,find . -name \*.rb
Save a list of all 755 permission files/directories under $dir directory tree to the variable 'files',"files=""$(find $dir -perm 755)"""
List all files/directories under current directory ensuring white space safety,find -print0 | xargs --null
display all the directories in the folder /path/to/dest except tmp directory,find /path/to/dest -type d \ -print
"Dry run making directories in ""/TARGET_FOLDER_ROOT/"" for each "".mov"" file in the current directory tree","find . -type f -iname \*.mov -printf '%h\n' | sort | uniq | xargs -n 1 -d '\n' -I '{}' echo mkdir -vp ""/TARGET_FOLDER_ROOT/{}"""
Find all files/directories under 'my key phrase' directory and redirect the output to mylist.txt,find 'my key phrase' > mylist.txt
Find files in the /var/log folder which were modified an hour or more ago,find /var/log/ -mmin +60
"search for all the files in the folder /home/user1 which end with "".bin""","find /home/user1 -name ""*.bin"""
Find files in the /home/user directory tree changed exactly 10 minutes ago,find /home/user/ -cmin 10 -print
Find all .txt  files list & List the first lines of text files,find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
search for the file centos in /usr folder,find /usr -iname centos
Delete all directories under '.cache/chromium/Default/Cache/' directory tree that are bigger than 100MB and are at least 1 level deep,find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -exec rm -rf {} \;
Find regular non-hidden files containing `some text' in their names with hidden directories optimization,find . -type d -path '*/\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print
"Find all files named ""something"" in the current folder and below and run them through the ls -l command, one by one.",find . -name something -exec ls -l {} \;
Search the current directory recursively for regular files last accessed more than 2 days ago,find . type -f -atime +2
change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html,find /home/nobody/public_html -type f -exec chmod 644 {} \;
Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/views directory,find ./cms/djangoapps/contentstore/views -iname *.css | xargs sed -i s/[Ee][Dd][Xx]/gurukul/g
search for a pattern in all the python files in the current folder. and save the output to a txt file,"find . -name ""*.py"" -type f -exec sh -c 'grep ""something"" <""$0"" >""$0.txt""' {} \;"
Search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser.,find / -user olduser  -type f  -exec chown newuser {} \
List non-hidden regular files in the current directory tree that were last modified more than 500 days ago,find . -type f -not -name '.*' -mtime +500 -exec ls {} \;
Find file `hosts',find /etc -name hosts
List all files matching regular expression '*foo*' in a human-readable form,find . -name '*foo*' -exec ls -lah {} \;
change the permission of all the rpm files in the entire file system to 755,find / -name *.rpm -exec chmod 755 '{}' \;
"Print the list of all regular files from the current directory tree that contain ""confirm"", case insensitive",find . -type f -exec grep -il confirm {} \;
"Find all files and directories containing ""disc"" in their names",find . -name *disc*
search for the pattern in all the regular/normal files in the entire file system,find / -type f -print0 | xargs -0 grep -i pattern
Change directory to the alphabetically last path under the current directory,"cd ""$(find . -print0 | sort -z | tr '\0' '\n' | tail -1)"""
display all the files in current folder,find .
find all the regular files in the current directory which do not have a read permission,find -type f ! -perm -444
Delete all files named 'Waldo' under ~/Books directory tree where '~' expands to user's home directory,find ~/Books -type f -name Waldo -exec rm {} \;
"find all ""tar.gz"" files in a folder and sort them according to the name and display the first 2 files",(find $DIR/tmp/daily/ -name *.tar.gz | sort -n | head -2
display a long listing of all the files in the current folder which have been modified in the last 24 hours,find . -mtime -1 -ls
Delete all files in the /TBD directory that were modified more than 1 day ago,find /TBD/* -mtime +1 -exec rm -rf {} \;
count all the regular files that are present in a directory,find . -type f | wc -l
This will remove all files (type f) modified longer than 14 days ago under /root/Maildir/ recursively from there and deeper (mindepth 1,find /root/Maildir/ -mindepth 1 -type f -mtime +14 | xargs rm
Find the passwd file in the current directory and one level down,find -maxdepth 2 -name passwd
Print all directories under $root appending a :  at the end of each path without descending into directories matching the pattern .[a-z]*,"find ""$root"" -name "".[a-z]*"" -prune -o -type d -printf '%p:'"
Find all files/directories that belong to the group 'audio' under '/dev' directory tree,find /dev -group audio
"Find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory .",find .  -maxdepth 2 -name '*.tmp'
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found,"find /tmp -type f -perm -002 | awk -- '1{print ""Found world write permissions:"";print};END{ifprint ""No world writable found.""}'"
"display all the files in the current folder which start with either ""fileA_"" or ""fileB_""",find . -name 'fileA_*' -o -name 'fileB_*'
Find all xx* files/directories excluding 'xxx' files/directories under your home directory,find ~ -name 'xx*' -and -not -name 'xxx'
"delete all files that have the extension ""bam"" in current directory","find . -name ""*.bam"" | xargs rm"
Find all $tofind* files/directories under $parentdir,find $parentdir -name $tofind*
change the ownership of all directories in the current folder,find . -type d -exec chown username {} \;
search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it.,find ~/junk  -name 'cart[4-6]' -exec rm {}  \;
Search  in current directory downwards all files whose size is greater than 10 bytes .,find . -size +10c -print
"Find all files under the current directory whose pathnames do not end with ""Video"", ignoring the case",find . -maxdepth 1 -not -iwholename '*Video'
"delete all instances of the file ""bad"" if its size is 0 bytes",find . -name bad -empty -delete
Find files and directories whose owner is daniel,find . -user daniel
List all files under current directory matching the regex '.*$',find -E . -type f -regex '.*$' -exec ls {} \;
"List the files in the /etc directory tree containing text ""old1.old2.co.com""",find /etc -type f -print | xargs grep -il old1\.old2\.co\.com
find all text files in current folder and trim the extra spaces in all lines in these files and save it to the original file,"find . -type f -name ""*.txt"" -exec sh -c 'for i;do sed 's/[[:space:]]*$//' ""$i"">/tmp/.$$ && mv /tmp/.$$ ""$i"";done' arg0 {} +"
"Find all files, folders, symlinks, etc matching pattern ""*.php"" in the current directory recursively",find . -name \*.php
find all the files in the file system which have not been modified in the last 100*24 hours,find / -mtime +100 -print
"Search for ""vid=123"" in all compressed files found under ""/my_home"" matching ""*log.20140226*""",zcat `find /my_home -name '*log.20140226*'`|grep 'vid=123'
Remove all .txt files in and below the current directory,"find . -name ""*.txt"" | xargs rm"
Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours.,find . -mtime -1 -prin
"change the extension of all the "".lst"" files in the current folder to ""a.lst""",find -name ‘*.lst’ -exec rename .lst a.lst {} \;
Search for 'It took' in all $srch1* (case insensitive) files under current directory and run the sed script 'N;s/(.*)\n(.*)/\2 \1/' on the output,"find . -iname ""$srch1*"" -exec grep ""It took"" {} \; -print |sed -r 'N;s/(.*)\n(.*)/\2 \1/'"
Locate OGG files under the home directory smaller than 100 megabytes,find $HOME -iname '*.ogg' -type f -size -100M
find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder,"find . -name ""*.txt"" -type f -daystart -mtime -4 -mtime +0|xargs -i cp {} /home/ozuma/tmp"
copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize.,"find /raid -type d -name "".local_sd_customize"" -ok cp /raid/04d/MCAD-apps/I_Custom/SD_custom/site_sd_customize/user_filer_project_dirs {} \;"
"Recursively copy all files and directories in ""demo"" excluding "".git"" to ""demo_bkp""",find demo -depth -name .git -prune -o -print0 | cpio -0pdv --quiet demo_bkp
find all the files in the current folder and create a backup of it in floppy,find . -depth -print | cpio -ov > /dev/fd0
find all the html files that are acces in the last 24 hours in the current folder,"find . -mtime 1 -name ""*.html"" -print"
Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree,find . -name '*.[ch]' | xargs grep -E 'expr'
"search for the directory ""config"" in the current folder",find . -name config -type d
find all pdf files in the current folder,find . -name “*.pdf” -print
"Find all files named ""test2"" in the current directory tree",find -name test2
"find for the word ""dba_2pc_pending"" in all the files of current fodler having the word ""sql"" in their name",find . -print|grep sql|xargs grep -i dba_2pc_pending
"find the file ""dateiname"" in the current folder","find -iname ""Dateiname"""
"Remove all files in and below the current directory whose names begin with ""not""",find . -name not\* -print0 | xargs -0 rm
"Recursively removes all files named '.svn' in a current folder, and prints messages on each action.",find . -name .svn -exec rm -v {} \;
Find all *text files/directories under current directory,"find -name ""*text"""
"Search all .c and .h files in the current directory tree for string ""e""","find . -name ""*.[ch]"" -exec grep --color -aHn ""e"" {} \;"
Find recursively all regular files in the current directory tree ending in .dll or .exe,"find . -type f | grep -P ""\.dll$|\.exe$"""
Find all the files in the current directory with “linkin park” in their names,"find . -maxdepth 1 -iname ""*linkin park*"""
Find all *.txt files under /foo and delete them,"find /foo -name ""*.txt"" -delete"
delete all the mp3 files in the current folder.,"find . -type f -name ""*.mp3"" -exec rm -f {} \;"
display all the text files in the home folder,"find /home -name ""*.txt"""
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -type f -iname ""*linkin park*"" -exec cp -r {} /Users/tommye/Desktop/LP \;"
"find "".flac"" files in current folder using regular expressions","find ./ -regex ""./cmn-.\.flac"""
Search for all files in the /home directory tree that have the same inode number,find /home -xdev -inum 2655341
"search for directories in the folder ""test"" which end have 5 digits as their name",find ./test -type d -name '[0-9][0-9][0-9][0-9][0-9]'
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them,"find MyApp.app -name Headers -type d -exec rm -rf ""{}"" \;"
display the count of all the directories in the current folder,find . -type d –print | wc -l
find all the text files in the folder /home/calvin which are atleast below 2 levels,find /home/calvin/ -mindepth 2  -name “*.txt”
"Find and uncompress all files in the current directory tree ending in "".csv.gz""",find . -name '*.csv.gz' -exec gzip -d {} \;
find all the php files in the current folder,find . -name \*.php -type f
Find all files/directories named orm.properties under current directory,"find . -name ""orm.properties"""
"Check if a specific directory exists and has the correct owner, group, and permissions recursively.","#!/bin/bash

directory=""/path/to/directory""
owner=""owner""
group=""group""
permissions=""755""

if [ -d ""$directory"" ] && [ $(find ""$directory"" ! -user ""$owner"" -o ! -group ""$group"" -o ! -perm $permissions) ]; then
    echo ""Directory exists with correct owner, group, and permissions""
else
    echo ""Directory does not exist or has incorrect owner, group, or permissions""
fi"
Find all files/directories named 'filename' that belong to user 'username' and group 'groupname' in the entire filesystem,find / -user username -group groupname -name filename
List all symlinks under current directory and search for targetfile.txt in this list,find . -type l | xargs -I % ls -l % | grep targetfile.txt
Find all files/directories named 'photoA.jpg' under current directory tree,find . -name photoA.jpg
display all text files in current folder,"find . -name ""*.txt"""
Find files/directories named 'sar' under directory trees whose path starts with '/u' or '/b' or '/s' or '/o',find `ls -d /[ubso]*` -name sar
Find files that are 0 bytes in size in the current directory tree and remove them,find . -size 0 -exec rm {} \;
Convert all DOS files under and below the current directory to the Unix format,find . -type f -exec dos2unix {} {} \;
Find files in entire file system that are writable by group or other,"find / -perm /g+w,o+w"
Find files/directories in entire file system that had their meta information changed more than 3 days ago,find / -ctime +3
Find all files/directories that are owned by user 'takuya' under current directory tree,find -user takuya
List all files except for those in directory SCCS,find . -print -o -name SCCS -prune
Find all files/directories in level 2 down the current directory,find -mindepth 2 -maxdepth 2
"Search the regular files of the current directory tree for string ""stuff""","find . -type f -exec grep -n ""stuff"" {} \; -print"
find all the files in the current directory whose size is equal to exactly 126MB.,find . -size 126M
display all text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search),"find /home/you -iname ""*.txt"" -mtime -60 -print"
long list al the files in the current directory which have only read permission to the group,find . -perm 040 -type f -exec ls -l {} \;
display all the configuration files in the current folder which are in the current tree structure,find .  -path '*/*config'
display all soft links in current folder,find . -type l
list all the directories in the folder httpdocs,find httpdocs -type d
List all *.txt files in <path> with details about their attributes,find <path> -xdev -type f -name *.txt -exec ls -l {} \;
find all the php/javascript files in current folder using regular expressions,find . -regex '.+\.\(php|js\)'
"Search /public/html/cosi for files whose name is ""wiki.phtml""","find /public/html/cosi -name ""wiki.phtml"""
"search for jpg images in folders in the path ""cam2/2013"" and convert these files to the video Cam2-2013-30fps-19crf.mp4","find Cam2/2013* -name ""*.jpg"" -print0 | xargs -0 cat | ffmpeg -f image2pipe -framerate 30 -vcodec mjpeg -i - -vcodec libx264 -profile:v baseline -level 3.0 -movflags +faststart -crf 19 -pix_fmt yuv420p -r 30 ""Cam2-2013-30fps-19crf.mp4"""
find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes,find /etc/sysconfig -amin -30
"Delete all files named ""filename"" in the current directory tree, except the one with path ./path/to/filename","find . -name ""filename"" -and -not -path ""./path/to/filename"" -delete"
find all the files which have been modified in the last 15 minutes excluding hidden files.,find . -mmin -15 \
Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories,"find . -name ""*.png"" -prune -o -name ""*.gif"" -prune -o -name ""*.svn"" -prune -o -print0 | xargs -0 -I FILES grep -IR ""foo="" FILES"
Get a list of all hidden files from the current directory tree,find . -type f -name '.*'
delete all text files in the entire file system,"find / -type f -name ""*.txt"" -print | xargs rm"
Find all symbolic links under '/some/directory' tree,find /some/directory -type l -print
Change permissions to 644 for all subdirectories,find . -type d -print0|xargs -0 chmod 644
"Recursively search for all regular files below directory ""dir1"" in currentd directory, and output the name of each, without any containing directories.",find ./dir1 -type f -exec basename {} \;
convert all the regular/normal files in the current folder from dos to unix format,"find . -name ""*"" -type f -exec dos2unix {} \;"
Find all directories whose name is root in / directory,find / -type d -name root
display list of all the files in the current folder which are empty.,find . -size 0 -ls
Find List directory  with sub-folder count .,"find -maxdepth 1 -type d | sort | while read -r dir; do n=$; let n--; printf ""%4d : %s\n"" $n ""$dir""; done"
"change the permissions of all the directories to 755 in the folder ""/home/nobody/public_html""",find /home/nobody/public_html -type d -exec chmod 755 {} \;
Show file type information for all regular files under '/home' directory tree,find /home -type f -exec file {} \;
Search directories /res/values-en-rUS and /res/xml for XML files,find /res/values-en-rUS /res/xml -iname '*.xml'
Find all *.plist files/directories under current directory,"find ./ -name ""*.plist"""
Find all directories under /directory-path and change their permission to 2755,find /directory-path  -type d -exec sudo chmod 2775 {} +
Find directories in the /path directory tree whose names are 33 characters in length,"find /path -type d -printf ""%f\n"" | awk 'length==33'"
find all the directories in current folder and do not search in sub directories,find . -maxdepth 1 -type d -print0
Find files/directories that does not have write permssion for group,find /path ! -perm /020
Find all SUID files .,find /  -perm /u=s
Archive all *html files using tar.,"find . -type f -name ""*html"" | xargs tar cvf htmlfiles.tar -"
Sort all directories under current directory placing the file with least modification time at first,find -type d -printf '%T+ %p\n' | sort
Find the first file/directory named 'something' under current directory and quit,find . -name something -print -quit
Delete all files in the /myDir directory tree that were last modfied 7 days ago,find /myDir -mindepth 1 -mtime 7 -delete
display all file names in current folder,find . -printf '%p '
"Search the /root directory recursively for files named ""FindCommandExamples.txt""",find /root -name FindCommandExamples.txt
"find all the files ending with "".sh"" in the folder /dir excluding those wth the name node_modules and search for a pattern in these files","find /dir \ -o -name ""*.sh"" -exec grep --color -Hn ""your text to find"" {} 2>/dev/null \;"
find all the directories in the current folder and create the same directory structure in a remote machine using ssh,"find -type d | ssh server-B 'xargs -I% mkdir -p ""/path/to/dir/%""'"
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days,find /var/tmp/stuff -mtime +90 -exec /bin/rm {} \;
Converts all windows line endings to unix line endings,find $ -type f | xargs -I xxx sed -i 's/\r//g' xxx
"Search for all .html files in directory ""www"" and output only the basename  of each.",find www -name \*.html -type f -exec basename {} \;
Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy,find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents
Find all the files in file system which are modified in last 1 hour,find / -mmin -60
change the group of all the files in the file system which belong to the group with the gid 999,find / -group 999 -exec chgrp NEWGROUP {} \;
List all files under current directory,find . -type f | xargs ls
Find files newer than main.css in ~/src,find ~/src -newer main.css
Delete all __temp__* files/directories under current directory tree,find . -name __temp__* -exec rm -rf '{}' \;
Find all *.py files under current directory,"find . -type f -name ""*.py"""
Search the file system for regular files whose names are shorter than 25 characters,"find / -type f| egrep -o ""/[^/]{0,24}$"" | cut -c 2-"
"search for the word ""nameserver"" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line","find /etc/ -iname ""*"" -type f -print0 | xargs -0 grep -H ""nameserver"""
Find all files which  are accessed after modifying /etc/passwd files.,find -newer /etc/passwd
search for a word in all the regular/normal files in the entire filesystem. ( + is used to give more than one file as input to the grep command.,find / -type f -exec grep -i 'the brown dog' {} +;
Find all the files/directories under '/var/adm' directory tree that have not been modified in the last 3 days,find /var/adm -mtime +3 -print
Find all files under current directory and pipe their contents to the wordfrequency command and then search for 'yourword' in the output,find . -type f | xargs cat | wordfrequency | grep yourword
"Remove all files except the ones listed in ""MANIFEST""",find -type f -printf %P\\n | sort | comm -3 MANIFEST - | xargs rm
Set permissions to 600 for regular files under var/,find var/ -type f -exec chmod 600 {} \;
Find all files/directories under current directory that match the case insensitive regex ./\_.*,find . -iregex './\_.*'
Print local files without descending non-local directories,find . ! -local -prune -o -print
Print the number of files and directories in a directory.,"#!/bin/bash

directory=""/path/to/your/directory""

num_files=$(find ""$directory"" -type f | wc -l)
num_directories=$(find ""$directory"" -type d | wc -l)

echo ""Number of files: $num_files""
echo ""Number of directories: $num_directories"""
"Find all files in the current directory recursively with ""linkin park"" in their names and copy them to /Users/tommye/Desktop/LP","find . -type f -iname ""*linkin park*"" -exec cp -r {} /Users/tommye/Desktop/LP \;"
"Remove trailing white spaces from all *.rb, *.html, *.js, *.coffee, *.css, *.scss, *.erb, *.yml, *.ru files under current directory","find . \ -print0 | xargs -0 sed -i '' -E ""s/[[:space:]]*$//"""
search for all the file sin the current folder which are bigger than 10KB and display them smallest file,find . -size +10k -exec ls -lS {} \+ | head -1
Find StringBuffer in all *.java files,"find . -type f -name ""*.java"" -exec grep -l StringBuffer {} \;"
Find and show all files on the system that are larger than 900 MB,find / -size +900M
Find all files/directories under whatever and ... directory and copy them to /var/tmp,"find whatever ... | xargs -d ""\n"" cp -t /var/tmp"
Sort all directories under current directory placing the file with least modification time at first,find -type d -printf '%T+ %p\n' | sort
"Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script","find $1 -path /proc -prune -o -name ""$2"" -print -exec grep -Hn ""$3"" {} \;"
search all undo files(ending with .undo) in the current folder and calculate the total size of them,find -name '*.undo' -exec wc -c {} + | tail -n 1
Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents,"find . -name ""*.pdf"" -print | grep -v ""^\./pdfs/"""
Find all the files in file system which are accessed in last 1 hour,find / -amin -60
Find all ES* and FS_* files under current directory,"find . -type f \( -iname ""ES*"" -o -iname ""FS_*"" \)"
"prune all the files in the current directory, only current directory  is the output",find . -prune
Find all .mp3 files with more than 10MB and delete them,find / -type f -name *.mp3 -size +10M -exec rm {} \;
"Create archive ""backup1.tar"" of all subdirectories of the current directory","find . -mindepth 1 -maxdepth 1 -type d | awk 'BEGIN {FS=""./""}; {print $2}' | xargs -d '\n' tar czf backup1.tar"
"List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago replacing the $CURR_DIR path string to './'","find ${CURR_DIR} -type f \ -printf ""./%P\n"""
Find all files named 'new' under current directory tree and display their contents,find . -name new -print -exec cat {} \;
Archive all filepattern-*2009* files/directories under data/ into 2009.tar,find data/ -name filepattern-*2009* -print0 | xargs -0 tar uf 2009.tar
display all the files in the usr folder and those that are in the path local,"find /usr/ -path ""*local*"""
Delete all .svn files/directories under current directory,find . -name .svn -exec rm -v {} \;
Find all *stat files/directories under /usr,find /usr -name *stat
List all leaf directories of the current directory tree,"find . -type d -execdir sh -c 'test -z ""$"" && echo $PWD/{}' \;"
Find all files/directories under current directory with the null character as the delimiter,find -print0
"Counts all files in a current folder and in subfolders one-level lower, sorts result and pipes to the less pager.",find . -maxdepth 1 -type d -print0 | xargs -0 -I {} sh -c 'echo $ \\t {}' | sort -rn | less
Find files/directories named 'filename' in the entire filesystem,find / -name filename -print
Find files matching the regex 'myregex' in their contents and append the list of these files to outfile.txt,find . -exec grep -l -e 'myregex' {} \; >> outfile.txt
Find files with inode number 199053,find / -inum 199053
Find files named 'core' in or below the directory /tmp and delete them,find /tmp -name core -type f -print0 | xargs -0 /bin/rm -f
find all files in the current directory whose size is 24 or 25 bytes.,find . -size -26c -size +23c -print
"Remove all files from the current directory tree whose names do not end with "".tex"" or "".bib""","find . | egrep -v ""\.tex|\.bib"" | xargs rm"
display all files in current folder and follow the symbolic links and display the pointed file,find -L .
Find all .java files under and below the current directory,find . -name '*.java'
Find all files/directories under current directory tree wihout descending into './src/emacs' directory,find . -path './src/emacs' -prune -o -print
List all files under current directory with white space safety in their paths,find . -type f -print0 | xargs -0 ls
"find files in the current directory having name ""filename""","find -iname ""filename"""
find all foo.bar files in the entire file system,find / -name foo.bar -print
Search for 'magic' in all regular files under current directory tree,"find . -type f | xargs grep ""magic"""
Search the /path/to/dir directory tree for .c files,find /path/to/dir -name \*.c
find the regular js files which path does not contains '*/test/*'  and name does not contains '*-min-*' or '*console*',"find . ! -path ""*/test/*"" -type f -name ""*.js"" ! -name ""*-min-*"" ! -name ""*console*"""
Find blabla* files under current directory,"find . -depth -name ""blabla*"" -type f | xargs rm -f"
Find all Makefile's in the current directory tree,"find -type f -name ""Makefile"""
"Set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian","find lib etc debian -name ""*.sh"" -type f | xargs chmod +x"
Delete all HTML files under tree ~/mydir,find ~/mydir -iname '*.htm' -exec rm {} \;
Find all the Sticky Bit set files whose permission are 551,find / -perm 1551
"Compress all files in directory ""$PATH_TO_LOGS"" that were last modified more than ""$SOME_NUMBER_OF_DAYS"" days ago",find $PATH_TO_LOGS -maxdepth 1 -mtime +$SOME_NUMBER_OF_DAYS -exec gzip -N {} \;
search for the file test in the current folder,find . -name test
Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory,"find /path/to/folders/* -type d  -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \; -exec sh -c ""mv {}.mbox/*.emlx {}.mbox/Messages"" \;"
display all the files in the home folder which are smaller than 500 bytes,find $HOME -size -500b
"Print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts",wc `find . -name '*.[h|c|cpp|php|cc]'`
Find all Makefile's in the current directory tree and look for line 235 in each of them,"find -type f -name ""Makefile"" -exec awk 'FNR==235 {print FILENAME; print}' {} +"
"start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found",find . -wholename './src/emacs' -prune -print -o -print
Recursively removes all empty folders under current folder.,find -depth -type d -empty -exec rmdir {} \;
Find all Perl source code files,"find . -name ""*.pl"""
"delete all the files ending with ""~"" in current folder",find -name '*~' -delete
Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories,"find $d -type d -exec chmod ug=rwx,o= '{}' \;"
"Find the .groovy files outside the ""./target"" directory path","find .  -name ""*.groovy"" -not -path ""./target/*"" -print"
Find executable files,find . -perm -100 -print
Find all *.jpg files under current directory,find . -name *.jpg
create a md5sum for all the instances of the file MyCProgram.c in current folder,"find -iname ""MyCProgram.c"" -exec md5sum {} \;"
"Print the names of all the files from directory tree ~/some/directory whose names end in ""rb""","find ~/some/directory -name ""*rb"" -exec basename {} \;"
"Search for files containing string ""PENDWIDTH"" and view the result using the more command",find . -exec grep PENWIDTH {} \; | more
"Find all files/directories under /path/to/files/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks, stat them and apply the sed replacement ""s/\-\- \:\:.*/\1\2\3\4\5\6\7/g"" on the output","find /path/to/files/* -printf ""%TY%Tm%Td%TH%TM%TS|%p|%l"" -exec stat -Lc ""|%y"" {} \; | sed -r ""s/\-\- \:\:.*/\1\2\3\4\5\6\7/g"""
"search for the word ""nutshell"" or ""Nutshell"" in all the files in the folder book",find /book -print | xargs grep '[Nn] utshell'
Find all files/directories following symlinks under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths,"find -L /path/to/dir/* -printf ""%TY%Tm%Td%TH%TM%TS|%p\n"""
Find all *.rb (regular) files under current directory and change their mode to 600,"find . -name ""*.rb"" -type f -exec chmod 600 {} \;"
"Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size",find / \
Recursively lists all files in a current folder in long format.,ls -ld $(find .)
Find files that do not have a listing in the /etc/passwd or /etc/group in the file system,find / -nouser -o  -nogroup
Find all files/directories under current directory and put the output into full_backup_dir variable,"full_backup_dir=""`find . -depth -print0`"""
"Find all directories named ""D"" in the current directory tree and print their parents",find ./ -type d -name 'D'|sed 's/D$//'
Search /var/log for logs larger than 10 megabytes,find /var/log -size +10M -ls
Find all files files under the current directory except *.txt,find . -maxdepth 1 -type f -not -regex '.*\.txt'
find all the links in the directory students and print them. Do not display any errors.,find /students -type l -print 2> /dev/null
Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html',"find /home/u20806/public_html -daystart -maxdepth 1 -mmin +25 -type f -name ""*.txt"" \ -exec rm -f {} \;"
Find all files and directories starting from the current directory,find .
search for all the directories in a folder and limit the search to current folder and give them as input to the python script,find /stuff -maxdepth 1 -type d -exec script.py {} +
Find all *.[ch] files under current directory,find . -name '*.[ch]'
List all regular files from the current directory tree that were modified less than 60 days ago,find -type f -mtime -60
Find all files/directories named 'photo.jpg'  under current directory tree,"find . -iname ""photo.jpg"""
Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them,"find . -type f -iname '*'""$*""'*' -ls"
"Search the /tmp/ directory recursively for files matching regular expression "".*file[0-9]+$""","find /tmp -regex "".*file[0-9]+$"""
"Force create a symbolc link named ""/usr/local/bin/fpdf"" to ""/usr/local/bin/findpdftext""","sudo ln -s -f ""/usr/local/bin/findpdftext"" ""/usr/local/bin/fpdf"""
"display all the regular files in the current folder excluding those that are present in the path ""git""","find . -path ""*.git*"" -prune -o -type f -print"
Print the list of regular files from the current directory tree that were modified less than 2 days ago,find . -type f -mtime -2 -exec echo {} +
change the permissions of all regular/normal files in the file system,chmod 640 `find ./ -type f -print`
display all the files in the current folder along with the hidden files with the depth,"find . — name ""*"" — print -о -name "".*"" — print -depth"
Find all the files under /etc directory which are larger than 100k,find /etc -size +100k
"Counts lines in each *.php file, sorted by number of lines, descending.",find . -name '*.php' -type f | xargs wc -l | sort -nr
Search for the regex '^ERROR' in all *.log files under current directory,"find . -name ""*.log"" -exec egrep -l '^ERROR' {} \;"
"find the ""MyCProgram.c"" file  under the current directory","find -iname ""MyCProgram.c"""
find files in current folder using name patterns and sort the display the file names in the sorted order,"find . -name ""S1A*1S*SAFE"" | rev | awk -F '/' '{print $1}' | rev | sort -t _ -k 5"
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*,"find ""$(pwd -P)"" -mtime 0 -not \( -name '*.swp' -o -regex './es.*' -o -regex './en.*' \)"
"list all files under the current directory, writing the output to the file files_and_folders, suppressing all error messages",find . 2>/dev/null >files_and_folders
Find all *.txt files/directories under current directory discarding 'Permission denied' errors,"find . -name ""*.txt"" -print | grep -v 'Permission denied'"
find all the symbolic links in the current folder and check the file type and display the names of files which are broken,"find . -type l -exec sh -c ""file -b {} | grep -q ^broken"" \; -print"
delete all the files in the file system which belong to the user edwarda,"find / -user edwarda -exec rm ""{}"" \;"
find all the php files in current folder and search for multiple patterns in these files and display the file names,"find -name '*.php' -exec grep -in ""fincken"" {} + | grep TODO | cut -d: -f1 | uniq"
Recursively changes group ownership of every folder in a current directory to the name of that folder.,"find . -type d | sed -e 's/^\.\///g' -e 's/^\./avoid/g' | grep -v avoid | awk '{print $1""\t""$1}' | xargs chgrp"
Find the file in the current directory tree with inode number $inum and delete it,find . -inum $inum -exec rm {} \;
Find all php files whose name is tecmint.php in a current working directory,find . -type f -name tecmint.php
List all files/directories in entire file system,find / -print
Find all *.ext files/directories under current directory and print their path and parent directory path,find . -name '*.ext' | parallel echo {} '`dirname {}`'
Delete all hidden files in the directory tree given as variable $FOLDER,"find $FOLDER -name "".*"" -delete"
Find all files/directories under current directory with null character as the delimiter,find -print0
"Copy the directory hierarchy from ""original"" to ""new""",find original -type d -exec mkdir new/{} \;
Find all files under current directory that were modified more than 1 day ago,find -mtime +1
list directories owned by group ID 100 in the file system,find / -type d -gid  100
change the ownership of all the files in the file system from edwarda to earnestc,"find / -user edwarda -exec chown earnestc ""{}"" \;"
Exclude directory from find . command,find . -name '*.js' -and -not -path directory
find all the files in the current directory which have been modified in the last 30 days and display the contents.,find . -atime +30 -exec ls \;
Print the list of regular files in the current directory and all subdirectories,find . -type f
Change permissions to 644 for all files in the current directory tree,find . -type f | xargs chmod -v 644
Find the password file between sub-directory level 2 and 4,find -mindepth 3 -maxdepth 5 -name passwd
remove all files that's older than 30 days in '/tmp',find /tmp -type f -mtime +30 -exec rm -f {} \;
find all normal/regular files in current folder and display the total lines in them,find . -type f -exec wc -l {} +
"List all files and directories in the /home directory tree whose names are ""Trash""",find /home -name Trash -exec ls -al {} \;
"Remove files cart4, cart5, cart6 in directory ~/junk",find ~/junk  -name 'cart[4-6]' -exec rm {}  \;
Search for 'Processed Files' in all $srch*  files under current directory run the sed script 'N;s/\n/\2 \1/' on the output and redirect the final output to temp2 file,"find . -iname ""$srch*"" -exec grep ""Processed Files"" {} \; -print| sed -r 'N;s/\n/\2 \1/'  > temp2"
Find all files starting from / that belong to user1,find / -user user1
Find recursively the latest modified file in the current directory,"find . -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -f2- -d"" """
Find files whose content was modified at least 1 minute ago,find ./ -mmin +1
Find all directories in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique paths,find /var/www/html/zip/data -type d -mtime +90 | uniq
Find all .zip files in the current directory tree and unzip them,find . -depth -name '*.zip' -exec /usr/bin/unzip -n {} \;
Print the path names of all files and directories in the current directory tree,"find -printf '""%h/%f"" '"
Give a long listing of all the  *.pl files  beneath the current directory.,"find . -name ""*.pl"" -exec ls -ld {} \;"
List all leaf directories of the current directory tree,"find . -type d | sort | awk '$0 !~ last ""/"" {print last} {last=$0} END {print last}'"
search all the files in the current folder using name patterns,find . -name 'a(b*' -print
Find out all *.sh owned by user vivek,"find / -user vivek -name ""*.sh"""
"find all the files in the current folder which end with ""ext1"" or ""ext2"" or ""ext3""","find -E . -regex "".*ext1|.*ext2|.*ext3"""
"Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x","find . -type d -exec chmod u=rwx,g=rx,o=x {} \;"
Find all *.txt files/directories under current directory,"find . -name ""*.txt"" -print"
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers,find . -name '*.axvw' -exec grep -n 'some string' {} +
"Find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs  and change their permission to 755",find /path/to/base/cache /path/to/base/tmp /path/to/base/logs -type d -exec chmod 755 {} +
find all text files in the current directory and display them page wise,"find . -name ""*.txt"" -print"
find all of the files that are readable,find / -readable
"Find all files in the current directory tree whose size is greater than 1MB, and move them to the ""files"" folder",find . -size +1M -exec mv {} files \+
Find all .txt files in the current directory tree and edit them with `vim',"find . -name ""*.txt"" | parallel -j1 --tty vim"
Make all the bugzilla subdirectories permission 775,find bugzilla -type d -exec chmod 775 {} \;
Find all .gif files in the /var/www directory tree,find /var/www -name *.gif
Print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago,"find ./work/ -type f -name ""*.sh"" -mtime -20 | xargs -r ls -l"
Update timestamps of all files (not directories) under current directory.,find . -exec touch {} \;
"Find ""*prefs copy"" files in the /mnt/zip directory tree and remove them","find /mnt/zip -name ""*prefs copy"" -print0 | xargs rm"
Find all files/directories named 'articles.jpg' under 'images' directory tree,"find images -name ""articles.jpg"""
"display all the files having the word ""searched phrasse"" in their name in the current folder excluding those from the paths ""/tmp/"" and ""./var/log""","find . -type f -name ""*searched phrasse*"" ! -path ""./tmp/*"" ! -path ""./var/log/*"""
Find all sample*_1.txt files/directories under current directory and print 'program  sample*-out sample*_1.txt sample*_2.txt' for each of them,"find . -name ""sample*_1.txt"" | sed -n 's/_1\..*$//;h;s/$/_out/p;g;s/$/_1.txt/p;g;s/$/_2.txt/p' | xargs -L 3 echo program"
Clean the current directory from all subversion directories recursively,"find . -type d -name "".svn"" -print | xargs rm -rf"
Find regular files larger than 500MB in the current directory tree,find . -type f -size +500M
"Find all files and directories whose names end in "".rpm"" and change their permissions to 755",find / -name *.rpm -exec chmod 755 '{}' \;
Filnd all directory in root directory with 777 permission and change permision755  with chmod commad .,find / -type d  -perm 777 -print -exec chmod 755 {} \;
find  directory which case-insensitive name is too in currect directory,find . -iname foo -type d
"display all the files in the folder ""/home/mywebsite"" which have been changed in the last 7*24 horus",find /home/mywebsite -type f -ctime -7
"display all the regular files in current folder that belong to the user ""tom""",find . -type f -user tom
find all the files that have been modified exactly yesterday,find . -type f -daystart -mtime 1
Create a tar archive with all *.java files under the current directory,"find . -type f -name ""*.java"" | xargs tar cvf myfile.tar"
Search the current directory for files whose names start with my,find . -name 'my*'
find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.,find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
Unzip all *.zip files under current directory,find . -name '*.zip' | xargs -n1 unzip
display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files,"find -exec grep -q fuddel {} "";"" -exec grep -q fiddel {} "";"" -ls"
"Rename the *.so files in the current directory tree prepending their names with ""lib""","find . -name ""*.so"" -printf ""mv '%h/%f' '%h/lib%f'\n"" | bash"
Find recursively all regular files in the current directory skipping hidden files and directories matching pattern '.?*',find -name '.?*' -prune -o \( -type f -print0 \)
Print all non-hidden files in the current directory and its subdirectories,find . -not -path '*/\.*'
Search the current directory and two levels below for file `teste.tex',find ~/ -maxdepth 3 -name teste.tex
Create a script to find and delete all backup files older than a certain number of days.,"#!/bin/bash

find . -name '*.bak' -mtime +$1 -delete
echo ""Old backup files deleted."""
"List all files from the current directory tree that were modified less than 60 minutes ago, omitting "".""",find . -mindepth 1 -mmin -60 | xargs -r ls -ld
find all files in current folder which are bigger than 270MB and less than 300MB,find . -size +270M -size -300M
"Copy directory hierarchy from ""$sourceDir"" to ""$targetDir""","find ""$sourceDir"" -type d | sed -e ""s?$sourceDir?$targetDir?"" | xargs mkdir -p"
"Print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts",wc `find . -name '*.[h|c|cpp|php|cc]'`
Search the home directory for OGG and MP3 files,find $HOME -iname '*.ogg' -o -iname '*.mp3'
Identify CMS version/releases accross all your Drupal websites,"find /var/www/vhosts/*/httpdocs/ -type f -iwholename ""*/modules/system/system.info"" -exec grep -H ""version = \"""" {} \;"
find all the files in the folder .home/calvin which have been modified in th last 45 minutes,find /home/calvin/ -mmin -45
"find all java files in current folder and trim extra spaces, tab spaces","find . -type f -name ""*.java"" -exec perl -p -i -e ""s/[ \t]$//g"" {} \;"
"find all the files that have the word ""fstab"" in their name in a folder",find /etc -name *fstab*
Find all directories under 'A' directory tree excluding paths containing the directory 'a',"find A -type d \( ! -wholename ""A/a/*"" \)"
Remove all regular files under $DIR directory tree that were accessed more than 5 days ago,"find ""$DIR"" -type f -atime +5 -exec rm {} \;"
Find all *.java files under current directory and archive them to myfile.tar,"find . -type f -name ""*.java"" | xargs tar rvf myfile.tar"
Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files,find /home/my_dir -name '*.txt' | xargs grep -c ^.*
"Find all pdf files in /path and search for ""your pattern"" in the converted text output and print the paths to the matching files","find /path -name '*.pdf' -exec sh -c 'pdftotext ""{}"" - | grep --with-filename --label=""{}"" --color ""your pattern""' \;"
Rename all *.jpg files under current directory by appending parent directory name at the beginning of their names if the name doesn't already contain the parent directory name,"find . -name '*.jpg' -execdir bash -c 'd=""${PWD##*/}""; [[ ""$1"" != ""$d-""* ]] && mv ""$1"" ""./$d-$1""' - '{}' \;"
"Find all files whose name or type description includes ""text"", display only paths to files.",find . -exec file {} \; | grep text | cut -d: -f1
Search the current user's home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive.,find ~/ -newer alldata.tar 	-exec tar uvf alldata.tar {} \;
Print 'Empty dir' if $some_dir is empty,"if find /some/dir/ -maxdepth 0 -empty | read v; then echo ""Empty dir""; fi"
Write out the entire directory hierarchy from the current directory,find .
Search the /path/to/dir directory tree for .c files,find /path/to/dir -name \*.c
display the file name and the file type of all the files in the current directory,"find . -printf ""%y %p\n"""
Perform syntax check on all PHP files in the current directory tree,find . -name \*.php -type f -print0 | xargs -0 -n1 php -l
"Find directories in /home/vmail that match pathname ""*/*/Maildir/.LearnAsSpam/new"", and move them to folder .Junk/new","find /home/vmail/ -type d -path ""*/*/Maildir/.LearnAsSpam/new"" -exec sh -c '' ';'"
Find all *.rb files/directories under current directory,find . -name *.rb
"search for the file ""file_name"" in the folder /path",find /path -name file_name
list all files,find .
"Search for files/directories which have read and write permission for their owner, and group and only read permission for others",find . -perm 664
"Search recursively through /mydir, outputting only the base (leaf) name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash.",find /mydir | xargs -I{} basename {}
Search for first match of the regex 're' in all *.coffee files under current directory and print the file names,"find . -name \*.coffee -exec awk '/re/ {print FILENAME "":"" $0;exit}' {} \;"
Find all empty files under /tmp,find /tmp -type f -empty
display the list of all the text files present in the current directory excluding the search in certain paths.,"find . -type f -name ""*.txt"" ! -path ""./Movies/*"" ! -path ""./Downloads/*"" ! -path ""./Music/*"" -ls"
"Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths",find /path/* -maxdepth 0 -type d -exec sudo tar -zcpvf {}.tar.gz {} \;
Find files/directories named 'articles.jpg' under current directory tree and change their permission to 644,"find . -name ""articles.jpg"" -exec chmod 644 {} \;"
Print the list of the current directory's subdirectories,find . -type d -maxdepth 1
Find files/directories named blah under current directory,find ./ -name blah
Change permissions to 0755 for all directories in the /path directory tree,find /path -type d | xargs chmod 0755
Delete all filename* files under /dir directory,"find /dir -name ""filename*"" -type f -print | xargs rm"
"exclude ./dirtoexclude, using yui compress all file under currect folder","find . -path ""./dirtoexclude"" -prune \     -o -exec java -jar config/yuicompressor-2.4.2.jar --type js '{}' -o '{}' \;"
Search for 'string-to-find' in all HTML files under current directory tree and show the matched lines with their filenames,find . -name \*.html -exec grep -H string-to-find {} \;
Find all symbolic links under current directory that are not hard links,find . -type f -links 1 -print
display all directories which have not been accessed in the last 24*3 hours,find -type d -and -atime +3
"Remove all 'a.out', '*.o', and 'core' files in the current directory tree",find . \ -exec rm {} \;
Find all files/directories containing 'blah' (case insensitive) in their names that were modified in less than 2 days ago uder current directory tree,find . -iname '*blah*' -mtime -2
delete all the empty in the current folder do not search in sub directories,find . -maxdepth 1 -type d -empty -exec rm {} \;
Print all files in the current directory tree as a comma separated list,"find . -type f | paste -d, -s"
find all the normal/regular files in current folder excluding sub directories and hidden folders and display the count,find . -type f -maxdepth 1 ! -name '.*' -exec printf '%.0s.\n' {} + | wc -l
Find hard links to the same file lpi104-6/file1 in the directory tree lpi104-6,find lpi104-6 -samefile lpi104-6/file1
"Search the files residing in the current directory tree whose names contain ""bills"" for ""put""","find . -name ""*bills*"" -print0 | xargs -0 grep put"
search for all the files which have not been modified in the last 6 months  in current folder and display the total disk usage of them,find . -mtime +180 -exec du -ks {} \; | cut -f1 | awk '{total=total+$1}END{print total/1024}'
Change the group to `temp' for all files in the current directory tree that belong to group `root',find . -group root -print | xargs chgrp temp
Search for 'string_to_find' in all files under current directory,find -type f | sed 's/./\\&/g' | xargs grep string_to_find
"Rename the *.so files at level 2 of the current directory tree prepending their names with ""lib""","find . -mindepth 2 -maxdepth 2 -name ""*.so"" -printf ""mv '%h/%f' '%h/lib%f'\n"" | sh"
find all the direcories in the current folder,find -type d
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions,"find / -maxdepth 1 -xdev -type f -exec grep -Zli ""stringtofind"" {} +"
Delete all empty directories in the current directory tree,find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
Find all IP addresses in /etc directory files,find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
"display the base name of all the "".flac"" files in the current folder","find . -name ""*.flac"" -exec basename \{\} .flac \;"
Find regular files that are larger than 2GB,find . -type f -size +2G
display all directories in current folder,find -type d
Count md5sum of all '*.py' files in a current folder with subfolders.,"find /path/to/dir/ -type f -name ""*.py"" -exec md5sum {} + | awk '{print $1}' | sort | md5sum"
delete all the empty in the current folder do not search in sub directories,find . -maxdepth 1 -type d -empty -exec rm {} \;
"Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory",find ./ -name '*.epub' -o -name '*.mobi' -o -name '*.chm' -o -name '*.rtf' -o -name '*.lit' -o -name '*.djvu'
display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago,find . -mmin 60 -print0 | xargs -0r ls -l
"Find regular files named ""regex"" under and below /dir/to/search/",find /dir/to/search/ -type f -name 'regex' -print
Search for files/directories named 'fileName.txt' under '/path/to/folder' directory tree without traversing into directories that contain the string 'ignored_directory' in their paths,"find /path/to/folder -path ""*/ignored_directory"" -prune -o -name fileName.txt -print"
Find all regular files in the current directory tree and count them,find -type f | wc -l
display all the files in current folder which have been changed in the last 2-6 days,find . -cmin +2 -cmin -6
Find all files starting from the current directory which are owned by the user tommye,find . -user tommye
"display all the files in the home folder which begin with ""arrow""",find ~ -name 'arrow*'
"display all files in the directory ""dir"" which have been changed in the last 60 minutes",find /dir -cmin -60
Find all *shp* files/directories under current directory and move them to ../shp_all/,"find . -name ""*shp*"" -exec mv {} ../shp_all/ \;"
Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder ./JUKEBOX,find . -name '*.JUKEBOX.*.txt' -maxdepth 1 -print0 | xargs -0 -IFILE mv FILE ./JUKEBOX
Find regular files readable by the world,find . -perm -g=r -type f -exec ls -l {} \;
Find all regular files on the system whose size is greater than 20000k and print their names and sizes,"find / -type f -size +20000k -exec ls -lh {} \; | awk '{ print $8 "": "" $5 }'"
"find list of all files with file permission , link , owner , group , reation time , size , file name",find . -exec ls -ld {} \;
"Save the latest modification time (in format ""%T@ %t"" of any file under ""./$dir"" to variable ""timestamp""","timestamp=$(find ./$dir -type f -printf ""%T@ %t\\n"" | sort -nr -k 1,2 | head -n 1)"
"Search the XML files from directories /res/values-en-rUS and /res/xml for string ""hovering_msg""","find /res/values-en-rUS /res/xml -iname '*.xml' -print0 | xargs -0 -d '\n' -- grep -i ""hovering_msg"" --"
Search for files/directories which are writable by either their owner or their group,"find . -perm /u=w,g=w"
Find all files/directories under current directory and run ipython nbconvert for each of them with the file/directory path as a argument by changing into the parent directory,find -execdir ipython nbconvert {} \;
change the ownership of all directories in the current folder,find . -type d -exec chown username {} \;
"Make directories as needed in ""dest"" for every directory found under ""src/""",find src/ -type d -exec mkdir -p dest/{} \;
search  in current directory downwards all files whose status has changed more then 7  days ago,find .  -ctime +7 -print
"find all the directories with the name ""DIRNAME"" in the current folder and force delete them",find . -type d -name “DIRNAME” -exec rm -rf {} \;
"Removes all empty folders under current path, aged between 'first' and 'last' timestamps.",find . -newer first -not -newer last -type d -print0 |  xargs -0 rmdir
Find all directories in the current directory tree,find -type d
List all files in /home/bozo/projects directory tree that were modified within the last day.,find /home/bozo/projects -mtime -1
display long listing of all regular/normal files whose size is less than 50 bytes.,find /usr/bin -type f -size -50c -exec ls -l '{}' ';'
Find all directories under current directory and run ./script.sh for each of them,find . -type d -exec ./script.sh {} \;
display long listing of all files in the current directory whose size is 24 or 25 bytes.,find . -size -26c -size +23c -ls
find all *.java files/directories under current directory,find . -name  \*.java
"Search directory trees /usr/share/doc, /usr/doc, and /usr/locale/doc for files named 'instr.txt'",find /usr/share/doc /usr/doc /usr/locale/doc -name instr.txt
Find directories that are directly under /home/user/workspace directory  and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days,"find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -printf ""\t- It seems that %p wasn't modified during last 30 day\n"""
search for all the php files in  current directory and check for their syntax  .,find . -name \*.php -type f -exec php -l {} \;
find all files  that names are 'apt',"find  / -name ""apt"""
"Prints list of folders containing '.git', searching recursively from a current folder.",find . -name '.git' | xargs -n 1 dirname
display all files in a folder,"find ""/proc/$pid/fd"""
Find all regular files starting from level 3 of directory tree ~/container and move them one level up,"find ~/container -mindepth 3 -type f -execdir mv ""{}"" ./.. \;"
Move all directories from the `sourceDir' directory tree to the `destDir' directory,"find sourceDir -mindepth 1 -type d  -exec mv -t destDir ""{}""  \+"
"as root, find from / all files called ""file.txt""",sudo find / -name file.txt
Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.,find . -perm 040 -type f -exec ls -l {} \;
Find all regular files under current directory (excluding hidden directories) and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files,find . \( ! -regex '.*/\..*' \) -type f -print0 | xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
Find all files with 644 permission and change the permission to 664,find . -type f -perm 644 -exec chmod 664 {} \;
Find all files with '.db' extension  that belong to user 'exampleuser' and were modified exactly 7 days ago under '/home' directory tree,"find /home -user exampleuser -mtime 7 -iname "".db"""
Find all Lemon*.mp3 files under current directory and run mplayer with these files,find . -name 'Lemon*.mp3' -exec mplayer {} ';'
Find all *.ogg  files under your home directory that are less than 100MB in size,find $HOME -iname '*.ogg' -type f -size -100M
Delete files with inode number specified by [inode-number] under current directory,find . -inum [inode-number] -exec rm -i {} \;
"Search the current directory tree for files whose name is "".note"", case insensitive",find . -iname '.note' | sort
Search the `research' directory and one level below for directories that are not owned by group `ian',find -L research -maxdepth 2 -type d ! -group ian
Print the number of lines for each *.txt file from the $DIR directory tree,"find $DIR -name ""*.txt"" -exec wc -l {} \;"
display all the files in the current folder excluding the directory aa,find . -type d ! -name aa
Find all files on your system that are world writable,find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \;
"List the current directory recursively ignoring the ""dir1"" subdirectory",find . -path ./dir1  -prune -o -print
search for all the Joomla's version.php files in various directories and display the latest versions of it.,find /var/www/vhosts/*/httpdocs -type f \ -print0 -exec perl -e 'while  { $release = $1 if m/ \$RELEASE\s+= ..;/; $dev = $1 if m/ \$DEV_LEVEL\s+= ..;/; } print qq;' {} \;
"Find all files modified on the 7th of June, 2007, starting from the current directory",find . -type f -newermt 2007-06-07 ! -newermt 2007-06-08
"list complete path name to process associated with pid ""$1""",find /proc/$1/exe -printf '%l\n'
"search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the ""work"" directory",find /root/ -name 'work' -prune -o -name myfile -type f -print
Display a long listing of all 0777 permission directories under current directory tree,find . -perm 0777 -type d -exec ls -l {} \;
Find all files/directories under current directory tree whose names start with 'some_text_2014.08.19',find . -name 'some_text_2014.08.19*'
find all files in the current directory which are bigger than 2MB,find -size +2M
remove a specific file among a group of specific files,"find . -name ""*.pdf"" -print | grep -v ""^\./pdfs/"" | xargs -J X mv X ./pdfs/"
"Recursively removes all files like ""(__pycache__|\.pyc|\.pyo$)"" in a current folder.","find . | grep -E ""(__pycache__|\.pyc|\.pyo$)"" | xargs rm -rf"
display all the files in the current folder expect perl shell and python fiels,"find . -not -name ""*.pl"" -not -name ""*.sh"" -not -name ""*.py"""
Search the /myfiles directory tree for regular files with at least these permissions: 647,find /myfiles -type f -perm -647
"Find all files in the current directory tree whose names are "".DS_STORE"" and delete them","find . -name "".DS_STORE"" -delete"
delete all the files in the current folder which have been modified in the last 14*24 hours,find . -mtime -14 -print|xargs -i rm \;
Find all broken symlinks under /path/to/search directory,find /path/to/search -type l -xtype l
"Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor",find . | grep -E -v '\.png$|\.class$' | vim -
"Finds strings with text ""text"" in all files named ""string to be searched"" recursively in a current folder.","find . -name ""string to be searched"" -exec grep ""text"" ""{}"" \;"
List all files under and below the directory given as variable $ARCH1,find $ARCH1 -ls
Find *.scm files recursively in the current directory,find . -name '*.scm'
"Search all files in the current directory tree whose names end in ""1"" for string ""1""","find . -name ""*1"" -exec grep ""1"" {} \;"
Find all .bak files starting from the current directory and delete them,"find . -iname ""*.bak"" -type f -print | xargs /bin/rm -f"
Search /dev/shm and /tmp for regular files not changed in two weeks,find /dev/shm /tmp -type f -ctime +14
"Find all your jsp's, map them to your localhost webserver, and invoke a wget  on them",find -name \*.jsp | sed 's/^/http:\/\/127.0.0.1/server/g' | xargs -n 1 wget
"searches through the root filesystem  for the file named Chapter1, and prints the location",find / -name Chapter1 -type f -print
display long listing of all the regular hidden files in the folder Musica,"find Música/* -type f -name "".*"" -exec ls -l {} \;"
"Search the current directory tree for files and directories whose names begin with ""pro""",find . -name pro\*
Search the `images' directory tree for regular files,find images/ -type f
display all the regular/normal files in a folder,find $FILES_PATH -type f
Remove all *.mp3 files in tmp directory but not in it's subdirectories,find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1 | xargs    -n1 rm
Find all files/directories under current directory with a Depth-First search,find dir -depth
Set permissions to 660 for all regular files in the current directory tree,find . -type f -exec chmod 0660 {} +
use find command to search for .png and .jpg files,find ./ -type f \
Find all *.ogg  files/directories under your home directory that are not greater than 20MB in size,find $HOME -iname '*.ogg' ! -size +20M
"find all the instances of the file ""foo.txt"" in the current folder and move them to another folder",find . -name foo.txt 1> tmpfile && mv `cat tmpfile` path/to/some/dir && rm tmpfile
"Remove all regular files under and below directory ""$DIR"" that were last accessed more than 5 days ago","find ""$DIR"" -type f -atime +5 -exec rm {} \;"
"search all mp3 files in the folder ""/home/you"" which have been modified yesterday (from the start of day 00:00 to 23:59)","find /home/you -iname ""*.mp3"" -daystart -type f -mtime 1"
Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names,find . -type d -a ! -name '.?*' -o -name '.?*' -a ! -prune
Print '-exec is an action so an implicit -print is not applied' for every file/directory found by the name 'file' under current directory tree,find -name file -exec echo '-exec is an action so an implicit -print is not applied' \;
Search for files in your home directory which have been modified in the last twenty-four hours.,find $HOME  -mtime 0
List all SGID and SUID files in entire file system,find / -type f \( -perm -4000 -o -perm -2000 \) -ls
Find all files/drectories under '/u/bill' directory tree that have been accessed in the last 2 to 6 minutes,find /u/bill -amin +2 -amin -6
Remove all files with the .c extension in the current directory tree,"find . -name ""*.c"" -print0 | xargs -0 rm -rf"
"Search all .c files from the current directory tree for ""keyword"", ignoring the case","find . -name ""*.c"" -exec grep -i ""keyword"" {} "";"""
Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory,find . -type f -exec grep -n -i STRING_TO_SEARCH_FOR /dev/null {} \;
Recursively finds last 5 modified files in a directory,"find . -type f -ls 2>/dev/null | sort -M -k8,10 | head -n5"
force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days,find /tmp -size 0 -atime +10 -exec rm -f {} \;
"display all file in the home folder except "".c"" files","find $HOME \! -iname ""*.c"" print"
Find all files/directories under current directory tree that are owned by 'root',find . -uid 0 -print
Find only directories,find . -type d
List all zero-length files,find . -empty -exec ls {} \;
Copy all files with name pattern $j.sh (case insensitive) under '/tmp/2' directory tree to $i directory,"find ""/tmp/2/"" -iname ""$j.sh"" -exec cp {} ""$i"" \;"
find files with pattern` '*.h' and print comparison between file and /tmp/master directory,find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'
"find all normal/regular files in the entire file system having the word ""filename"" in their name.","find / -type f -iname ""filename"""
Find all *.txt (case insensitive) files of user root under / directory and show a few lines of output from the beginning,"find / -user root -iname ""*.txt"" | head"
show all files in the current directory and all subdirectories,find .
find all files starting with capital letter in the current folder,"find . — name ""[A‑Z]*"" — print"
"Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in ""file1""","find lpi104-6 research/lpi104-6 -lname ""*file1"""
Find files that were modified less than 7 days ago and archive them,find . -type f -mtime -7 | xargs tar -cvf `date '+%d%m%Y'_archive.tar`
Remove all .mpg files in the /home/luser directory tree,find /home/luser -type f -name '*.mpg' -exec rm -f {} \;
Find all *.java files in the current directory tree,find . -name  \*.java
"Recursively finds files like '*.js', and filters out files with 'excludeddir' in path.",find . -name '*.js' | grep -v excludeddir
Search the current directory tree for regular files omitting directory `omit-directory',find . \ -print
search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size.,find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\n'
Change permissions to 755 recursively only for directories,find . -type d -exec chmod 755 {} \;
Archive all filepattern-*2009* files/directories under data/ into 2009.tar,"find data -xdev -name ""filepattern-*2009*"" -print0 | tar --null --no-recursion -uf 2009.tar --files-from -"
find all the files which have been accessed after modifying the file /etc/hosts,find -anewer /etc/hosts
find for xml files in current folder using regular expressions,"find ./ -regex ""cmn-.*[\x4e00-\x9fa5]*\.xml"""
"Search all files in the current directory tree whose names end in ""1"" for string ""1""","find . -name ""*1"" -exec grep ""1"" {} \;"
Find root's Ruby files accessed in the last two minutes,find /apps/ -user root -type f -amin -2 -name *.rb
"find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group",find / -path /proc -prune -o -nouser -o -nogroup
Display a long listing of all regular files with 0777 permission under current directory tree,find . -perm 0777 -type f -exec ls -l {} \;
Display a long listing of all the regular files owned by the user 'bluher' in the entire filesystem,find / -type f -user bluher -exec ls -ls {}  \;
Find all files/directories that do not belong to any user under '/home' directory tree,find /home -nouser -print
Search the current directory recursively for the largest files,find . -type f -printf '%20s %p\n' | sort -n | cut -b22- | tr '\n' '\000' | xargs -0 ls -laSr
Find all the files which are modified more than 50 days back and less than 100 days,find / -mtime +50 –mtime -100
"find all the files in the current folder and search for the word ""vps admin"" in them.","find . -exec grep -i ""vds admin"" {} \;"
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3,"find / -iname ""*.mp3"" -type f -print0 | xargs -0 -I '{}' /bin/mv ""{}"" /mnt/mp3/"
"search for the directory ""mysql"" in the entire file system",find / -name mysql -type d
Find all PDF files in the current directory and its sub-directories that are not currently stored in the ./pdfs directory and move them into the ./pdfs directory.,"find . -name ""*.pdf"" -print | grep -v ""^\./pdfs/"" | xargs -J X mv X ./pdfs/"
"List and remove all regular files named ""core"" that are larger than 500KB",find /prog -type f -size +1000 -print -name core -exec rm {} \;
display a long listing of all the files in the current folder which have spaces in their names and save the output to the file log.txt,"find . -name ""filename including space"" -print0 | xargs -0 ls -aldF > log.txt"
Find all .txt files in the current directory tree and edit them with `vim',"find . -name ""*.txt"" | xargs vim"
"List all files in the /hometest directory tree whose names are ""Trash"", and their sizes",find /hometest -name Trash -exec ls -s {} \;
Find files/directories under current directory excluding the path ./src/emacs,find . -path ./src/emacs -prune -o -print
Find files/directories in entire file system that had their meta information changed more than 3 days ago,find / -ctime +3
Display the total count of all the files/directories with '.old' extension under current directory tree,find . -name “*.old” -print | wc -l
Find all files/directories with '.js' extension under current directory tree without descending into  and ignoring './directory' completely,find . -not \( -path ./directory -prune \) -name \*.js
Search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified.,find ~/ -mtime -2 -o -newer filename
Find all .core files on the system starting from / and delete them,"find / -name ""*.core"" | xargs rm"
Find writable files in the current directory tree,find . -writable
Locate all `readme.txt' files under the home directory,find ~ -name readme.txt
display all the .sh scripts and perl files in the current folder,find . -type f \
display all directories in vim folder do not search in sub directories,find .vim/ -maxdepth 1 -type d
Find all files under $source_dir that match the regex expanded by $input_file_type in their paths,"find ""$source_dir"" -type f|egrep ""$input_file_type"""
display all regular/normal files in the entire file system with the name dummy and discard all the errors,find / -type f -name dummy 2>/dev/null
search  in root ( / ) directory downwards all files which  have exactly 2 links.,find /  -links 2 -print
Search the current user's home directory and below for all .png files and copy those files in the directory imagesdir.,find ~/ -name *.png -exec cp {} imagesdir \;
"Search the files in the current directory tree that are named ""string to be searched"" for ""text""","find . -name ""string to be searched"" -exec grep ""text"" ""{}"" \;"
Create a script to monitor system file permissions and send alerts if any files are world-writable.,"#!/bin/bash

find / -perm -o+w"
"Save the list of all subdirectories of the current directory as ""dirs_to_remove""",find . -maxdepth 1 -type d > dirs_to_remove
List *.txt files under current directory that have 'mystring' in their name,find . -name *.txt | egrep mystring
Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer.  Print the name of the file where a match is found.,"find . -type f -name ""*.java"" -exec grep -l StringBuffer {} \;"
"Print the list of files in the current directory tree excluding those whose paths contain ""exclude3"" or ""exclude4""","find . | egrep -v """" | sort"
Delete all filename* files under /dir directory,"find /dir -name ""filename*"" -type f -delete"
"Search the current directory, except the subdirectory tree "".svn"", for files whose name is ""foo.cpp""",find . -name 'foo.cpp' '!' -path '.svn'
search for all Scala files under the current directory that contain the string null,"find . -type f -name ""*.scala"" -exec grep -B5 -A10 'null' {} \;"
Find all files/directores that are newer than /etc/motd and conain the string 'top' at the beginning of their names under user's home directory tree,find ~ -name 'top*' -newer /etc/motd
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes,find . -mmin -60 -type f -exec ls -l {} \;
Find all fglrx-libglx* files under and below debian/fglrx/,find debian/fglrx/ -name 'fglrx-libglx*'
Find all files/directories named 'text' under current directory,"find -name ""text"""
Find all files that belongs to user root under / directory and show a few lines of output from the beginning,find / -user root | head
Find files/directories that is under group 'root' or have no group and set their group to 'apache',find /var/www -group root -o -nogroup -print0 | xargs -0 chown :apache
find all the files in the current folder which do not have the read permission,find . -type f ! -perm -444
Find all files/directories under current directory and print only 2nd field from output delimited by '/',"find . | awk -F""/"" '{ print $2 }'"
display all files in the current folder which do not belong to the user john,find . ! -user john
"Search the files from the current directory tree for ""foo""",find . -exec grep -l foo {} \;
Find all files/directories in current directory and execute the script itself with minimal invocation for those files/directories,find . -exec $0 {} +
Find all 400 permission files under /data directory with null character as the delimiter,find /data -type f -perm 400 -print0
